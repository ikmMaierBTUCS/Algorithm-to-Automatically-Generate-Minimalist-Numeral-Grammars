langnumb=pd.read_csv(FILE_PATH_OF_LANGUAGESANDNUMBERS_DATA_CSV, encoding = "utf_16", sep = '\t')
package_languagesandnumbers=set([langnumb.iloc[i,0] for i in range(len(langnumb))])
package_languagesandnumbers.remove('Malecite-Passamaquoddy')
package_languagesandnumbers.remove('Language')
package_num2words=['fr','fi','fr_CH','fr_BE','fr_DZ','he','id','it','ja','kn','ko','lt','lv','no','pl','pt','pt_BR','sl','sr','ro','ru','tr','th','vi','nl','uk','es_CO','es','es_VE','cz','de','ar','dk','en_GB','en_IN']

for language in list(package_languagesandnumbers)+package_num2words:
    try:
        if language not in ['Tunica','Makhuwa','Yupik','Ingush','Adyghe','Susu','Haida','Kiliwa','Tongan-Telephone-Style','Nyungwe','Kutenai','Lezgian','Choapan-Zapotec','Cherokee']:
            numberset2MG(language)
    except:
        print('Learning '+language+' failed')
    print('')
    print('')
    
Out:

Learning Mohegan-Pequot
Learned 999 words in Mohegan-Pequot and structured them in 21 functions.
It took 103 samples to learn those.
Those are:
nuqut is 1
nis is 2
shwi is 3
yáw is 4
nupáw is 5
qutôsk is 6
Function _ôsk maps {2} by x -> 0*x+7
shwôsk is 8
pásukokun is 9
páyaq is 10
Function páyaq napni _ maps {1,2,3,4,5,6,_ôsk,8,9} by x -> 1*x+10
swuncák is 30
Function swuncák napni _ maps {1,2,3,4,5,6,_ôsk,8,9} by x -> 1*x+30
Function _uncák maps {2,4} by x -> 10*x+0
Function _uncák napni _ maps {2,4}x{1,2,3,4,5,6,_ôsk,8,9} by (x0,x1) -> 10*x0+1*x1
Function _-cahshuncák maps {5,6,_ôsk,8,9} by x -> 10*x+0
Function _-cahshuncák napni _ maps {5,6,_ôsk,8,9}x{1,2,3,4,5,6,_ôsk,8,9} by (x0,x1) -> 10*x0+1*x1
pásuq is 100
Function pásuq napni _ maps {1,2,3,4,5,6,_ôsk,8,9,10,páyaq napni _,30,swuncák napni _,_uncák,_uncák napni _,_-cahshuncák,_-cahshuncák napni _} by x -> 1*x+100
Function _-pásuq maps {2,3,4,5,6,_ôsk,8,9} by x -> 100*x+0
Function _ pásuq napni _ maps {2,3,4,5,6,_ôsk,8,9}x{1,2,3,4,5,6,_ôsk,8,9,10,páyaq napni _,30,swuncák napni _,_uncák,_uncák napni _,_-cahshuncák,_-cahshuncák napni _} by (x0,x1) -> 100*x0+1*x1

MG:
[nis :: c1, -A, -C0, -F0], 2
[ :: =c4, cFin], λx.x
[páyaq :: c3, -S1], 10
[páyaq napni  :: =c3B, c3, -S1], λx.'1X+10'(x)
[ :: =c2, +B, c3B], λx.x
[swuncák :: c3, -S1], 30
[swuncák napni  :: =c3B, c3, -S1], λx.'1X+30'(x)
[uncák :: =c2, +C, c3, -S1], λx.'10X'(x)
[uncák napni  :: =c3B, =c3C, c3, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[-cahshuncák :: =c2, +D, c3, -S1], λx.'10X'(x)
[-cahshuncák napni  :: =c3B, =c3D, c3, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[nuqut :: c1], 1
[ :: =c2, +E1, c3], λx.x
[shwi :: c2, -E1, -B, -F, -S2], 3
[yáw :: c2, -E1, -C, -B, -F, -S2], 4
[nupáw :: c2, -E1, -B, -F, -D, -S2], 5
[qutôsk :: c2, -E1, -B, -F, -D, -S2], 6
[ôsk :: =c1, +A, c2, -E1, -B, -F, -D, -S2], λx.'0X+7'(x)
[shwôsk :: c2, -E1, -B, -F, -D, -S2], 8
[pásukokun :: c2, -E1, -B, -F, -D, -S2], 9
[ :: =c1, +C0, c2, -C], λx.x
[ :: =c1, c2, -B], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[pásuq :: c4], 100
[pásuq napni  :: =c3, c4], λx.'1X+100'(x)
[-pásuq :: =c2, +F, c4], λx.'100X'(x)
[ pásuq napni  :: =c3, =c4F, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +F, c4F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +E1, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E1, +B, +F, +S2, c2, -E1], λx.x
[ :: =c2, +B, +F, +D, +S2, c2, -B], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c2, +B, +F, +S2, c2, -B], λx.x
[ :: =c2, +E1, +C, +B, +F, +S2, c2, -E1], λx.x
[ :: =c2, +C, +B, +F, +S2, c2, -C], λx.x
[ :: =c2, +F, +S2, c2, -F], λx.x
[ :: =c2, +E1, +B, +F, +D, +S2, c2, -E1], λx.x
[ :: =c2, +F, +D, +S2, c2, -F], λx.x
[ :: =c1, +A, +C0, +F0, c1, -A], λx.x
[ :: =c1, +C0, +F0, c1, -C0], λx.x


Learning Gallo
Learned 100 words in Gallo and structured them in 37 functions.
It took 47 samples to learn those.
Those are:
un is 1
doez is 2
treiz is 3
catr is 4
ceinc is 5
seiz is 6
sèt is 7
oet is 8
noe is 9
deiz is 10
onzz is 11
dózz is 12
catorze is 14
qhinze is 15
Function _e maps {3,6} by x -> 1*x+10
Function deiz-_ maps {7,8,9} by x -> 1*x+10
veint is 20
Function veint-e-_ maps {1} by x -> 0*x+21
Function veint-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trantt is 30
Function trantt-e-_ maps {1} by x -> 0*x+31
Function trantt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
carante is 40
Function carante-e-_ maps {1} by x -> 0*x+41
Function carante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
cincante is 50
Function cincante-e-_ maps {1} by x -> 0*x+51
Function cincante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
seissante is 60
Function seissante-e-_ maps {1} by x -> 0*x+61
Function seissante-_ maps {2,3,4,5,6,7,8,9,10,deiz-_} by x -> 1*x+60
Function seissante-_-_ maps {10}x{1,2,3,4,5,6} by (x0,x1) -> 7*x0+1*x1
Function _-veint maps {4} by x -> 0*x+80
Function _-veint-e-_ maps {4}x{1} by (x0,x1) -> 0*x0+0*x1+81
Function _-veint-_ maps {4}x{2,3,4,5,6,7,8,9,10,deiz-_} by (x0,x1) -> 19*x0+1*x1+4
Function _-veint-_-_ maps {4}x{10}x{1,2,3,4,5,6} by (x0,x1,x2) -> 2*x0+8*x1+1*x2+2
cent is 100

MG:
[un :: c1, -C, -G], 1
[catr :: c1, -H, -E0, -G, -D], 4
[deiz :: c2, -F, -E, -S1], 10
[ :: =c3, cFin], λx.x
[deiz- :: =c2B, c2, -E, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[doez :: c1, -E0, -G, -D], 2
[treiz :: c1, -E0, -G, -A, -D], 3
[ceinc :: c1, -E0, -G, -D], 5
[seiz :: c1, -E0, -G, -A, -D], 6
[sèt :: c1, -E0, -B, -D], 7
[oet :: c1, -E0, -B, -D], 8
[noe :: c1, -E0, -B, -D], 9
[veint :: c3], 20
[veint-e- :: =c3C, c3], λx.'0X+21'(x)
[ :: =c1, +C, c3C], λx.x
[veint- :: =c3D, c3], λx.'1X+20'(x)
[ :: =c1, +D, c3D], λx.x
[trantt :: c3], 30
[trantt-e- :: =c3C, c3], λx.'0X+31'(x)
[trantt- :: =c3D, c3], λx.'1X+30'(x)
[carante :: c3], 40
[carante-e- :: =c3C, c3], λx.'0X+41'(x)
[carante- :: =c3D, c3], λx.'1X+40'(x)
[cincante :: c3], 50
[cincante-e- :: =c3C, c3], λx.'0X+51'(x)
[cincante- :: =c3D, c3], λx.'1X+50'(x)
[seissante :: c3], 60
[seissante-e- :: =c3C, c3], λx.'0X+61'(x)
[seissante- :: =c3E, c3], λx.'1X+60'(x)
[ :: =c2, +E, c3E], λx.x
[seissante- :: =c3*, c3], λx.x
[- :: =c3**G, =c3**F, c3*], λxλy.'1X+7Y'(x,y)
[-veint :: =c1, +H, c3], λx.'0X+80'(x)
[-veint-e- :: =c3C, =c3H, c3], λxλy.'0X+0Y+81'(x,y)
[ :: =c1, +H, c3H], λx.x
[-veint- :: =c3E, =c3H, c3], λxλy.'1X+19Y+4'(x,y)
[-veint- :: =c3**, =c3H, c3], λxλy.'1X+2Y+2'(x,y)
[- :: =c3**G, =c3**F, c3**], λxλy.'1X+8Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c1, +G, c3**G], λx.x
[cent :: c3], 100
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[onzz :: c2, -S1], 11
[dózz :: c2, -S1], 12
[catorze :: c2, -S1], 14
[qhinze :: c2, -S1], 15
[e :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E0, +G, +D, c1, -E0], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +H, +E0, +G, +D, c1, -H], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +E0, +B, +D, c1, -E0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +F, +E, +S1, c2, -F], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +E0, +G, +A, +D, c1, -E0], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x
[ :: =c1, +C, +G, c1, -C], λx.x


Learning Japanese
Learned 999 words in Japanese and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
一 is 1
二 is 2
三 is 3
四 is 4
五 is 5
六 is 6
七 is 7
八 is 8
九 is 9
十 is 10
Function 十_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _十 maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _十_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
百 is 100
Function 百_ maps {1,2,3,4,5,6,7,8,9,10,十_,_十,_十_} by x -> 1*x+100
Function _百 maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _百_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,十_,_十,_十_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[十十 :: c2, -S1], 10
[十A十 :: =c1, c2, -S1], λx.'1X+10'(x)
[B十 :: c2, -S1], λx.'10X'(x)
[B十 :: =c1, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[一一 :: c1], 1
[二二 :: c1, -B], 2
[三三 :: c1, -B], 3
[四四 :: c1, -B], 4
[五五 :: c1, -B], 5
[六六 :: c1, -B], 6
[七七 :: c1, -B], 7
[八八 :: c1, -B], 8
[九九 :: c1, -B], 9
[百百 :: c3], 100
[百C百 :: =c2, c3], λx.'1X+100'(x)
[B百 :: c3], λx.'100X'(x)
[B百 :: =c2, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Ojibwa
Learned 999 words in Ojibwa and structured them in 45 functions.
It took 63 samples to learn those.
Those are:
bezhik is 1
niizh is 2
nswi is 3
niiwin is 4
naanan is 5
ngodwaaswi is 6
Function _waaswi maps {2} by x -> 0*x+7
nshwaaswi is 8
zhaangswi is 9
mdaaswi is 10
Function mdaaswi shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+10
Function _taana maps {2} by x -> 0*x+20
Function _taana shaa _ maps {2}x{1,2,3,4,5,6,_waaswi,8,9} by (x0,x1) -> 8*x0+1*x1+4
nsimtaana is 30
Function nsimtaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+30
niimtaana is 40
Function niimtaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+40
naanmitaana is 50
Function naanmitaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+50
ngodwaasmitaana is 60
Function ngodwaasmitaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+60
Function _waasmitaana maps {2} by x -> 0*x+70
Function _waasmitaana shaa _ maps {2}x{1,2,3,4,5,6,_waaswi,8,9} by (x0,x1) -> 28*x0+1*x1+14
nshwaasmitaana is 80
Function nshwaasmitaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+80
zhaangsmitaana is 90
Function zhaangsmitaana shaa _ maps {1,2,3,4,5,6,_waaswi,8,9} by x -> 1*x+90
ngodwaak is 100
Function ngodwaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+100
Function _waak maps {2} by x -> 0*x+200
Function _waak shaa _ maps {2}x{1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by (x0,x1) -> 80*x0+1*x1+40
nswaak is 300
Function nswaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+300
niiwaak is 400
Function niiwaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+400
naanwaak is 500
Function naanwaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+500
ngodwaaswaak is 600
Function ngodwaaswaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+600
Function _waaswaak maps {2} by x -> 0*x+700
Function _waaswaak shaa _ maps {2}x{1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by (x0,x1) -> 280*x0+1*x1+140
nshwaaswaak is 800
Function nshwaaswaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+800
zhaangswaak is 900
Function zhaangswaak shaa _ maps {1,2,3,4,5,6,_waaswi,8,9,10,mdaaswi shaa _,_taana,_taana shaa _,30,nsimtaana shaa _,40,niimtaana shaa _,50,naanmitaana shaa _,60,ngodwaasmitaana shaa _,_waasmitaana,_waasmitaana shaa _,80,nshwaasmitaana shaa _,90,zhaangsmitaana shaa _} by x -> 1*x+900

MG:
[niizh :: c1, -A], 2
[ :: =c4, cFin], λx.x
[mdaaswi :: c3, -S1], 10
[mdaaswi shaa  :: =c2, c3, -S1], λx.'1X+10'(x)
[taana :: =c1, +A, c3, -S1], λx.'0X+20'(x)
[taana shaa  :: =c2, =c3A, c3, -S1], λxλy.'1X+8Y+4'(x,y)
[ :: =c1, +A, c3A], λx.x
[nsimtaana :: c3, -S1], 30
[nsimtaana shaa  :: =c2, c3, -S1], λx.'1X+30'(x)
[niimtaana :: c3, -S1], 40
[niimtaana shaa  :: =c2, c3, -S1], λx.'1X+40'(x)
[naanmitaana :: c3, -S1], 50
[naanmitaana shaa  :: =c2, c3, -S1], λx.'1X+50'(x)
[ngodwaasmitaana :: c3, -S1], 60
[ngodwaasmitaana shaa  :: =c2, c3, -S1], λx.'1X+60'(x)
[waasmitaana :: =c1, +A, c3, -S1], λx.'0X+70'(x)
[waasmitaana shaa  :: =c2, =c3A, c3, -S1], λxλy.'1X+28Y+14'(x,y)
[nshwaasmitaana :: c3, -S1], 80
[nshwaasmitaana shaa  :: =c2, c3, -S1], λx.'1X+80'(x)
[zhaangsmitaana :: c3, -S1], 90
[zhaangsmitaana shaa  :: =c2, c3, -S1], λx.'1X+90'(x)
[ :: =c1, c3], λx.x
[bezhik :: c1], 1
[ :: =c2, +C1, c3], λx.x
[nswi :: c2, -C1, -S2], 3
[niiwin :: c2, -C1, -S2], 4
[naanan :: c2, -C1, -S2], 5
[ngodwaaswi :: c2, -C1, -S2], 6
[waaswi :: =c1, +A, c2, -C1, -S2], λx.'0X+7'(x)
[nshwaaswi :: c2, -C1, -S2], 8
[zhaangswi :: c2, -C1, -S2], 9
[ :: =c1, c2], λx.x
[ngodwaak :: c4], 100
[ngodwaak shaa  :: =c3, c4], λx.'1X+100'(x)
[waak :: =c1, +A, c4], λx.'0X+200'(x)
[waak shaa  :: =c3, =c3A, c4], λxλy.'1X+80Y+40'(x,y)
[nswaak :: c4], 300
[nswaak shaa  :: =c3, c4], λx.'1X+300'(x)
[niiwaak :: c4], 400
[niiwaak shaa  :: =c3, c4], λx.'1X+400'(x)
[naanwaak :: c4], 500
[naanwaak shaa  :: =c3, c4], λx.'1X+500'(x)
[ngodwaaswaak :: c4], 600
[ngodwaaswaak shaa  :: =c3, c4], λx.'1X+600'(x)
[waaswaak :: =c1, +A, c4], λx.'0X+700'(x)
[waaswaak shaa  :: =c3, =c3A, c4], λxλy.'1X+280Y+140'(x,y)
[nshwaaswaak :: c4], 800
[nshwaaswaak shaa  :: =c3, c4], λx.'1X+800'(x)
[zhaangswaak :: c4], 900
[zhaangswaak shaa  :: =c3, c4], λx.'1X+900'(x)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +C1, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +C1, +S2, c2, -C1], λx.x


Learning Yiddish

Learned 999 words in Yiddish and structured them in 45 functions.
It took 61 samples to learn those.
Those are:
eyns is 1
tsvey is 2
dray is 3
fir is 4
finf is 5
zeks is 6
zibn is 7
akht is 8
nayn is 9
tsen is 10
elf is 11
tsvelf is 12
fertsn is 14
fuftsn is 15
zekhtsn is 16
zibetsn is 17
Function _sn maps {8} by x -> 0*x+18
Function _tsn maps {3,9} by x -> 1*x+10
tsvantsik is 20
eyn un tsvantsik is 21
Function _ un tsvantsik maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
fertsik is 40
eyn un fertsik is 41
Function _ un fertsik maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
fuftsik is 50
eyn un fuftsik is 51
Function _ un fuftsik maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
zekhtsik is 60
eyn un zekhtsik is 61
Function _ un zekhtsik maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
zibetsik is 70
eyn un zibetsik is 71
Function _ un zibetsik maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
Function _sik maps {3,8} by x -> 10*x+0
Function eyn un _sik maps {3,8} by x -> 10*x+1
Function _ un _sik maps {2,3,4,5,6,7,8,9}x{3,8} by (x0,x1) -> 1*x0+10*x1
Function _tsik maps {9} by x -> 0*x+90
Function eyn un _tsik maps {9} by x -> 0*x+91
Function _ un _tsik maps {2,3,4,5,6,7,8,9}x{9} by (x0,x1) -> 1*x0+10*x1
hundert is 100
hundert eyn is 101
Function hundert _ maps {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,_sn,_tsn,20,21,_ un tsvantsik,40,41,_ un fertsik,50,51,_ un fuftsik,60,61,_ un zekhtsik,70,71,_ un zibetsik,_sik,eyn un _sik,_ un _sik,_tsik,eyn un _tsik,_ un _tsik} by x -> 1*x+100
Function _ hundert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundert eyn maps {2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _ hundert _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,_sn,_tsn,20,21,_ un tsvantsik,40,41,_ un fertsik,50,51,_ un fuftsik,60,61,_ un zekhtsik,70,71,_ un zibetsik,_sik,eyn un _sik,_ un _sik,_tsik,eyn un _tsik,_ un _tsik} by (x0,x1) -> 100*x0+1*x1

MG:
[akht :: c1, -A, -C, -D, -F0], 8
[nayn :: c1, -E, -C, -B, -F0], 9
[ :: =c3, cFin], λx.x
[tsvey :: c1, -C, -F0], 2
[dray :: c1, -C, -B, -D, -F0], 3
[fir :: c1, -C, -F0], 4
[finf :: c1, -C, -F0], 5
[zeks :: c1, -C, -F0], 6
[zibn :: c1, -C, -F0], 7
[hundert :: c3], 100
[hundert eyn :: c3], 101
[hundert  :: =c2, c3], λx.'1X+100'(x)
[ hundert :: =c1, +C, c3], λx.'100X'(x)
[ hundert eyn :: =c1, +C, c3], λx.'100X+1'(x)
[ hundert  :: =c2, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[eyns :: c1], 1
[ :: =c2, +S1, c3], λx.x
[tsen :: c2, -S1], 10
[elf :: c2, -S1], 11
[tsvelf :: c2, -S1], 12
[fertsn :: c2, -S1], 14
[fuftsn :: c2, -S1], 15
[zekhtsn :: c2, -S1], 16
[zibetsn :: c2, -S1], 17
[sn :: =c1, +A, c2, -S1], λx.'0X+18'(x)
[tsn :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[tsvantsik :: c2, -S1], 20
[eyn un tsvantsik :: c2, -S1], 21
[ un tsvantsik :: =c1, +C, c2, -S1], λx.'1X+20'(x)
[fertsik :: c2, -S1], 40
[eyn un fertsik :: c2, -S1], 41
[ un fertsik :: =c1, +C, c2, -S1], λx.'1X+40'(x)
[fuftsik :: c2, -S1], 50
[eyn un fuftsik :: c2, -S1], 51
[ un fuftsik :: =c1, +C, c2, -S1], λx.'1X+50'(x)
[zekhtsik :: c2, -S1], 60
[eyn un zekhtsik :: c2, -S1], 61
[ un zekhtsik :: =c1, +C, c2, -S1], λx.'1X+60'(x)
[zibetsik :: c2, -S1], 70
[eyn un zibetsik :: c2, -S1], 71
[ un zibetsik :: =c1, +C, c2, -S1], λx.'1X+70'(x)
[sik :: =c1, +D, c2, -S1], λx.'10X'(x)
[eyn un  :: =c2*, c2, -S1], λx.'1X+1'(x)
[sik :: =c1, +D, c2*], λx.'10X'(x)
[ un  :: =c2**, =c2C, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[sik :: =c1, +D, c2**], λx.'10X'(x)
[tsik :: =c1, +E, c2, -S1], λx.'0X+90'(x)
[eyn un  :: =c2***, c2, -S1], λx.'1X+91'(x)
[tsik :: =c1, +E, c2***], λx.'0X'(x)
[ un  :: =c2****, =c2C, c2, -S1], λxλy.'1X+1Y'(x,y)
[tsik :: =c1, +E, c2****], λx.'10X'(x)
[ :: =c1, +F0, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, +B, +F0, c1, -E], λx.x
[ :: =c1, +C, +B, +D, +F0, c1, -C], λx.x
[ :: =c1, +C, +D, +F0, c1, -C], λx.x
[ :: =c1, +B, +D, +F0, c1, -B], λx.x
[ :: =c1, +A, +C, +D, +F0, c1, -A], λx.x
[ :: =c1, +C, +F0, c1, -C], λx.x
[ :: =c1, +C, +B, +F0, c1, -C], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c1, +D, +F0, c1, -D], λx.x


Learning Hopi
Learned 100 words in Hopi and structured them in 52 functions.
It took 65 samples to learn those.
Those are:
suukya’ is 1
lööyöm is 2
pàayom is 3
naalöyöm is 4
tsivot is 5
navay is 6
tsange’ is 7
nanalt is 8
pevt is 9
pakwt is 10
pakwt niikyang suk siikya’ta is 11
pakwt niikyang löqmuy siikya’ta is 12
pakwt niikyang paykomuy siikya’ta is 13
pakwt niikyang naalöqmuy siikya’ta is 14
Function pakwt niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+10
sunat is 20
sunat niikyang suk siikya’ta is 21
sunat niikyang löqmuy siikya’ta is 22
sunat niikyang paykomuy siikya’ta is 23
sunat niikyang naalöqmuy siikya’ta is 24
Function sunat niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+20
payiv pakwt is 30
payiv pakwt niikyang suk siikya’ta is 31
payiv pakwt niikyang löqmuy siikya’ta is 32
payiv pakwt niikyang paykomuy siikya’ta is 33
payiv pakwt niikyang naalöqmuy siikya’ta is 34
Function payiv pakwt niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+30
naalöv pakwt is 40
naalöv pakwt niikyang suk siikya’ta is 41
naalöv pakwt niikyang löqmuy siikya’ta is 42
naalöv pakwt niikyang paykomuy siikya’ta is 43
naalöv pakwt niikyang naalöqmuy siikya’ta is 44
Function naalöv pakwt niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+40
Function _sikiv pakwt maps {5,6,7} by x -> 10*x+0
Function _sikiv pakwt niikyang suk siikya’ta maps {5,6,7} by x -> 10*x+1
Function _sikiv pakwt niikyang löqmuy siikya’ta maps {5,6,7} by x -> 10*x+2
Function _sikiv pakwt niikyang paykomuy siikya’ta maps {5,6,7} by x -> 10*x+3
Function _sikiv pakwt niikyang naalöqmuy siikya’ta maps {5,6,7} by x -> 10*x+4
Function _sikiv pakwt niikyang _ siikya’ta maps {5,6,7}x{5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nanalsikiv pakwt is 80
nanalsikiv pakwt niikyang suk siikya’ta is 81
nanalsikiv pakwt niikyang löqmuy siikya’ta is 82
nanalsikiv pakwt niikyang paykomuy siikya’ta is 83
nanalsikiv pakwt niikyang naalöqmuy siikya’ta is 84
Function nanalsikiv pakwt niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+80
peve’sikiv pakwt is 90
peve’sikiv pakwt niikyang suk siikya’ta is 91
peve’sikiv pakwt niikyang löqmuy siikya’ta is 92
peve’sikiv pakwt niikyang paykomuy siikya’ta is 93
peve’sikiv pakwt niikyang naalöqmuy siikya’ta is 94
Function peve’sikiv pakwt niikyang _ siikya’ta maps {5,6,7,8,9} by x -> 1*x+90
Function palotsikiv _ maps {10} by x -> 0*x+100

MG:
[pakwt :: c1, -C], 10
[ :: =c2, cFin], λx.x
[tsivot :: c1, -B, -A], 5
[navay :: c1, -B, -A], 6
[tsange’ :: c1, -B, -A], 7
[nanalt :: c1, -A], 8
[pevt :: c1, -A], 9
[pakwt niikyang suk siikya’ta :: c2], 11
[pakwt niikyang löqmuy siikya’ta :: c2], 12
[pakwt niikyang paykomuy siikya’ta :: c2], 13
[pakwt niikyang naalöqmuy siikya’ta :: c2], 14
[pakwt niikyang  :: =c2*, c2], λx.'1X+10'(x)
[ siikya’ta :: =c1, +A, c2*], λx.x
[sunat :: c2], 20
[sunat niikyang suk siikya’ta :: c2], 21
[sunat niikyang löqmuy siikya’ta :: c2], 22
[sunat niikyang paykomuy siikya’ta :: c2], 23
[sunat niikyang naalöqmuy siikya’ta :: c2], 24
[sunat niikyang  :: =c2**, c2], λx.'1X+20'(x)
[ siikya’ta :: =c1, +A, c2**], λx.x
[payiv pakwt :: c2], 30
[payiv pakwt niikyang suk siikya’ta :: c2], 31
[payiv pakwt niikyang löqmuy siikya’ta :: c2], 32
[payiv pakwt niikyang paykomuy siikya’ta :: c2], 33
[payiv pakwt niikyang naalöqmuy siikya’ta :: c2], 34
[payiv pakwt niikyang  :: =c2***, c2], λx.'1X+30'(x)
[ siikya’ta :: =c1, +A, c2***], λx.x
[naalöv pakwt :: c2], 40
[naalöv pakwt niikyang suk siikya’ta :: c2], 41
[naalöv pakwt niikyang löqmuy siikya’ta :: c2], 42
[naalöv pakwt niikyang paykomuy siikya’ta :: c2], 43
[naalöv pakwt niikyang naalöqmuy siikya’ta :: c2], 44
[naalöv pakwt niikyang  :: =c2****, c2], λx.'1X+40'(x)
[ siikya’ta :: =c1, +A, c2****], λx.x
[sikiv pakwt :: =c1, +B, c2], λx.'10X'(x)
[sikiv pakwt niikyang suk siikya’ta :: =c1, +B, c2], λx.'10X+1'(x)
[sikiv pakwt niikyang löqmuy siikya’ta :: =c1, +B, c2], λx.'10X+2'(x)
[sikiv pakwt niikyang paykomuy siikya’ta :: =c1, +B, c2], λx.'10X+3'(x)
[sikiv pakwt niikyang naalöqmuy siikya’ta :: =c1, +B, c2], λx.'10X+4'(x)
[sikiv pakwt niikyang  :: =c2*****, =c2B, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ siikya’ta :: =c1, +A, c2*****], λx.x
[nanalsikiv pakwt :: c2], 80
[nanalsikiv pakwt niikyang suk siikya’ta :: c2], 81
[nanalsikiv pakwt niikyang löqmuy siikya’ta :: c2], 82
[nanalsikiv pakwt niikyang paykomuy siikya’ta :: c2], 83
[nanalsikiv pakwt niikyang naalöqmuy siikya’ta :: c2], 84
[nanalsikiv pakwt niikyang  :: =c2******, c2], λx.'1X+80'(x)
[ siikya’ta :: =c1, +A, c2******], λx.x
[peve’sikiv pakwt :: c2], 90
[peve’sikiv pakwt niikyang suk siikya’ta :: c2], 91
[peve’sikiv pakwt niikyang löqmuy siikya’ta :: c2], 92
[peve’sikiv pakwt niikyang paykomuy siikya’ta :: c2], 93
[peve’sikiv pakwt niikyang naalöqmuy siikya’ta :: c2], 94
[peve’sikiv pakwt niikyang  :: =c2*******, c2], λx.'1X+90'(x)
[ siikya’ta :: =c1, +A, c2*******], λx.x
[palotsikiv  :: =c2C, c2], λx.'0X+100'(x)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[suukya’ :: c1], 1
[lööyöm :: c1], 2
[pàayom :: c1], 3
[naalöyöm :: c1], 4
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Jaqaru

Learned 999 words in Jaqaru and structured them in 31 functions.
It took 49 samples to learn those.
Those are:
maya is 1
paja is 2
kimsa is 3
pushi is 4
pichqa is 5
sujta is 6
qantrisi is 7
pusaqa is 8
isquña is 9
trunka is 10
Function trunka _ ni maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
paj trunka is 20
Function paj trunka _ ni maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ trunka maps {3,4,5,6,7} by x -> 10*x+0
Function _ trunka _ ni maps {3,4,5,6,7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
pusaq trunka is 80
Function pusaq trunka _ ni maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
isquñ trunka is 90
Function isquñ trunka _ ni maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
patraka is 100
Function patraka _ ni maps {1,2,3,4,5,6,7,8,9,10,20,_ trunka,80,90} by x -> 1*x+100
Function patraka _ maps {trunka _ ni,paj trunka _ ni,_ trunka _ ni,pusaq trunka _ ni,isquñ trunka _ ni} by x -> 1*x+100
paj patraka is 200
Function paj patraka _ ni maps {1,2,3,4,5,6,7,8,9,10,20,_ trunka,80,90} by x -> 1*x+200
Function paj patraka _ maps {trunka _ ni,paj trunka _ ni,_ trunka _ ni,pusaq trunka _ ni,isquñ trunka _ ni} by x -> 1*x+200
Function _ patraka maps {3,4,5,6,7,8} by x -> 100*x+0
Function _ patraka _ ni maps {3,4,5,6,7,8}x{1,2,3,4,5,6,7,8,9,10,20,_ trunka,80,90} by (x0,x1) -> 100*x0+1*x1
Function _ patraka _ maps {3,4,5,6,7,8}x{trunka _ ni,paj trunka _ ni,_ trunka _ ni,pusaq trunka _ ni,isquñ trunka _ ni} by (x0,x1) -> 100*x0+1*x1
isquñ patraka is 900
Function isquñ patraka _ ni maps {1,2,3,4,5,6,7,8,9,10,20,_ trunka,80,90} by x -> 1*x+900
Function isquñ patraka _ maps {trunka _ ni,paj trunka _ ni,_ trunka _ ni,pusaq trunka _ ni,isquñ trunka _ ni} by x -> 1*x+900

MG:
[ :: =c3, cFin], λx.x
[kimsa :: c1, -E, -B], 3
[pushi :: c1, -E, -B], 4
[pichqa :: c1, -E, -B], 5
[sujta :: c1, -E, -B], 6
[qantrisi :: c1, -E, -B], 7
[pusaqa :: c1, -E], 8
[trunka :: c2, -C, -S1], 10
[paj trunka :: c2, -C, -S1], 20
[ trunka :: =c1, +B, c2, -C, -S1], λx.'10X'(x)
[pusaq trunka :: c2, -C, -S1], 80
[isquñ trunka :: c2, -C, -S1], 90
[ :: =c1, c2, -C], λx.x
[maya :: c1], 1
[paja :: c1], 2
[isquña :: c1], 9
[trunka  :: =c2*, c2, -D, -S1], λx.'1X+10'(x)
[ ni :: =cnix, =c1, c2*], λxλy.'1X+1Y'(x,y)
[ :: cnix], 0
[paj trunka  :: =c2**, c2, -D, -S1], λx.'1X+20'(x)
[ ni :: =cnix, =c1, c2**], λxλy.'1X+1Y'(x,y)
[ trunka  :: =c2***, =c2B, c2, -D, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ ni :: =cnix, =c1, c2***], λxλy.'1X+1Y'(x,y)
[pusaq trunka  :: =c2****, c2, -D, -S1], λx.'1X+80'(x)
[ ni :: =cnix, =c1, c2****], λxλy.'1X+1Y'(x,y)
[isquñ trunka  :: =c2*****, c2, -D, -S1], λx.'1X+90'(x)
[ ni :: =cnix, =c1, c2*****], λxλy.'1X+1Y'(x,y)
[patraka :: c3], 100
[patraka  :: =c3*, c3], λx.'1X+100'(x)
[ ni :: =c2, +C, c3*], λx.x
[patraka  :: =c3D, c3], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[paj patraka :: c3], 200
[paj patraka  :: =c3**, c3], λx.'1X+200'(x)
[ ni :: =c2, +C, c3**], λx.x
[paj patraka  :: =c3D, c3], λx.'1X+200'(x)
[ patraka :: =c1, +E, c3], λx.'100X'(x)
[ patraka  :: =c3***, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ ni :: =c2, +C, c3***], λx.x
[ patraka  :: =c3D, =c3E, c3], λxλy.'1X+100Y'(x,y)
[isquñ patraka :: c3], 900
[isquñ patraka  :: =c3****, c3], λx.'1X+900'(x)
[ ni :: =c2, +C, c3****], λx.x
[isquñ patraka  :: =c3D, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Chavacano
Learned 999 words in Chavacano and structured them in 43 functions.
It took 57 samples to learn those.
Those are:
uno is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
dieciséis is 16
Function dieci_ maps {7,8,9} by x -> 1*x+10
veinte is 20
veintiún is 21
veintidós is 22
veintitrés is 23
Function veinti_ maps {4,5,7,8,9} by x -> 1*x+20
veintiséis is 26
treinta is 30
Function treinta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarenta is 40
Function cuarenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquenta is 50
Function cinquenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
ciento is 100
Function ciento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cinquenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _ cientos maps {2,3,4,6,7,8,9} by x -> 100*x+0
Function _ cientos _ maps {2,3,4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cinquenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cinquenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500

MG:
[ :: =c3, cFin], λx.x
[dos :: c1, -E], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E], 6
[siete :: c1, -E, -B, -A], 7
[ocho :: c1, -E, -B, -A], 8
[nueve :: c1, -E, -B, -A], 9
[uno :: c1], 1
[cinco :: c1, -B], 5
[diez :: c2, -S1], 10
[once :: c2, -S1], 11
[doce :: c2, -S1], 12
[trece :: c2, -S1], 13
[catorce :: c2, -S1], 14
[quince :: c2, -S1], 15
[dieciséis :: c2, -S1], 16
[dieci :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[veinte :: c2, -S1], 20
[veintiún :: c2, -S1], 21
[veintidós :: c2, -S1], 22
[veintitrés :: c2, -S1], 23
[veinti :: =c2B, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[veintiséis :: c2, -S1], 26
[treinta :: c2, -S1], 30
[treinta y  :: =c1, c2, -S1], λx.'1X+30'(x)
[cuarenta :: c2, -S1], 40
[cuarenta y  :: =c1, c2, -S1], λx.'1X+40'(x)
[cinquenta :: c2, -S1], 50
[cinquenta y  :: =c1, c2, -S1], λx.'1X+50'(x)
[sesenta :: c2, -S1], 60
[sesenta y  :: =c1, c2, -S1], λx.'1X+60'(x)
[setenta :: c2, -S1], 70
[setenta y  :: =c1, c2, -S1], λx.'1X+70'(x)
[ochenta :: c2, -S1], 80
[ochenta y  :: =c1, c2, -S1], λx.'1X+80'(x)
[noventa :: c2, -S1], 90
[noventa y  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ciento :: c3], 100
[ciento  :: =c2, c3], λx.'1X+100'(x)
[ cientos :: =c1, +E, c3], λx.'100X'(x)
[ cientos  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[quinientos :: c3], 500
[quinientos  :: =c2, c3], λx.'1X+500'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Macedonian
Learned 999 words in Macedonian and structured them in 32 functions.
It took 49 samples to learn those.
Those are:
еден is 1
два is 2
три is 3
четири is 4
пет is 5
шест is 6
седум is 7
осум is 8
девет is 9
десет is 10
единаесет is 11
Function _наесет maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _есет maps {2,3,4} by x -> 10*x+0
Function _есет и _ maps {2,3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
педесет is 50
Function педесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
шеесет is 60
Function шеесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _десет maps {7,8} by x -> 10*x+0
Function _десет и _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
деведесет is 90
Function деведесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,11,_наесет,_есет,_есет и _,50,педесет и _,60,шеесет и _,_десет,_десет и _,90,деведесет и _} by x -> 1*x+100
двесте is 200
Function двесте _ maps {1,2,3,4,5,6,7,8,9,10,11,_наесет,_есет,_есет и _,50,педесет и _,60,шеесет и _,_десет,_десет и _,90,деведесет и _} by x -> 1*x+200
Function _ста maps {3} by x -> 0*x+300
Function _ста _ maps {3}x{1,2,3,4,5,6,7,8,9,10,11,_наесет,_есет,_есет и _,50,педесет и _,60,шеесет и _,_десет,_десет и _,90,деведесет и _} by (x0,x1) -> 90*x0+1*x1+30
Function _стотини maps {4,5,7,8,9} by x -> 100*x+0
Function _стотини _ maps {4,5,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_наесет,_есет,_есет и _,50,педесет и _,60,шеесет и _,_десет,_десет и _,90,деведесет и _} by (x0,x1) -> 100*x0+1*x1
Function _отини maps {6} by x -> 0*x+600
Function _отини _ maps {6}x{1,2,3,4,5,6,7,8,9,10,11,_наесет,_есет,_есет и _,50,педесет и _,60,шеесет и _,_десет,_десет и _,90,деведесет и _} by (x0,x1) -> 97*x0+1*x1+18

MG:
[три :: c1, -F, -B, -A], 3
[шест :: c1, -H, -A], 6
[ :: =c3, cFin], λx.x
[десет :: c2, -S1], 10
[единаесет :: c2, -S1], 11
[наесет :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[есет :: =c1, +B, c2, -S1], λx.'10X'(x)
[есет и  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[педесет :: c2, -S1], 50
[педесет и  :: =c1, c2, -S1], λx.'1X+50'(x)
[шеесет :: c2, -S1], 60
[шеесет и  :: =c1, c2, -S1], λx.'1X+60'(x)
[десет :: =c1, +D, c2, -S1], λx.'10X'(x)
[десет и  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[деведесет :: c2, -S1], 90
[деведесет и  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[еден :: c1], 1
[два :: c1, -B, -A], 2
[четири :: c1, -B, -G, -A], 4
[пет :: c1, -G, -A], 5
[седум :: c1, -G, -A, -D], 7
[осум :: c1, -G, -A, -D], 8
[девет :: c1, -G, -A], 9
[сто :: c3], 100
[сто  :: =c2, c3], λx.'1X+100'(x)
[двесте :: c3], 200
[двесте  :: =c2, c3], λx.'1X+200'(x)
[ста :: =c1, +F, c3], λx.'0X+300'(x)
[ста  :: =c2, =c3F, c3], λxλy.'1X+90Y+30'(x,y)
[ :: =c1, +F, c3F], λx.x
[стотини :: =c1, +G, c3], λx.'100X'(x)
[стотини  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[отини :: =c1, +H, c3], λx.'0X+600'(x)
[отини  :: =c2, =c3H, c3], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +F, +B, +A, c1, -F], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +G, +A, c1, -B], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Saterland-Frisian

Learned 999 words in Saterland-Frisian and structured them in 33 functions.
It took 46 samples to learn those.
Those are:
een is 1
two is 2
tjo is 3
fjauer is 4
fieuw is 5
säks is 6
soogen is 7
oachte is 8
njuugen is 9
Function _on maps {3} by x -> 0*x+10
alwen is 11
tweelich is 12
trättien is 13
fjautien is 14
füüftien is 15
Function _tien maps {6,7,9} by x -> 1*x+10
achttien is 18
twintich is 20
Function _untwintich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trüütich is 30
Function _untrüütich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
fjautich is 40
Function _unfjautich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
füüftich is 50
Function _unfüüftich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _tich maps {6,7,9} by x -> 10*x+0
Function _un_tich maps {1,2,3,4,5,6,7,8,9}x{6,7,9} by (x0,x1) -> 1*x0+10*x1
tachentich is 80
Function _untachentich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
hunnert is 100
Function hunnert _ maps {1,2,3,4,5,6,7,8,9,_on,11,12,13,14,15,_tien,18,20,_untwintich,30,_untrüütich,40,_unfjautich,50,_unfüüftich,_tich,_un_tich,80,_untachentich} by x -> 1*x+100
Function _hunnert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hunnert _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,_on,11,12,13,14,15,_tien,18,20,_untwintich,30,_untrüütich,40,_unfjautich,50,_unfüüftich,_tich,_un_tich,80,_untachentich} by (x0,x1) -> 100*x0+1*x1

MG:
[tjo :: c1, -A, -E], 3
[ :: =c3, cFin], λx.x
[two :: c1, -E], 2
[fjauer :: c1, -E], 4
[fieuw :: c1, -E], 5
[säks :: c1, -E, -B], 6
[soogen :: c1, -E, -B], 7
[oachte :: c1, -E], 8
[njuugen :: c1, -E, -B], 9
[een :: c1], 1
[on :: =c1, +A, c2, -S1], λx.'0X+10'(x)
[alwen :: c2, -S1], 11
[tweelich :: c2, -S1], 12
[trättien :: c2, -S1], 13
[fjautien :: c2, -S1], 14
[füüftien :: c2, -S1], 15
[tien :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[achttien :: c2, -S1], 18
[twintich :: c2, -S1], 20
[untwintich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[trüütich :: c2, -S1], 30
[untrüütich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[fjautich :: c2, -S1], 40
[unfjautich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[füüftich :: c2, -S1], 50
[unfüüftich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+50'(x,y)
[tich :: =c1, +B, c2, -S1], λx.'10X'(x)
[un :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[tich :: =c1, +B, c2*], λx.'10X'(x)
[tachentich :: c2, -S1], 80
[untachentich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+80'(x,y)
[ :: =c1, c2], λx.x
[hunnert :: c3], 100
[hunnert  :: =c2, c3], λx.'1X+100'(x)
[hunnert :: =c1, +E, c3], λx.'100X'(x)
[hunnert  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +E, c1, -A], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Squamish
Learned 199 words in Squamish and structured them in 29 functions.
It took 39 samples to learn those.
Those are:
nch’u7 is 1
án̓us is 2
chánat is 3
x̱a7útsen is 4
tsíyáchis is 5
t’áḵ’ach is 6
t’akw’usách is 7
t’ḵ’ach is 8
ts’es is 9
úpen is 10
Function úpen i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
wetl’ch’ is 20
Function wetl’ch’ i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
lhéxwlhsha7 is 30
Function lhéxwlhsha7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
x̱wutsnalhshá7 is 40
Function x̱wutsnalhshá7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
lheḵ’chalhshá7 is 50
Function lheḵ’chalhshá7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
t’éx̱malhsha7 is 60
Function t’éx̱malhsha7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
ts’ekwchalhshá7 is 70
Function ts’ekwchalhshá7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tḵechalhshá7 is 80
Function tḵechalhshá7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
ts’echalhshá7 is 90
Function ts’echalhshá7 i kwi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
nách’aw̓ich is 100
Function nách’aw̓ich i kwi _ maps {1,2,3,4,5,6,7,8,9,10,úpen i kwi _,20,wetl’ch’ i kwi _,30,lhéxwlhsha7 i kwi _,40,x̱wutsnalhshá7 i kwi _,50,lheḵ’chalhshá7 i kwi _,60,t’éx̱malhsha7 i kwi _,70,ts’ekwchalhshá7 i kwi _,80,tḵechalhshá7 i kwi _,90,ts’echalhshá7 i kwi _} by x -> 1*x+100

MG:
[ :: =c3, cFin], λx.x
[nch’u7 :: c1], 1
[án̓us :: c1], 2
[chánat :: c1], 3
[x̱a7útsen :: c1], 4
[tsíyáchis :: c1], 5
[t’áḵ’ach :: c1], 6
[t’akw’usách :: c1], 7
[t’ḵ’ach :: c1], 8
[ts’es :: c1], 9
[nách’aw̓ich :: c3], 100
[nách’aw̓ich i kwi  :: =c2, c3], λx.'1X+100'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[úpen :: c2, -S1], 10
[úpen i kwi  :: =c1, c2, -S1], λx.'1X+10'(x)
[wetl’ch’ :: c2, -S1], 20
[wetl’ch’ i kwi  :: =c1, c2, -S1], λx.'1X+20'(x)
[lhéxwlhsha7 :: c2, -S1], 30
[lhéxwlhsha7 i kwi  :: =c1, c2, -S1], λx.'1X+30'(x)
[x̱wutsnalhshá7 :: c2, -S1], 40
[x̱wutsnalhshá7 i kwi  :: =c1, c2, -S1], λx.'1X+40'(x)
[lheḵ’chalhshá7 :: c2, -S1], 50
[lheḵ’chalhshá7 i kwi  :: =c1, c2, -S1], λx.'1X+50'(x)
[t’éx̱malhsha7 :: c2, -S1], 60
[t’éx̱malhsha7 i kwi  :: =c1, c2, -S1], λx.'1X+60'(x)
[ts’ekwchalhshá7 :: c2, -S1], 70
[ts’ekwchalhshá7 i kwi  :: =c1, c2, -S1], λx.'1X+70'(x)
[tḵechalhshá7 :: c2, -S1], 80
[tḵechalhshá7 i kwi  :: =c1, c2, -S1], λx.'1X+80'(x)
[ts’echalhshá7 :: c2, -S1], 90
[ts’echalhshá7 i kwi  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Mussau-Emira
Learned 999 words in Mussau-Emira and structured them in 21 functions.
It took 31 samples to learn those.
Those are:
sesa is 1
lua is 2
tolu is 3
ata is 4
lima is 5
nomo is 6
itu is 7
oalu is 8
sio is 9
sangaulu is 10
Function sangaulu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
luengaulu is 20
Function luengaulu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
atingaulu is 40
Function atingaulu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _ngaulu maps {3,5,6,7,8,9} by x -> 10*x+0
Function _ngaulu _ maps {3,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
ai is 100
Function ai _ maps {1,2,3,4,5,6,7,8,9,10,sangaulu _,20,luengaulu _,40,atingaulu _,_ngaulu,_ngaulu _} by x -> 1*x+100
Function _ ai maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ai _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,sangaulu _,20,luengaulu _,40,atingaulu _,_ngaulu,_ngaulu _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[sangaulu :: c2, -S1], 10
[sangaulu  :: =c1, c2, -S1], λx.'1X+10'(x)
[luengaulu :: c2, -S1], 20
[luengaulu  :: =c1, c2, -S1], λx.'1X+20'(x)
[atingaulu :: c2, -S1], 40
[atingaulu  :: =c1, c2, -S1], λx.'1X+40'(x)
[ngaulu :: =c1, +B, c2, -S1], λx.'10X'(x)
[ngaulu  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[sesa :: c1], 1
[lua :: c1, -D], 2
[tolu :: c1, -B, -D], 3
[ata :: c1, -D], 4
[lima :: c1, -B, -D], 5
[nomo :: c1, -B, -D], 6
[itu :: c1, -B, -D], 7
[oalu :: c1, -B, -D], 8
[sio :: c1, -B, -D], 9
[ai :: c3], 100
[ai  :: =c2, c3], λx.'1X+100'(x)
[ ai :: =c1, +D, c3], λx.'100X'(x)
[ ai  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x


Learning West-Frisian
Learned 999 words in West-Frisian and structured them in 38 functions.
It took 51 samples to learn those.
Those are:
ien is 1
twa is 2
trije is 3
fjouwer is 4
fiif is 5
seis is 6
sân is 7
acht is 8
njoggen is 9
Function ts_ maps {1} by x -> 0*x+10
alve is 11
tolve is 12
trettjin is 13
fjirtjin is 14
fyftjin is 15
sechtjin is 16
santjin is 17
Function _tjin maps {8,9} by x -> 1*x+10
tweintich is 20
Function _-en-tweintich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tritich is 30
Function _-en-tritich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
fjirtich is 40
Function _-en-fjirtich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
fyftich is 50
Function _-en-fyftich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sechtich is 60
Function _-en-sechtich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
santich is 70
Function _-en-santich maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
Function t_ich maps {8} by x -> 0*x+80
Function _-en-t_ich maps {1,2,3,4,5,6,7,8,9}x{8} by (x0,x1) -> 1*x0+10*x1
Function _tich maps {9} by x -> 0*x+90
Function _-en-_tich maps {1,2,3,4,5,6,7,8,9}x{9} by (x0,x1) -> 1*x0+10*x1
hûndert is 100
Function hûndert _ maps {1,2,3,4,5,6,7,8,9,ts_,11,12,13,14,15,16,17,_tjin,20,_-en-tweintich,30,_-en-tritich,40,_-en-fjirtich,50,_-en-fyftich,60,_-en-sechtich,70,_-en-santich,t_ich,_-en-t_ich,_tich,_-en-_tich} by x -> 1*x+100
Function _hûndert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hûndert _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,ts_,11,12,13,14,15,16,17,_tjin,20,_-en-tweintich,30,_-en-tritich,40,_-en-fjirtich,50,_-en-fyftich,60,_-en-sechtich,70,_-en-santich,t_ich,_-en-t_ich,_tich,_-en-_tich} by (x0,x1) -> 100*x0+1*x1

MG:
[ien :: c1, -A], 1
[acht :: c1, -D, -G, -B], 8
[njoggen :: c1, -E, -G, -B], 9
[ :: =c3, cFin], λx.x
[twa :: c1, -G], 2
[trije :: c1, -G], 3
[fjouwer :: c1, -G], 4
[fiif :: c1, -G], 5
[seis :: c1, -G], 6
[sân :: c1, -G], 7
[hûndert :: c3], 100
[hûndert  :: =c2, c3], λx.'1X+100'(x)
[hûndert :: =c1, +G, c3], λx.'100X'(x)
[hûndert  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ts :: =c2A, c2, -S1], λx.'0X+10'(x)
[ :: =c1, +A, c2A], λx.x
[alve :: c2, -S1], 11
[tolve :: c2, -S1], 12
[trettjin :: c2, -S1], 13
[fjirtjin :: c2, -S1], 14
[fyftjin :: c2, -S1], 15
[sechtjin :: c2, -S1], 16
[santjin :: c2, -S1], 17
[tjin :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[tweintich :: c2, -S1], 20
[-en-tweintich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[tritich :: c2, -S1], 30
[-en-tritich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[fjirtich :: c2, -S1], 40
[-en-fjirtich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[fyftich :: c2, -S1], 50
[-en-fyftich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+50'(x,y)
[sechtich :: c2, -S1], 60
[-en-sechtich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+60'(x,y)
[santich :: c2, -S1], 70
[-en-santich :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+70'(x,y)
[t :: =c2*, c2, -S1], λx.'1X+80'(x)
[ich :: =c1, +D, c2*], λx.'0X'(x)
[-en-t :: =c2**, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[ich :: =c1, +D, c2**], λx.'10X'(x)
[tich :: =c1, +E, c2, -S1], λx.'0X+90'(x)
[-en- :: =c2***, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[tich :: =c1, +E, c2***], λx.'10X'(x)
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +D, +G, +B, c1, -D], λx.x
[ :: =c1, +E, +G, +B, c1, -E], λx.x
[ :: =c1, +G, +B, c1, -G], λx.x


Learning Karelian

Learned 100 words in Karelian and structured them in 15 functions.
It took 19 samples to learn those.
Those are:
yksi is 1
kakši is 2
kolme is 3
neljjä is 4
viizi is 5
kuuǯi is 6
seiččemän is 7
kahekšan is 8
yhekšän is 9
kymmenen is 10
Function _toista maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
viiztoista is 15
Function _kymmendä maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kymmendä _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
šada is 100

MG:
[ :: =c2, cFin], λx.x
[yksi :: c1, -A], 1
[kakši :: c1, -B, -A], 2
[kolme :: c1, -B, -A], 3
[neljjä :: c1, -B, -A], 4
[viizi :: c1, -B], 5
[kuuǯi :: c1, -B, -A], 6
[seiččemän :: c1, -B, -A], 7
[kahekšan :: c1, -B, -A], 8
[yhekšän :: c1, -B, -A], 9
[kymmenen :: c2], 10
[toista :: =c1, +A, c2], λx.'1X+10'(x)
[viiztoista :: c2], 15
[kymmendä :: =c1, +B, c2], λx.'10X'(x)
[kymmendä  :: =c1, =c2B, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[šada :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Nelemwa
Learned 100 words in Nelemwa and structured them in 64 functions.
It took 68 samples to learn those.
Those are:
pwa-giik is 1
pwa-du is 2
pwa-gan is 3
pwa-baak is 4
pwa-nem is 5
pwa-nem-giik is 6
pwa-nem-du is 7
pwa-nem-gan is 8
pwa-nem-baak is 9
tujic is 10
tujic xa bwaat pwagiik is 11
tujic xa bwaat pwadu is 12
tujic xa bwaat pwagan is 13
tujic xa bwaat pwabaak is 14
tujic xa bwaat pwanem is 15
tujic xa bwaat pwanemgiik is 16
tujic xa bwaat pwanemdu is 17
tujic xa bwaat pwanemgan is 18
tujic xa bwaat pwanembaak is 19
aaxi ak is 20
aaxi ak xa bwaat pwagiik is 21
aaxi ak xa bwaat pwadu is 22
aaxi ak xa bwaat pwagan is 23
aaxi ak xa bwaat pwabaak is 24
aaxi ak xa bwaat pwanem is 25
aaxi ak xa bwaat pwanemgiik is 26
aaxi ak xa bwaat pwanemdu is 27
aaxi ak xa bwaat pwanemgan is 28
aaxi ak xa bwaat pwanembaak is 29
Function aaxi ak xa bwaat _ maps {10,11,12,13,14,15,16,17,18,19} by x -> 1*x+20
aaru ak is 40
aaru ak xa bwaat pwagiik is 41
aaru ak xa bwaat pwadu is 42
aaru ak xa bwaat pwagan is 43
aaru ak xa bwaat pwabaak is 44
aaru ak xa bwaat pwanem is 45
aaru ak xa bwaat pwanemgiik is 46
aaru ak xa bwaat pwanemdu is 47
aaru ak xa bwaat pwanemgan is 48
aaru ak xa bwaat pwanembaak is 49
Function aaru ak xa bwaat _ maps {10,11,12,13,14,15,16,17,18,19} by x -> 1*x+40
aaxan ak is 60
aaxan ak xa bwaat pwagiik is 61
aaxan ak xa bwaat pwadu is 62
aaxan ak xa bwaat pwagan is 63
aaxan ak xa bwaat pwabaak is 64
aaxan ak xa bwaat pwanem is 65
aaxan ak xa bwaat pwanemgiik is 66
aaxan ak xa bwaat pwanemdu is 67
aaxan ak xa bwaat pwanemgan is 68
aaxan ak xa bwaat pwanembaak is 69
Function aaxan ak xa bwaat _ maps {10,11,12,13,14,15,16,17,18,19} by x -> 1*x+60
aavaak ak is 80
aavaak ak xa bwaat pwagiik is 81
aavaak ak xa bwaat pwadu is 82
aavaak ak xa bwaat pwagan is 83
aavaak ak xa bwaat pwabaak is 84
aavaak ak xa bwaat pwanem is 85
aavaak ak xa bwaat pwanemgiik is 86
aavaak ak xa bwaat pwanemdu is 87
aavaak ak xa bwaat pwanemgan is 88
aavaak ak xa bwaat pwanembaak is 89
Function aavaak ak xa bwaat _ maps {10,11,12,13,14,15,16,17,18,19} by x -> 1*x+80
aanem ak is 100

MG:
[ :: =c2, cFin], λx.x
[tujic :: c1, -A], 10
[tujic xa bwaat pwagiik :: c1, -A], 11
[tujic xa bwaat pwadu :: c1, -A], 12
[tujic xa bwaat pwagan :: c1, -A], 13
[tujic xa bwaat pwabaak :: c1, -A], 14
[tujic xa bwaat pwanem :: c1, -A], 15
[tujic xa bwaat pwanemgiik :: c1, -A], 16
[tujic xa bwaat pwanemdu :: c1, -A], 17
[tujic xa bwaat pwanemgan :: c1, -A], 18
[tujic xa bwaat pwanembaak :: c1, -A], 19
[aaxi ak :: c2], 20
[aaxi ak xa bwaat pwagiik :: c2], 21
[aaxi ak xa bwaat pwadu :: c2], 22
[aaxi ak xa bwaat pwagan :: c2], 23
[aaxi ak xa bwaat pwabaak :: c2], 24
[aaxi ak xa bwaat pwanem :: c2], 25
[aaxi ak xa bwaat pwanemgiik :: c2], 26
[aaxi ak xa bwaat pwanemdu :: c2], 27
[aaxi ak xa bwaat pwanemgan :: c2], 28
[aaxi ak xa bwaat pwanembaak :: c2], 29
[aaxi ak xa bwaat  :: =c2A, c2], λx.'1X+20'(x)
[ :: =c1, +A, c2A], λx.x
[aaru ak :: c2], 40
[aaru ak xa bwaat pwagiik :: c2], 41
[aaru ak xa bwaat pwadu :: c2], 42
[aaru ak xa bwaat pwagan :: c2], 43
[aaru ak xa bwaat pwabaak :: c2], 44
[aaru ak xa bwaat pwanem :: c2], 45
[aaru ak xa bwaat pwanemgiik :: c2], 46
[aaru ak xa bwaat pwanemdu :: c2], 47
[aaru ak xa bwaat pwanemgan :: c2], 48
[aaru ak xa bwaat pwanembaak :: c2], 49
[aaru ak xa bwaat  :: =c2A, c2], λx.'1X+40'(x)
[aaxan ak :: c2], 60
[aaxan ak xa bwaat pwagiik :: c2], 61
[aaxan ak xa bwaat pwadu :: c2], 62
[aaxan ak xa bwaat pwagan :: c2], 63
[aaxan ak xa bwaat pwabaak :: c2], 64
[aaxan ak xa bwaat pwanem :: c2], 65
[aaxan ak xa bwaat pwanemgiik :: c2], 66
[aaxan ak xa bwaat pwanemdu :: c2], 67
[aaxan ak xa bwaat pwanemgan :: c2], 68
[aaxan ak xa bwaat pwanembaak :: c2], 69
[aaxan ak xa bwaat  :: =c2A, c2], λx.'1X+60'(x)
[aavaak ak :: c2], 80
[aavaak ak xa bwaat pwagiik :: c2], 81
[aavaak ak xa bwaat pwadu :: c2], 82
[aavaak ak xa bwaat pwagan :: c2], 83
[aavaak ak xa bwaat pwabaak :: c2], 84
[aavaak ak xa bwaat pwanem :: c2], 85
[aavaak ak xa bwaat pwanemgiik :: c2], 86
[aavaak ak xa bwaat pwanemdu :: c2], 87
[aavaak ak xa bwaat pwanemgan :: c2], 88
[aavaak ak xa bwaat pwanembaak :: c2], 89
[aavaak ak xa bwaat  :: =c2A, c2], λx.'1X+80'(x)
[aanem ak :: c2], 100
[ :: =c1, c2], λx.x
[pwa-giik :: c1], 1
[pwa-du :: c1], 2
[pwa-gan :: c1], 3
[pwa-baak :: c1], 4
[pwa-nem :: c1], 5
[pwa-nem-giik :: c1], 6
[pwa-nem-du :: c1], 7
[pwa-nem-gan :: c1], 8
[pwa-nem-baak :: c1], 9
[ :: =c1, +A, c1], λx.x


Learning Oromo
Learned 999 words in Oromo and structured them in 27 functions.
It took 39 samples to learn those.
Those are:
tokko is 1
lama is 2
sadi is 3
afur is 4
shan is 5
jaya is 6
torba is 7
saddeet is 8
sagal is 9
khudan is 10
Function khuda-_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
khuda-shan is 15
digdama is 20
Function digdamii-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
soddoma is 30
Function soddomii-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _tamii-saddeet maps {4} by x -> 0*x+48
Function _tama maps {4,5,7,9} by x -> 10*x+0
Function _tamii-_ maps {4,5,7,9}x{1,2,3,4,5,6,7,9,8} by (x0,x1) -> 10*x0+1*x1
jaatama is 60
Function jaatamii-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ama maps {8} by x -> 0*x+80
Function _amii-_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
dhibba is 100
Function dhibba _ maps {1,2,3,4,5,6,7,8,9,10,khuda-_,15,20,digdamii-_,30,soddomii-_,_tamii-saddeet,_tama,_tamii-_,60,jaatamii-_,_ama,_amii-_} by x -> 1*x+100
Function _ dhibba maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ dhibba _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,khuda-_,15,20,digdamii-_,30,soddomii-_,_tamii-saddeet,_tama,_tamii-_,60,jaatamii-_,_ama,_amii-_} by (x0,x1) -> 100*x0+1*x1

MG:
[afur :: c1, -C, -H, -A, -D], 4
[saddeet :: c1, -F, -H, -A], 8
[ :: =c3, cFin], λx.x
[tokko :: c1, -A], 1
[lama :: c1, -H, -A], 2
[sadi :: c1, -H, -A], 3
[shan :: c1, -H, -D], 5
[jaya :: c1, -H, -A], 6
[torba :: c1, -H, -A, -D], 7
[sagal :: c1, -H, -A, -D], 9
[khudan :: c2, -S1], 10
[khuda- :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[khuda-shan :: c2, -S1], 15
[digdama :: c2, -S1], 20
[digdamii- :: =c1, c2, -S1], λx.'1X+20'(x)
[soddoma :: c2, -S1], 30
[soddomii- :: =c1, c2, -S1], λx.'1X+30'(x)
[tamii-saddeet :: =c1, +C, c2, -S1], λx.'0X+48'(x)
[tama :: =c1, +D, c2, -S1], λx.'10X'(x)
[tamii- :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[jaatama :: c2, -S1], 60
[jaatamii- :: =c1, c2, -S1], λx.'1X+60'(x)
[ama :: =c1, +F, c2, -S1], λx.'0X+80'(x)
[amii- :: =c1, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[ :: =c1, c2], λx.x
[dhibba :: c3], 100
[dhibba  :: =c2, c3], λx.'1X+100'(x)
[ dhibba :: =c1, +H, c3], λx.'100X'(x)
[ dhibba  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +F, +H, +A, c1, -F], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +H, +A, +D, c1, -H], λx.x
[ :: =c1, +C, +H, +A, +D, c1, -C], λx.x
[ :: =c1, +H, +D, c1, -H], λx.x


Learning Welsh
Learned 999 words in Welsh and structured them in 42 functions.
It took 64 samples to learn those.
Those are:
un is 1
dau is 2
tri is 3
pedwar is 4
pump is 5
chwech is 6
saith is 7
wyth is 8
naw is 9
deg is 10
Function _ddeg maps {2} by x -> 0*x+20
Function _ddeg _ maps {2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 8*x0+1*x1+4
Function _deg _ maps {1,3,4,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _deg maps {3,4,7,8,9} by x -> 10*x+0
pumdeg is 50
Function pumdeg _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
chwedeg is 60
Function chwedeg _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
cant is 100
Function cant ac _ maps {1} by x -> 0*x+101
Function cant a _ maps {2,3,4,5,6,7,8,9,10} by x -> 1*x+100
Function cant _ maps {_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by x -> 1*x+100
Function _ gant maps {2} by x -> 0*x+200
Function _ gant ac _ maps {2}x{1} by (x0,x1) -> 0*x0+0*x1+201
Function _ gant a _ maps {2}x{2,3,4,5,6,7,8,9,10} by (x0,x1) -> 80*x0+1*x1+40
Function _ gant _ maps {2}x{_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by (x0,x1) -> 80*x0+1*x1+40
Function _ chant maps {3} by x -> 0*x+300
Function _ chant ac _ maps {3}x{1} by (x0,x1) -> 0*x0+0*x1+301
Function _ chant a _ maps {3}x{2,3,4,5,6,7,8,9,10} by (x0,x1) -> 90*x0+1*x1+30
Function _ chant _ maps {3}x{_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by (x0,x1) -> 90*x0+1*x1+30
pum cant is 500
Function pum cant ac _ maps {1} by x -> 0*x+501
Function pum cant a _ maps {2,3,4,5,6,7,8,9,10} by x -> 1*x+500
Function pum cant _ maps {_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by x -> 1*x+500
chwe chant is 600
Function chwe chant ac _ maps {1} by x -> 0*x+601
Function chwe chant a _ maps {2,3,4,5,6,7,8,9,10} by x -> 1*x+600
Function chwe chant _ maps {_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by x -> 1*x+600
Function _ cant maps {4,7,8,9} by x -> 100*x+0
Function _ cant ac _ maps {4,7,8,9}x{1} by (x0,x1) -> 100*x0+0*x1+1
Function _ cant a _ maps {4,7,8,9}x{2,3,4,5,6,7,8,9,10} by (x0,x1) -> 100*x0+1*x1
Function _ cant _ maps {4,7,8,9}x{_deg _,_ddeg,_ddeg _,_deg,50,pumdeg _,60,chwedeg _} by (x0,x1) -> 100*x0+1*x1

MG:
[un :: c1, -E, -C], 1
[dau :: c1, -A, -F0], 2
[tri :: c1, -H, -C, -F0, -D], 3
[ :: =c3, cFin], λx.x
[pedwar :: c1, -C, -I, -F0, -D], 4
[saith :: c1, -C, -I, -F0, -D], 7
[wyth :: c1, -C, -I, -F0, -D], 8
[naw :: c1, -C, -I, -F0, -D], 9
[pump :: c1, -F0], 5
[chwech :: c1, -F0], 6
[ddeg :: =c1, +A, c2, -G, -S1], λx.'0X+20'(x)
[ddeg  :: =c1, =c2A, c2, -G, -S1], λxλy.'1X+8Y+4'(x,y)
[ :: =c1, +A, c2A], λx.x
[deg  :: =c1, =c2C, c2, -G, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[deg :: =c1, +D, c2, -G, -S1], λx.'10X'(x)
[pumdeg :: c2, -G, -S1], 50
[pumdeg  :: =c1, c2, -G, -S1], λx.'1X+50'(x)
[chwedeg :: c2, -G, -S1], 60
[chwedeg  :: =c1, c2, -G, -S1], λx.'1X+60'(x)
[deg :: c2, -F, -S1], 10
[ :: =c1, +F0, c2, -F], λx.x
[cant :: c3], 100
[cant ac  :: =c3E, c3], λx.'0X+101'(x)
[ :: =c1, +E, c3E], λx.x
[cant a  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[cant  :: =c3G, c3], λx.'1X+100'(x)
[ :: =c2, +G, c3G], λx.x
[ gant :: =c1, +A, c3], λx.'0X+200'(x)
[ gant ac  :: =c3E, =c2A, c3], λxλy.'0X+0Y+201'(x,y)
[ gant a  :: =c3F, =c2A, c3], λxλy.'1X+80Y+40'(x,y)
[ gant  :: =c3G, =c2A, c3], λxλy.'1X+80Y+40'(x,y)
[ chant :: =c1, +H, c3], λx.'0X+300'(x)
[ chant ac  :: =c3E, =c3H, c3], λxλy.'0X+0Y+301'(x,y)
[ :: =c1, +H, c3H], λx.x
[ chant a  :: =c3F, =c3H, c3], λxλy.'1X+90Y+30'(x,y)
[ chant  :: =c3G, =c3H, c3], λxλy.'1X+90Y+30'(x,y)
[pum cant :: c3], 500
[pum cant ac  :: =c3E, c3], λx.'0X+501'(x)
[pum cant a  :: =c3F, c3], λx.'1X+500'(x)
[pum cant  :: =c3G, c3], λx.'1X+500'(x)
[chwe chant :: c3], 600
[chwe chant ac  :: =c3E, c3], λx.'0X+601'(x)
[chwe chant a  :: =c3F, c3], λx.'1X+600'(x)
[chwe chant  :: =c3G, c3], λx.'1X+600'(x)
[ cant :: =c1, +I, c3], λx.'100X'(x)
[ cant ac  :: =c3E, =c3I, c3], λxλy.'0X+100Y+1'(x,y)
[ :: =c1, +I, c3I], λx.x
[ cant a  :: =c3F, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ cant  :: =c3G, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +I, +F0, +D, c1, -C], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c1, +C, +F0, +D, c1, -C], λx.x
[ :: =c1, +I, +F0, +D, c1, -I], λx.x
[ :: =c1, +A, +F0, c1, -A], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x
[ :: =c1, +H, +C, +F0, +D, c1, -H], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x
[ :: =c1, +F0, +D, c1, -F0], λx.x




Learning Wymysorys

Learned 999 words in Wymysorys and structured them in 65 functions.
It took 78 samples to learn those.
Those are:
ȧs is 1
cwa is 2
drȧj is 3
fiyr is 4
fynf is 5
zȧhs is 6
zejwa is 7
aht is 8
noün is 9
can is 10
ȧlf is 11
cwełf is 12
dreca is 13
fjyca is 14
funfca is 15
ȧncwencikca is 16
zymfca is 17
ahca is 18
niöenca is 19
cwencik is 20
ȧnȧncwencik is 21
cwejȧncwencik is 22
fjyrȧncwencik is 24
Function _ȧncwencik maps {3,5,6,7,8,9} by x -> 1*x+20
dresik is 30
ȧnȧndresik is 31
cwejȧndresik is 32
fjyrȧndresik is 34
Function _ȧndresik maps {3,5,6,7,8,9} by x -> 1*x+30
fjycik is 40
ȧnȧnfjycik is 41
cwejȧnfjycik is 42
fjyrȧnfjycik is 44
Function _ȧnfjycik maps {3,5,6,7,8,9} by x -> 1*x+40
funfcik is 50
ȧnȧnfunfcik is 51
cwejȧnfunfcik is 52
fjyrȧnfunfcik is 54
Function _ȧnfunfcik maps {3,5,6,7,8,9} by x -> 1*x+50
zȧhcik is 60
ȧnȧnzȧhcik is 61
cwejȧnzȧhcik is 62
fjyrȧnzȧhcik is 64
Function _ȧnzȧhcik maps {3,5,6,7,8,9} by x -> 1*x+60
zymfcik is 70
ȧnȧnzymfcik is 71
cwejȧnzymfcik is 72
fjyrȧnzymfcik is 74
Function _ȧnzymfcik maps {3,5,6,7,8,9} by x -> 1*x+70
ahcik is 80
ȧnȧnahcik is 81
cwejȧnahcik is 82
fjyrȧnahcik is 84
Function _ȧnahcik maps {3,5,6,7,8,9} by x -> 1*x+80
niöencik is 90
ȧnȧnniöencik is 91
cwejȧnniöencik is 92
fjyrȧnniöencik is 94
Function _ȧnniöencik maps {3,5,6,7,8,9} by x -> 1*x+90
hundyt is 100
Function hundyt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,_ȧncwencik,30,31,32,34,_ȧndresik,40,41,42,44,_ȧnfjycik,50,51,52,54,_ȧnfunfcik,60,61,62,64,_ȧnzȧhcik,70,71,72,74,_ȧnzymfcik,80,81,82,84,_ȧnahcik,90,91,92,94,_ȧnniöencik} by x -> 1*x+100
cwehundyt is 200
Function cwehundyt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,_ȧncwencik,30,31,32,34,_ȧndresik,40,41,42,44,_ȧnfjycik,50,51,52,54,_ȧnfunfcik,60,61,62,64,_ȧnzȧhcik,70,71,72,74,_ȧnzymfcik,80,81,82,84,_ȧnahcik,90,91,92,94,_ȧnniöencik} by x -> 1*x+200
Function _hundyt maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _hundyt _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,_ȧncwencik,30,31,32,34,_ȧndresik,40,41,42,44,_ȧnfjycik,50,51,52,54,_ȧnfunfcik,60,61,62,64,_ȧnzȧhcik,70,71,72,74,_ȧnzymfcik,80,81,82,84,_ȧnahcik,90,91,92,94,_ȧnniöencik} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[drȧj :: c1, -C, -A], 3
[fiyr :: c1, -C], 4
[fynf :: c1, -C, -A], 5
[zȧhs :: c1, -C, -A], 6
[zejwa :: c1, -C, -A], 7
[aht :: c1, -C, -A], 8
[noün :: c1, -C, -A], 9
[can :: c2, -S1], 10
[ȧlf :: c2, -S1], 11
[cwełf :: c2, -S1], 12
[dreca :: c2, -S1], 13
[fjyca :: c2, -S1], 14
[funfca :: c2, -S1], 15
[ȧncwencikca :: c2, -S1], 16
[zymfca :: c2, -S1], 17
[ahca :: c2, -S1], 18
[niöenca :: c2, -S1], 19
[cwencik :: c2, -S1], 20
[ȧnȧncwencik :: c2, -S1], 21
[cwejȧncwencik :: c2, -S1], 22
[fjyrȧncwencik :: c2, -S1], 24
[ȧncwencik :: =c1, +A, c2, -S1], λx.'1X+20'(x)
[dresik :: c2, -S1], 30
[ȧnȧndresik :: c2, -S1], 31
[cwejȧndresik :: c2, -S1], 32
[fjyrȧndresik :: c2, -S1], 34
[ȧndresik :: =c1, +A, c2, -S1], λx.'1X+30'(x)
[fjycik :: c2, -S1], 40
[ȧnȧnfjycik :: c2, -S1], 41
[cwejȧnfjycik :: c2, -S1], 42
[fjyrȧnfjycik :: c2, -S1], 44
[ȧnfjycik :: =c1, +A, c2, -S1], λx.'1X+40'(x)
[funfcik :: c2, -S1], 50
[ȧnȧnfunfcik :: c2, -S1], 51
[cwejȧnfunfcik :: c2, -S1], 52
[fjyrȧnfunfcik :: c2, -S1], 54
[ȧnfunfcik :: =c1, +A, c2, -S1], λx.'1X+50'(x)
[zȧhcik :: c2, -S1], 60
[ȧnȧnzȧhcik :: c2, -S1], 61
[cwejȧnzȧhcik :: c2, -S1], 62
[fjyrȧnzȧhcik :: c2, -S1], 64
[ȧnzȧhcik :: =c1, +A, c2, -S1], λx.'1X+60'(x)
[zymfcik :: c2, -S1], 70
[ȧnȧnzymfcik :: c2, -S1], 71
[cwejȧnzymfcik :: c2, -S1], 72
[fjyrȧnzymfcik :: c2, -S1], 74
[ȧnzymfcik :: =c1, +A, c2, -S1], λx.'1X+70'(x)
[ahcik :: c2, -S1], 80
[ȧnȧnahcik :: c2, -S1], 81
[cwejȧnahcik :: c2, -S1], 82
[fjyrȧnahcik :: c2, -S1], 84
[ȧnahcik :: =c1, +A, c2, -S1], λx.'1X+80'(x)
[niöencik :: c2, -S1], 90
[ȧnȧnniöencik :: c2, -S1], 91
[cwejȧnniöencik :: c2, -S1], 92
[fjyrȧnniöencik :: c2, -S1], 94
[ȧnniöencik :: =c1, +A, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ȧs :: c1], 1
[cwa :: c1], 2
[hundyt :: c3], 100
[hundyt  :: =c2, c3], λx.'1X+100'(x)
[cwehundyt :: c3], 200
[cwehundyt  :: =c2, c3], λx.'1X+200'(x)
[hundyt :: =c1, +C, c3], λx.'100X'(x)
[hundyt  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Crimean-Tatar
Learned 999 words in Crimean-Tatar and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
бир is 1
эки is 2
учь is 3
дёрт is 4
беш is 5
алты is 6
еди is 7
секиз is 8
докъуз is 9
он is 10
Function он _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
йигирми is 20
Function йигирми _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
отуз is 30
Function отуз _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
къыркъ is 40
Function къыркъ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
элли is 50
Function элли _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
алтмыш is 60
Function алтмыш _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
етмиш is 70
Function етмиш _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
сексен is 80
Function сексен _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
докъсан is 90
Function докъсан _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
юз is 100
Function юз _ maps {1,2,3,4,5,6,7,8,9,10,он _,20,йигирми _,30,отуз _,40,къыркъ _,50,элли _,60,алтмыш _,70,етмиш _,80,сексен _,90,докъсан _} by x -> 1*x+100
Function _ юз maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ юз _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,он _,20,йигирми _,30,отуз _,40,къыркъ _,50,элли _,60,алтмыш _,70,етмиш _,80,сексен _,90,докъсан _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[эки :: c1, -C], 2
[учь :: c1, -C], 3
[дёрт :: c1, -C], 4
[беш :: c1, -C], 5
[алты :: c1, -C], 6
[еди :: c1, -C], 7
[секиз :: c1, -C], 8
[докъуз :: c1, -C], 9
[он :: c2, -S1], 10
[он  :: =c1, c2, -S1], λx.'1X+10'(x)
[йигирми :: c2, -S1], 20
[йигирми  :: =c1, c2, -S1], λx.'1X+20'(x)
[отуз :: c2, -S1], 30
[отуз  :: =c1, c2, -S1], λx.'1X+30'(x)
[къыркъ :: c2, -S1], 40
[къыркъ  :: =c1, c2, -S1], λx.'1X+40'(x)
[элли :: c2, -S1], 50
[элли  :: =c1, c2, -S1], λx.'1X+50'(x)
[алтмыш :: c2, -S1], 60
[алтмыш  :: =c1, c2, -S1], λx.'1X+60'(x)
[етмиш :: c2, -S1], 70
[етмиш  :: =c1, c2, -S1], λx.'1X+70'(x)
[сексен :: c2, -S1], 80
[сексен  :: =c1, c2, -S1], λx.'1X+80'(x)
[докъсан :: c2, -S1], 90
[докъсан  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[бир :: c1], 1
[юз :: c3], 100
[юз  :: =c2, c3], λx.'1X+100'(x)
[ юз :: =c1, +C, c3], λx.'100X'(x)
[ юз  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Gilbertese
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_

Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Not related to ru_
Learned 999 words in Gilbertese and structured them in 52 functions.
It took 184 samples to learn those.
Those are:
teuana is 1
uoua is 2
tenua is 3
aua is 4
nimaua is 5
onoua is 6
itua is 7
wanua is 8
ruaiwa is 9
tebwina is 10
Function tebwi ma _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
Function tebwi ma nim_ maps {4} by x -> 0*x+15
uabwi is 20
Function uabwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tenibwi is 30
Function tenibwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
abwi is 40
Function abwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
nimabwi is 50
Function nimabwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
onobwi is 60
Function onobwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
itibwi is 70
Function itibwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
wanibwi is 80
Function wanibwi ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function ru_ maps {40,abwi ma _} by x -> 1*x+50
tebubua is 100
Function tebubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+100
Function tebubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+100
uabubua is 200
Function uabubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+200
Function uabubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+200
tenibubua is 300
Function tenibubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+300
Function tenibubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+300
abubua is 400
Function abubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+400
Function abubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+400
nimabubua is 500
Function nimabubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+500
Function nimabubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+500
onobubua is 600
Function onobubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+600
Function onobubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+600
itibubua is 700
Function itibubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+700
Function itibubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+700
wanibubua is 800
Function wanibubua ao _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+800
Function wanibubua _ maps {10,tebwi ma _,tebwi ma nim_,20,uabwi ma _,30,tenibwi ma _,40,abwi ma _,50,nimabwi ma _,60,onobwi ma _,70,itibwi ma _,80,wanibwi ma _,ru_} by x -> 1*x+800
Function ru_ maps {400,abubua ao _,abubua _} by x -> 1*x+500

MG:
[aua :: c1, -B, -A], 4
[ :: =c5, cFin], λx.x
[nimabwi :: c3, -S2], 50
[nimabwi ma  :: =c1, c3, -S2], λx.'1X+50'(x)
[onobwi :: c3, -S2], 60
[onobwi ma  :: =c1, c3, -S2], λx.'1X+60'(x)
[itibwi :: c3, -S2], 70
[itibwi ma  :: =c1, c3, -S2], λx.'1X+70'(x)
[wanibwi :: c3, -S2], 80
[wanibwi ma  :: =c1, c3, -S2], λx.'1X+80'(x)
[ru :: =c3D, c3, -S2], λx.'1X+50'(x)
[ :: =c2, +D, c3D], λx.x
[ :: =c2, c3], λx.x
[tebwina :: c2], 10
[tebwi ma  :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[tebwi ma nim :: =c2B, c2], λx.'0X+15'(x)
[ :: =c1, +B, c2B], λx.x
[uabwi :: c2], 20
[uabwi ma  :: =c1, c2], λx.'1X+20'(x)
[tenibwi :: c2], 30
[tenibwi ma  :: =c1, c2], λx.'1X+30'(x)
[abwi :: c2, -D], 40
[abwi ma  :: =c1, c2, -D], λx.'1X+40'(x)
[teuana :: c1, -A], 1
[uoua :: c1, -A], 2
[tenua :: c1, -A], 3
[nimaua :: c1], 5
[onoua :: c1, -A], 6
[itua :: c1, -A], 7
[wanua :: c1, -A], 8
[ruaiwa :: c1, -A], 9
[abubua :: c4, -F], 400
[abubua ao  :: =c1, c4, -F], λx.'1X+400'(x)
[abubua  :: =c3, c4, -F], λx.'1X+400'(x)
[nimabubua :: c5], 500
[nimabubua ao  :: =c1, c5], λx.'1X+500'(x)
[nimabubua  :: =c3, c5], λx.'1X+500'(x)
[onobubua :: c5], 600
[onobubua ao  :: =c1, c5], λx.'1X+600'(x)
[onobubua  :: =c3, c5], λx.'1X+600'(x)
[itibubua :: c5], 700
[itibubua ao  :: =c1, c5], λx.'1X+700'(x)
[itibubua  :: =c3, c5], λx.'1X+700'(x)
[wanibubua :: c5], 800
[wanibubua ao  :: =c1, c5], λx.'1X+800'(x)
[wanibubua  :: =c3, c5], λx.'1X+800'(x)
[ru :: =c5F, c5], λx.'1X+500'(x)
[ :: =c4, +F, c5F], λx.x
[ :: =c4, c5], λx.x
[tebubua :: c4], 100
[tebubua ao  :: =c1, c4], λx.'1X+100'(x)
[tebubua  :: =c3, c4], λx.'1X+100'(x)
[uabubua :: c4], 200
[uabubua ao  :: =c1, c4], λx.'1X+200'(x)
[uabubua  :: =c3, c4], λx.'1X+200'(x)
[tenibubua :: c4], 300
[tenibubua ao  :: =c1, c4], λx.'1X+300'(x)
[tenibubua  :: =c3, c4], λx.'1X+300'(x)
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[ :: =c2, c5], λx.x
[ :: =c4, +F, c4], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Southern-Quechua
Learned 999 words in Southern-Quechua and structured them in 23 functions.
It took 40 samples to learn those.
Those are:
huk is 1
iskay is 2
kimsa is 3
tawa is 4
pichqa is 5
suqta is 6
qanchis is 7
pusaq is 8
isqun is 9
chunka is 10
Function chunka _niyuq maps {1,2,7,8,9} by x -> 1*x+10
Function chunka _yuq maps {3,4,5,6} by x -> 1*x+10
Function _ chunka maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ chunka _niyuq maps {2,3,4,5,6,7,8,9}x{1,2,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ chunka _yuq maps {2,3,4,5,6,7,8,9}x{3,4,5,6} by (x0,x1) -> 10*x0+1*x1
pachak is 100
Function pachak _niyuq maps {1,2,7,8,9} by x -> 1*x+100
Function pachak _yuq maps {3,4,5,6,_ chunka} by x -> 1*x+100
Function pachak _ maps {10,chunka _niyuq,chunka _yuq,_ chunka _niyuq,_ chunka _yuq} by x -> 1*x+100
Function _ pachak maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ pachak _niyuq maps {2,3,4,5,6,7,8,9}x{1,2,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ pachak _yuq maps {2,3,4,5,6,7,8,9}x{3,4,5,6,_ chunka} by (x0,x1) -> 100*x0+1*x1
Function _ pachak _ maps {2,3,4,5,6,7,8,9}x{10,chunka _niyuq,chunka _yuq,_ chunka _niyuq,_ chunka _yuq} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[chunka :: c2, -E, -S1], 10
[chunka  :: =c2*, c2, -E, -S1], λx.'1X+10'(x)
[niyuq :: =c1, +A, c2*], λx.x
[chunka  :: =c2**, c2, -E, -S1], λx.'1X+10'(x)
[yuq :: =c1, +B, c2**], λx.x
[ chunka  :: =c2***, =c2C, c2, -E, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[niyuq :: =c1, +A, c2***], λx.x
[ chunka  :: =c2****, =c2C, c2, -E, -S1], λxλy.'1X+10Y'(x,y)
[yuq :: =c1, +B, c2****], λx.x
[iskay :: c1, -C, -A], 2
[kimsa :: c1, -C, -B, -D0], 3
[tawa :: c1, -C, -B, -D0], 4
[pichqa :: c1, -C, -B, -D0], 5
[suqta :: c1, -C, -B, -D0], 6
[qanchis :: c1, -C, -A], 7
[pusaq :: c1, -C, -A], 8
[isqun :: c1, -C, -A], 9
[huk :: c1, -A], 1
[ chunka :: =c1, +C, c2, -D, -S1], λx.'10X'(x)
[ :: =c1, +D0, c2, -D], λx.x
[pachak :: c3], 100
[pachak  :: =c3*, c3], λx.'1X+100'(x)
[niyuq :: =c1, +A, c3*], λx.x
[pachak  :: =c3**, c3], λx.'1X+100'(x)
[yuq :: =c2, +D, c3**], λx.x
[pachak  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[ pachak :: =c1, +C, c3], λx.'100X'(x)
[ pachak  :: =c3***, =c2C, c3], λxλy.'1X+100Y'(x,y)
[niyuq :: =c1, +A, c3***], λx.x
[ pachak  :: =c3****, =c2C, c3], λxλy.'1X+100Y'(x,y)
[yuq :: =c2, +D, c3****], λx.x
[ pachak  :: =c3E, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +C, +B, +D0, c1, -C], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x


Learning Dagbani
Learned 100 words in Dagbani and structured them in 100 functions.
It took 100 samples to learn those.
Those are:
n-daam is 1
n-yi is 2
n-ta is 3
n-nahi is 4
n-nu is 5
n-yobu is 6
m-pɔi is 7
n-nii is 8
n-wei is 9
pia is 10
pia ni yini is 11
pia ni ayi is 12
pia ni ata is 13
pia ni anahi is 14
pia ni anu is 15
pia ni ayobu is 16
pia ni apɔi is 17
pishi ayi ka is 18
pishi yini ka is 19
pishi is 20
pishi ni yini is 21
pishi ni yi is 22
pishi ni ata is 23
pishi ni anahi is 24
pishi ni anu is 25
pishi ni ayobu is 26
pishi ni apɔi is 27
pihita ayi ka is 28
pihita yini ka is 29
pihita is 30
pihita ni yini is 31
pihita ni yi is 32
pihita ni ata is 33
pihita ni anahi is 34
pihita ni anu is 35
pihita ni ayobu is 36
pihita ni apɔi is 37
pihinahi ayi ka is 38
pihinahi yini ka is 39
pihinahi is 40
pihinahi ni yini is 41
pihinahi ni yi is 42
pihinahi ni ata is 43
pihinahi ni anahi is 44
pihinahi ni anu is 45
pihinahi ni ayobu is 46
pihinahi ni apɔi is 47
pihinu ayi ka is 48
pihinu yini ka is 49
pihinu is 50
pihinu ni yini is 51
pihinu ni yi is 52
pihinu ni ata is 53
pihinu ni anahi is 54
pihinu ni anu is 55
pihinu ni ayobu is 56
pihinu ni apɔi is 57
pihiyobu ayi ka is 58
pihiyobu yini ka is 59
pihiyobu is 60
pihiyobu ni yini is 61
pihiyobu ni yi is 62
pihiyobu ni ata is 63
pihiyobu ni anahi is 64
pihiyobu ni anu is 65
pihiyobu ni ayobu is 66
pihiyobu ni apɔi is 67
pisopɔi ayi ka is 68
pisopɔi yini ka is 69
pisopɔi is 70
pisopɔi ni yini is 71
pisopɔi ni yi is 72
pisopɔi ni ata is 73
pisopɔi ni anahi is 74
pisopɔi ni anu is 75
pisopɔi ni ayobu is 76
pisopɔi ni apɔi is 77
pihinii ayi ka is 78
pihinii yini ka is 79
pihinii is 80
pihinii ni yini is 81
pihinii ni yi is 82
pihinii ni ata is 83
pihinii ni anahi is 84
pihinii ni anu is 85
pihinii ni ayobu is 86
pihinii ni apɔi is 87
pihiwei ayi ka is 88
pihiwei yini ka is 89
pihiwei is 90
pihiwei ni yini is 91
pihiwei ni yi is 92
pihiwei ni ata is 93
pihiwei ni anahi is 94
pihiwei ni anu is 95
pihiwei ni ayobu is 96
pihiwei ni apɔi is 97
kɔbiga ayi ka is 98
kɔbiga yini ka is 99
kɔbiga is 100

MG:
[ :: =c1, cFin], λx.x
[n-daam :: c1], 1
[n-yi :: c1], 2
[n-ta :: c1], 3
[n-nahi :: c1], 4
[n-nu :: c1], 5
[n-yobu :: c1], 6
[m-pɔi :: c1], 7
[n-nii :: c1], 8
[n-wei :: c1], 9
[pia :: c1], 10
[pia ni yini :: c1], 11
[pia ni ayi :: c1], 12
[pia ni ata :: c1], 13
[pia ni anahi :: c1], 14
[pia ni anu :: c1], 15
[pia ni ayobu :: c1], 16
[pia ni apɔi :: c1], 17
[pishi ayi ka :: c1], 18
[pishi yini ka :: c1], 19
[pishi :: c1], 20
[pishi ni yini :: c1], 21
[pishi ni yi :: c1], 22
[pishi ni ata :: c1], 23
[pishi ni anahi :: c1], 24
[pishi ni anu :: c1], 25
[pishi ni ayobu :: c1], 26
[pishi ni apɔi :: c1], 27
[pihita ayi ka :: c1], 28
[pihita yini ka :: c1], 29
[pihita :: c1], 30
[pihita ni yini :: c1], 31
[pihita ni yi :: c1], 32
[pihita ni ata :: c1], 33
[pihita ni anahi :: c1], 34
[pihita ni anu :: c1], 35
[pihita ni ayobu :: c1], 36
[pihita ni apɔi :: c1], 37
[pihinahi ayi ka :: c1], 38
[pihinahi yini ka :: c1], 39
[pihinahi :: c1], 40
[pihinahi ni yini :: c1], 41
[pihinahi ni yi :: c1], 42
[pihinahi ni ata :: c1], 43
[pihinahi ni anahi :: c1], 44
[pihinahi ni anu :: c1], 45
[pihinahi ni ayobu :: c1], 46
[pihinahi ni apɔi :: c1], 47
[pihinu ayi ka :: c1], 48
[pihinu yini ka :: c1], 49
[pihinu :: c1], 50
[pihinu ni yini :: c1], 51
[pihinu ni yi :: c1], 52
[pihinu ni ata :: c1], 53
[pihinu ni anahi :: c1], 54
[pihinu ni anu :: c1], 55
[pihinu ni ayobu :: c1], 56
[pihinu ni apɔi :: c1], 57
[pihiyobu ayi ka :: c1], 58
[pihiyobu yini ka :: c1], 59
[pihiyobu :: c1], 60
[pihiyobu ni yini :: c1], 61
[pihiyobu ni yi :: c1], 62
[pihiyobu ni ata :: c1], 63
[pihiyobu ni anahi :: c1], 64
[pihiyobu ni anu :: c1], 65
[pihiyobu ni ayobu :: c1], 66
[pihiyobu ni apɔi :: c1], 67
[pisopɔi ayi ka :: c1], 68
[pisopɔi yini ka :: c1], 69
[pisopɔi :: c1], 70
[pisopɔi ni yini :: c1], 71
[pisopɔi ni yi :: c1], 72
[pisopɔi ni ata :: c1], 73
[pisopɔi ni anahi :: c1], 74
[pisopɔi ni anu :: c1], 75
[pisopɔi ni ayobu :: c1], 76
[pisopɔi ni apɔi :: c1], 77
[pihinii ayi ka :: c1], 78
[pihinii yini ka :: c1], 79
[pihinii :: c1], 80
[pihinii ni yini :: c1], 81
[pihinii ni yi :: c1], 82
[pihinii ni ata :: c1], 83
[pihinii ni anahi :: c1], 84
[pihinii ni anu :: c1], 85
[pihinii ni ayobu :: c1], 86
[pihinii ni apɔi :: c1], 87
[pihiwei ayi ka :: c1], 88
[pihiwei yini ka :: c1], 89
[pihiwei :: c1], 90
[pihiwei ni yini :: c1], 91
[pihiwei ni yi :: c1], 92
[pihiwei ni ata :: c1], 93
[pihiwei ni anahi :: c1], 94
[pihiwei ni anu :: c1], 95
[pihiwei ni ayobu :: c1], 96
[pihiwei ni apɔi :: c1], 97
[kɔbiga ayi ka :: c1], 98
[kɔbiga yini ka :: c1], 99
[kɔbiga :: c1], 100


Learning Portuguese-Portugal

Learned 999 words in Portuguese-Portugal and structured them in 47 functions.
It took 204 samples to learn those.
Those are:
um is 1
dois is 2
três is 3
quatro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
onze is 11
doze is 12
treze is 13
catorze is 14
quinze is 15
Function dezas_ maps {6,7} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
Function deza_ maps {9} by x -> 0*x+19
vinte is 20
Function vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
quarenta is 40
Function quarenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquenta is 50
Function cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sessenta is 60
Function sessenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta e _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cem is 100
cento e vinte is 120
Function cento e vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
cento e cinquenta is 150
Function cento e cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function cento e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,80,dezas_,dez_,deza_,trinta e _,quarenta e _,sessenta e _,_nta,_nta e _,oitenta e _} by x -> 1*x+100
duzentos is 200
Function duzentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+200
Function _ntos maps {13} by x -> 0*x+300
Function _ntos e vinte e cinco maps {13} by x -> 0*x+325
Function _ntos e _ maps {13}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,_nta,_nta e _,80,oitenta e _} by (x0,x1) -> 23*x0+1*x1+1
quinhentos is 500
Function quinhentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+500
Function _centos maps {4,6,7,8,9} by x -> 100*x+0
Function _centos e _ maps {4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by (x0,x1) -> 100*x0+1*x1

MG:
[oito :: c1, -B, -J], 8
[nove :: c1, -C, -E, -J], 9
[treze :: c2, -H, -I, -S1, -F], 13
[ :: =c3, cFin], λx.x
[sete :: c1, -E, -J, -A], 7
[quatro :: c1, -J], 4
[seis :: c1, -J, -A], 6
[dez :: c2, -I, -S1, -F], 10
[onze :: c2, -I, -S1, -F], 11
[doze :: c2, -I, -S1, -F], 12
[catorze :: c2, -I, -S1, -F], 14
[quinze :: c2, -I, -S1, -F], 15
[dezas :: =c2A, c2, -I, -S1, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -I, -S1, -F], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[deza :: =c2C, c2, -I, -S1, -F], λx.'0X+19'(x)
[ :: =c1, +C, c2C], λx.x
[vinte :: c2, -I, -S1], 20
[vinte e  :: =c1, c2, -I, -S1], λx.'1X+20'(x)
[trinta :: c2, -I, -S1, -F], 30
[trinta e  :: =c1, c2, -I, -S1, -F], λx.'1X+30'(x)
[quarenta :: c2, -I, -S1, -F], 40
[quarenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+40'(x)
[cinquenta :: c2, -I, -S1], 50
[cinquenta e  :: =c1, c2, -I, -S1], λx.'1X+50'(x)
[sessenta :: c2, -I, -S1, -F], 60
[sessenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+60'(x)
[oitenta :: c2, -I, -S1, -F], 80
[oitenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+80'(x)
[nta :: =c1, +E, c2, -I, -S1, -F], λx.'10X'(x)
[nta e  :: =c1, =c2E, c2, -I, -S1, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[um :: c1], 1
[dois :: c1], 2
[três :: c1], 3
[cinco :: c1], 5
[ :: =c1, c2, -I], λx.x
[cem :: c3], 100
[cento e vinte :: c3], 120
[cento e vinte e  :: =c1, c3], λx.'1X+120'(x)
[cento e cinquenta :: c3], 150
[cento e cinquenta e  :: =c1, c3], λx.'1X+150'(x)
[cento e  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[duzentos :: c3], 200
[duzentos e  :: =c2, c3], λx.'1X+200'(x)
[ntos :: =c2, +H, c3], λx.'0X+300'(x)
[ntos e vinte e cinco :: =c2, +H, c3], λx.'0X+325'(x)
[ntos e  :: =c3I, =c3H, c3], λxλy.'1X+23Y+1'(x,y)
[ :: =c2, +H, c3H], λx.x
[ :: =c2, +I, c3I], λx.x
[quinhentos :: c3], 500
[quinhentos e  :: =c2, c3], λx.'1X+500'(x)
[centos :: =c1, +J, c3], λx.'100X'(x)
[centos e  :: =c2, =c3J, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c3J], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +H, +I, +S1, +F, c2, -H], λx.x
[ :: =c1, +C, +E, +J, c1, -C], λx.x
[ :: =c1, +E, +J, +A, c1, -E], λx.x
[ :: =c1, +E, +J, c1, -E], λx.x
[ :: =c2, +I, +S1, +F, c2, -I], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +J, +A, c1, -J], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning Aymara
Learned 999 words in Aymara and structured them in 61 functions.
It took 115 samples to learn those.
Those are:
maya is 1
paya is 2
quimsa is 3
pusi is 4
pheska is 5
sojjta is 6
pakallko is 7
Function _kallko maps {3} by x -> 0*x+8
llätunca is 9
tunca is 10
Function tunca _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+10
pä tunca is 20
Function pä tunc _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+20
Function _ tunca maps {3,4,5,6} by x -> 10*x+0
Function _ tunc _ni maps {3,4,5,6}x{1,2,3,4,5,6,7,_kallko,9} by (x0,x1) -> 10*x0+1*x1
pakallk tunca is 70
Function pakallk tunc _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+70
Function _kallk tunca maps {3} by x -> 0*x+80
Function _kallk tunc _ni maps {3}x{1,2,3,4,5,6,7,_kallko,9} by (x0,x1) -> 24*x0+1*x1+8
llätunc tunca is 90
Function llätunc tunc _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+90
pataca is 100
Function pataca _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+100
Function pataca _ maps {10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by x -> 1*x+100
Function pataca _ni _ maps {3,4,5,6}x{10,tunca _ni} by (x0,x1) -> 10*x0+1*x1+90
Function patac _ni maps {20,70,90} by x -> 1*x+100
Function pataca _nikallk _ maps {3}x{10,tunca _ni} by (x0,x1) -> 51*x0+1*x1+17
pä pataca is 200
Function pä pataca _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+200
Function pä pataca _ maps {10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by x -> 1*x+200
Function pä pataca _ni _ maps {3,4,5,6}x{10,tunca _ni} by (x0,x1) -> 10*x0+1*x1+190
Function pä patac _ni maps {20,70,90} by x -> 1*x+200
Function pä pataca _nikallk _ maps {3}x{10,tunca _ni} by (x0,x1) -> 81*x0+1*x1+27
Function _ pataca maps {3,4,5,6} by x -> 100*x+0
Function _ pataca _ni maps {3,4,5,6}x{1,2,3,4,5,6,7,_kallko,9} by (x0,x1) -> 100*x0+1*x1
Function _ pataca _ maps {3,4,5,6}x{10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by (x0,x1) -> 100*x0+1*x1
Function _ pataca _ni _ maps {3,4,5,6}x{3,4,5,6}x{10,tunca _ni} by (x0,x1,x2) -> 100*x0+10*x1+1*x2+-10
Function _ pataca _nikallk _ maps {3,4,5,6}x{3}x{10,tunca _ni} by (x0,x1,x2) -> 100*x0+21*x1+1*x2+7
Function _ patac _ni maps {4,5,6}x{20} by (x0,x1) -> 100*x0+1*x1
Function _ _ maps {3,4,5,6}x{patac _ni} by (x0,x1) -> 100*x0+1*x1+-100
pakallk pataca is 700
Function pakallk pataca _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+700
Function pakallk pataca _ maps {10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by x -> 1*x+700
Function pakallk patac _ni maps {20} by x -> 0*x+720
Function pakallk pataca _ni _ maps {3,4,5,6}x{10,tunca _ni} by (x0,x1) -> 10*x0+1*x1+690
Function pakallk pataca _nikallk _ maps {3}x{10,tunca _ni} by (x0,x1) -> 231*x0+1*x1+77
Function pakallk _ maps {patac _ni} by x -> 1*x+600
Function _kallk pataca maps {3} by x -> 0*x+800
Function _kallk pataca _ni maps {3}x{1,2,3,4,5,6,7,_kallko,9} by (x0,x1) -> 240*x0+1*x1+80
Function _kallk pataca _ maps {3}x{10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by (x0,x1) -> 240*x0+1*x1+80
Function _kallk patac _ni maps {3}x{20} by (x0,x1) -> 0*x0+0*x1+820
Function _kallk pataca _ni _ maps {3}x{3,4,5,6}x{10,tunca _ni} by (x0,x1,x2) -> 237*x0+10*x1+1*x2+79
Function _kallk pataca _nikallk _ maps {3}x{3}x{10,tunca _ni} by (x0,x1,x2) -> 137*x0+138*x1+1*x2+45
Function _kallk _ maps {3}x{patac _ni} by (x0,x1) -> 210*x0+1*x1+70
llätunc pataca is 900
Function llätunc pataca _ni maps {1,2,3,4,5,6,7,_kallko,9} by x -> 1*x+900
Function llätunc pataca _ maps {10,tunca _ni,pä tunc _ni,pakallk tunc _ni,llätunc tunc _ni} by x -> 1*x+900
Function llätunc patac _ni maps {20} by x -> 0*x+920
Function llätunc pataca _ni _ maps {3,4,5,6}x{10,tunca _ni} by (x0,x1) -> 10*x0+1*x1+890
Function llätunc pataca _nikallk _ maps {3}x{10,tunca _ni} by (x0,x1) -> 291*x0+1*x1+97
Function llätunc _ maps {patac _ni} by x -> 1*x+800

MG:
[quimsa :: c1, -A, -C0], 3
[pä tunca :: c3, -H, -F], 20
[patac  :: =c4*, c4, -I], λx.'1X+100'(x)
[ni :: =c3, +F, c4*], λx.x
[ :: =c5, cFin], λx.x
[tunca :: c3, -E, -D], 10
[tunca  :: =c3*, c3, -E, -D], λx.'1X+10'(x)
[ni :: =c2, +B, c3*], λx.x
[pusi :: c2, -C, -G, -B, -S3], 4
[pheska :: c2, -C, -G, -B, -S3], 5
[sojjta :: c2, -C, -G, -B, -S3], 6
[ :: =c1, +C0, c2, -C], λx.x
[pakallko :: c2, -B, -S3], 7
[kallko :: =c1, +A, c2, -B, -S3], λx.'0X+8'(x)
[llätunca :: c2, -B, -S3], 9
[ :: =c1, c2, -B], λx.x
[maya :: c1], 1
[paya :: c1], 2
[pakallk tunca :: c3, -F], 70
[llätunc tunca :: c3, -F], 90
[ni :: =c2, +B, c3**], λx.x
[pä tunc  :: =c3***, c3, -D], λx.'1X+20'(x)
[ni :: =c2, +B, c3***], λx.x
[pakallk tunc  :: =c3****, c3, -D], λx.'1X+70'(x)
[ni :: =c2, +B, c3****], λx.x
[llätunc tunc  :: =c3*****, c3, -D], λx.'1X+90'(x)
[ni :: =c2, +B, c3*****], λx.x
[pä pataca :: c5], 200
[pä pataca  :: =c5*, c5], λx.'1X+200'(x)
[ni :: =c2, +B, c5*], λx.x
[pä pataca  :: =c4D, c5], λx.'1X+200'(x)
[pä pataca  :: =c5**, c5], λx.'1X+190'(x)
[ni  :: =c4*****E, =c3C, c5**], λxλy.'1X+10Y'(x,y)
[pä patac  :: =c5***, c5], λx.'1X+200'(x)
[ni :: =c3, +F, c5***], λx.x
[pä pataca  :: =c5****, c5], λx.'1X+27'(x)
[nikallk  :: =c4*****E, =c3A, c5****], λxλy.'1X+81Y'(x,y)
[ pataca :: =c2, +C, c5], λx.'100X'(x)
[ pataca  :: =c5*****, =c3C, c5], λxλy.'1X+100Y'(x,y)
[ni :: =c2, +B, c5*****], λx.x
[ pataca  :: =c4D, =c3C, c5], λxλy.'1X+100Y'(x,y)
[ pataca  :: =c5******, =c3C, c5], λxλy.'1X+100Y+-10'(x,y)
[ni  :: =c4*****E, =c3C, c5******], λxλy.'1X+10Y'(x,y)
[ pataca  :: =c5*******, =c3C, c5], λxλy.'1X+100Y+7'(x,y)
[nikallk  :: =c4*****E, =c3A, c5*******], λxλy.'1X+21Y'(x,y)
[ patac  :: =c5********, =c5G, c5], λxλy.'1X+100Y'(x,y)
[ :: =c2, +G, c5G], λx.x
[ni :: =c3, +H, c5********], λx.x
[  :: =c5I, =c3C, c5], λxλy.'1X+100Y+-100'(x,y)
[ :: =c4, +I, c5I], λx.x
[pakallk pataca :: c5], 700
[pakallk pataca  :: =c5*********, c5], λx.'1X+700'(x)
[ni :: =c2, +B, c5*********], λx.x
[pakallk pataca  :: =c4D, c5], λx.'1X+700'(x)
[pakallk patac  :: =c5**********, c5], λx.'1X+720'(x)
[ni :: =c3, +H, c5**********], λx.'0X'(x)
[pakallk pataca  :: =c5***********, c5], λx.'1X+690'(x)
[ni  :: =c4*****E, =c3C, c5***********], λxλy.'1X+10Y'(x,y)
[pakallk pataca  :: =c5************, c5], λx.'1X+77'(x)
[nikallk  :: =c4*****E, =c3A, c5************], λxλy.'1X+231Y'(x,y)
[pakallk  :: =c5I, c5], λx.'1X+600'(x)
[kallk pataca :: =c1, +A, c5], λx.'0X+800'(x)
[kallk pataca  :: =c5*************, =c3A, c5], λxλy.'1X+240Y+80'(x,y)
[ni :: =c2, +B, c5*************], λx.x
[kallk pataca  :: =c4D, =c3A, c5], λxλy.'1X+240Y+80'(x,y)
[kallk patac  :: =c5**************, =c3A, c5], λxλy.'1X+0Y+820'(x,y)
[ni :: =c3, +H, c5**************], λx.'0X'(x)
[kallk pataca  :: =c5***************, =c3A, c5], λxλy.'1X+237Y+79'(x,y)
[ni  :: =c4*****E, =c3C, c5***************], λxλy.'1X+10Y'(x,y)
[kallk pataca  :: =c5****************, =c3A, c5], λxλy.'1X+137Y+45'(x,y)
[nikallk  :: =c4*****E, =c3A, c5****************], λxλy.'1X+138Y'(x,y)
[kallk  :: =c5I, =c3A, c5], λxλy.'1X+210Y+70'(x,y)
[llätunc pataca :: c5], 900
[llätunc pataca  :: =c5*****************, c5], λx.'1X+900'(x)
[ni :: =c2, +B, c5*****************], λx.x
[llätunc pataca  :: =c4D, c5], λx.'1X+900'(x)
[llätunc patac  :: =c5******************, c5], λx.'1X+920'(x)
[ni :: =c3, +H, c5******************], λx.'0X'(x)
[llätunc pataca  :: =c5*******************, c5], λx.'1X+890'(x)
[ni  :: =c4*****E, =c3C, c5*******************], λxλy.'1X+10Y'(x,y)
[llätunc pataca  :: =c5********************, c5], λx.'1X+97'(x)
[nikallk  :: =c4*****E, =c3A, c5********************], λxλy.'1X+291Y'(x,y)
[llätunc  :: =c5I, c5], λx.'1X+800'(x)
[ :: =c4, c5], λx.x
[pataca :: c4], 100
[pataca  :: =c4**, c4], λx.'1X+100'(x)
[ni :: =c2, +B, c4**], λx.x
[pataca  :: =c4D, c4], λx.'1X+100'(x)
[ :: =c3, +D, c4D], λx.x
[pataca  :: =c4***, c4], λx.'1X+90'(x)
[ni  :: =c4*****E, =c3C, c4***], λxλy.'1X+10Y'(x,y)
[ni :: =c3, +F, c4****], λx.x
[pataca  :: =c4*****, c4], λx.'1X+17'(x)
[nikallk  :: =c4*****E, =c3A, c4*****], λxλy.'1X+51Y'(x,y)
[ :: =c3, +E, c4*****E], λx.x
[ :: =c1, c5], λx.x
[ :: =c3, c5], λx.x
[ni :: =c2, +B, c3******], λx.x
[ni :: =c2, +B, c3*******], λx.x
[ tunca :: =c2, +C, c3], λx.'10X'(x)
[ tunc  :: =c3********, =c3C, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[ni :: =c2, +B, c3********], λx.x
[ni :: =c2, +B, c3*********], λx.x
[kallk tunca :: =c1, +A, c3], λx.'0X+80'(x)
[kallk tunc  :: =c3**********, =c3A, c3], λxλy.'1X+24Y+8'(x,y)
[ :: =c1, +A, c3A], λx.x
[ni :: =c2, +B, c3**********], λx.x
[ :: =c2, +S3, c5], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c4, +I, c4], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c2, +G, +B, +S3, c2, -G], λx.x
[ :: =c2, +B, +S3, c2, -B], λx.x
[ :: =c1, +A, +C0, c1, -A], λx.x
[ :: =c2, +C, +G, +B, +S3, c2, -C], λx.x
[ :: =c3, +H, +F, c3, -H], λx.x
[ :: =c3, +E, +D, c3, -E], λx.x


Learning Cocama

Learned 999 words in Cocama and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
huepe is 1
mucuica is 2
mutsapɨrɨca is 3
iruaca is 4
pichca is 5
socta is 6
cansi is 7
pusa is 8
iscun is 9
chunga is 10
Function chunga _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ chunga maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ chunga _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
pacha is 100
Function pacha _ maps {1,2,3,4,5,6,7,8,9,10,chunga _,_ chunga,_ chunga _} by x -> 1*x+100
Function _ pacha maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ pacha _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,chunga _,_ chunga,_ chunga _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[chunga :: c2, -S1], 10
[chunga  :: =c1, c2, -S1], λx.'1X+10'(x)
[ chunga :: =c1, +B, c2, -S1], λx.'10X'(x)
[ chunga  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[huepe :: c1], 1
[mucuica :: c1, -B], 2
[mutsapɨrɨca :: c1, -B], 3
[iruaca :: c1, -B], 4
[pichca :: c1, -B], 5
[socta :: c1, -B], 6
[cansi :: c1, -B], 7
[pusa :: c1, -B], 8
[iscun :: c1, -B], 9
[pacha :: c3], 100
[pacha  :: =c2, c3], λx.'1X+100'(x)
[ pacha :: =c1, +B, c3], λx.'100X'(x)
[ pacha  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Laz
Learned 999 words in Laz and structured them in 25 functions.
It took 36 samples to learn those.
Those are:
ar is 1
jur is 2
sum is 3
otxo is 4
xut is 5
aşi is 6
şkvit is 7
ovro is 8
çxoro is 9
vit is 10
Function vito_ maps {1,2,3,5,6,7,8,9} by x -> 1*x+10
Function vit_ maps {4} by x -> 0*x+14
eçi is 20
Function eçido_ maps {1,2,3,5,6,7,8,9,10,vito_,vit_} by x -> 1*x+20
Function eçid_ maps {4} by x -> 0*x+24
Function _eneçi maps {3} by x -> 0*x+60
Function _eneçido_ maps {3}x{1,2,3,5,6,7,8,9,10,vito_,vit_} by (x0,x1) -> 18*x0+1*x1+6
Function _eneçid_ maps {3}x{4} by (x0,x1) -> 0*x0+0*x1+64
Function _neçi maps {2,4} by x -> 20*x+0
Function _neçido_ maps {2,4}x{1,2,3,5,6,7,8,9,10,vito_,vit_} by (x0,x1) -> 20*x0+1*x1
Function _neçid_ maps {2,4}x{4} by (x0,x1) -> 20*x0+1*x1
oşi is 100
Function oşi do _ maps {1,2,3,4,5,6,7,8,9,10,vito_,vit_,20,eçido_,eçid_,_eneçi,_eneçido_,_eneçid_,_neçi,_neçido_,_neçid_} by x -> 1*x+100
Function _ oşi maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ oşi do _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,vito_,vit_,20,eçido_,eçid_,_eneçi,_eneçido_,_eneçid_,_neçi,_neçido_,_neçid_} by (x0,x1) -> 100*x0+1*x1

MG:
[sum :: c1, -D, -C0, -G, -A], 3
[otxo :: c1, -B, -E, -G], 4
[ :: =c4, cFin], λx.x
[jur :: c1, -E, -C0, -G, -A], 2
[vit :: c2, -S2, -F1], 10
[vito :: =c2A, c2, -S2, -F1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vit :: =c2B, c2, -S2, -F1], λx.'0X+14'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +C0, c2], λx.x
[ar :: c1, -C0, -A], 1
[xut :: c1, -C0, -G, -A], 5
[aşi :: c1, -C0, -G, -A], 6
[şkvit :: c1, -C0, -G, -A], 7
[ovro :: c1, -C0, -G, -A], 8
[çxoro :: c1, -C0, -G, -A], 9
[oşi :: c4], 100
[oşi do  :: =c3, c4], λx.'1X+100'(x)
[ oşi :: =c1, +G, c4], λx.'100X'(x)
[ oşi do  :: =c3, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[eçi :: c3, -S1], 20
[eçido :: =c2, c3, -S1], λx.'1X+20'(x)
[eçid :: =c2B, c3, -S1], λx.'0X+24'(x)
[eneçi :: =c1, +D, c3, -S1], λx.'0X+60'(x)
[eneçido :: =c2, =c3D, c3, -S1], λxλy.'1X+18Y+6'(x,y)
[ :: =c1, +D, c3D], λx.x
[eneçid :: =c2B, =c3D, c3, -S1], λxλy.'0X+0Y+64'(x,y)
[neçi :: =c1, +E, c3, -S1], λx.'20X'(x)
[neçido :: =c2, =c3E, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[neçid :: =c2B, =c3E, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x
[ :: =c1, +C0, +G, +A, c1, -C0], λx.x
[ :: =c1, +E, +C0, +G, +A, c1, -E], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c1, +D, +C0, +G, +A, c1, -D], λx.x
[ :: =c1, +B, +E, +G, c1, -B], λx.x
[ :: =c1, +C0, +A, c1, -C0], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x




Learning Galician
Learned 999 words in Galician and structured them in 35 functions.
It took 49 samples to learn those.
Those are:
un is 1
dous is 2
tres is 3
catro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
Function deza_ maps {6,7,9} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
vinte is 20
Function vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
corenta is 40
Function corenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta e _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cen is 100
Function cento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,vinte e _,30,trinta e _,40,corenta e _,50,cincuenta e _,60,sesenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+100
Function _centos maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _centos e _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,vinte e _,30,trinta e _,40,corenta e _,50,cincuenta e _,60,sesenta e _,80,oitenta e _,_nta,_nta e _} by (x0,x1) -> 100*x0+1*x1

MG:
[oito :: c1, -B, -F], 8
[ :: =c3, cFin], λx.x
[dez :: c2, -S1], 10
[once :: c2, -S1], 11
[doce :: c2, -S1], 12
[trece :: c2, -S1], 13
[catorce :: c2, -S1], 14
[quince :: c2, -S1], 15
[deza :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -S1], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[vinte :: c2, -S1], 20
[vinte e  :: =c1, c2, -S1], λx.'1X+20'(x)
[trinta :: c2, -S1], 30
[trinta e  :: =c1, c2, -S1], λx.'1X+30'(x)
[corenta :: c2, -S1], 40
[corenta e  :: =c1, c2, -S1], λx.'1X+40'(x)
[cincuenta :: c2, -S1], 50
[cincuenta e  :: =c1, c2, -S1], λx.'1X+50'(x)
[sesenta :: c2, -S1], 60
[sesenta e  :: =c1, c2, -S1], λx.'1X+60'(x)
[oitenta :: c2, -S1], 80
[oitenta e  :: =c1, c2, -S1], λx.'1X+80'(x)
[nta :: =c1, +D, c2, -S1], λx.'10X'(x)
[nta e  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[ :: =c1, c2], λx.x
[un :: c1], 1
[dous :: c1, -F], 2
[tres :: c1, -F], 3
[catro :: c1, -F], 4
[cinco :: c1, -F], 5
[seis :: c1, -A, -F], 6
[sete :: c1, -A, -D, -F], 7
[nove :: c1, -A, -D, -F], 9
[cen :: c3], 100
[cento  :: =c2, c3], λx.'1X+100'(x)
[centos :: =c1, +F, c3], λx.'100X'(x)
[centos e  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +A, +D, +F, c1, -A], λx.x
[ :: =c1, +D, +F, c1, -D], λx.x


Learning Breton
Learned 999 words in Breton and structured them in 32 functions.
It took 48 samples to learn those.
Those are:
unan is 1
daou is 2
tri is 3
pevar is 4
pemp is 5
c’hwec’h is 6
seizh is 7
eizh is 8
nav is 9
dek is 10
unnek is 11
Function _zek maps {2,3,4} by x -> 1*x+10
pemzek is 15
c’hwezek is 16
seitek is 17
Function _wec’h maps {3} by x -> 0*x+18
naontek is 19
ugent is 20
Function _ warn-ugent maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tregont is 30
Function _ ha tregont maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
hanter-kant is 50
Function _ ha hanter-kant maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _-ugent maps {2,3,4} by x -> 20*x+0
Function _ ha _-ugent maps {1,2,3,4,5,6,7,8,9,10}x{2,3,4} by (x0,x1) -> 1*x0+20*x1
Function _ ha _ ha _-ugent maps {1,2,3,4,5,6,7,8,9}x{10}x{3,4} by (x0,x1,x2) -> 1*x0+1*x1+20*x2
kant is 100
Function kant _ maps {1,2,3,4,5,6,7,8,9,10,11,_zek,15,16,17,_wec’h,19,20,_ warn-ugent,30,_ ha tregont,50,_ ha hanter-kant,_-ugent,_ ha _-ugent,_ ha _ ha _-ugent} by x -> 1*x+100
Function _ c’hant maps {2,3,4,9} by x -> 100*x+0
Function _ c’hant _ maps {2,3,4,9}x{1,2,3,4,5,6,7,8,9,10,11,_zek,15,16,17,_wec’h,19,20,_ warn-ugent,30,_ ha tregont,50,_ ha hanter-kant,_-ugent,_ ha _-ugent,_ ha _ ha _-ugent} by (x0,x1) -> 100*x0+1*x1
Function _ kant maps {5,6,7,8} by x -> 100*x+0
Function _ kant _ maps {5,6,7,8}x{1,2,3,4,5,6,7,8,9,10,11,_zek,15,16,17,_wec’h,19,20,_ warn-ugent,30,_ ha tregont,50,_ ha hanter-kant,_-ugent,_ ha _-ugent,_ ha _ ha _-ugent} by (x0,x1) -> 100*x0+1*x1

MG:
[tri :: c1, -B, -C, -H, -F, -A], 3
[dek :: c1, -E], 10
[ :: =c3, cFin], λx.x
[unan :: c1, -C], 1
[daou :: c1, -C, -H, -A], 2
[pevar :: c1, -C, -H, -F, -A], 4
[pemp :: c1, -C, -I], 5
[c’hwec’h :: c1, -C, -I], 6
[seizh :: c1, -C, -I], 7
[eizh :: c1, -C, -I], 8
[nav :: c1, -C, -H], 9
[unnek :: c2, -S1], 11
[zek :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[pemzek :: c2, -S1], 15
[c’hwezek :: c2, -S1], 16
[seitek :: c2, -S1], 17
[wec’h :: =c1, +B, c2, -S1], λx.'0X+18'(x)
[naontek :: c2, -S1], 19
[ugent :: c2, -S1], 20
[ warn-ugent :: =c1, +C, c2, -S1], λx.'1X+20'(x)
[tregont :: c2, -S1], 30
[ ha tregont :: =c1, +C, c2, -S1], λx.'1X+30'(x)
[hanter-kant :: c2, -S1], 50
[ ha hanter-kant :: =c1, +C, c2, -S1], λx.'1X+50'(x)
[-ugent :: =c1, +A, c2, -S1], λx.'20X'(x)
[ ha  :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[-ugent :: =c1, +A, c2*], λx.'20X'(x)
[ ha  :: =c2**, =c2C, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ ha  :: =c2***, =c2*****E, c2**], λxλy.'1X+1Y'(x,y)
[-ugent :: =c1, +F, c2***], λx.'20X'(x)
[ :: =c1, c2], λx.x
[kant :: c3], 100
[kant  :: =c2, c3], λx.'1X+100'(x)
[ c’hant :: =c1, +H, c3], λx.'100X'(x)
[ c’hant  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ kant :: =c1, +I, c3], λx.'100X'(x)
[ kant  :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[-ugent :: =c1, +A, c2****], λx.'20X'(x)
[ ha  :: =c2******, =c2*****E, c2*****], λxλy.'1X+1Y'(x,y)
[ :: =c1, +E, c2*****E], λx.x
[-ugent :: =c1, +F, c2******], λx.'20X'(x)
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +H, +F, +A, c1, -H], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +B, +C, +H, +F, +A, c1, -B], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +C, +H, +F, +A, c1, -C], λx.x
[ :: =c1, +C, +H, c1, -C], λx.x
[ :: =c1, +C, +I, c1, -C], λx.x
[ :: =c1, +C, +H, +A, c1, -C], λx.x


Learning Halkomelem

Learned 999 words in Halkomelem and structured them in 39 functions.
It took 55 samples to learn those.
Those are:
nuts’a’ is 1
yuse’lu is 2
lhihw is 3
xu’athun is 4
lhq’etsus is 5
t’xum is 6
tth’a’kwus is 7
te’tsus is 8
toohw is 9
‘apun is 10
Function ‘apun ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+10
‘apun ‘i’ kw’ too:hw is 19
tskw’ush is 20
Function tskw’ush ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+20
tskw’ush ‘i’ kw’ too:hw is 29
lhuhwulhshe’ is 30
Function lhuhwulhshe’ ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+30
lhuhwulhshe’ ‘i’ kw’ too:hw is 39
xuthunlhshe’ is 40
Function xuthunlhshe’ ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+40
xuthunlhshe’ ‘i’ kw’ too:hw is 49
lhq’utssulhshe’ is 50
Function lhq’utssulhshe’ ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+50
lhq’utssulhshe’ ‘i’ kw’ too:hw is 59
tth’ukwsulhshe’ is 70
Function tth’ukwsulhshe’ ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+70
tth’ukwsulhshe’ ‘i’ kw’ too:hw is 79
te’tssulhshe’ is 80
Function te’tssulhshe’ ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+80
te’tssulhshe’ ‘i’ kw’ too:hw is 89
Function _ulhshe’ maps {6,9} by x -> 10*x+0
Function _ulhshe’ ‘i’ kw’ _ maps {6,9}x{1,2,3,4,5,6,7,8} by (x0,x1) -> 10*x0+1*x1
Function _ulhshe’ ‘i’ kw’ too:hw maps {6,9} by x -> 10*x+9
nets’uwuts is 100
Function nets’uwuts ‘i’ kw’ _ maps {1,2,3,4,5,6,7,8,10,‘apun ‘i’ kw’ _,19,20,tskw’ush ‘i’ kw’ _,29,30,lhuhwulhshe’ ‘i’ kw’ _,39,40,xuthunlhshe’ ‘i’ kw’ _,49,50,lhq’utssulhshe’ ‘i’ kw’ _,59,70,tth’ukwsulhshe’ ‘i’ kw’ _,79,80,te’tssulhshe’ ‘i’ kw’ _,89,_ulhshe’,_ulhshe’ ‘i’ kw’ _,_ulhshe’ ‘i’ kw’ too:hw} by x -> 1*x+100
nets’uwuts ‘i’ kw’ too:hw is 109
Function _ nets’uwuts maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ nets’uwuts ‘i’ kw’ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,10,‘apun ‘i’ kw’ _,19,20,tskw’ush ‘i’ kw’ _,29,30,lhuhwulhshe’ ‘i’ kw’ _,39,40,xuthunlhshe’ ‘i’ kw’ _,49,50,lhq’utssulhshe’ ‘i’ kw’ _,59,70,tth’ukwsulhshe’ ‘i’ kw’ _,79,80,te’tssulhshe’ ‘i’ kw’ _,89,_ulhshe’,_ulhshe’ ‘i’ kw’ _,_ulhshe’ ‘i’ kw’ too:hw} by (x0,x1) -> 100*x0+1*x1
Function _ nets’uwuts ‘i’ kw’ too:hw maps {2,3,4,5,6,7,8,9} by x -> 100*x+9

MG:
[ :: =c3, cFin], λx.x
[‘apun :: c2, -S1], 10
[‘apun ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[‘apun ‘i’ kw’ too:hw :: c2, -S1], 19
[tskw’ush :: c2, -S1], 20
[tskw’ush ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+20'(x)
[tskw’ush ‘i’ kw’ too:hw :: c2, -S1], 29
[lhuhwulhshe’ :: c2, -S1], 30
[lhuhwulhshe’ ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+30'(x)
[lhuhwulhshe’ ‘i’ kw’ too:hw :: c2, -S1], 39
[xuthunlhshe’ :: c2, -S1], 40
[xuthunlhshe’ ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+40'(x)
[xuthunlhshe’ ‘i’ kw’ too:hw :: c2, -S1], 49
[lhq’utssulhshe’ :: c2, -S1], 50
[lhq’utssulhshe’ ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+50'(x)
[lhq’utssulhshe’ ‘i’ kw’ too:hw :: c2, -S1], 59
[tth’ukwsulhshe’ :: c2, -S1], 70
[tth’ukwsulhshe’ ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+70'(x)
[tth’ukwsulhshe’ ‘i’ kw’ too:hw :: c2, -S1], 79
[te’tssulhshe’ :: c2, -S1], 80
[te’tssulhshe’ ‘i’ kw’  :: =c2A, c2, -S1], λx.'1X+80'(x)
[te’tssulhshe’ ‘i’ kw’ too:hw :: c2, -S1], 89
[ulhshe’ :: =c1, +B, c2, -S1], λx.'10X'(x)
[ulhshe’ ‘i’ kw’  :: =c2A, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ulhshe’ ‘i’ kw’ too:hw :: =c1, +B, c2, -S1], λx.'10X+9'(x)
[ :: =c1, +C0, c2], λx.x
[nuts’a’ :: c1, -C0, -A], 1
[yuse’lu :: c1, -C0, -A, -D], 2
[lhihw :: c1, -C0, -A, -D], 3
[xu’athun :: c1, -C0, -A, -D], 4
[lhq’etsus :: c1, -C0, -A, -D], 5
[t’xum :: c1, -C0, -B, -A, -D], 6
[tth’a’kwus :: c1, -C0, -A, -D], 7
[te’tsus :: c1, -C0, -A, -D], 8
[toohw :: c1, -B, -D], 9
[nets’uwuts :: c3], 100
[nets’uwuts ‘i’ kw’  :: =c2, c3], λx.'1X+100'(x)
[nets’uwuts ‘i’ kw’ too:hw :: c3], 109
[ nets’uwuts :: =c1, +D, c3], λx.'100X'(x)
[ nets’uwuts ‘i’ kw’  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ nets’uwuts ‘i’ kw’ too:hw :: =c1, +D, c3], λx.'100X+9'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C0, +B, +A, +D, c1, -C0], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +C0, +A, c1, -C0], λx.x
[ :: =c1, +C0, +A, +D, c1, -C0], λx.x


Learning Tsonga
Learned 999 words in Tsonga and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
n’we is 1
mbirhi is 2
nharhu is 3
mune is 4
ntlhanu is 5
ntsevu is 6
nkombo is 7
nhungu is 8
nkaye is 9
khume is 10
Function khume _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function makume _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function makume _ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
dzana is 100
Function dzana _ maps {1,2,3,4,5,6,7,8,9,10,khume _,makume _,makume _ _} by x -> 1*x+100
Function madzana _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function madzana _ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,khume _,makume _,makume _ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[khume :: c2, -S1], 10
[khume  :: =c1, c2, -S1], λx.'1X+10'(x)
[makume  :: =c2**B, c2, -S1], λx.'10X'(x)
[makume  :: =c2*, c2, -S1], λx.x
[  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[n’we :: c1], 1
[mbirhi :: c1, -B], 2
[nharhu :: c1, -B], 3
[mune :: c1, -B], 4
[ntlhanu :: c1, -B], 5
[ntsevu :: c1, -B], 6
[nkombo :: c1, -B], 7
[nhungu :: c1, -B], 8
[nkaye :: c1, -B], 9
[dzana :: c3], 100
[dzana  :: =c2, c3], λx.'1X+100'(x)
[madzana  :: =c2**B, c3], λx.'100X'(x)
[madzana  :: =c3*, c3], λx.x
[  :: =c2, =c2**B, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x




Learning Santa-Ana-Yareni-Zapotec
Learned 999 words in Santa-Ana-Yareni-Zapotec and structured them in 48 functions.
It took 186 samples to learn those.
Those are:
ttubi is 1
chupa is 2
tsunna is 3
ttapa is 4
gayu is 5
xxupa is 6
gasi is 7
xxunu is 8
jaa is 9
tsii is 10
sinea is 11
tsi’inu is 12
si’intse is 13
sitá is 14
tsinu is 15
sixupa is 16
tsini is 17
sixunu is 18
chennia is 19
galhia is 20
ttuerua is 21
chuperua is 22
tsunnerua is 23
ttaperua is 24
xxuperua is 26
Function _erua maps {5,7,8} by x -> 1*x+20
jaerua is 29
rerua is 30
rerua bixxi ttu is 31
Function rerua bixxi _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
chua is 40
chua bixxi ttu is 41
Function chua bixxi _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
tsieyona is 50
tsieyona bixxi ttu is 51
Function tsieyona bixxi _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _na maps {5} by x -> 0*x+60
Function _na bixxi ttu maps {5} by x -> 0*x+61
Function _na bixxi tsinu maps {5} by x -> 0*x+75
Function _na bixxi _ maps {5}x{2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19} by (x0,x1) -> 12*x0+1*x1
tta is 80
tta bixxi ttu is 81
Function tta bixxi _ maps {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+80
Function ttu _a maps {5} by x -> 0*x+100
Function ttu _a gayuerua maps {5} by x -> 0*x+125
Function ttu _a _ maps {5}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,_erua,29,30,31,rerua bixxi _,40,41,chua bixxi _,50,51,tsieyona bixxi _,_na,_na bixxi ttu,_na bixxi _,_na bixxi tsinu,80,81,tta bixxi _} by (x0,x1) -> 19*x0+1*x1+5
Function _ _a maps {2,3,4,5,6,7,8,9}x{5} by (x0,x1) -> 100*x0+0*x1
Function _ _a _ maps {2,3,4,5,6,7,8,9}x{5}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,_erua,29,30,31,rerua bixxi _,40,41,chua bixxi _,50,51,tsieyona bixxi _,_na,_na bixxi ttu,_na bixxi _,_na bixxi tsinu,80,81,tta bixxi _} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[gayu :: c1, -C, -E, -B, -A, -D], 5
[ :: =c3, cFin], λx.x
[chupa :: c1, -E, -B, -D], 2
[tsunna :: c1, -E, -B, -D], 3
[ttapa :: c1, -E, -B, -D], 4
[xxupa :: c1, -E, -B, -D], 6
[gasi :: c1, -E, -B, -A, -D], 7
[xxunu :: c1, -E, -B, -A, -D], 8
[jaa :: c1, -E, -B, -D], 9
[tsii :: c1, -E, -D], 10
[sinea :: c1, -E, -D], 11
[tsi’inu :: c1, -E, -D], 12
[si’intse :: c1, -E, -D], 13
[sitá :: c1, -E, -D], 14
[tsinu :: c1, -E], 15
[sixupa :: c1, -E, -D], 16
[tsini :: c1, -E, -D], 17
[sixunu :: c1, -E, -D], 18
[chennia :: c1, -E, -D], 19
[ttu  :: =c3*, c3], λx.'1X+100'(x)
[a :: =c1, +C, c3*], λx.'0X'(x)
[a gayuerua :: =c1, +C, c3**], λx.'0X'(x)
[a  :: =c2, =c2C, c3***], λxλy.'1X+19Y'(x,y)
[  :: =c3****, =c2B, c3], λxλy.'1X+100Y'(x,y)
[a :: =c1, +C, c3****], λx.'0X'(x)
[ :: =c1, c3], λx.x
[ttubi :: c1], 1
[ :: =c2, +S1, c3], λx.x
[galhia :: c2, -S1], 20
[ttuerua :: c2, -S1], 21
[chuperua :: c2, -S1], 22
[tsunnerua :: c2, -S1], 23
[ttaperua :: c2, -S1], 24
[xxuperua :: c2, -S1], 26
[erua :: =c1, +A, c2, -S1], λx.'1X+20'(x)
[jaerua :: c2, -S1], 29
[rerua :: c2, -S1], 30
[rerua bixxi ttu :: c2, -S1], 31
[rerua bixxi  :: =c2B, c2, -S1], λx.'1X+30'(x)
[ :: =c1, +B, c2B], λx.x
[chua :: c2, -S1], 40
[chua bixxi ttu :: c2, -S1], 41
[chua bixxi  :: =c2B, c2, -S1], λx.'1X+40'(x)
[tsieyona :: c2, -S1], 50
[tsieyona bixxi ttu :: c2, -S1], 51
[tsieyona bixxi  :: =c2B, c2, -S1], λx.'1X+50'(x)
[na :: =c1, +C, c2, -S1], λx.'0X+60'(x)
[na bixxi ttu :: =c1, +C, c2, -S1], λx.'0X+61'(x)
[na bixxi tsinu :: =c1, +C, c2, -S1], λx.'0X+75'(x)
[na bixxi  :: =c2D, =c2C, c2, -S1], λxλy.'1X+12Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, +D, c2D], λx.x
[tta :: c2, -S1], 80
[tta bixxi ttu :: c2, -S1], 81
[tta bixxi  :: =c2E, c2, -S1], λx.'1X+80'(x)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +E, +B, +A, +D, c1, -E], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +C, +E, +B, +A, +D, c1, -C], λx.x
[ :: =c1, +E, +B, +D, c1, -E], λx.x
[ :: =c1, +E, +D, c1, -E], λx.x


Learning Okanagan

Learned 100 words in Okanagan and structured them in 28 functions.
It took 37 samples to learn those.
Those are:
naqs is 1
ʔasíl̓ is 2
kaʔłís is 3
mus is 4
čilkst is 5
ta̓q̓m̓kst is 6
sisp̓l̓k̓ is 7
tim̓ł is 8
x̌əx̌n̓ut is 9
ʔupn̓kst is 10
Function ʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
ʔasl̓ʔúpn̓kst is 20
Function ʔasl̓ʔúpn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
kaʔłl̓ʔúpn̓kst is 30
Function kaʔłl̓ʔúpn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
msłʔupn̓kst is 40
Function msłʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
člkł̓ʔupn̓kst is 50
Function člkł̓ʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
tq̓m̓kłʔupn̓kst is 60
Function tq̓m̓kłʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
səsp̓l̓k̓̓łʔupn̓kst is 70
Function səsp̓l̓k̓̓łʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tm̓łʔupn̓kst is 80
Function tm̓łʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
x̌əx̌n̓łʔupn̓kst is 90
Function x̌əx̌n̓łʔupn̓kst uł _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
x̌čəčikst is 100

MG:
[ :: =c2, cFin], λx.x
[naqs :: c1], 1
[ʔasíl̓ :: c1], 2
[kaʔłís :: c1], 3
[mus :: c1], 4
[čilkst :: c1], 5
[ta̓q̓m̓kst :: c1], 6
[sisp̓l̓k̓ :: c1], 7
[tim̓ł :: c1], 8
[x̌əx̌n̓ut :: c1], 9
[ʔupn̓kst :: c2], 10
[ʔupn̓kst uł  :: =c1, c2], λx.'1X+10'(x)
[ʔasl̓ʔúpn̓kst :: c2], 20
[ʔasl̓ʔúpn̓kst uł  :: =c1, c2], λx.'1X+20'(x)
[kaʔłl̓ʔúpn̓kst :: c2], 30
[kaʔłl̓ʔúpn̓kst uł  :: =c1, c2], λx.'1X+30'(x)
[msłʔupn̓kst :: c2], 40
[msłʔupn̓kst uł  :: =c1, c2], λx.'1X+40'(x)
[člkł̓ʔupn̓kst :: c2], 50
[člkł̓ʔupn̓kst uł  :: =c1, c2], λx.'1X+50'(x)
[tq̓m̓kłʔupn̓kst :: c2], 60
[tq̓m̓kłʔupn̓kst uł  :: =c1, c2], λx.'1X+60'(x)
[səsp̓l̓k̓̓łʔupn̓kst :: c2], 70
[səsp̓l̓k̓̓łʔupn̓kst uł  :: =c1, c2], λx.'1X+70'(x)
[tm̓łʔupn̓kst :: c2], 80
[tm̓łʔupn̓kst uł  :: =c1, c2], λx.'1X+80'(x)
[x̌əx̌n̓łʔupn̓kst :: c2], 90
[x̌əx̌n̓łʔupn̓kst uł  :: =c1, c2], λx.'1X+90'(x)
[x̌čəčikst :: c2], 100
[ :: =c1, c2], λx.x


Learning Yao
Learned 999 words in Yao and structured them in 48 functions.
It took 75 samples to learn those.
Those are:
cimo is 1
iwili is 2
itatu is 3
ncece is 4
nsano is 5
nsano nawili is 7
Function nsano na_ maps {1,3,4} by x -> 1*x+5
likumi is 10
Function likumi kwisa _ maps {1,2,3,4,5,nsano na_} by x -> 1*x+10
Function likumi kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+17
makumi gawili is 20
Function makumi gawili kwisa _ maps {1,2,3,4,5,nsano na_} by x -> 1*x+20
Function makumi gawili kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+27
makumi gatatu is 30
Function makumi gatatu kwisa _ maps {1,2,3,4,5,nsano na_} by x -> 1*x+30
Function makumi gatatu kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+37
Function makumi _ nalimo maps {5} by x -> 0*x+60
Function makumi _ nalimo kwisa _ maps {5}x{1,2,3,4,5,nsano na_} by (x0,x1) -> 12*x0+1*x1
Function makumi _ nalimo kwisa _ na_ maps {5}x{5}x{2} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+67
Function makumi _ nagawili maps {5} by x -> 0*x+70
Function makumi _ nagawili kwisa _ maps {5}x{1,2,3,4,5,nsano na_} by (x0,x1) -> 13*x0+1*x1+5
Function makumi _ nagawili kwisa _ na_ maps {5}x{5}x{2} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+77
Function makumi _ nagatatu maps {5} by x -> 0*x+80
Function makumi _ nagatatu kwisa _ maps {5}x{1,2,3,4,5,nsano na_} by (x0,x1) -> 15*x0+1*x1+5
Function makumi _ nagatatu kwisa _ na_ maps {5}x{5}x{2} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+87
Function makumi _ maps {4,5,nsano na_} by x -> 10*x+0
Function makumi _ kwisa _ maps {4,5,nsano na_}x{1,2,3,4,5,nsano na_} by (x0,x1) -> 10*x0+1*x1
Function makumi _ kwisa _ na_ maps {4,5,nsano na_}x{5}x{2} by (x0,x1,x2) -> 10*x0+1*x1+1*x2
licila is 100
Function licila kwisa _ maps {1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by x -> 1*x+100
Function licila kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+107
macila gawili is 200
Function macila gawili kwisa _ maps {1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by x -> 1*x+200
Function macila gawili kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+207
macila gatatu is 300
Function macila gatatu kwisa _ maps {1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by x -> 1*x+300
Function macila gatatu kwisa _ na_ maps {5}x{2} by (x0,x1) -> 0*x0+0*x1+307
Function macila _ kwisa _ kwisa _ maps {5}x{1}x{1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by (x0,x1,x2) -> 111*x0+22*x1+1*x2+23
Function macila _ kwisa _ kwisa _ na_ maps {5}x{1}x{5}x{2} by (x0,x1,x2,x3) -> 0*x0+0*x1+0*x2+0*x3+607
Function macila _ kwisa gawili maps {5} by x -> 0*x+700
Function macila _ kwisa gawili kwisa _ maps {5}x{1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by (x0,x1) -> 135*x0+1*x1+25
Function macila _ kwisa gawili kwisa _ na_ maps {5}x{5}x{2} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+707
Function macila _ kwisa gatatu maps {5} by x -> 0*x+800
Function macila _ kwisa gatatu kwisa _ maps {5}x{1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by (x0,x1) -> 154*x0+1*x1+30
Function macila _ kwisa gatatu kwisa _ na_ maps {5}x{5}x{2} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+807
Function macila _ maps {4,5,nsano na_} by x -> 100*x+0
Function macila _ kwisa _ maps {4,5,nsano na_}x{1,2,3,4,5,nsano na_,10,likumi kwisa _,likumi kwisa _ na_,20,makumi gawili kwisa _,makumi gawili kwisa _ na_,30,makumi gatatu kwisa _,makumi gatatu kwisa _ na_,makumi _ nalimo,makumi _ nalimo kwisa _,makumi _ nalimo kwisa _ na_,makumi _ nagawili,makumi _ nagawili kwisa _,makumi _ nagawili kwisa _ na_,makumi _ nagatatu,makumi _ nagatatu kwisa _,makumi _ nagatatu kwisa _ na_,makumi _,makumi _ kwisa _,makumi _ kwisa _ na_} by (x0,x1) -> 100*x0+1*x1
Function macila _ kwisa _ na_ maps {4,5,nsano na_}x{5}x{2} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[cimo :: c1, -G, -A], 1
[iwili :: c1, -D], 2
[nsano :: c2, -C, -E, -B, -S2, -F1], 5
[ :: =c4, cFin], λx.x
[nsano na :: =c2A, c2, -E, -B, -S2, -F1], λx.'1X+5'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[ncece :: c1, -E0, -A], 4
[ :: =c1, c2, -B], λx.x
[itatu :: c1, -A], 3
[licila :: c4], 100
[licila kwisa  :: =c3, c4], λx.'1X+100'(x)
[licila kwisa  :: =c4*, c4], λx.'1X+107'(x)
[ na :: =c3************************************D, =c3************************************C, c4*], λxλy.'0X+0Y'(x,y)
[macila gawili :: c4], 200
[macila gawili kwisa  :: =c3, c4], λx.'1X+200'(x)
[macila gawili kwisa  :: =c4**, c4], λx.'1X+207'(x)
[ na :: =c3************************************D, =c3************************************C, c4**], λxλy.'0X+0Y'(x,y)
[macila gatatu :: c4], 300
[macila gatatu kwisa  :: =c3, c4], λx.'1X+300'(x)
[macila gatatu kwisa  :: =c4***, c4], λx.'1X+307'(x)
[ na :: =c3************************************D, =c3************************************C, c4***], λxλy.'0X+0Y'(x,y)
[macila  :: =c4****, c4], λx.'1X+23'(x)
[ kwisa  :: =c4*****, =c3************************************C, c4****], λxλy.'1X+111Y'(x,y)
[ kwisa  :: =c3, =c4*******G, c4*****], λxλy.'1X+22Y'(x,y)
[ kwisa  :: =c4*******, =c3************************************C, c4******], λxλy.'1X+0Y'(x,y)
[ kwisa  :: =c4********, =c4*******G, c4*******], λxλy.'1X+0Y'(x,y)
[ :: =c1, +G, c4*******G], λx.x
[ na :: =c3************************************D, =c3************************************C, c4********], λxλy.'0X+0Y'(x,y)
[ kwisa gawili :: =c2, +C, c4*********], λx.'0X'(x)
[ kwisa gawili kwisa  :: =c3, =c3************************************C, c4**********], λxλy.'1X+135Y'(x,y)
[ kwisa gawili kwisa  :: =c4************, =c3************************************C, c4***********], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c4************], λxλy.'0X+0Y'(x,y)
[ kwisa gatatu :: =c2, +C, c4*************], λx.'0X'(x)
[ kwisa gatatu kwisa  :: =c3, =c3************************************C, c4**************], λxλy.'1X+154Y'(x,y)
[ kwisa gatatu kwisa  :: =c4****************, =c3************************************C, c4***************], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c4****************], λxλy.'0X+0Y'(x,y)
[macila  :: =c3***********************************E, c4], λx.'100X'(x)
[macila  :: =c4*****************, c4], λx.x
[ kwisa  :: =c3, =c3***********************************E, c4*****************], λxλy.'1X+100Y'(x,y)
[ kwisa  :: =c4*******************, =c3***********************************E, c4******************], λxλy.'1X+100Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c4*******************], λxλy.'1X+1Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[likumi :: c3, -S1], 10
[likumi kwisa  :: =c3**********************************B, c3, -S1], λx.'1X+10'(x)
[likumi kwisa  :: =c3*, c3, -S1], λx.'1X+17'(x)
[ na :: =c3************************************D, =c3************************************C, c3*], λxλy.'0X+0Y'(x,y)
[makumi gawili :: c3, -S1], 20
[makumi gawili kwisa  :: =c3**********************************B, c3, -S1], λx.'1X+20'(x)
[makumi gawili kwisa  :: =c3**, c3, -S1], λx.'1X+27'(x)
[ na :: =c3************************************D, =c3************************************C, c3**], λxλy.'0X+0Y'(x,y)
[makumi gatatu :: c3, -S1], 30
[makumi gatatu kwisa  :: =c3**********************************B, c3, -S1], λx.'1X+30'(x)
[makumi gatatu kwisa  :: =c3***, c3, -S1], λx.'1X+37'(x)
[ na :: =c3************************************D, =c3************************************C, c3***], λxλy.'0X+0Y'(x,y)
[makumi  :: =c3****, c3, -S1, -S1, -S1, -S1, -S1, -S1, -S1, -S1, -S1], λx.'1X+60'(x)
[ nalimo :: =c2, +C, c3****], λx.'0X'(x)
[ nalimo kwisa  :: =c3**********************************B, =c3************************************C, c3*****], λxλy.'1X+12Y'(x,y)
[ nalimo kwisa  :: =c3*******, =c3************************************C, c3******], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3*******], λxλy.'0X+0Y'(x,y)
[ nagawili :: =c2, +C, c3********], λx.'0X'(x)
[ nagawili kwisa  :: =c3**********************************B, =c3************************************C, c3*********], λxλy.'1X+13Y'(x,y)
[ nagawili kwisa  :: =c3***********, =c3************************************C, c3**********], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3***********], λxλy.'0X+0Y'(x,y)
[ nagatatu :: =c2, +C, c3************], λx.'0X'(x)
[ nagatatu kwisa  :: =c3**********************************B, =c3************************************C, c3*************], λxλy.'1X+15Y'(x,y)
[ nagatatu kwisa  :: =c3***************, =c3************************************C, c3**************], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3***************], λxλy.'0X+0Y'(x,y)
[makumi  :: =c3***********************************E, c3, -S1], λx.'10X'(x)
[makumi  :: =c3****************, c3, -S1, -S1], λx.x
[ kwisa  :: =c3**********************************B, =c3***********************************E, c3****************], λxλy.'1X+10Y'(x,y)
[ kwisa  :: =c3******************, =c3***********************************E, c3*****************], λxλy.'1X+10Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3******************], λxλy.'1X+1Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[nsano nawili :: c2, -S2], 7
[ na :: =c3************************************D, =c3************************************C, c3*******************], λxλy.'0X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3********************], λxλy.'0X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3*********************], λxλy.'0X+0Y'(x,y)
[ nalimo :: =c2, +C, c3**********************], λx.'0X'(x)
[ nalimo kwisa  :: =c3**********************************B, =c3************************************C, c3***********************], λxλy.'1X+12Y'(x,y)
[ nalimo kwisa  :: =c3*************************, =c3************************************C, c3************************], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3*************************], λxλy.'0X+0Y'(x,y)
[ nagawili :: =c2, +C, c3**************************], λx.'0X'(x)
[ nagawili kwisa  :: =c3**********************************B, =c3************************************C, c3***************************], λxλy.'1X+13Y'(x,y)
[ nagawili kwisa  :: =c3*****************************, =c3************************************C, c3****************************], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3*****************************], λxλy.'0X+0Y'(x,y)
[ nagatatu :: =c2, +C, c3******************************], λx.'0X'(x)
[ nagatatu kwisa  :: =c3**********************************B, =c3************************************C, c3*******************************], λxλy.'1X+15Y'(x,y)
[ nagatatu kwisa  :: =c3*********************************, =c3************************************C, c3********************************], λxλy.'1X+0Y'(x,y)
[ na :: =c3************************************D, =c3************************************C, c3*********************************], λxλy.'0X+0Y'(x,y)
[ kwisa  :: =c3**********************************B, =c3***********************************E, c3**********************************], λxλy.'1X+10Y'(x,y)
[ :: =c2, +B, c3**********************************B], λx.x
[ kwisa  :: =c3************************************, =c3***********************************E, c3***********************************], λxλy.'1X+10Y'(x,y)
[ :: =c2, +E, c3***********************************E], λx.x
[ na :: =c3************************************D, =c3************************************C, c3************************************], λxλy.'1X+1Y'(x,y)
[ :: =c2, +C, c3************************************C], λx.x
[ :: =c1, +D, c3************************************D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c1, +E0, +A, c1, -E0], λx.x
[ :: =c2, +B, +S2, +F1, c2, -B], λx.x
[ :: =c3, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c2, +E, +B, +S2, +F1, c2, -E], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c2, +C, +E, +B, +S2, +F1, c2, -C], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x




Learning Swahili

Learned 999 words in Swahili and structured them in 34 functions.
It took 112 samples to learn those.
Those are:
moja is 1
mbili is 2
tatu is 3
nne is 4
tano is 5
sita is 6
saba is 7
nane is 8
tisa is 9
kumi is 10
Function kumi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
ishirini is 20
Function ishirini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
thelathini is 30
Function thelathini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
arobaini is 40
Function arobaini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
hamsini is 50
Function hamsini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sitini is 60
Function sitini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sabini is 70
Function sabini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
themanini is 80
Function themanini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
tisini is 90
Function tisini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
mia na ishirini is 120
Function mia na ishirini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
mia na hamsini is 150
Function mia na hamsini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function mia na _ maps {1,2,3,4,5,6,7,8,9,10,30,40,60,70,80,90,kumi na _,thelathini na _,arobaini na _,sitini na _,sabini na _,themanini na _,tisini na _} by x -> 1*x+100
Function mia _ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function mia _ na _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,kumi na _,20,ishirini na _,30,thelathini na _,40,arobaini na _,50,hamsini na _,60,sitini na _,70,sabini na _,80,themanini na _,90,tisini na _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[mbili :: c1, -C], 2
[tatu :: c1, -C], 3
[nne :: c1, -C], 4
[tano :: c1, -C], 5
[sita :: c1, -C], 6
[saba :: c1, -C], 7
[nane :: c1, -C], 8
[tisa :: c1, -C], 9
[kumi :: c2, -B, -D, -S1], 10
[kumi na  :: =c1, c2, -B, -D, -S1], λx.'1X+10'(x)
[thelathini :: c2, -B, -D, -S1], 30
[thelathini na  :: =c1, c2, -B, -D, -S1], λx.'1X+30'(x)
[arobaini :: c2, -B, -D, -S1], 40
[arobaini na  :: =c1, c2, -B, -D, -S1], λx.'1X+40'(x)
[sitini :: c2, -B, -D, -S1], 60
[sitini na  :: =c1, c2, -B, -D, -S1], λx.'1X+60'(x)
[sabini :: c2, -B, -D, -S1], 70
[sabini na  :: =c1, c2, -B, -D, -S1], λx.'1X+70'(x)
[themanini :: c2, -B, -D, -S1], 80
[themanini na  :: =c1, c2, -B, -D, -S1], λx.'1X+80'(x)
[tisini :: c2, -B, -D, -S1], 90
[tisini na  :: =c1, c2, -B, -D, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -B], λx.x
[moja :: c1], 1
[ishirini :: c2, -D, -S1], 20
[ishirini na  :: =c1, c2, -D, -S1], λx.'1X+20'(x)
[hamsini :: c2, -D, -S1], 50
[hamsini na  :: =c1, c2, -D, -S1], λx.'1X+50'(x)
[ :: =c1, c2, -D], λx.x
[mia na ishirini :: c3], 120
[mia na ishirini na  :: =c1, c3], λx.'1X+120'(x)
[mia na hamsini :: c3], 150
[mia na hamsini na  :: =c1, c3], λx.'1X+150'(x)
[mia na  :: =c3B, c3], λx.'1X+100'(x)
[ :: =c2, +B, c3B], λx.x
[mia  :: =c1, c3], λx.'100X'(x)
[mia  :: =c3*, c3], λx.x
[ na  :: =c3*D, =c3*C, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3*C], λx.x
[ :: =c2, +D, c3*D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +B, +D, +S1, c2, -B], λx.x


Learning Mauritian-Creole
Learned 999 words in Mauritian-Creole and structured them in 49 functions.
It took 69 samples to learn those.
Those are:
enn is 1
dé is 2
trwa is 3
kat is 4
sink is 5
sis is 6
set is 7
wit is 8
nef is 9
dis is 10
onz is 11
douz is 12
trez is 13
Function _orz maps {4} by x -> 0*x+14
kinz is 15
sez is 16
diset is 17
Function diz_ maps {8,9} by x -> 1*x+10
vin is 20
Function vint-é-_ maps {1} by x -> 0*x+21
Function v__ maps {1}x{2,3,4,5,6,7} by (x0,x1) -> 10*x0+1*x1+10
Function vint_ maps {8,9} by x -> 1*x+20
trant is 30
Function trant-é-_ maps {1} by x -> 0*x+31
Function trant_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
karannt is 40
Function karannt-é-_ maps {1} by x -> 0*x+41
Function karannt_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _ant maps {5} by x -> 0*x+50
Function _ant-é-_ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _ant_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
swasant is 60
Function swasant-é-_ maps {1} by x -> 0*x+61
Function swasant_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
swasann-dis is 70
swasanndouz is 72
Function swasann_ maps {11,13,16} by x -> 1*x+60
Function swasann_orz maps {4} by x -> 0*x+74
swasannkinz is 75
Function swasanndi_ maps {7} by x -> 0*x+77
Function swasanndiz_ maps {8,9} by x -> 1*x+70
Function _rovin maps {4} by x -> 0*x+80
Function _rovint-é-_ maps {4}x{1} by (x0,x1) -> 0*x0+0*x1+81
Function _rovin_ maps {4}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 19*x0+1*x1+4
Function _rovin-_ maps {4}x{10,11,12,13,_orz,15,16,17,diz_} by (x0,x1) -> 19*x0+1*x1+4
san is 100
Function _ san _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,_orz,15,16,17,diz_,20,vint-é-_,30,trant-é-_,trant_,40,karannt-é-_,karannt_,_ant,_ant-é-_,_ant_,60,swasant-é-_,swasant_,70,72,swasann_,swasann_orz,75,swasanndi_,swasanndiz_,_rovin,_rovint-é-_,_rovin_,_rovin-_} by (x0,x1) -> 100*x0+1*x1
Function _ san maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ san __ maps {1,2,4,5,6,7,8,9,3}x{20}x{2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[enn :: c1, -C], 1
[kat :: c1, -A, -E, -D], 4
[sink :: c1, -F, -E, -D], 5
[set :: c1, -H, -E, -D], 7
[vin :: c3, -M, -K, -S1], 20
[ :: =c4, cFin], λx.x
[dé :: c1, -E, -D], 2
[trwa :: c1, -E, -D], 3
[sis :: c1, -E, -D], 6
[wit :: c1, -E, -B], 8
[nef :: c1, -E, -B], 9
[onz :: c2, -G], 11
[trez :: c2, -G], 13
[sez :: c2, -G], 16
[vint-é- :: =c3C, c3, -K, -S1], λx.'0X+21'(x)
[ :: =c1, +C, c3C], λx.x
[trant :: c3, -K, -S1], 30
[trant-é- :: =c3C, c3, -K, -S1], λx.'0X+31'(x)
[trant :: =c3E, c3, -K, -S1], λx.'1X+30'(x)
[ :: =c1, +E, c3E], λx.x
[karannt :: c3, -K, -S1], 40
[karannt-é- :: =c3C, c3, -K, -S1], λx.'0X+41'(x)
[karannt :: =c3E, c3, -K, -S1], λx.'1X+40'(x)
[ant :: =c1, +F, c3, -K, -S1], λx.'0X+50'(x)
[ant-é- :: =c3C, =c3F, c3, -K, -S1], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +F, c3F], λx.x
[ant :: =c3E, =c3F, c3, -K, -S1], λxλy.'1X+10Y'(x,y)
[swasant :: c3, -K, -S1], 60
[swasant-é- :: =c3C, c3, -K, -S1], λx.'0X+61'(x)
[swasant :: =c3E, c3, -K, -S1], λx.'1X+60'(x)
[swasann-dis :: c3, -K, -S1], 70
[swasanndouz :: c3, -K, -S1], 72
[swasann :: =c3G, c3, -K, -S1], λx.'1X+60'(x)
[ :: =c2, +G, c3G], λx.x
[swasann :: =c3*, c3, -K, -S1], λx.'1X+74'(x)
[orz :: =c1, +A, c3*], λx.'0X'(x)
[swasannkinz :: c3, -K, -S1], 75
[swasanndi :: =c3H, c3, -K, -S1], λx.'0X+77'(x)
[ :: =c1, +H, c3H], λx.x
[swasanndiz :: =c2B, c3, -K, -S1], λx.'1X+70'(x)
[rovin :: =c1, +A, c3, -K, -S1], λx.'0X+80'(x)
[rovint-é- :: =c3C, =c3A, c3, -K, -S1], λxλy.'0X+0Y+81'(x,y)
[ :: =c1, +A, c3A], λx.x
[rovin :: =c3E, =c3A, c3, -K, -S1], λxλy.'1X+19Y+4'(x,y)
[rovin- :: =c2, =c3A, c3, -K, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, c3, -K], λx.x
[ :: =c2, c3, -K], λx.x
[dis :: c2], 10
[douz :: c2], 12
[orz :: =c1, +A, c2], λx.'0X+14'(x)
[kinz :: c2], 15
[diset :: c2], 17
[diz :: =c2B, c2], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[san :: c4], 100
[ san  :: =c4K, =c1, c4], λxλy.'1X+100Y'(x,y)
[ :: =c3, +K, c4K], λx.x
[ san :: =c1, +E, c4], λx.'100X'(x)
[ san  :: =c4*, =c1, c4], λxλy.'1X+100Y'(x,y)
[ :: =c3E, =c4*M, c4*], λxλy.'1X+1Y'(x,y)
[ :: =c3, +M, c4*M], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[v :: =c3**, c3, -S1], λx.'1X+10'(x)
[ :: =c3**D, =c3C, c3**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c3**D], λx.x
[vint :: =c2B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, c4], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +M, +K, +S1, c3, -M], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +H, +E, +D, c1, -H], λx.x
[ :: =c1, +A, +E, +D, c1, -A], λx.x
[ :: =c3, +K, +S1, c3, -K], λx.x
[ :: =c1, +E, +D, c1, -E], λx.x
[ :: =c1, +F, +E, +D, c1, -F], λx.x


Learning Estonian
Learned 999 words in Estonian and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
üks is 1
kaks is 2
kolm is 3
neli is 4
viis is 5
kuus is 6
seitse is 7
kaheksa is 8
üheksa is 9
kümme is 10
Function _teist maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kümmend maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kümmend _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sada is 100
Function sada_ maps {1,2,3,4,5,6,7,8,9,10,_teist,_kümmend,_kümmend _} by x -> 1*x+100
Function _sada maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sada_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_teist,_kümmend,_kümmend _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kümme :: c2, -S1], 10
[teist :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[kümmend :: =c1, +B, c2, -S1], λx.'10X'(x)
[kümmend  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[üks :: c1], 1
[kaks :: c1, -B], 2
[kolm :: c1, -B], 3
[neli :: c1, -B], 4
[viis :: c1, -B], 5
[kuus :: c1, -B], 6
[seitse :: c1, -B], 7
[kaheksa :: c1, -B], 8
[üheksa :: c1, -B], 9
[sada :: c3], 100
[sada :: =c2, c3], λx.'1X+100'(x)
[sada :: =c1, +B, c3], λx.'100X'(x)
[sada :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Inupiaq

Learned 100 words in Inupiaq and structured them in 23 functions.
It took 30 samples to learn those.
Those are:
atausiq is 1
malġuk is 2
piŋasut is 3
sisamat is 4
tallimat is 5
itchaksrat is 6
Function tallimat _ maps {2,3} by x -> 1*x+5
quliŋuġutaiḷaq is 9
qulit is 10
Function qulit _ maps {1,2,3} by x -> 1*x+10
akimiaġutaiḷaq is 14
akimiaq is 15
Function akimiaq _ maps {1,2,3} by x -> 1*x+15
iñuiññaŋŋutaiḷaq is 19
iñuiññaq is 20
Function iñuiññaq _ maps {1,2,3,4,5,6,tallimat _,9,10,qulit _,14,15,akimiaq _,19} by x -> 1*x+20
Function _ipiaq maps {2} by x -> 0*x+40
Function _ipiaq _ maps {2}x{1,2,3,4,5,6,tallimat _,9,10,qulit _,14,15,akimiaq _,19} by (x0,x1) -> 16*x0+1*x1+8
piŋasukipiaq is 60
Function piŋasukipiaq _ maps {1,2,3,4,5,6,tallimat _,9,10,qulit _,14,15,akimiaq _,19} by x -> 1*x+60
sisamakipiaq is 80
Function sisamakipiaq _ maps {1,2,3,4,5,6,tallimat _,9,10,qulit _,14,15,akimiaq _,19} by x -> 1*x+80
tallimakipiaq is 100

MG:
[malġuk :: c1, -D, -A], 2
[ :: =c3, cFin], λx.x
[sisamat :: c2, -S1], 4
[tallimat :: c2, -S1], 5
[itchaksrat :: c2, -S1], 6
[tallimat  :: =c2A, c2, -S1], λx.'1X+5'(x)
[ :: =c1, +A, c2A], λx.x
[quliŋuġutaiḷaq :: c2, -S1], 9
[qulit :: c2, -S1], 10
[qulit  :: =c1, c2, -S1], λx.'1X+10'(x)
[akimiaġutaiḷaq :: c2, -S1], 14
[akimiaq :: c2, -S1], 15
[akimiaq  :: =c1, c2, -S1], λx.'1X+15'(x)
[iñuiññaŋŋutaiḷaq :: c2, -S1], 19
[ :: =c1, c2], λx.x
[atausiq :: c1], 1
[piŋasut :: c1, -A], 3
[iñuiññaq :: c3], 20
[iñuiññaq  :: =c2, c3], λx.'1X+20'(x)
[ipiaq :: =c1, +D, c3], λx.'0X+40'(x)
[ipiaq  :: =c2, =c3D, c3], λxλy.'1X+16Y+8'(x,y)
[ :: =c1, +D, c3D], λx.x
[piŋasukipiaq :: c3], 60
[piŋasukipiaq  :: =c2, c3], λx.'1X+60'(x)
[sisamakipiaq :: c3], 80
[sisamakipiaq  :: =c2, c3], λx.'1X+80'(x)
[tallimakipiaq :: c3], 100
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +D, +A, c1, -D], λx.x


Learning Tsez
Learned 999 words in Tsez and structured them in 26 functions.
It took 125 samples to learn those.
Those are:
sis is 1
q’ˁano is 2
łˁono is 3
uyno is 4
łeno is 5
iłno is 6
ʕoƛno is 7
biƛno is 8
oč’č’ino is 9
oc’c’ino is 10
Function oc’c’ino _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
quno is 20
Function quno _ maps {1,2,3,4,5,6,7,8,9,10,oc’c’ino _} by x -> 1*x+20
Function _qu maps {2,3,4} by x -> 20*x+0
Function _quno _ maps {2,3,4}x{1,2,3,4,5,6,7,8,9,10,oc’c’ino _} by (x0,x1) -> 20*x0+1*x1
bišon is 100
bišomno quno is 120
Function bišomno qunono _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
Function bišomno quno _ maps {10,oc’c’ino _} by x -> 1*x+120
Function bišomno _ maps {1,2,3,4,5,6,7,8,9,10,oc’c’ino _,_qu,_quno _} by x -> 1*x+100
Function _ bišomno quno maps {2} by x -> 0*x+220
Function _ bišon maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ bišomno qunono _ maps {2,3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1+20
Function _ bišomno quno _ maps {2,3}x{10,oc’c’ino _} by (x0,x1) -> 100*x0+1*x1+20
Function _ bišomno _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,oc’c’ino _,_quno _,_qu,20,quno _} by (x0,x1) -> 100*x0+1*x1
Function _ bišomno _no _ maps {4,5,6,7,8,9}x{20}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[q’ˁano :: c1, -F, -C, -H, -G], 2
[quno :: c3, -K, -I, -S1], 20
[ :: =c4, cFin], λx.x
[qu :: =c1, +C, c3, -E, -I, -S1], λx.'20X'(x)
[quno  :: =c2, =c3C, c3, -E, -I, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3, -E], λx.x
[sis :: c1], 1
[łˁono :: c1, -C, -H, -G], 3
[uyno :: c1, -C, -J, -G], 4
[łeno :: c1, -J, -G], 5
[iłno :: c1, -J, -G], 6
[ʕoƛno :: c1, -J, -G], 7
[biƛno :: c1, -J, -G], 8
[oč’č’ino :: c1, -J, -G], 9
[ :: =c2, +E1, c3, -E], λx.x
[oc’c’ino :: c2, -E1, -I1, -D, -S2], 10
[oc’c’ino  :: =c1, c2, -E1, -I1, -D, -S2], λx.'1X+10'(x)
[ :: =c1, c2], λx.x
[quno  :: =c2, c3, -I, -S1], λx.'1X+20'(x)
[ :: =c1, c3, -I], λx.x
[ :: =c2, +I1, c3, -I], λx.x
[bišon :: c4], 100
[bišomno quno :: c4], 120
[bišomno qunono  :: =c1, c4], λx.'1X+120'(x)
[bišomno quno  :: =c4D, c4], λx.'1X+120'(x)
[ :: =c2, +D, c4D], λx.x
[bišomno  :: =c4E, c4], λx.'1X+100'(x)
[ :: =c3, +E, c4E], λx.x
[ bišomno quno :: =c1, +F, c4], λx.'0X+220'(x)
[ bišon :: =c1, +G, c4], λx.'100X'(x)
[ bišomno qunono  :: =c1, =c4H, c4], λxλy.'1X+100Y+20'(x,y)
[ :: =c1, +H, c4H], λx.x
[ bišomno quno  :: =c4D, =c4H, c4], λxλy.'1X+100Y+20'(x,y)
[ bišomno  :: =c4I, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[ :: =c3, +I, c4I], λx.x
[ bišomno  :: =c4*, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[no  :: =c1, =c4*K, c4*], λxλy.'1X+1Y'(x,y)
[ :: =c3, +K, c4*K], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c2, +E1, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I1, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +F, +C, +H, +G, c1, -F], λx.x
[ :: =c3, +E, +I, +S1, c3, -E], λx.x
[ :: =c2, +I1, +D, +S2, c2, -I1], λx.x
[ :: =c3, +K, +I, +S1, c3, -K], λx.x
[ :: =c1, +H, +G, c1, -H], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +J, +G, c1, -J], λx.x
[ :: =c3, +I, +S1, c3, -I], λx.x
[ :: =c2, +E1, +I1, +D, +S2, c2, -E1], λx.x
[ :: =c1, +C, +J, +G, c1, -C], λx.x
[ :: =c1, +C, +H, +G, c1, -C], λx.x


Learning Azerbaijani
Learned 999 words in Azerbaijani and structured them in 42 functions.
It took 56 samples to learn those.
Those are:
бир is 1
ики is 2
үч is 3
дөрд is 4
беш is 5
алты is 6
једди is 7
сәккиз is 8
доггуз is 9
он is 10
Function он _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+10
он уч is 13
ијирми is 20
Function ијирми _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+20
ијирми уч is 23
отуз is 30
Function отуз _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+30
отуз уч is 33
гырх is 40
Function гырх _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+40
гырх уч is 43
әлли is 50
Function әлли _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+50
әлли уч is 53
алтмыш is 60
Function алтмыш _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+60
алтмыш уч is 63
јетмиш is 70
Function јетмиш _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+70
јетмиш уч is 73
сәксән is 80
Function сәксән _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+80
сәксән уч is 83
дохсан is 90
Function дохсан _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+90
дохсан уч is 93
јүз is 100
Function јүз _ maps {1,2,4,5,6,7,8,9,10,он _,13,20,ијирми _,23,30,отуз _,33,40,гырх _,43,50,әлли _,53,60,алтмыш _,63,70,јетмиш _,73,80,сәксән _,83,90,дохсан _,93} by x -> 1*x+100
јүз уч is 103
Function _ јүз maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ јүз _ maps {2,3,4,5,6,7,8,9}x{1,2,4,5,6,7,8,9,10,он _,13,20,ијирми _,23,30,отуз _,33,40,гырх _,43,50,әлли _,53,60,алтмыш _,63,70,јетмиш _,73,80,сәксән _,83,90,дохсан _,93} by (x0,x1) -> 100*x0+1*x1
Function _ јүз уч maps {2,3,4,5,6,7,8,9} by x -> 100*x+3

MG:
[ :: =c3, cFin], λx.x
[ики :: c1, -C, -B0, -A], 2
[үч :: c1, -C], 3
[дөрд :: c1, -C, -B0, -A], 4
[беш :: c1, -C, -B0, -A], 5
[алты :: c1, -C, -B0, -A], 6
[једди :: c1, -C, -B0, -A], 7
[сәккиз :: c1, -C, -B0, -A], 8
[доггуз :: c1, -C, -B0, -A], 9
[он :: c2, -S1], 10
[он  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[он уч :: c2, -S1], 13
[ијирми :: c2, -S1], 20
[ијирми  :: =c2A, c2, -S1], λx.'1X+20'(x)
[ијирми уч :: c2, -S1], 23
[отуз :: c2, -S1], 30
[отуз  :: =c2A, c2, -S1], λx.'1X+30'(x)
[отуз уч :: c2, -S1], 33
[гырх :: c2, -S1], 40
[гырх  :: =c2A, c2, -S1], λx.'1X+40'(x)
[гырх уч :: c2, -S1], 43
[әлли :: c2, -S1], 50
[әлли  :: =c2A, c2, -S1], λx.'1X+50'(x)
[әлли уч :: c2, -S1], 53
[алтмыш :: c2, -S1], 60
[алтмыш  :: =c2A, c2, -S1], λx.'1X+60'(x)
[алтмыш уч :: c2, -S1], 63
[јетмиш :: c2, -S1], 70
[јетмиш  :: =c2A, c2, -S1], λx.'1X+70'(x)
[јетмиш уч :: c2, -S1], 73
[сәксән :: c2, -S1], 80
[сәксән  :: =c2A, c2, -S1], λx.'1X+80'(x)
[сәксән уч :: c2, -S1], 83
[дохсан :: c2, -S1], 90
[дохсан  :: =c2A, c2, -S1], λx.'1X+90'(x)
[дохсан уч :: c2, -S1], 93
[ :: =c1, +B0, c2], λx.x
[бир :: c1, -B0, -A], 1
[јүз :: c3], 100
[јүз  :: =c2, c3], λx.'1X+100'(x)
[јүз уч :: c3], 103
[ јүз :: =c1, +C, c3], λx.'100X'(x)
[ јүз  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ јүз уч :: =c1, +C, c3], λx.'100X+3'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B0, +A, c1, -C], λx.x
[ :: =c1, +B0, +A, c1, -B0], λx.x


Learning Lule-Sami

Learned 100 words in Lule-Sami and structured them in 18 functions.
It took 23 samples to learn those.
Those are:
akta is 1
guokta is 2
gålmmå is 3
niellja is 4
vihtta is 5
guhtta is 6
gietjav is 7
gáktsa is 8
aktse is 9
lågev is 10
Function lågenan_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
lågenanvihtta is 15
Function _låhke maps {2,3,5,6,7,8,9} by x -> 10*x+0
Function _låk_ maps {2,3,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
njielljalåhke is 40
Function njielljalåk_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+40
njielljalåkgáktsa is 48
tjuohte is 100

MG:
[ :: =c2, cFin], λx.x
[akta :: c1, -A, -D], 1
[guokta :: c1, -B, -A, -D], 2
[gålmmå :: c1, -B, -A, -D], 3
[niellja :: c1, -A, -D], 4
[vihtta :: c1, -B, -D], 5
[guhtta :: c1, -B, -A, -D], 6
[gietjav :: c1, -B, -A, -D], 7
[gáktsa :: c1, -B, -A], 8
[aktse :: c1, -B, -A, -D], 9
[lågev :: c2], 10
[lågenan :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[lågenanvihtta :: c2], 15
[låhke :: =c1, +B, c2], λx.'10X'(x)
[låk :: =c1, =c2B, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[njielljalåhke :: c2], 40
[njielljalåk :: =c2D, c2], λx.'1X+40'(x)
[ :: =c1, +D, c2D], λx.x
[njielljalåkgáktsa :: c2], 48
[tjuohte :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning English
Learned 999 words in English and structured them in 30 functions.
It took 42 samples to learn those.
Those are:
one is 1
two is 2
three is 3
four is 4
five is 5
six is 6
seven is 7
eight is 8
nine is 9
ten is 10
eleven is 11
twelve is 12
thirteen is 13
fifteen is 15
Function _teen maps {4,6,7,9} by x -> 1*x+10
Function _een maps {8} by x -> 0*x+18
twenty is 20
Function twenty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
thirty is 30
Function thirty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
forty is 40
Function forty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
fifty is 50
Function fifty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ty maps {6,7,9} by x -> 10*x+0
Function _ty-_ maps {6,7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _y maps {8} by x -> 0*x+80
Function _y-_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hundred maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundred and _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,_teen,_een,20,twenty-_,30,thirty-_,40,forty-_,50,fifty-_,_ty,_ty-_,_y,_y-_} by (x0,x1) -> 100*x0+1*x1

MG:
[eight :: c1, -B], 8
[ :: =c3, cFin], λx.x
[ten :: c2, -S1], 10
[eleven :: c2, -S1], 11
[twelve :: c2, -S1], 12
[thirteen :: c2, -S1], 13
[fifteen :: c2, -S1], 15
[teen :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[een :: =c1, +B, c2, -S1], λx.'0X+18'(x)
[twenty :: c2, -S1], 20
[twenty- :: =c1, c2, -S1], λx.'1X+20'(x)
[thirty :: c2, -S1], 30
[thirty- :: =c1, c2, -S1], λx.'1X+30'(x)
[forty :: c2, -S1], 40
[forty- :: =c1, c2, -S1], λx.'1X+40'(x)
[fifty :: c2, -S1], 50
[fifty- :: =c1, c2, -S1], λx.'1X+50'(x)
[ty :: =c1, +D, c2, -S1], λx.'10X'(x)
[ty- :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[y :: =c1, +B, c2, -S1], λx.'0X+80'(x)
[y- :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[one :: c1], 1
[two :: c1], 2
[three :: c1], 3
[four :: c1, -A], 4
[five :: c1], 5
[six :: c1, -A, -D], 6
[seven :: c1, -A, -D], 7
[nine :: c1, -A, -D], 9
[ hundred :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hundred and  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x


Learning Antillean-Creole-Of-Martinique
Learned 999 words in Antillean-Creole-Of-Martinique and structured them in 62 functions.
It took 84 samples to learn those.
Those are:
yonn is 1
dé is 2
twa is 3
kat is 4
senk is 5
sis is 6
sèt is 7
uit is 8
nèf is 9
dis is 10
wonz is 11
douz is 12
trèz is 13
Function _òz maps {4} by x -> 0*x+14
tjenz is 15
sèz is 16
disèt is 17
Function diz_ maps {8,9} by x -> 1*x+10
ven is 20
ventéen is 21
Function venn_ maps {2,3,4,5,6,7,8} by x -> 1*x+20
Function ven_ maps {9} by x -> 0*x+29
trant is 30
trantéen is 31
Function trann_ maps {2,3,4,5,6,7} by x -> 1*x+30
Function trant_ maps {8,9} by x -> 1*x+30
karant is 40
karantéen is 41
Function karann_ maps {2,3,4,5,6,7} by x -> 1*x+40
Function karant_ maps {8,9} by x -> 1*x+40
Function _ant maps {5} by x -> 0*x+50
Function _antéen maps {5} by x -> 0*x+51
Function _ann_ maps {5}x{2,3,4,5,6,7} by (x0,x1) -> 10*x0+1*x1
Function _ant_ maps {5}x{8,9} by (x0,x1) -> 10*x0+1*x1
swasant is 60
swasantéen is 61
Function swasant_ maps {8,9} by x -> 1*x+60
swasanndis is 70
swasanndouz is 72
Function swasann_ maps {2,3,4,5,6,7,11,13,16,_òz} by x -> 1*x+60
swasanntjenz is 75
swasanndisèt is 77
Function swasanndiz_ maps {8,9} by x -> 1*x+70
Function _rèven maps {4} by x -> 0*x+80
Function _rèventéen maps {4} by x -> 0*x+81
Function _rèvenn_ maps {4}x{2,3,4,5,6,7,8} by (x0,x1) -> 19*x0+1*x1+4
Function _rèven_ maps {4}x{9,10,11,12,13,_òz,15,16,17,diz_} by (x0,x1) -> 19*x0+1*x1+4
san is 100
san-en is 101
Function san_ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,ven_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_antéen,_ann_,_ant_,60,61,swasant_,70,72,swasann_,75,77,swasanndiz_,_rèven,_rèventéen,_rèvenn_,_rèven_} by x -> 1*x+100
Function _san maps {2,3,4,7,9} by x -> 100*x+0
Function _san-en maps {2,3,4,7,9} by x -> 100*x+1
Function _san_ maps {2,3,4,7,9}x{2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,ven_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_antéen,_ann_,_ant_,60,61,swasant_,70,72,swasann_,75,77,swasanndiz_,_rèven,_rèventéen,_rèvenn_,_rèven_} by (x0,x1) -> 100*x0+1*x1
sensan is 500
sensan-en is 501
Function sensan_ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,ven_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_antéen,_ann_,_ant_,60,61,swasant_,70,72,swasann_,75,77,swasanndiz_,_rèven,_rèventéen,_rèvenn_,_rèven_} by x -> 1*x+500
Function _an maps {6} by x -> 0*x+600
Function _an-en maps {6} by x -> 0*x+601
Function _an_ maps {6}x{2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,ven_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_antéen,_ann_,_ant_,60,61,swasant_,70,72,swasann_,75,77,swasanndiz_,_rèven,_rèventéen,_rèvenn_,_rèven_} by (x0,x1) -> 97*x0+1*x1+18
uisan is 800
uisan-en is 801
Function uisan_ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,ven_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_antéen,_ann_,_ant_,60,61,swasant_,70,72,swasann_,75,77,swasanndiz_,_rèven,_rèventéen,_rèvenn_,_rèven_} by x -> 1*x+800

MG:
[kat :: c1, -A, -E, -C, -J, -G0, -I0], 4
[senk :: c1, -F, -E, -C, -G0, -I0], 5
[sis :: c1, -K, -E, -C, -G0, -I0], 6
[nèf :: c1, -D, -J, -H0, -B, -I0], 9
[ :: =c4, cFin], λx.x
[dé :: c1, -E, -C, -J, -G0, -I0], 2
[twa :: c1, -E, -C, -J, -G0, -I0], 3
[sèt :: c1, -E, -C, -J, -G0, -I0], 7
[uit :: c1, -C, -B, -I0], 8
[dis :: c2, -I1, -S2], 10
[wonz :: c2, -G, -I1, -S2], 11
[douz :: c2, -I1, -S2], 12
[trèz :: c2, -G, -I1, -S2], 13
[òz :: =c1, +A, c2, -G, -I1, -S2], λx.'0X+14'(x)
[tjenz :: c2, -I1, -S2], 15
[sèz :: c2, -G, -I1, -S2], 16
[disèt :: c2, -I1, -S2], 17
[diz :: =c2B, c2, -I1, -S2], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +H0, c2], λx.x
[ :: =c1, +G0, c2, -G], λx.x
[ven :: c3, -S1], 20
[ventéen :: c3, -S1], 21
[venn :: =c3C, c3, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[ven :: =c3D, c3, -S1], λx.'0X+29'(x)
[ :: =c1, +D, c3D], λx.x
[trant :: c3, -S1], 30
[trantéen :: c3, -S1], 31
[trann :: =c3E, c3, -S1], λx.'1X+30'(x)
[ :: =c1, +E, c3E], λx.x
[trant :: =c2B, c3, -S1], λx.'1X+30'(x)
[karant :: c3, -S1], 40
[karantéen :: c3, -S1], 41
[karann :: =c3E, c3, -S1], λx.'1X+40'(x)
[karant :: =c2B, c3, -S1], λx.'1X+40'(x)
[ant :: =c1, +F, c3, -S1], λx.'0X+50'(x)
[antéen :: =c1, +F, c3, -S1], λx.'0X+51'(x)
[ann :: =c3E, =c3F, c3, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ant :: =c2B, =c3F, c3, -S1], λxλy.'1X+10Y'(x,y)
[swasant :: c3, -S1], 60
[swasantéen :: c3, -S1], 61
[swasant :: =c2B, c3, -S1], λx.'1X+60'(x)
[swasanndis :: c3, -S1], 70
[swasanndouz :: c3, -S1], 72
[swasann :: =c3G, c3, -S1], λx.'1X+60'(x)
[ :: =c2, +G, c3G], λx.x
[swasanntjenz :: c3, -S1], 75
[swasanndisèt :: c3, -S1], 77
[swasanndiz :: =c2B, c3, -S1], λx.'1X+70'(x)
[rèven :: =c1, +A, c3, -S1], λx.'0X+80'(x)
[rèventéen :: =c1, +A, c3, -S1], λx.'0X+81'(x)
[rèvenn :: =c3C, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +A, c3A], λx.x
[rèven :: =c2, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +I0, c3], λx.x
[ :: =c2, +I1, c3], λx.x
[san :: c4], 100
[san-en :: c4], 101
[san :: =c3, c4], λx.'1X+100'(x)
[san :: =c1, +J, c4], λx.'100X'(x)
[san-en :: =c1, +J, c4], λx.'100X+1'(x)
[san :: =c3, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[sensan :: c4], 500
[sensan-en :: c4], 501
[sensan :: =c3, c4], λx.'1X+500'(x)
[an :: =c1, +K, c4], λx.'0X+600'(x)
[an-en :: =c1, +K, c4], λx.'0X+601'(x)
[an :: =c3, =c4K, c4], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, +K, c4K], λx.x
[uisan :: c4], 800
[uisan-en :: c4], 801
[uisan :: =c3, c4], λx.'1X+800'(x)
[ :: =c1, c4], λx.x
[yonn :: c1], 1
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +I1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, +G0, +I0, c1, -E], λx.x
[ :: =c2, +I1, +S2, c2, -I1], λx.x
[ :: =c1, +B, +I0, c1, -B], λx.x
[ :: =c1, +E, +C, +J, +G0, +I0, c1, -E], λx.x
[ :: =c1, +C, +B, +I0, c1, -C], λx.x
[ :: =c1, +C, +G0, +I0, c1, -C], λx.x
[ :: =c2, +G, +I1, +S2, c2, -G], λx.x
[ :: =c1, +J, +H0, +B, +I0, c1, -J], λx.x
[ :: =c1, +A, +E, +C, +J, +G0, +I0, c1, -A], λx.x
[ :: =c1, +H0, +B, +I0, c1, -H0], λx.x
[ :: =c1, +G0, +I0, c1, -G0], λx.x
[ :: =c1, +J, +G0, +I0, c1, -J], λx.x
[ :: =c1, +F, +E, +C, +G0, +I0, c1, -F], λx.x
[ :: =c1, +C, +J, +G0, +I0, c1, -C], λx.x
[ :: =c1, +K, +E, +C, +G0, +I0, c1, -K], λx.x
[ :: =c1, +D, +J, +H0, +B, +I0, c1, -D], λx.x


Learning Amharic

Learned 999 words in Amharic and structured them in 32 functions.
It took 45 samples to learn those.
Those are:
አንድ is 1
ሁለት is 2
ሶስት is 3
አራት is 4
አምስት is 5
ስድስት is 6
ሰባት is 7
ስምንት is 8
ዘጠኝ is 9
አስር is 10
Function አስራ _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
አስራ አምስት is 15
ሃያ is 20
Function ሃያ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
ሰላሳ is 30
Function ሰላሳ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
አርባ is 40
Function አርባ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ኃምሳ is 50
Function ኃምሳ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
ስልሳ is 60
Function ስልሳ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
ሰባ is 70
Function ሰባ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ሰማንያ is 80
Function ሰማንያ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
ዘጠና is 90
Function ዘጠና _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
መቶ is 100
Function መቶ _ maps {1,2,3,4,5,6,7,8,9,10,አስራ _,15,20,ሃያ _,30,ሰላሳ _,40,አርባ _,50,ኃምሳ _,60,ስልሳ _,70,ሰባ _,80,ሰማንያ _,90,ዘጠና _} by x -> 1*x+100
Function _ መቶ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ መቶ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,አስራ _,15,20,ሃያ _,30,ሰላሳ _,40,አርባ _,50,ኃምሳ _,60,ስልሳ _,70,ሰባ _,80,ሰማንያ _,90,ዘጠና _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[አስር :: c2, -S1], 10
[አስራ  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[አስራ አምስት :: c2, -S1], 15
[ሃያ :: c2, -S1], 20
[ሃያ  :: =c1, c2, -S1], λx.'1X+20'(x)
[ሰላሳ :: c2, -S1], 30
[ሰላሳ  :: =c1, c2, -S1], λx.'1X+30'(x)
[አርባ :: c2, -S1], 40
[አርባ  :: =c1, c2, -S1], λx.'1X+40'(x)
[ኃምሳ :: c2, -S1], 50
[ኃምሳ  :: =c1, c2, -S1], λx.'1X+50'(x)
[ስልሳ :: c2, -S1], 60
[ስልሳ  :: =c1, c2, -S1], λx.'1X+60'(x)
[ሰባ :: c2, -S1], 70
[ሰባ  :: =c1, c2, -S1], λx.'1X+70'(x)
[ሰማንያ :: c2, -S1], 80
[ሰማንያ  :: =c1, c2, -S1], λx.'1X+80'(x)
[ዘጠና :: c2, -S1], 90
[ዘጠና  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[አንድ :: c1, -A], 1
[ሁለት :: c1, -A, -D], 2
[ሶስት :: c1, -A, -D], 3
[አራት :: c1, -A, -D], 4
[አምስት :: c1, -D], 5
[ስድስት :: c1, -A, -D], 6
[ሰባት :: c1, -A, -D], 7
[ስምንት :: c1, -A, -D], 8
[ዘጠኝ :: c1, -A, -D], 9
[መቶ :: c3], 100
[መቶ  :: =c2, c3], λx.'1X+100'(x)
[ መቶ :: =c1, +D, c3], λx.'100X'(x)
[ መቶ  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x


Learning Guarani
Learned 999 words in Guarani and structured them in 21 functions.
It took 29 samples to learn those.
Those are:
peteĩ is 1
mokõi is 2
mbohapy is 3
irundy is 4
po is 5
poteĩ is 6
pokõi is 7
poapy is 8
porundy is 9
pa is 10
pateĩ is 11
pakõi is 12
paapy is 13
parundy is 14
Function pa_ maps {5,6,7,8,9} by x -> 1*x+10
Function _pa maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _pa _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sa is 100
Function sa _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,pa_,_pa,_pa _} by x -> 1*x+100
Function _sa maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sa _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,pa_,_pa,_pa _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[peteĩ :: c1], 1
[mokõi :: c1, -B], 2
[mbohapy :: c1, -B], 3
[irundy :: c1, -B], 4
[po :: c1, -B, -A], 5
[poteĩ :: c1, -B, -A], 6
[pokõi :: c1, -B, -A], 7
[poapy :: c1, -B, -A], 8
[porundy :: c1, -B, -A], 9
[pa :: c2, -S1], 10
[pateĩ :: c2, -S1], 11
[pakõi :: c2, -S1], 12
[paapy :: c2, -S1], 13
[parundy :: c2, -S1], 14
[pa :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[pa :: =c1, +B, c2, -S1], λx.'10X'(x)
[pa  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[sa :: c3], 100
[sa  :: =c2, c3], λx.'1X+100'(x)
[sa :: =c1, +B, c3], λx.'100X'(x)
[sa  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Dzambazi-Romani
Learned 999 words in Dzambazi-Romani and structured them in 35 functions.
It took 56 samples to learn those.
Those are:
jekh is 1
duj is 2
trin is 3
štar is 4
pandž is 5
šov is 6
efta is 7
oxto is 8
iňa is 9
deš is 10
Function dešu_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
biš is 20
Function bištha_ maps {1,2,3,4,5,6,9} by x -> 1*x+20
Function bišthaj_ maps {7,8} by x -> 1*x+20
tranda is 30
Function trandatha_ maps {1,2,3,4,5,6} by x -> 1*x+30
Function trandathaj_ maps {7,8,9} by x -> 1*x+30
saranda is 40
Function sarandatha_ maps {1,2,3,4,5,6} by x -> 1*x+40
Function sarandathaj_ maps {7,8,9} by x -> 1*x+40
pinda is 50
Function pindatha_ maps {1,2,3,4,5,6} by x -> 1*x+50
Function pindathaj_ maps {7,8,9} by x -> 1*x+50
Function _ardeš maps {6} by x -> 0*x+60
Function _ardeštha_ maps {6}x{1,2,3,4,5,6} by (x0,x1) -> 10*x0+1*x1
Function _ardešthaj_ maps {6}x{7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _vardeš maps {7,8,9} by x -> 10*x+0
Function _vardeštha_ maps {7,8,9}x{1,2,3,4,5,6} by (x0,x1) -> 10*x0+1*x1
Function _vardešthaj_ maps {7,8,9}x{7,8,9} by (x0,x1) -> 10*x0+1*x1
šel is 100
Function šel _ maps {1,2,3,4,5,6,7,8,9,10,dešu_,20,bištha_,bišthaj_,30,trandatha_,trandathaj_,40,sarandatha_,sarandathaj_,50,pindatha_,pindathaj_,_ardeš,_ardeštha_,_ardešthaj_,_vardeš,_vardeštha_,_vardešthaj_} by x -> 1*x+100
Function _ šel maps {2,3,4,6,7,8,9} by x -> 100*x+0
Function _ šel _ maps {2,3,4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,dešu_,20,bištha_,bišthaj_,30,trandatha_,trandathaj_,40,sarandatha_,sarandathaj_,50,pindatha_,pindathaj_,_ardeš,_ardeštha_,_ardešthaj_,_vardeš,_vardeštha_,_vardešthaj_} by (x0,x1) -> 100*x0+1*x1
panšel is 500
Function panšel _ maps {1,2,3,4,5,6,7,8,9,10,dešu_,20,bištha_,bišthaj_,30,trandatha_,trandathaj_,40,sarandatha_,sarandathaj_,50,pindatha_,pindathaj_,_ardeš,_ardeštha_,_ardešthaj_,_vardeš,_vardeštha_,_vardešthaj_} by x -> 1*x+500

MG:
[šov :: c1, -F, -H, -B, -D], 6
[ :: =c3, cFin], λx.x
[efta :: c1, -E, -C, -H], 7
[oxto :: c1, -E, -C, -H], 8
[iňa :: c1, -E, -H, -B], 9
[duj :: c1, -H, -B, -D], 2
[trin :: c1, -H, -B, -D], 3
[štar :: c1, -H, -B, -D], 4
[deš :: c2, -S1], 10
[dešu :: =c1, c2, -S1], λx.'1X+10'(x)
[biš :: c2, -S1], 20
[bištha :: =c2B, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[bišthaj :: =c2C, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[tranda :: c2, -S1], 30
[trandatha :: =c2D, c2, -S1], λx.'1X+30'(x)
[ :: =c1, +D, c2D], λx.x
[trandathaj :: =c2E, c2, -S1], λx.'1X+30'(x)
[ :: =c1, +E, c2E], λx.x
[saranda :: c2, -S1], 40
[sarandatha :: =c2D, c2, -S1], λx.'1X+40'(x)
[sarandathaj :: =c2E, c2, -S1], λx.'1X+40'(x)
[pinda :: c2, -S1], 50
[pindatha :: =c2D, c2, -S1], λx.'1X+50'(x)
[pindathaj :: =c2E, c2, -S1], λx.'1X+50'(x)
[ardeš :: =c1, +F, c2, -S1], λx.'0X+60'(x)
[ardeštha :: =c2D, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[ardešthaj :: =c2E, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[vardeš :: =c1, +E, c2, -S1], λx.'10X'(x)
[vardeštha :: =c2D, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[vardešthaj :: =c2E, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[jekh :: c1, -B, -D], 1
[pandž :: c1, -B, -D], 5
[šel :: c3], 100
[šel  :: =c2, c3], λx.'1X+100'(x)
[ šel :: =c1, +H, c3], λx.'100X'(x)
[ šel  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[panšel :: c3], 500
[panšel  :: =c2, c3], λx.'1X+500'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c1, +H, +B, +D, c1, -H], λx.x
[ :: =c1, +E, +H, +B, c1, -E], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +C, +H, c1, -C], λx.x
[ :: =c1, +E, +C, +H, c1, -E], λx.x
[ :: =c1, +F, +H, +B, +D, c1, -F], λx.x


Learning Michif
Learned 100 words in Michif and structured them in 34 functions.
It took 44 samples to learn those.
Those are:
aeñ is 1
deu is 2
trwá is 3
kátr is 4
Function s_k maps {1} by x -> 0*x+5
sis is 6
set is 7
wit is 8
naef is 9
jis is 10
óñz is 11
dóz is 12
trayz is 13
katorz is 14
Function k_z maps {1} by x -> 0*x+15
Function s_z maps {1} by x -> 0*x+16
Function jis _ maps {7,8,9} by x -> 1*x+10
Function v_ maps {1} by x -> 0*x+20
Function v_ _ maps {1}x{1,2,3,4,s_k,6,7,8,9} by (x0,x1) -> 10*x0+1*x1+10
tráñt is 30
Function tráñt _ maps {1,2,3,4,s_k,6,7,8,9} by x -> 1*x+30
karánt is 40
Function karánt _ maps {1,2,3,4,s_k,6,7,8,9} by x -> 1*x+40
Function _ánt maps {s_k} by x -> 0*x+50
Function _ánt _ maps {s_k}x{1,2,3,4,s_k,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
swesáñt is 60
Function swesáñt _ maps {1,2,3,4,s_k,6,7,8,9} by x -> 1*x+60
Function swesáñty _ _ maps {10}x{1,2,3,4,s_k,6} by (x0,x1) -> 7*x0+1*x1
Function swesáñty _ maps {10,jis _} by x -> 1*x+60
Function katáv_ maps {1} by x -> 0*x+80
Function katáv_ _ maps {1}x{1,2,3,4,s_k,6,7,8,9} by (x0,x1) -> 40*x0+1*x1+40
katrávaen jis is 90
Function katrávaen jis _ maps {1,2,3,4,s_k,6,7,8,9} by x -> 1*x+90
sáñ is 100

MG:
[aeñ :: c1], 1
[s :: =c2*, c2, -D, -S2, -F], λx.'1X+5'(x)
[k :: =cnix, =c1, c2*], λxλy.'1X+0Y'(x,y)
[ :: cnix], 0
[jis :: c3, -E, -G], 10
[ :: =c4, cFin], λx.x
[deu :: c2, -S2, -F], 2
[trwá :: c2, -S2, -F], 3
[kátr :: c2, -S2, -F], 4
[sis :: c2, -S2, -F], 6
[set :: c2, -B, -S2], 7
[wit :: c2, -B, -S2], 8
[naef :: c2, -B, -S2], 9
[ :: =c1, c2], λx.x
[jis  :: =c3B, c3, -G], λx.'1X+10'(x)
[ :: =c2, +B, c3B], λx.x
[v :: =c1, c4], λx.'0X+20'(x)
[  :: =c2, =c1, c4*], λxλy.'1X+10Y'(x,y)
[tráñt :: c4], 30
[tráñt  :: =c2, c4], λx.'1X+30'(x)
[karánt :: c4], 40
[karánt  :: =c2, c4], λx.'1X+40'(x)
[ánt :: =c2, +D, c4], λx.'0X+50'(x)
[ánt  :: =c2, =c4D, c4], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c4D], λx.x
[swesáñt :: c4], 60
[swesáñt  :: =c2, c4], λx.'1X+60'(x)
[swesáñty  :: =c4**, c4], λx.x
[  :: =c4**F, =c4**E, c4**], λxλy.'1X+7Y'(x,y)
[ :: =c3, +E, c4**E], λx.x
[ :: =c2, +F, c4**F], λx.x
[swesáñty  :: =c4G, c4], λx.'1X+60'(x)
[ :: =c3, +G, c4G], λx.x
[katáv :: =c1, c4], λx.'0X+80'(x)
[katrávaen jis :: c4], 90
[katrávaen jis  :: =c2, c4], λx.'1X+90'(x)
[sáñ :: c4], 100
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[óñz :: c3], 11
[dóz :: c3], 12
[trayz :: c3], 13
[katorz :: c3], 14
[k :: =c3*, c3], λx.'1X+15'(x)
[z :: =cnix, =c1, c3*], λxλy.'1X+0Y'(x,y)
[s :: =c3**, c3], λx.'1X+16'(x)
[z :: =cnix, =c1, c3**], λxλy.'1X+0Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +G, c3], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +B, +S2, c2, -B], λx.x
[ :: =c2, +D, +S2, +F, c2, -D], λx.x
[ :: =c3, +E, +G, c3, -E], λx.x




Learning Skolt-Sami

Learned 999 words in Skolt-Sami and structured them in 42 functions.
It took 56 samples to learn those.
Those are:
õhtt is 1
kue’htt is 2
koumm is 3
nellj is 4
viit is 5
kutt is 6
čiččâm is 7
kääu’c is 8
ååu’c is 9
lååi is 10
õtmlo is 11
kuâtmlo is 12
konmlo is 13
nenjmlo is 14
vitmlo is 15
kutmlo is 16
činmlo is 17
käcmlo is 18
åcmlo is 19
kuâhttlo is 20
kuåtlõkkuå’t is 22
Function kuåtlõk_ maps {1,3,4,5,6,7} by x -> 1*x+20
kuåtlõkkää’hhc is 28
kuåtlõkåå’hhc is 29
Function _lc maps {3} by x -> 0*x+30
Function _lc_ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
vittlo is 50
Function vittlo_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _lo maps {4,6} by x -> 10*x+0
Function _lo_ maps {4,6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
čičmlo is 70
Function čičmlo_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
kä’hcclo is 80
Function kä’hcclo_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
å’hcclo is 90
Function å’hcclo_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
čua’tt is 100
Function čua’tt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,kuåtlõk_,28,29,_lc,_lc_,50,vittlo_,_lo,_lo_,70,čičmlo_,80,kä’hcclo_,90,å’hcclo_} by x -> 1*x+100
kuåhht čua’tt is 200
Function kuåhht čua’tt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,kuåtlõk_,28,29,_lc,_lc_,50,vittlo_,_lo,_lo_,70,čičmlo_,80,kä’hcclo_,90,å’hcclo_} by x -> 1*x+200
Function _ čua’tt maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ čua’tt _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,kuåtlõk_,28,29,_lc,_lc_,50,vittlo_,_lo,_lo_,70,čičmlo_,80,kä’hcclo_,90,å’hcclo_} by (x0,x1) -> 100*x0+1*x1

MG:
[koumm :: c1, -B, -F, -A], 3
[ :: =c3, cFin], λx.x
[lååi :: c2, -S1], 10
[õtmlo :: c2, -S1], 11
[kuâtmlo :: c2, -S1], 12
[konmlo :: c2, -S1], 13
[nenjmlo :: c2, -S1], 14
[vitmlo :: c2, -S1], 15
[kutmlo :: c2, -S1], 16
[činmlo :: c2, -S1], 17
[käcmlo :: c2, -S1], 18
[åcmlo :: c2, -S1], 19
[kuâhttlo :: c2, -S1], 20
[kuåtlõkkuå’t :: c2, -S1], 22
[kuåtlõk :: =c2A, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +A, c2A], λx.x
[kuåtlõkkää’hhc :: c2, -S1], 28
[kuåtlõkåå’hhc :: c2, -S1], 29
[lc :: =c1, +B, c2, -S1], λx.'0X+30'(x)
[lc :: =c1, =c2B, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +B, c2B], λx.x
[vittlo :: c2, -S1], 50
[vittlo :: =c1, c2, -S1], λx.'1X+50'(x)
[lo :: =c1, +D, c2, -S1], λx.'10X'(x)
[lo :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[čičmlo :: c2, -S1], 70
[čičmlo :: =c1, c2, -S1], λx.'1X+70'(x)
[kä’hcclo :: c2, -S1], 80
[kä’hcclo :: =c1, c2, -S1], λx.'1X+80'(x)
[å’hcclo :: c2, -S1], 90
[å’hcclo :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[õhtt :: c1, -A], 1
[kue’htt :: c1], 2
[nellj :: c1, -F, -A, -D], 4
[viit :: c1, -F, -A], 5
[kutt :: c1, -F, -A, -D], 6
[čiččâm :: c1, -F, -A], 7
[kääu’c :: c1, -F], 8
[ååu’c :: c1, -F], 9
[čua’tt :: c3], 100
[čua’tt  :: =c2, c3], λx.'1X+100'(x)
[kuåhht čua’tt :: c3], 200
[kuåhht čua’tt  :: =c2, c3], λx.'1X+200'(x)
[ čua’tt :: =c1, +F, c3], λx.'100X'(x)
[ čua’tt  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +F, +A, +D, c1, -F], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x


Learning Lithuanian
Learned 999 words in Lithuanian and structured them in 24 functions.
It took 34 samples to learn those.
Those are:
vienas is 1
du is 2
trys is 3
keturi is 4
penki is 5
šeši is 6
septyni is 7
aštuoni is 8
devyni is 9
dešimt is 10
vienuolika is 11
dvylika is 12
trylika is 13
Function _olika maps {4,5,6,7,8,9} by x -> 1*x+10
dvidešimt is 20
Function dvidešimt _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trisdešimt is 30
Function trisdešimt _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _asdešimt maps {4,5,6,7,8,9} by x -> 10*x+0
Function _asdešimt _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
šimtas is 100
Function šimtas _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_olika,20,dvidešimt _,30,trisdešimt _,_asdešimt,_asdešimt _} by x -> 1*x+100
Function _ šimtai maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ šimtai _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,_olika,20,dvidešimt _,30,trisdešimt _,_asdešimt,_asdešimt _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[dešimt :: c2, -S1], 10
[vienuolika :: c2, -S1], 11
[dvylika :: c2, -S1], 12
[trylika :: c2, -S1], 13
[olika :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[dvidešimt :: c2, -S1], 20
[dvidešimt  :: =c1, c2, -S1], λx.'1X+20'(x)
[trisdešimt :: c2, -S1], 30
[trisdešimt  :: =c1, c2, -S1], λx.'1X+30'(x)
[asdešimt :: =c1, +A, c2, -S1], λx.'10X'(x)
[asdešimt  :: =c1, =c2A, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, c2], λx.x
[vienas :: c1], 1
[du :: c1, -D], 2
[trys :: c1, -D], 3
[keturi :: c1, -A, -D], 4
[penki :: c1, -A, -D], 5
[šeši :: c1, -A, -D], 6
[septyni :: c1, -A, -D], 7
[aštuoni :: c1, -A, -D], 8
[devyni :: c1, -A, -D], 9
[šimtas :: c3], 100
[šimtas  :: =c2, c3], λx.'1X+100'(x)
[ šimtai :: =c1, +D, c3], λx.'100X'(x)
[ šimtai  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x


Learning Swedish
Learned 999 words in Swedish and structured them in 43 functions.
It took 65 samples to learn those.
Those are:
en is 1
två is 2
tre is 3
fyra is 4
fem is 5
sex is 6
sju is 7
åtta is 8
nio is 9
tio is 10
elva is 11
tolv is 12
fjorton is 14
Function _ton maps {5,6} by x -> 1*x+10
Function _tton maps {3,7} by x -> 1*x+10
arton is 18
nitton is 19
tjugo is 20
tjugoett is 21
Function tjugo_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
fyrtio is 40
fyrtioett is 41
Function fyrtio_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _tio maps {5,6} by x -> 10*x+0
Function _tioett maps {5,6} by x -> 10*x+1
Function _tio_ maps {5,6}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ttio maps {3,7} by x -> 10*x+0
Function _ttioett maps {3,7} by x -> 10*x+1
Function _ttio_ maps {3,7}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
åttio is 80
åttioett is 81
Function åttio_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
nittio is 90
nittioett is 91
Function nittio_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
hundra is 100
etthundraett is 101
Function etthundra_ maps {2,3,4,5,6,7,8,9,10,_ton,_tton,20,21,tjugo_,40,41,fyrtio_,_tio,_tioett,_tio_,_ttio,_ttioett,_ttio_,80,81,åttio_,90,91,nittio_} by x -> 1*x+100
Function etthundra _ maps {11,12,14,18,19} by x -> 1*x+100
Function _hundra maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hundraett maps {2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _hundra_ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,_ton,_tton,20,21,tjugo_,40,41,fyrtio_,_tio,_tioett,_tio_,_ttio,_ttioett,_ttio_,80,81,åttio_,90,91,nittio_} by (x0,x1) -> 100*x0+1*x1
Function _hundra _ maps {2,3,4,5,6,7,8,9}x{11,12,14,18,19} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[elva :: c2, -E, -S1], 11
[tolv :: c2, -E, -S1], 12
[fjorton :: c2, -E, -S1], 14
[arton :: c2, -E, -S1], 18
[nitton :: c2, -E, -S1], 19
[två :: c1, -C, -D0], 2
[tre :: c1, -C, -B, -D0], 3
[fyra :: c1, -C, -D0], 4
[fem :: c1, -C, -A, -D0], 5
[sex :: c1, -C, -A, -D0], 6
[sju :: c1, -C, -B, -D0], 7
[åtta :: c1, -C, -D0], 8
[nio :: c1, -C, -D0], 9
[tio :: c2, -D, -S1], 10
[ton :: =c1, +A, c2, -D, -S1], λx.'1X+10'(x)
[tton :: =c1, +B, c2, -D, -S1], λx.'1X+10'(x)
[tjugo :: c2, -D, -S1], 20
[tjugoett :: c2, -D, -S1], 21
[tjugo :: =c2C, c2, -D, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[fyrtio :: c2, -D, -S1], 40
[fyrtioett :: c2, -D, -S1], 41
[fyrtio :: =c2C, c2, -D, -S1], λx.'1X+40'(x)
[tio :: =c1, +A, c2, -D, -S1], λx.'10X'(x)
[tioett :: =c1, +A, c2, -D, -S1], λx.'10X+1'(x)
[tio :: =c2C, =c2A, c2, -D, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[ttio :: =c1, +B, c2, -D, -S1], λx.'10X'(x)
[ttioett :: =c1, +B, c2, -D, -S1], λx.'10X+1'(x)
[ttio :: =c2C, =c2B, c2, -D, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[åttio :: c2, -D, -S1], 80
[åttioett :: c2, -D, -S1], 81
[åttio :: =c2C, c2, -D, -S1], λx.'1X+80'(x)
[nittio :: c2, -D, -S1], 90
[nittioett :: c2, -D, -S1], 91
[nittio :: =c2C, c2, -D, -S1], λx.'1X+90'(x)
[ :: =c1, +D0, c2, -D], λx.x
[hundra :: c3], 100
[etthundraett :: c3], 101
[etthundra :: =c3D, c3], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[etthundra  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[hundra :: =c1, +C, c3], λx.'100X'(x)
[hundraett :: =c1, +C, c3], λx.'100X+1'(x)
[hundra :: =c3D, =c2C, c3], λxλy.'1X+100Y'(x,y)
[hundra  :: =c3E, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[en :: c1], 1
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +D0, c1, -A], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +C, +D0, c1, -C], λx.x
[ :: =c1, +C, +B, +D0, c1, -C], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c1, +C, +A, +D0, c1, -C], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x


Learning Persian

Not related to _sad
LEARNING ERROR: sheshsad chahârdah is 614 but learner assumes 617
LEARNING ERROR: sheshsad bist o yek is 621 but learner assumes 624
LEARNING ERROR: sheshsad bist o seh is 623 but learner assumes 626
LEARNING ERROR: sheshsad si o yek is 631 but learner assumes 634
LEARNING ERROR: sheshsad si o seh is 633 but learner assumes 636
LEARNING ERROR: sheshsad chehel o yek is 641 but learner assumes 644
LEARNING ERROR: sheshsad chehel o seh is 643 but learner assumes 646
LEARNING ERROR: sheshsad panjâh is 650 but learner assumes 653
LEARNING ERROR: sheshsad panjâh o yek is 651 but learner assumes 654
LEARNING ERROR: sheshsad panjâh o seh is 653 but learner assumes 656
LEARNING ERROR: sheshsad shast o yek is 661 but learner assumes 664
LEARNING ERROR: sheshsad shast o seh is 663 but learner assumes 666
LEARNING ERROR: sheshsad haftâd is 670 but learner assumes 673
LEARNING ERROR: sheshsad haftâd o yek is 671 but learner assumes 674
LEARNING ERROR: sheshsad haftâd o seh is 673 but learner assumes 676
LEARNING ERROR: sheshsad navad o yek is 691 but learner assumes 694
LEARNING ERROR: sheshsad navad o seh is 693 but learner assumes 696
Learned 999 words in Persian and structured them in 57 functions.
It took 263 samples to learn those.
Those are:
yek is 1
do is 2
se is 3
chahâr is 4
panj is 5
shesh is 6
haft is 7
hasht is 8
noh is 9
dah is 10
yâzdah is 11
davâzdah is 12
sizdah is 13
Function _dah maps {4} by x -> 0*x+14
poonzdah is 15
shoonzdah is 16
hifdah is 17
hijdah is 18
noozdah is 19
bist is 20
Function bist o _ maps {1,2,4,5,7,8,9} by x -> 1*x+20
Function bist o _h maps {3} by x -> 0*x+23
bist o shish is 26
si is 30
Function si o _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+30
Function si o _h maps {3} by x -> 0*x+33
chehel is 40
Function chehel o _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+40
Function chehel o _h maps {3} by x -> 0*x+43
Function _âh maps {5} by x -> 0*x+50
Function _âh o _ maps {5}x{1,2,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _âh o _h maps {5}x{3} by (x0,x1) -> 0*x0+0*x1+53
shast is 60
Function shast o _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+60
Function shast o _h maps {3} by x -> 0*x+63
Function _âd maps {7,8} by x -> 10*x+0
Function _âd o _ maps {7,8}x{1,2,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _âd o _h maps {7,8}x{3} by (x0,x1) -> 10*x0+1*x1
navad is 90
Function navad o _ maps {1,2,4,5,6,7,8,9} by x -> 1*x+90
Function navad o _h maps {3} by x -> 0*x+93
sad is 100
Function sad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+100
devist is 200
Function devist _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+200
Function _sad maps {30,4} by x -> -4*x+415
Function __ maps {4}x{sad _} by (x0,x1) -> 71*x0+1*x1+16
pansad is 500
Function pansad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+500
Function _sad maps {6} by x -> 0*x+600
Function _sad _ maps {30,6}x{1,2,3,4,5,6,7,8,9,10,11,12,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by (x0,x1) -> -12*x0+1*x1+675
heftsad is 700
Function heftsad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+700
heshtsad is 800
Function heshtsad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+800
nehsad is 900
Function nehsad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_dah,15,16,17,18,19,20,bist o _,bist o _h,26,30,si o _,si o _h,40,chehel o _,chehel o _h,_âh,_âh o _,_âh o _h,60,shast o _,shast o _h,_âd,_âd o _,_âd o _h,90,navad o _,navad o _h} by x -> 1*x+900

MG:
[se :: c1, -C], 3
[chahâr :: c1, -A, -H0, -B, -D], 4
[panj :: c1, -E, -B, -D], 5
[shesh :: c1, -J, -K0, -D], 6
[sad  :: =c3G, c3, -I], λx.'1X+100'(x)
[ :: =c2, +G, c3G], λx.x
[ :: =c4, cFin], λx.x
[si :: c2, -H, -G, -K, -L, -S2], 30
[ :: =c1, +H0, c2, -H], λx.x
[dah :: c2, -G, -L, -S2], 10
[yâzdah :: c2, -G, -L, -S2], 11
[davâzdah :: c2, -G, -L, -S2], 12
[sizdah :: c2, -G, -S2], 13
[dah :: =c1, +A, c2, -G, -L, -S2], λx.'0X+14'(x)
[poonzdah :: c2, -G, -L, -S2], 15
[shoonzdah :: c2, -G, -L, -S2], 16
[hifdah :: c2, -G, -L, -S2], 17
[hijdah :: c2, -G, -L, -S2], 18
[noozdah :: c2, -G, -L, -S2], 19
[bist :: c2, -G, -L, -S2], 20
[bist o  :: =c2B, c2, -G, -L, -S2], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[bist o  :: =c2*, c2, -G, -L, -S2], λx.'1X+23'(x)
[h :: =c1, +C, c2*], λx.'0X'(x)
[bist o shish :: c2, -G, -L, -S2], 26
[si o  :: =c2D, c2, -G, -L, -S2], λx.'1X+30'(x)
[ :: =c1, +D, c2D], λx.x
[si o  :: =c2**, c2, -G, -L, -S2], λx.'1X+33'(x)
[h :: =c1, +C, c2**], λx.'0X'(x)
[chehel :: c2, -G, -L, -S2], 40
[chehel o  :: =c2D, c2, -G, -L, -S2], λx.'1X+40'(x)
[chehel o  :: =c2***, c2, -G, -L, -S2], λx.'1X+43'(x)
[h :: =c1, +C, c2***], λx.'0X'(x)
[âh :: =c1, +E, c2, -G, -L, -S2], λx.'0X+50'(x)
[âh o  :: =c2D, =c2E, c2, -G, -L, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[âh o  :: =c2****, =c2E, c2, -G, -L, -S2], λxλy.'1X+0Y+53'(x,y)
[h :: =c1, +C, c2****], λx.'0X'(x)
[shast :: c2, -G, -L, -S2], 60
[shast o  :: =c2D, c2, -G, -L, -S2], λx.'1X+60'(x)
[shast o  :: =c2*****, c2, -G, -L, -S2], λx.'1X+63'(x)
[h :: =c1, +C, c2*****], λx.'0X'(x)
[âd :: =c1, +F, c2, -G, -L, -S2], λx.'10X'(x)
[âd o  :: =c2D, =c2F, c2, -G, -L, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[âd o  :: =c2******, =c2F, c2, -G, -L, -S2], λxλy.'1X+10Y'(x,y)
[h :: =c1, +C, c2******], λx.x
[navad :: c2, -G, -L, -S2], 90
[navad o  :: =c2D, c2, -G, -L, -S2], λx.'1X+90'(x)
[navad o  :: =c2*******, c2, -G, -L, -S2], λx.'1X+93'(x)
[h :: =c1, +C, c2*******], λx.'0X'(x)
[ :: =c1, c2, -G], λx.x
[yek :: c1, -B, -D], 1
[do :: c1, -B, -D], 2
[haft :: c1, -B, -F, -D], 7
[hasht :: c1, -B, -F, -D], 8
[noh :: c1, -B, -D], 9
[ :: =c1, +K0, c2, -K], λx.x
[ :: =c1, c2, -L], λx.x
[devist :: c4], 200
[devist  :: =c3G, c4], λx.'1X+200'(x)
[sad :: =c2, +H, c4], λx.'-4X+415'(x)
[ :: =c4I, =c4A, c4], λxλy.'1X+71Y+16'(x,y)
[ :: =c1, +A, c4A], λx.x
[ :: =c3, +I, c4I], λx.x
[pansad :: c4], 500
[pansad  :: =c3G, c4], λx.'1X+500'(x)
[sad :: =c1, +J, c4], λx.'0X+600'(x)
[sad  :: =c4L, =c4K, c4], λxλy.'1X+-12Y+675'(x,y)
[ :: =c2, +K, c4K], λx.x
[ :: =c2, +L, c4L], λx.x
[heftsad :: c4], 700
[heftsad  :: =c3G, c4], λx.'1X+700'(x)
[heshtsad :: c4], 800
[heshtsad  :: =c3G, c4], λx.'1X+800'(x)
[nehsad :: c4], 900
[nehsad  :: =c3G, c4], λx.'1X+900'(x)
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[sad :: c3], 100
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c2, +L, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +H0, +B, +D, c1, -H0], λx.x
[ :: =c1, +B, +F, +D, c1, -B], λx.x
[ :: =c2, +K, +L, +S2, c2, -K], λx.x
[ :: =c2, +L, +S2, c2, -L], λx.x
[ :: =c1, +A, +H0, +B, +D, c1, -A], λx.x
[ :: =c1, +J, +K0, +D, c1, -J], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c2, +G, +K, +L, +S2, c2, -G], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +K0, +D, c1, -K0], λx.x
[ :: =c1, +F, +D, c1, -F], λx.x
[ :: =c2, +G, +L, +S2, c2, -G], λx.x
[ :: =c1, +E, +B, +D, c1, -E], λx.x
[ :: =c2, +H, +G, +K, +L, +S2, c2, -H], λx.x


Learning Cape-Verdean-Creole
Learned 999 words in Cape-Verdean-Creole and structured them in 60 functions.
It took 87 samples to learn those.
Those are:
um is 1
dós is 2
trés is 3
kuátu is 4
sinku is 5
sax is 6
séti is 7
oitu is 8
nóvi is 9
dés is 10
ónzi is 11
duzi is 12
treizi is 13
katorzi is 14
kinzi is 15
Function diza_ maps {6,7,9} by x -> 1*x+10
Function diz_ maps {8} by x -> 0*x+18
vinti is 20
Function vinti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
korénta is 40
Function korénti-_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+40
korénti-oitu is 48
sunkuénta is 50
Function sunkuénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sasénta is 60
Function sasénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
saténta is 70
Function saténti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
oiténta is 80
Function oiténti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
novénta is 90
Function novénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sem is 100
Function senti-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,70,80,90} by x -> 1*x+100
Function senti-diza_ maps {6,7,9} by x -> 1*x+110
Function senti-diz_ maps {8} by x -> 0*x+118
senti-vinti is 120
Function senti-vinti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
Function senti-trinti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+130
Function senti-korénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+140
senti-sunkuénta is 150
Function senti-sunkuénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function senti-sasénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+160
Function senti-saténti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+170
Function senti-oiténti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+180
Function senti-novénti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+190
duzéntus is 200
Function duzéntus-i-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by x -> 1*x+200
trezéntus is 300
Function trezéntus-i-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by x -> 1*x+300
kinhéntus is 500
Function kinhéntus-i-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by x -> 1*x+500
saiséntus is 600
Function saiséntus-i-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by x -> 1*x+600
sétuséntus is 700
Function sétuséntus-i-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by x -> 1*x+700
Function _séntus maps {4,8,9} by x -> 100*x+0
Function _séntus-i-_ maps {4,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,diza_,diz_,20,vinti-_,30,trinti-_,40,korénti-_,48,50,sunkuénti-_,60,sasénti-_,70,saténti-_,80,oiténti-_,90,novénti-_} by (x0,x1) -> 100*x0+1*x1

MG:
[oitu :: c1, -B, -G], 8
[ :: =c3, cFin], λx.x
[dés :: c2, -E, -S1, -F], 10
[ónzi :: c2, -E, -S1, -F], 11
[duzi :: c2, -E, -S1, -F], 12
[treizi :: c2, -E, -S1, -F], 13
[katorzi :: c2, -E, -S1, -F], 14
[kinzi :: c2, -E, -S1, -F], 15
[trinta :: c2, -E, -S1, -F], 30
[korénta :: c2, -E, -S1, -F], 40
[sasénta :: c2, -E, -S1, -F], 60
[saténta :: c2, -E, -S1, -F], 70
[oiténta :: c2, -E, -S1, -F], 80
[novénta :: c2, -E, -S1, -F], 90
[ :: =c1, c2, -E], λx.x
[um :: c1, -D], 1
[dós :: c1, -D], 2
[trés :: c1, -D], 3
[kuátu :: c1, -G, -D], 4
[sinku :: c1, -D], 5
[sax :: c1, -A, -D], 6
[séti :: c1, -A, -D], 7
[nóvi :: c1, -G, -A, -D], 9
[sem :: c3], 100
[senti- :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[senti-diza :: =c2A, c3], λx.'1X+110'(x)
[senti-diz :: =c2B, c3], λx.'0X+118'(x)
[senti-vinti :: c3], 120
[senti-vinti- :: =c1, c3], λx.'1X+120'(x)
[senti-trinti- :: =c1, c3], λx.'1X+130'(x)
[senti-korénti- :: =c1, c3], λx.'1X+140'(x)
[senti-sunkuénta :: c3], 150
[senti-sunkuénti- :: =c1, c3], λx.'1X+150'(x)
[senti-sasénti- :: =c1, c3], λx.'1X+160'(x)
[senti-saténti- :: =c1, c3], λx.'1X+170'(x)
[senti-oiténti- :: =c1, c3], λx.'1X+180'(x)
[senti-novénti- :: =c1, c3], λx.'1X+190'(x)
[duzéntus :: c3], 200
[duzéntus-i- :: =c3F, c3], λx.'1X+200'(x)
[ :: =c2, +F, c3F], λx.x
[trezéntus :: c3], 300
[trezéntus-i- :: =c3F, c3], λx.'1X+300'(x)
[kinhéntus :: c3], 500
[kinhéntus-i- :: =c3F, c3], λx.'1X+500'(x)
[saiséntus :: c3], 600
[saiséntus-i- :: =c3F, c3], λx.'1X+600'(x)
[sétuséntus :: c3], 700
[sétuséntus-i- :: =c3F, c3], λx.'1X+700'(x)
[séntus :: =c1, +G, c3], λx.'100X'(x)
[séntus-i- :: =c3F, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[diza :: =c2A, c2, -S1, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[diz :: =c2B, c2, -S1, -F], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[vinti :: c2, -S1, -F], 20
[vinti- :: =c1, c2, -S1, -F], λx.'1X+20'(x)
[trinti- :: =c1, c2, -S1, -F], λx.'1X+30'(x)
[korénti- :: =c2D, c2, -S1, -F], λx.'1X+40'(x)
[ :: =c1, +D, c2D], λx.x
[korénti-oitu :: c2, -S1, -F], 48
[sunkuénta :: c2, -S1, -F], 50
[sunkuénti- :: =c1, c2, -S1, -F], λx.'1X+50'(x)
[sasénti- :: =c1, c2, -S1, -F], λx.'1X+60'(x)
[saténti- :: =c1, c2, -S1, -F], λx.'1X+70'(x)
[oiténti- :: =c1, c2, -S1, -F], λx.'1X+80'(x)
[novénti- :: =c1, c2, -S1, -F], λx.'1X+90'(x)
[ :: =c1, c2, -F], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x
[ :: =c2, +E, +S1, +F, c2, -E], λx.x


Learning Micmac

Learned 999 words in Micmac and structured them in 25 functions.
It took 37 samples to learn those.
Those are:
ne’wt is 1
ta’pu is 2
si’st is 3
ne’w is 4
na’n is 5
asukom is 6
l’uiknek is 7
ukmuljin is 8
pesqunatek is 9
newtiska’q is 10
Function newtiska’q jel _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
tapuiska’q is 20
Function tapuiska’q jel _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
nesiska’q is 30
Function nesiska’q jel _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
newiska’q is 40
Function newiska’q jel _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
naniska’q is 50
Function naniska’q jel _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ te’siska’q maps {6,7,8,9} by x -> 10*x+0
Function _ te’siska’q jel _ maps {6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
kaskimtlnaqn is 100
Function kaskimtlnaqn te’siska’q jel _ maps {1,2,3,4,5,6,7,8,9,10,newtiska’q jel _,20,tapuiska’q jel _,30,nesiska’q jel _,40,newiska’q jel _,50,naniska’q jel _,_ te’siska’q,_ te’siska’q jel _} by x -> 1*x+100
Function _ kaskimtlnaqn maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ kaskimtlnaqn te’siska’q jel _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,newtiska’q jel _,20,tapuiska’q jel _,30,nesiska’q jel _,40,newiska’q jel _,50,naniska’q jel _,_ te’siska’q,_ te’siska’q jel _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[newtiska’q :: c2, -S1], 10
[newtiska’q jel  :: =c1, c2, -S1], λx.'1X+10'(x)
[tapuiska’q :: c2, -S1], 20
[tapuiska’q jel  :: =c1, c2, -S1], λx.'1X+20'(x)
[nesiska’q :: c2, -S1], 30
[nesiska’q jel  :: =c1, c2, -S1], λx.'1X+30'(x)
[newiska’q :: c2, -S1], 40
[newiska’q jel  :: =c1, c2, -S1], λx.'1X+40'(x)
[naniska’q :: c2, -S1], 50
[naniska’q jel  :: =c1, c2, -S1], λx.'1X+50'(x)
[ te’siska’q :: =c1, +B, c2, -S1], λx.'10X'(x)
[ te’siska’q jel  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[ne’wt :: c1], 1
[ta’pu :: c1, -D], 2
[si’st :: c1, -D], 3
[ne’w :: c1, -D], 4
[na’n :: c1, -D], 5
[asukom :: c1, -B, -D], 6
[l’uiknek :: c1, -B, -D], 7
[ukmuljin :: c1, -B, -D], 8
[pesqunatek :: c1, -B, -D], 9
[kaskimtlnaqn :: c3], 100
[kaskimtlnaqn te’siska’q jel  :: =c2, c3], λx.'1X+100'(x)
[ kaskimtlnaqn :: =c1, +D, c3], λx.'100X'(x)
[ kaskimtlnaqn te’siska’q jel  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x


Learning Ga
Learned 999 words in Ga and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
ekome is 1
enyɔ is 2
etɛ is 3
ejwɛ is 4
enumɔ is 5
ekpaa is 6
kpawo is 7
kpaanyɔ is 8
nɛɛhu is 9
nyɔŋma is 10
Function nyɔŋma kɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function nyɔŋmai _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function nyɔŋmai _ kɛ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
oha is 100
Function oha kɛ _ maps {1,2,3,4,5,6,7,8,9,10,nyɔŋma kɛ _,nyɔŋmai _,nyɔŋmai _ kɛ _} by x -> 1*x+100
Function ohai _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function ohai _ kɛ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,nyɔŋma kɛ _,nyɔŋmai _,nyɔŋmai _ kɛ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[nyɔŋma :: c2, -S1], 10
[nyɔŋma kɛ  :: =c1, c2, -S1], λx.'1X+10'(x)
[nyɔŋmai  :: =c2**B, c2, -S1], λx.'10X'(x)
[nyɔŋmai  :: =c2*, c2, -S1], λx.x
[ kɛ  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[ekome :: c1], 1
[enyɔ :: c1, -B], 2
[etɛ :: c1, -B], 3
[ejwɛ :: c1, -B], 4
[enumɔ :: c1, -B], 5
[ekpaa :: c1, -B], 6
[kpawo :: c1, -B], 7
[kpaanyɔ :: c1, -B], 8
[nɛɛhu :: c1, -B], 9
[oha :: c3], 100
[oha kɛ  :: =c2, c3], λx.'1X+100'(x)
[ohai  :: =c2**B, c3], λx.'100X'(x)
[ohai  :: =c3*, c3], λx.x
[ kɛ  :: =c2, =c2**B, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ kɛ  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Isthmus-Zapotec
Learned 999 words in Isthmus-Zapotec and structured them in 21 functions.
It took 33 samples to learn those.
Those are:
tobi is 1
chupa is 2
chonna is 3
tapa is 4
gaayu’ is 5
xhoopa’ is 6
gadxe is 7
xhono is 8
ga’ is 9
chii is 10
Function chii ne _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
gande is 20
Function gande ne _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function gande _ maps {10,chii ne _} by x -> 1*x+20
Function _ late gande maps {2,3,4} by x -> 20*x+0
Function _ late gande ne _ maps {2,3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 20*x0+1*x1
Function _ late gande _ maps {2,3,4}x{10,chii ne _} by (x0,x1) -> 20*x0+1*x1
ti gayuaa is 100
Function ti gayuaa _ maps {1,2,3,4,5,6,7,8,9,10,chii ne _,20,gande ne _,gande _,_ late gande,_ late gande ne _,_ late gande _} by x -> 1*x+100
Function _ gayuaa maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ gayuaa _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,chii ne _,20,gande ne _,gande _,_ late gande,_ late gande ne _,_ late gande _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[chupa :: c1, -E, -C], 2
[chonna :: c1, -E, -C], 3
[tapa :: c1, -E, -C], 4
[gaayu’ :: c1, -E], 5
[xhoopa’ :: c1, -E], 6
[gadxe :: c1, -E], 7
[xhono :: c1, -E], 8
[ga’ :: c1, -E], 9
[chii :: c2], 10
[chii ne  :: =c1, c2], λx.'1X+10'(x)
[tobi :: c1], 1
[gande :: c3, -S1], 20
[gande ne  :: =c1, c3, -S1], λx.'1X+20'(x)
[gande  :: =c2, c3, -S1], λx.'1X+20'(x)
[ late gande :: =c1, +C, c3, -S1], λx.'20X'(x)
[ late gande ne  :: =c1, =c3C, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ late gande  :: =c2, =c3C, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ti gayuaa :: c4], 100
[ti gayuaa  :: =c3, c4], λx.'1X+100'(x)
[ gayuaa :: =c1, +E, c4], λx.'100X'(x)
[ gayuaa  :: =c3, =c4E, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c4E], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, c4], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x


Learning Tahitian
Learned 999 words in Tahitian and structured them in 19 functions.
It took 30 samples to learn those.
Those are:
ho’e is 1
piti is 2
toru is 3
maha is 4
pae is 5
ono is 6
hitu is 7
va’u is 8
iva is 9
’ahuru is 10
Function ’ahuru ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ ’ahuru maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ ’ahuru ma _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
hanere is 100
Function hanere ma _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+100
Function hanere _ maps {10,’ahuru ma _,_ ’ahuru,_ ’ahuru ma _} by x -> 1*x+100
Function _ hanere maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hanere ma _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ hanere _ maps {2,3,4,5,6,7,8,9}x{10,’ahuru ma _,_ ’ahuru,_ ’ahuru ma _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[’ahuru :: c2], 10
[’ahuru ma  :: =c1, c2], λx.'1X+10'(x)
[ ’ahuru :: =c1, +B, c2], λx.'10X'(x)
[ ’ahuru ma  :: =c1, =c2B, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[piti :: c1, -B], 2
[toru :: c1, -B], 3
[maha :: c1, -B], 4
[pae :: c1, -B], 5
[ono :: c1, -B], 6
[hitu :: c1, -B], 7
[va’u :: c1, -B], 8
[iva :: c1, -B], 9
[ho’e :: c1], 1
[hanere :: c3], 100
[hanere ma  :: =c1, c3], λx.'1X+100'(x)
[hanere  :: =c2, c3], λx.'1X+100'(x)
[ hanere :: =c1, +B, c3], λx.'100X'(x)
[ hanere ma  :: =c1, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ hanere  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ :: =c1, +B, c1], λx.x


Learning Zulu
Learned 999 words in Zulu and structured them in 135 functions.
It took 162 samples to learn those.
Those are:
kunye is 1
kubili is 2
kuthathu is 3
kune is 4
kuhlanu is 5
isithupha is 6
isikhombisa is 7
isishiyagalombili is 8
isishiyagalolunye is 9
ishumi is 10
ishumi nanye is 11
ishumi nambili is 12
ishumi nantathu is 13
ishumi nane is 14
ishumi nanhlanu is 15
ishumi nesithupha is 16
ishumi nesikhombisa is 17
ishumi nesishiyagalombili is 18
ishumi nesishiyagalolunye is 19
amashumi amabili is 20
amashumi amabili nanye is 21
amashumi amabili nambili is 22
amashumi amabili nantathu is 23
amashumi amabili nane is 24
amashumi amabili nanhlanu is 25
amashumi amabili nesithupha is 26
amashumi amabili nesikhombisa is 27
amashumi amabili nesishiyagalombili is 28
amashumi amabili nesishiyagalolunye is 29
amashumi amathathu is 30
amashumi amathathu nanye is 31
amashumi amathathu nambili is 32
amashumi amathathu nantathu is 33
amashumi amathathu nane is 34
amashumi amathathu nanhlanu is 35
amashumi amathathu nesithupha is 36
amashumi amathathu nesikhombisa is 37
amashumi amathathu nesishiyagalombili is 38
amashumi amathathu nesishiyagalolunye is 39
amashumi amane is 40
amashumi amane nanye is 41
amashumi amane nambili is 42
amashumi amane nantathu is 43
amashumi amane nane is 44
amashumi amane nanhlanu is 45
amashumi amane nesithupha is 46
amashumi amane nesikhombisa is 47
amashumi amane nesishiyagalombili is 48
amashumi amane nesishiyagalolunye is 49
amashumi amahlanu is 50
amashumi amahlanu nanye is 51
amashumi amahlanu nambili is 52
amashumi amahlanu nantathu is 53
amashumi amahlanu nane is 54
amashumi amahlanu nanhlanu is 55
amashumi amahlanu nesithupha is 56
amashumi amahlanu nesikhombisa is 57
amashumi amahlanu nesishiyagalombili is 58
amashumi amahlanu nesishiyagalolunye is 59
Function amashumi ay_ maps {6,7,8,9} by x -> 10*x+0
Function amashumi ay_ nanye maps {6,7,8,9} by x -> 10*x+1
Function amashumi ay_ nambili maps {6,7,8,9} by x -> 10*x+2
Function amashumi ay_ nantathu maps {6,7,8,9} by x -> 10*x+3
Function amashumi ay_ nane maps {6,7,8,9} by x -> 10*x+4
Function amashumi ay_ nanhlanu maps {6,7,8,9} by x -> 10*x+5
Function amashumi ay_ nesithupha maps {6,7,8,9} by x -> 10*x+6
Function amashumi ay_ nesikhombisa maps {6,7,8,9} by x -> 10*x+7
Function amashumi ay_ nesishiyagalombili maps {6,7,8,9} by x -> 10*x+8
Function amashumi ay_ nesishiyagalolunye maps {6,7,8,9} by x -> 10*x+9
ikhulu is 100
ikhulu nanye is 101
ikhulu nambili is 102
ikhulu nantathu is 103
ikhulu nane is 104
ikhulu nanhlanu is 105
ikhulu nesithupha is 106
ikhulu nesikhombisa is 107
ikhulu nesishiyagalombili is 108
ikhulu nesishiyagalolunye is 109
Function ikhulu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by x -> 1*x+100
amakhulu amabili is 200
amakhulu amabili nanye is 201
amakhulu amabili nambili is 202
amakhulu amabili nantathu is 203
amakhulu amabili nane is 204
amakhulu amabili nanhlanu is 205
amakhulu amabili nesithupha is 206
amakhulu amabili nesikhombisa is 207
amakhulu amabili nesishiyagalombili is 208
amakhulu amabili nesishiyagalolunye is 209
Function amakhulu amabili _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by x -> 1*x+200
amakhulu amathathu is 300
amakhulu amathathu nanye is 301
amakhulu amathathu nambili is 302
amakhulu amathathu nantathu is 303
amakhulu amathathu nane is 304
amakhulu amathathu nanhlanu is 305
amakhulu amathathu nesithupha is 306
amakhulu amathathu nesikhombisa is 307
amakhulu amathathu nesishiyagalombili is 308
amakhulu amathathu nesishiyagalolunye is 309
Function amakhulu amathathu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by x -> 1*x+300
amakhulu amane is 400
amakhulu amane nanye is 401
amakhulu amane nambili is 402
amakhulu amane nantathu is 403
amakhulu amane nane is 404
amakhulu amane nanhlanu is 405
amakhulu amane nesithupha is 406
amakhulu amane nesikhombisa is 407
amakhulu amane nesishiyagalombili is 408
amakhulu amane nesishiyagalolunye is 409
Function amakhulu amane _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by x -> 1*x+400
amakhulu amahlanu is 500
amakhulu amahlanu nanye is 501
amakhulu amahlanu nambili is 502
amakhulu amahlanu nantathu is 503
amakhulu amahlanu nane is 504
amakhulu amahlanu nanhlanu is 505
amakhulu amahlanu nesithupha is 506
amakhulu amahlanu nesikhombisa is 507
amakhulu amahlanu nesishiyagalombili is 508
amakhulu amahlanu nesishiyagalolunye is 509
Function amakhulu amahlanu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by x -> 1*x+500
Function amakhulu ay_ maps {6,7,8,9} by x -> 100*x+0
Function amakhulu ay_ nanye maps {6,7,8,9} by x -> 100*x+1
Function amakhulu ay_ nambili maps {6,7,8,9} by x -> 100*x+2
Function amakhulu ay_ nantathu maps {6,7,8,9} by x -> 100*x+3
Function amakhulu ay_ nane maps {6,7,8,9} by x -> 100*x+4
Function amakhulu ay_ nanhlanu maps {6,7,8,9} by x -> 100*x+5
Function amakhulu ay_ nesithupha maps {6,7,8,9} by x -> 100*x+6
Function amakhulu ay_ nesikhombisa maps {6,7,8,9} by x -> 100*x+7
Function amakhulu ay_ nesishiyagalombili maps {6,7,8,9} by x -> 100*x+8
Function amakhulu ay_ nesishiyagalolunye maps {6,7,8,9} by x -> 100*x+9
Function amakhulu ay_ _ maps {6,7,8,9}x{10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,amashumi ay_,amashumi ay_ nanye,amashumi ay_ nambili,amashumi ay_ nantathu,amashumi ay_ nane,amashumi ay_ nanhlanu,amashumi ay_ nesithupha,amashumi ay_ nesikhombisa,amashumi ay_ nesishiyagalombili,amashumi ay_ nesishiyagalolunye} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[isithupha :: c1, -A], 6
[isikhombisa :: c1, -A], 7
[isishiyagalombili :: c1, -A], 8
[isishiyagalolunye :: c1, -A], 9
[ikhulu :: c3], 100
[ikhulu nanye :: c3], 101
[ikhulu nambili :: c3], 102
[ikhulu nantathu :: c3], 103
[ikhulu nane :: c3], 104
[ikhulu nanhlanu :: c3], 105
[ikhulu nesithupha :: c3], 106
[ikhulu nesikhombisa :: c3], 107
[ikhulu nesishiyagalombili :: c3], 108
[ikhulu nesishiyagalolunye :: c3], 109
[ikhulu  :: =c2, c3], λx.'1X+100'(x)
[amakhulu amabili :: c3], 200
[amakhulu amabili nanye :: c3], 201
[amakhulu amabili nambili :: c3], 202
[amakhulu amabili nantathu :: c3], 203
[amakhulu amabili nane :: c3], 204
[amakhulu amabili nanhlanu :: c3], 205
[amakhulu amabili nesithupha :: c3], 206
[amakhulu amabili nesikhombisa :: c3], 207
[amakhulu amabili nesishiyagalombili :: c3], 208
[amakhulu amabili nesishiyagalolunye :: c3], 209
[amakhulu amabili  :: =c2, c3], λx.'1X+200'(x)
[amakhulu amathathu :: c3], 300
[amakhulu amathathu nanye :: c3], 301
[amakhulu amathathu nambili :: c3], 302
[amakhulu amathathu nantathu :: c3], 303
[amakhulu amathathu nane :: c3], 304
[amakhulu amathathu nanhlanu :: c3], 305
[amakhulu amathathu nesithupha :: c3], 306
[amakhulu amathathu nesikhombisa :: c3], 307
[amakhulu amathathu nesishiyagalombili :: c3], 308
[amakhulu amathathu nesishiyagalolunye :: c3], 309
[amakhulu amathathu  :: =c2, c3], λx.'1X+300'(x)
[amakhulu amane :: c3], 400
[amakhulu amane nanye :: c3], 401
[amakhulu amane nambili :: c3], 402
[amakhulu amane nantathu :: c3], 403
[amakhulu amane nane :: c3], 404
[amakhulu amane nanhlanu :: c3], 405
[amakhulu amane nesithupha :: c3], 406
[amakhulu amane nesikhombisa :: c3], 407
[amakhulu amane nesishiyagalombili :: c3], 408
[amakhulu amane nesishiyagalolunye :: c3], 409
[amakhulu amane  :: =c2, c3], λx.'1X+400'(x)
[amakhulu amahlanu :: c3], 500
[amakhulu amahlanu nanye :: c3], 501
[amakhulu amahlanu nambili :: c3], 502
[amakhulu amahlanu nantathu :: c3], 503
[amakhulu amahlanu nane :: c3], 504
[amakhulu amahlanu nanhlanu :: c3], 505
[amakhulu amahlanu nesithupha :: c3], 506
[amakhulu amahlanu nesikhombisa :: c3], 507
[amakhulu amahlanu nesishiyagalombili :: c3], 508
[amakhulu amahlanu nesishiyagalolunye :: c3], 509
[amakhulu amahlanu  :: =c2, c3], λx.'1X+500'(x)
[amakhulu ay :: =c2A, c3], λx.'100X'(x)
[amakhulu ay :: =c3*, c3], λx.'1X+1'(x)
[ nanye :: =c1, +A, c3*], λx.'100X'(x)
[ :: =c1, c3], λx.x
[kunye :: c1], 1
[kubili :: c1], 2
[kuthathu :: c1], 3
[kune :: c1], 4
[kuhlanu :: c1], 5
[ :: =c2, c3], λx.x
[ishumi :: c2], 10
[ishumi nanye :: c2], 11
[ishumi nambili :: c2], 12
[ishumi nantathu :: c2], 13
[ishumi nane :: c2], 14
[ishumi nanhlanu :: c2], 15
[ishumi nesithupha :: c2], 16
[ishumi nesikhombisa :: c2], 17
[ishumi nesishiyagalombili :: c2], 18
[ishumi nesishiyagalolunye :: c2], 19
[amashumi amabili :: c2], 20
[amashumi amabili nanye :: c2], 21
[amashumi amabili nambili :: c2], 22
[amashumi amabili nantathu :: c2], 23
[amashumi amabili nane :: c2], 24
[amashumi amabili nanhlanu :: c2], 25
[amashumi amabili nesithupha :: c2], 26
[amashumi amabili nesikhombisa :: c2], 27
[amashumi amabili nesishiyagalombili :: c2], 28
[amashumi amabili nesishiyagalolunye :: c2], 29
[amashumi amathathu :: c2], 30
[amashumi amathathu nanye :: c2], 31
[amashumi amathathu nambili :: c2], 32
[amashumi amathathu nantathu :: c2], 33
[amashumi amathathu nane :: c2], 34
[amashumi amathathu nanhlanu :: c2], 35
[amashumi amathathu nesithupha :: c2], 36
[amashumi amathathu nesikhombisa :: c2], 37
[amashumi amathathu nesishiyagalombili :: c2], 38
[amashumi amathathu nesishiyagalolunye :: c2], 39
[amashumi amane :: c2], 40
[amashumi amane nanye :: c2], 41
[amashumi amane nambili :: c2], 42
[amashumi amane nantathu :: c2], 43
[amashumi amane nane :: c2], 44
[amashumi amane nanhlanu :: c2], 45
[amashumi amane nesithupha :: c2], 46
[amashumi amane nesikhombisa :: c2], 47
[amashumi amane nesishiyagalombili :: c2], 48
[amashumi amane nesishiyagalolunye :: c2], 49
[amashumi amahlanu :: c2], 50
[amashumi amahlanu nanye :: c2], 51
[amashumi amahlanu nambili :: c2], 52
[amashumi amahlanu nantathu :: c2], 53
[amashumi amahlanu nane :: c2], 54
[amashumi amahlanu nanhlanu :: c2], 55
[amashumi amahlanu nesithupha :: c2], 56
[amashumi amahlanu nesikhombisa :: c2], 57
[amashumi amahlanu nesishiyagalombili :: c2], 58
[amashumi amahlanu nesishiyagalolunye :: c2], 59
[amashumi ay :: =c2A, c2], λx.'10X'(x)
[ :: =c1, +A, c2A], λx.x
[amashumi ay :: =c2*, c2], λx.'1X+1'(x)
[ nanye :: =c1, +A, c2*], λx.'10X'(x)
[ :: =c1, +A, c1], λx.x


Learning Gwere

Learned 999 words in Gwere and structured them in 53 functions.
It took 121 samples to learn those.
Those are:
moiza is 1
ibiri is 2
isatu is 3
iina is 4
itaanu is 5
mukaaga is 6
musanvu is 7
munaana is 8
mvenda is 9
ikumi is 10
Function ikumi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
makumi aabiri is 20
Function makumi aabiri na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
makumi aasatu is 30
Function makumi aasatu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
makumi aana is 40
Function makumi aana na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
makumi ataanu is 50
Function makumi ataanu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
nkaaga is 60
Function nkaaga na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
nsanvu is 70
Function nsanvu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
kinaana is 80
Function kinaana na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
kyenda is 90
Function kyenda na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
Function k_ maps {10,ikumi na _} by x -> 1*x+90
Function k_ mu kumi maps {10} by x -> 0*x+110
Function k_ mu kumi na _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 11*x0+1*x1
Function k_ mu abiri maps {10} by x -> 0*x+120
Function k_ mu abiri na _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 12*x0+1*x1
Function k_ mwasatu maps {10} by x -> 0*x+130
Function k_ mwasatu na _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 13*x0+1*x1
Function k_ mwana maps {10} by x -> 0*x+140
Function k_ mwana na _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 14*x0+1*x1
Function k_ mwataanu maps {10} by x -> 0*x+150
Function k_ mwataanu na _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 15*x0+1*x1
Function k_ mue_ maps {10}x{60,nkaaga na _} by (x0,x1) -> 10*x0+1*x1
Function k_ mu_ maps {10}x{70,nsanvu na _} by (x0,x1) -> 10*x0+1*x1
Function k_ mu _ maps {10}x{80,kinaana na _,90,kyenda na _} by (x0,x1) -> 10*x0+1*x1
Function b_ maps {2,3,5} by x -> 100*x+0
Function b_ na _ maps {2,3,5}x{1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by (x0,x1) -> 100*x0+1*x1
bina is 400
Function bina na _ maps {1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by x -> 1*x+400
lukaaga is 600
Function lukaaga na _ maps {1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by x -> 1*x+600
lusanvu is 700
Function lusanvu na _ maps {1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by x -> 1*x+700
lunaana is 800
Function lunaana na _ maps {1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by x -> 1*x+800
lwenda is 900
Function lwenda na _ maps {1,2,3,4,5,6,7,8,9,10,ikumi na _,20,makumi aabiri na _,30,makumi aasatu na _,40,makumi aana na _,50,makumi ataanu na _,60,nkaaga na _,70,nsanvu na _,80,kinaana na _,90,kyenda na _} by x -> 1*x+900

MG:
[ikumi :: c2, -C, -B, -S1], 10
[ :: =c3, cFin], λx.x
[nsanvu :: c2, -E, -S1], 70
[nsanvu na  :: =c1, c2, -E, -S1], λx.'1X+70'(x)
[ikumi na  :: =c1, c2, -B, -S1], λx.'1X+10'(x)
[makumi aabiri :: c2, -S1], 20
[makumi aabiri na  :: =c1, c2, -S1], λx.'1X+20'(x)
[makumi aasatu :: c2, -S1], 30
[makumi aasatu na  :: =c1, c2, -S1], λx.'1X+30'(x)
[makumi aana :: c2, -S1], 40
[makumi aana na  :: =c1, c2, -S1], λx.'1X+40'(x)
[makumi ataanu :: c2, -S1], 50
[makumi ataanu na  :: =c1, c2, -S1], λx.'1X+50'(x)
[nkaaga :: c2, -D, -S1], 60
[nkaaga na  :: =c1, c2, -D, -S1], λx.'1X+60'(x)
[kinaana :: c2, -F, -S1], 80
[kinaana na  :: =c1, c2, -F, -S1], λx.'1X+80'(x)
[kyenda :: c2, -F, -S1], 90
[kyenda na  :: =c1, c2, -F, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[moiza :: c1], 1
[ibiri :: c1, -G], 2
[isatu :: c1, -G], 3
[iina :: c1], 4
[itaanu :: c1, -G], 5
[mukaaga :: c1], 6
[musanvu :: c1], 7
[munaana :: c1], 8
[mvenda :: c1], 9
[k :: =c3B, c3], λx.'1X+90'(x)
[ :: =c2, +B, c3B], λx.x
[k :: =c3*, c3], λx.'1X+110'(x)
[ mu kumi :: =c2, +C, c3*], λx.'0X'(x)
[ mu kumi na  :: =c1, =c3*************C, c3**], λxλy.'1X+11Y'(x,y)
[ mu abiri :: =c2, +C, c3***], λx.'0X'(x)
[ mu abiri na  :: =c1, =c3*************C, c3****], λxλy.'1X+12Y'(x,y)
[ mwasatu :: =c2, +C, c3*****], λx.'0X'(x)
[ mwasatu na  :: =c1, =c3*************C, c3******], λxλy.'1X+13Y'(x,y)
[ mwana :: =c2, +C, c3*******], λx.'0X'(x)
[ mwana na  :: =c1, =c3*************C, c3********], λxλy.'1X+14Y'(x,y)
[ mwataanu :: =c2, +C, c3*********], λx.'0X'(x)
[ mwataanu na  :: =c1, =c3*************C, c3**********], λxλy.'1X+15Y'(x,y)
[ mue :: =c3***********D, =c3*************C, c3***********], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3***********D], λx.x
[ mu :: =c3************E, =c3*************C, c3************], λxλy.'1X+10Y'(x,y)
[ :: =c2, +E, c3************E], λx.x
[ mu  :: =c3*************F, =c3*************C, c3*************], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3*************C], λx.x
[ :: =c2, +F, c3*************F], λx.x
[b :: =c3**************G, c3], λx.'100X'(x)
[b :: =c3**************, c3], λx.x
[ na  :: =c2, =c3**************G, c3**************], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3**************G], λx.x
[bina :: c3], 400
[bina na  :: =c2, c3], λx.'1X+400'(x)
[lukaaga :: c3], 600
[lukaaga na  :: =c2, c3], λx.'1X+600'(x)
[lusanvu :: c3], 700
[lusanvu na  :: =c2, c3], λx.'1X+700'(x)
[lunaana :: c3], 800
[lunaana na  :: =c2, c3], λx.'1X+800'(x)
[lwenda :: c3], 900
[lwenda na  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c2, +B, +S1, c2, -B], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +C, +B, +S1, c2, -C], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x


Learning Lombard-Milanese
Learned 999 words in Lombard-Milanese and structured them in 51 functions.
It took 68 samples to learn those.
Those are:
vun is 1
duu is 2
trii is 3
quatter is 4
cinch is 5
ses is 6
sett is 7
vott is 8
noeuv is 9
des is 10
Function _des maps {1} by x -> 0*x+11
dodes is 12
tredes is 13
quattordes is 14
quindes is 15
sedes is 16
Function der_ maps {7} by x -> 0*x+17
desdott is 18
Function des_ maps {9} by x -> 0*x+19
vint is 20
vintun is 21
Function vint_ maps {2,3,4,5,6,7,9} by x -> 1*x+20
vintott is 28
trenta is 30
Function trenta_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+30
trentott is 38
quaranta is 40
Function quaranta_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+40
quarantott is 48
cinquanta is 50
Function cinquanta_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+50
cinquantott is 58
Function _santa maps {6} by x -> 0*x+60
Function _santa_ maps {6}x{1,2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
Function _santott maps {6} by x -> 0*x+68
Function _anta maps {7,8} by x -> 10*x+0
Function _anta_ maps {7,8}x{1,2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
Function _antott maps {7,8} by x -> 10*x+8
novanta is 90
Function novanta_ maps {1,2,3,4,5,6,7,9} by x -> 1*x+90
novantott is 98
cent is 100
Function cent_ maps {1,2,3,4,5,6,7,8,9,10,_des,12,13,14,15,16,der_,18,des_,20,21,vint_,28,30,trenta_,38,40,quaranta_,48,50,cinquanta_,58,_santa,_santa_,_santott,_anta,_anta_,_antott,90,novanta_,98} by x -> 1*x+100
dusent is 200
Function dusent_ maps {1,2,3,4,5,6,7,8,9,10,_des,12,13,14,15,16,der_,18,des_,20,21,vint_,28,30,trenta_,38,40,quaranta_,48,50,cinquanta_,58,_santa,_santa_,_santott,_anta,_anta_,_antott,90,novanta_,98} by x -> 1*x+200
tresent is 300
Function tresent_ maps {1,2,3,4,5,6,7,8,9,10,_des,12,13,14,15,16,der_,18,des_,20,21,vint_,28,30,trenta_,38,40,quaranta_,48,50,cinquanta_,58,_santa,_santa_,_santott,_anta,_anta_,_antott,90,novanta_,98} by x -> 1*x+300
Function _cent maps {4,5,7,8,9} by x -> 100*x+0
Function _cent_ maps {4,5,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_des,12,13,14,15,16,der_,18,des_,20,21,vint_,28,30,trenta_,38,40,quaranta_,48,50,cinquanta_,58,_santa,_santa_,_santott,_anta,_anta_,_antott,90,novanta_,98} by (x0,x1) -> 100*x0+1*x1
Function _’cent maps {6} by x -> 0*x+600
Function _’cent_ maps {6}x{1,2,3,4,5,6,7,8,9,10,_des,12,13,14,15,16,der_,18,des_,20,21,vint_,28,30,trenta_,38,40,quaranta_,48,50,cinquanta_,58,_santa,_santa_,_santott,_anta,_anta_,_antott,90,novanta_,98} by (x0,x1) -> 97*x0+1*x1+18

MG:
[vun :: c1, -A, -E], 1
[ses :: c1, -F, -E, -D], 6
[sett :: c1, -B, -E, -G, -I, -D], 7
[noeuv :: c1, -C, -E, -I, -D], 9
[ :: =c3, cFin], λx.x
[duu :: c1, -E, -D], 2
[trii :: c1, -E, -D], 3
[quatter :: c1, -E, -I, -D], 4
[cinch :: c1, -E, -I, -D], 5
[des :: c2, -S1], 10
[des :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[dodes :: c2, -S1], 12
[tredes :: c2, -S1], 13
[quattordes :: c2, -S1], 14
[quindes :: c2, -S1], 15
[sedes :: c2, -S1], 16
[der :: =c2B, c2, -S1], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[desdott :: c2, -S1], 18
[des :: =c2C, c2, -S1], λx.'0X+19'(x)
[ :: =c1, +C, c2C], λx.x
[vint :: c2, -S1], 20
[vintun :: c2, -S1], 21
[vint :: =c2D, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +D, c2D], λx.x
[vintott :: c2, -S1], 28
[trenta :: c2, -S1], 30
[trenta :: =c2E, c2, -S1], λx.'1X+30'(x)
[ :: =c1, +E, c2E], λx.x
[trentott :: c2, -S1], 38
[quaranta :: c2, -S1], 40
[quaranta :: =c2E, c2, -S1], λx.'1X+40'(x)
[quarantott :: c2, -S1], 48
[cinquanta :: c2, -S1], 50
[cinquanta :: =c2E, c2, -S1], λx.'1X+50'(x)
[cinquantott :: c2, -S1], 58
[santa :: =c1, +F, c2, -S1], λx.'0X+60'(x)
[santa :: =c2E, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[santott :: =c1, +F, c2, -S1], λx.'0X+68'(x)
[anta :: =c1, +G, c2, -S1], λx.'10X'(x)
[anta :: =c2E, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +G, c2G], λx.x
[antott :: =c1, +G, c2, -S1], λx.'10X+8'(x)
[novanta :: c2, -S1], 90
[novanta :: =c2E, c2, -S1], λx.'1X+90'(x)
[novantott :: c2, -S1], 98
[ :: =c1, c2], λx.x
[vott :: c1, -G, -I], 8
[cent :: c3], 100
[cent :: =c2, c3], λx.'1X+100'(x)
[dusent :: c3], 200
[dusent :: =c2, c3], λx.'1X+200'(x)
[tresent :: c3], 300
[tresent :: =c2, c3], λx.'1X+300'(x)
[cent :: =c1, +I, c3], λx.'100X'(x)
[cent :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[’cent :: =c1, +F, c3], λx.'0X+600'(x)
[’cent :: =c2, =c2F, c3], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +E, c1, -A], λx.x
[ :: =c1, +E, +I, +D, c1, -E], λx.x
[ :: =c1, +I, +D, c1, -I], λx.x
[ :: =c1, +B, +E, +G, +I, +D, c1, -B], λx.x
[ :: =c1, +G, +I, +D, c1, -G], λx.x
[ :: =c1, +E, +G, +I, +D, c1, -E], λx.x
[ :: =c1, +G, +I, c1, -G], λx.x
[ :: =c1, +C, +E, +I, +D, c1, -C], λx.x
[ :: =c1, +E, +D, c1, -E], λx.x
[ :: =c1, +F, +E, +D, c1, -F], λx.x


Learning Pite-Sami

Learned 999 words in Pite-Sami and structured them in 26 functions.
It took 36 samples to learn those.
Those are:
akttá is 1
guoktte is 2
gålbmå is 3
nällje is 4
vihtta is 5
guhtta is 6
gietjav is 7
gákttse is 8
åkktse is 9
lågev is 10
lågenaldneguäktte is 12
Function lågenaldne_ maps {1,3,7,8} by x -> 1*x+10
lågenaldnenäl’jje is 14
lågenaldnevihtta is 15
lågenaldneguhta is 16
lågenaldneåkttse is 19
Function _lågev maps {2,3,4,5,7,8} by x -> 10*x+0
Function _lågev_ maps {2,3,4,5,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
guhtalågev is 60
Function guhtalågev_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
åkttselågev is 90
Function åkttselågev_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
tjuohte is 100
Function tjuohte _ maps {1,2,3,4,5,6,7,8,9,10,12,lågenaldne_,14,15,16,19,_lågev,_lågev_,60,guhtalågev_,90,åkttselågev_} by x -> 1*x+100
Function _ tjuohte maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ tjuohte _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,12,lågenaldne_,14,15,16,19,_lågev,_lågev_,60,guhtalågev_,90,åkttselågev_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[guoktte :: c1, -E, -B], 2
[gålbmå :: c1, -E, -B, -A], 3
[nällje :: c1, -E, -B], 4
[vihtta :: c1, -E, -B], 5
[guhtta :: c1, -E], 6
[gietjav :: c1, -E, -B, -A], 7
[gákttse :: c1, -E, -B, -A], 8
[åkktse :: c1, -E], 9
[akttá :: c1, -A], 1
[lågev :: c2, -S1], 10
[lågenaldneguäktte :: c2, -S1], 12
[lågenaldne :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[lågenaldnenäl’jje :: c2, -S1], 14
[lågenaldnevihtta :: c2, -S1], 15
[lågenaldneguhta :: c2, -S1], 16
[lågenaldneåkttse :: c2, -S1], 19
[lågev :: =c1, +B, c2, -S1], λx.'10X'(x)
[lågev :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[guhtalågev :: c2, -S1], 60
[guhtalågev :: =c1, c2, -S1], λx.'1X+60'(x)
[åkttselågev :: c2, -S1], 90
[åkttselågev :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[tjuohte :: c3], 100
[tjuohte  :: =c2, c3], λx.'1X+100'(x)
[ tjuohte :: =c1, +E, c3], λx.'100X'(x)
[ tjuohte  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Purepecha
Learned 400 words in Purepecha and structured them in 16 functions.
It took 33 samples to learn those.
Those are:
ma is 1
tsimáni is 2
tanímu is 3
t’amu is 4
iúmu is 5
kuímu is 6
Function iúmu _ maps {2,3,4} by x -> 1*x+5
témbeni is 10
Function témbeni _ maps {1,2,3,4,5,6,iúmu _} by x -> 1*x+10
Function _ ekuátse maps {1,2,3,4,5,iúmu _,10,témbeni _} by x -> 20*x+0
Function _ ekuátse _ maps {1,2,3,4,5,iúmu _,10,témbeni _}x{1,2,3,4,5,6,iúmu _,10,témbeni _} by (x0,x1) -> 20*x0+1*x1
Function _ ekuátse ekuátse maps {5,10,témbeni _} by x -> 20*x+20
Function _ ekuátse ekuátse _ maps {5,10,témbeni _}x{1,2,3,4,5,6,iúmu _} by (x0,x1) -> 20*x0+1*x1+20
Function _ _ ekuátse maps {2,3}x{iúmu _} by (x0,x1) -> 100*x0+20*x1+-100
Function _ _ ekuátse _ maps {2,3}x{iúmu _}x{1,2,3,4,5,6,iúmu _,10,témbeni _} by (x0,x1,x2) -> 100*x0+20*x1+1*x2+-100
Function _ irépita maps {1} by x -> 0*x+400

MG:
[ma :: c1, -H], 1
[iúmu  :: =c2A, c2, -G, -C1, -D1, -S2], λx.'1X+5'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c4, cFin], λx.x
[témbeni :: c3, -C, -D, -S1], 10
[témbeni  :: =c2, c3, -C, -D, -S1], λx.'1X+10'(x)
[ :: =c2, +E0, c3], λx.x
[iúmu :: c2, -E0, -C1, -D1, -S2], 5
[ :: =c1, c3, -C], λx.x
[tsimáni :: c1, -F, -A], 2
[tanímu :: c1, -F, -A], 3
[t’amu :: c1, -A], 4
[ :: =c2, +C1, c3, -C], λx.x
[kuímu :: c2, -D1, -S2], 6
[ :: =c1, c2], λx.x
[ :: =c1, c3, -D], λx.x
[ :: =c2, +D1, c3, -D], λx.x
[ ekuátse :: =c3, +C, c4], λx.'20X'(x)
[ ekuátse  :: =c4**D, =c4C, c4], λxλy.'1X+20Y'(x,y)
[ :: =c3, +C, c4C], λx.x
[ ekuátse ekuátse :: =cnix, =c3, c4], λxλy.'1X+20Y+20'(x,y)
[ :: cnix], 0
[ ekuátse ekuátse  :: =c2, =c3, c4], λxλy.'1X+20Y+20'(x,y)
[  :: =c4*, =c4F, c4], λxλy.'1X+100Y+-100'(x,y)
[ :: =c1, +F, c4F], λx.x
[ ekuátse :: =c2, +G, c4*], λx.'20X'(x)
[ ekuátse  :: =c4**D, =c4**G, c4**], λxλy.'1X+20Y'(x,y)
[ :: =c2, +G, c4**G], λx.x
[ :: =c3, +D, c4**D], λx.x
[ irépita :: =c1, +H, c4], λx.'0X+400'(x)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +C, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +E0, c2], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +C1, c2], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c3, +C, +D, +S1, c3, -C], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c2, +C1, +D1, +S2, c2, -C1], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x
[ :: =c2, +G, +C1, +D1, +S2, c2, -G], λx.x
[ :: =c2, +E0, +C1, +D1, +S2, c2, -E0], λx.x


Learning Norwegian-Bokmal
Learned 999 words in Norwegian-Bokmal and structured them in 33 functions.
It took 49 samples to learn those.
Those are:
én is 1
to is 2
tre is 3
fire is 4
fem is 5
seks is 6
sju is 7
åtte is 8
ni is 9
ti is 10
elleve is 11
Function _lv maps {2} by x -> 0*x+12
fjorten is 14
Function _ten maps {5,6} by x -> 1*x+10
sytten is 17
atten is 18
Function _tten maps {3,9} by x -> 1*x+10
tjue is 20
Function tjue_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
førti is 40
Function førti_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _ti maps {5,6} by x -> 10*x+0
Function _ti_ maps {5,6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sytti is 70
Function sytti_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
åtti is 80
Function åtti_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _tti maps {3,9} by x -> 10*x+0
Function _tti_ maps {3,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
hundre is 100
Function hundre og _ maps {1,2,3,4,5,6,7,8,9,10,11,_lv,14,_ten,17,18,_tten,20,tjue_,40,førti_,_ti,_ti_,70,sytti_,80,åtti_,_tti,_tti_} by x -> 1*x+100
Function _ hundre maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundre og _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_lv,14,_ten,17,18,_tten,20,tjue_,40,førti_,_ti,_ti_,70,sytti_,80,åtti_,_tti,_tti_} by (x0,x1) -> 100*x0+1*x1

MG:
[to :: c1, -A, -F], 2
[ :: =c3, cFin], λx.x
[ti :: c2, -S1], 10
[elleve :: c2, -S1], 11
[lv :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[fjorten :: c2, -S1], 14
[ten :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[sytten :: c2, -S1], 17
[atten :: c2, -S1], 18
[tten :: =c1, +C, c2, -S1], λx.'1X+10'(x)
[tjue :: c2, -S1], 20
[tjue :: =c1, c2, -S1], λx.'1X+20'(x)
[førti :: c2, -S1], 40
[førti :: =c1, c2, -S1], λx.'1X+40'(x)
[ti :: =c1, +B, c2, -S1], λx.'10X'(x)
[ti :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[sytti :: c2, -S1], 70
[sytti :: =c1, c2, -S1], λx.'1X+70'(x)
[åtti :: c2, -S1], 80
[åtti :: =c1, c2, -S1], λx.'1X+80'(x)
[tti :: =c1, +C, c2, -S1], λx.'10X'(x)
[tti :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[én :: c1], 1
[tre :: c1, -C, -F], 3
[fire :: c1, -F], 4
[fem :: c1, -B, -F], 5
[seks :: c1, -B, -F], 6
[sju :: c1, -F], 7
[åtte :: c1, -F], 8
[ni :: c1, -C, -F], 9
[hundre :: c3], 100
[hundre og  :: =c2, c3], λx.'1X+100'(x)
[ hundre :: =c1, +F, c3], λx.'100X'(x)
[ hundre og  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x


Learning Italian
Learned 999 words in Italian and structured them in 68 functions.
It took 95 samples to learn those.
Those are:
uno is 1
due is 2
tre is 3
quattro is 4
cinque is 5
sei is 6
sette is 7
otto is 8
nove is 9
dieci is 10
undici is 11
dodici is 12
Function _dici maps {3} by x -> 0*x+13
quattordici is 14
quindici is 15
sedici is 16
Function dicias_ maps {7} by x -> 0*x+17
Function dici_ maps {8} by x -> 0*x+18
Function dician_ maps {9} by x -> 0*x+19
venti is 20
ventitré is 23
Function venti_ maps {2,4,5,6,7,9} by x -> 1*x+20
Function vent_ maps {1,8} by x -> 1*x+20
Function _nta maps {3} by x -> 0*x+30
Function _ntatré maps {3} by x -> 0*x+33
Function _nta_ maps {3}x{2,4,5,6,7,9} by (x0,x1) -> 9*x0+1*x1+3
Function _nt_ maps {3}x{1,8} by (x0,x1) -> 9*x0+1*x1+3
quaranta is 40
Function quarant_ maps {1} by x -> 0*x+41
quarantatré is 43
Function quaranta_ maps {2,4,5,6,7,9} by x -> 1*x+40
quarantotto is 48
cinquanta is 50
cinquantatré is 53
Function cinquanta_ maps {2,4,5,6,7,9} by x -> 1*x+50
Function cinquant_ maps {1,8} by x -> 1*x+50
sessanta is 60
sessantatré is 63
Function sessanta_ maps {2,4,5,6,7,9} by x -> 1*x+60
Function sessant_ maps {1,8} by x -> 1*x+60
settanta is 70
settantatré is 73
Function settanta_ maps {2,4,5,6,7,9} by x -> 1*x+70
Function settant_ maps {1,8} by x -> 1*x+70
ottanta is 80
ottantatré is 83
Function ottanta_ maps {2,4,5,6,7,9} by x -> 1*x+80
Function ottant_ maps {1,8} by x -> 1*x+80
novanta is 90
novantatré is 93
Function novanta_ maps {2,4,5,6,7,9} by x -> 1*x+90
Function novant_ maps {1,8} by x -> 1*x+90
cento is 100
Function cent_ maps {1} by x -> 0*x+101
centotré is 103
Function cento_ maps {2,4,5,6,7,9,10,11,12,_dici,14,15,16,dicias_,dici_,dician_,20,23,venti_,vent_,_nta,_ntatré,_nta_,_nt_,40,quarant_,43,quaranta_,48,50,53,cinquanta_,cinquant_,60,63,sessanta_,sessant_,70,73,settanta_,settant_,ottant_,90,93,novanta_,novant_} by x -> 1*x+100
centotto is 108
centottanta is 180
centottantatré is 183
Function centottanta_ maps {2,4,5,6,7,9} by x -> 1*x+180
Function _cento maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _cent_ maps {2,3,4,5,6,7,8,9}x{1} by (x0,x1) -> 100*x0+0*x1+1
Function _cento_ maps {2,3,4,5,6,7,8,9}x{2,4,5,6,7,9,10,11,12,_dici,14,15,16,dicias_,dici_,dician_,20,23,venti_,vent_,_nta,_ntatré,_nta_,_nt_,40,quarant_,43,quaranta_,48,50,53,cinquanta_,cinquant_,60,63,sessanta_,sessant_,70,73,settanta_,settant_,ottant_,90,93,novanta_,novant_} by (x0,x1) -> 100*x0+1*x1
Function _centotré maps {2,3,4,5,6,7,8,9} by x -> 100*x+3
Function _centotto maps {2,3,4,5,6,7,8,9} by x -> 100*x+8
Function _centottanta maps {2,3,4,5,6,7,8,9} by x -> 100*x+80
Function _centottanta_ maps {2,3,4,5,6,7,8,9}x{2,4,5,6,7,9} by (x0,x1) -> 100*x0+1*x1+80
Function _centottantatré maps {2,3,4,5,6,7,8,9} by x -> 100*x+83

MG:
[uno :: c1, -G, -F], 1
[tre :: c1, -A, -I], 3
[sette :: c1, -B, -E, -H0, -I], 7
[otto :: c1, -C, -I, -F], 8
[nove :: c1, -D, -E, -H0, -I], 9
[ :: =c3, cFin], λx.x
[due :: c1, -E, -H0, -I], 2
[quattro :: c1, -E, -H0, -I], 4
[cinque :: c1, -E, -H0, -I], 5
[sei :: c1, -E, -H0, -I], 6
[dieci :: c2, -H, -S1], 10
[undici :: c2, -H, -S1], 11
[dodici :: c2, -H, -S1], 12
[dici :: =c1, +A, c2, -H, -S1], λx.'0X+13'(x)
[quattordici :: c2, -H, -S1], 14
[quindici :: c2, -H, -S1], 15
[sedici :: c2, -H, -S1], 16
[dicias :: =c2B, c2, -H, -S1], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[dici :: =c2C, c2, -H, -S1], λx.'0X+18'(x)
[ :: =c1, +C, c2C], λx.x
[dician :: =c2D, c2, -H, -S1], λx.'0X+19'(x)
[ :: =c1, +D, c2D], λx.x
[venti :: c2, -H, -S1], 20
[ventitré :: c2, -H, -S1], 23
[venti :: =c2E, c2, -H, -S1], λx.'1X+20'(x)
[ :: =c1, +E, c2E], λx.x
[vent :: =c2F, c2, -H, -S1], λx.'1X+20'(x)
[ :: =c1, +F, c2F], λx.x
[nta :: =c1, +A, c2, -H, -S1], λx.'0X+30'(x)
[ntatré :: =c1, +A, c2, -H, -S1], λx.'0X+33'(x)
[nta :: =c2E, =c2A, c2, -H, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +A, c2A], λx.x
[nt :: =c2F, =c2A, c2, -H, -S1], λxλy.'1X+9Y+3'(x,y)
[quaranta :: c2, -H, -S1], 40
[quarant :: =c2G, c2, -H, -S1], λx.'0X+41'(x)
[ :: =c1, +G, c2G], λx.x
[quarantatré :: c2, -H, -S1], 43
[quaranta :: =c2E, c2, -H, -S1], λx.'1X+40'(x)
[quarantotto :: c2, -H, -S1], 48
[cinquanta :: c2, -H, -S1], 50
[cinquantatré :: c2, -H, -S1], 53
[cinquanta :: =c2E, c2, -H, -S1], λx.'1X+50'(x)
[cinquant :: =c2F, c2, -H, -S1], λx.'1X+50'(x)
[sessanta :: c2, -H, -S1], 60
[sessantatré :: c2, -H, -S1], 63
[sessanta :: =c2E, c2, -H, -S1], λx.'1X+60'(x)
[sessant :: =c2F, c2, -H, -S1], λx.'1X+60'(x)
[settanta :: c2, -H, -S1], 70
[settantatré :: c2, -H, -S1], 73
[settanta :: =c2E, c2, -H, -S1], λx.'1X+70'(x)
[settant :: =c2F, c2, -H, -S1], λx.'1X+70'(x)
[ottant :: =c2F, c2, -H, -S1], λx.'1X+80'(x)
[novanta :: c2, -H, -S1], 90
[novantatré :: c2, -H, -S1], 93
[novanta :: =c2E, c2, -H, -S1], λx.'1X+90'(x)
[novant :: =c2F, c2, -H, -S1], λx.'1X+90'(x)
[ :: =c1, +H0, c2, -H], λx.x
[cento :: c3], 100
[cent :: =c2G, c3], λx.'0X+101'(x)
[centotré :: c3], 103
[cento :: =c3H, c3], λx.'1X+100'(x)
[ :: =c2, +H, c3H], λx.x
[centotto :: c3], 108
[centottanta :: c3], 180
[centottantatré :: c3], 183
[centottanta :: =c2E, c3], λx.'1X+180'(x)
[cento :: =c1, +I, c3], λx.'100X'(x)
[cent :: =c2G, =c3I, c3], λxλy.'0X+100Y+1'(x,y)
[ :: =c1, +I, c3I], λx.x
[cento :: =c3H, =c3I, c3], λxλy.'1X+100Y'(x,y)
[centotré :: =c1, +I, c3], λx.'100X+3'(x)
[centotto :: =c1, +I, c3], λx.'100X+8'(x)
[centottanta :: =c1, +I, c3], λx.'100X+80'(x)
[centottanta :: =c2E, =c3I, c3], λxλy.'1X+100Y+80'(x,y)
[centottantatré :: =c1, +I, c3], λx.'100X+83'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ottanta :: c2, -S1], 80
[ottantatré :: c2, -S1], 83
[ottanta :: =c2E, c2, -S1], λx.'1X+80'(x)
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +D, +E, +H0, +I, c1, -D], λx.x
[ :: =c1, +A, +I, c1, -A], λx.x
[ :: =c1, +G, +F, c1, -G], λx.x
[ :: =c2, +H, +S1, c2, -H], λx.x
[ :: =c1, +I, +F, c1, -I], λx.x
[ :: =c1, +H0, +I, c1, -H0], λx.x
[ :: =c1, +B, +E, +H0, +I, c1, -B], λx.x
[ :: =c1, +E, +H0, +I, c1, -E], λx.x
[ :: =c1, +C, +I, +F, c1, -C], λx.x


Learning Faroese

Learned 999 words in Faroese and structured them in 35 functions.
It took 47 samples to learn those.
Those are:
ein is 1
tveir is 2
tríggir is 3
fýra is 4
fimm is 5
seks is 6
sjey is 7
átta is 8
níggju is 9
tíggju is 10
ellivu is 11
tólv is 12
trettan is 13
fjúrtan is 14
fimtan is 15
Function _tan maps {6} by x -> 0*x+16
seytjan is 17
átjan is 18
nítjan is 19
tjúgu is 20
Function _ og tjúgu maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tríati is 30
Function _ og tríati maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _ti maps {4,5,6,7,8} by x -> 10*x+0
Function _ og _ti maps {1,2,3,4,5,6,7,8,9}x{4,5,6,7,8} by (x0,x1) -> 1*x0+10*x1
níti is 90
Function _ og níti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
hundrað is 100
Function hundrað og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_tan,17,18,19,20,_ og tjúgu,30,_ og tríati,_ti,_ og _ti,90,_ og níti} by x -> 1*x+100
tvey hundrað is 200
Function tvey hundrað og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_tan,17,18,19,20,_ og tjúgu,30,_ og tríati,_ti,_ og _ti,90,_ og níti} by x -> 1*x+200
trý hundrað is 300
Function trý hundrað og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_tan,17,18,19,20,_ og tjúgu,30,_ og tríati,_ti,_ og _ti,90,_ og níti} by x -> 1*x+300
Function _ hundrað maps {4,5,6,7,8,9} by x -> 100*x+0
Function _ hundrað og _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_tan,17,18,19,20,_ og tjúgu,30,_ og tríati,_ti,_ og _ti,90,_ og níti} by (x0,x1) -> 100*x0+1*x1

MG:
[seks :: c1, -A, -E, -C], 6
[ :: =c3, cFin], λx.x
[fýra :: c1, -E, -C], 4
[fimm :: c1, -E, -C], 5
[sjey :: c1, -E, -C], 7
[átta :: c1, -E, -C], 8
[níggju :: c1, -E], 9
[ein :: c1], 1
[tveir :: c1], 2
[tríggir :: c1], 3
[tíggju :: c2, -S1], 10
[ellivu :: c2, -S1], 11
[tólv :: c2, -S1], 12
[trettan :: c2, -S1], 13
[fjúrtan :: c2, -S1], 14
[fimtan :: c2, -S1], 15
[tan :: =c1, +A, c2, -S1], λx.'0X+16'(x)
[seytjan :: c2, -S1], 17
[átjan :: c2, -S1], 18
[nítjan :: c2, -S1], 19
[tjúgu :: c2, -S1], 20
[ og tjúgu :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[tríati :: c2, -S1], 30
[ og tríati :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[ti :: =c1, +C, c2, -S1], λx.'10X'(x)
[ og  :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[ti :: =c1, +C, c2*], λx.'10X'(x)
[níti :: c2, -S1], 90
[ og níti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+90'(x,y)
[ :: =c1, c2], λx.x
[hundrað :: c3], 100
[hundrað og  :: =c2, c3], λx.'1X+100'(x)
[tvey hundrað :: c3], 200
[tvey hundrað og  :: =c2, c3], λx.'1X+200'(x)
[trý hundrað :: c3], 300
[trý hundrað og  :: =c2, c3], λx.'1X+300'(x)
[ hundrað :: =c1, +E, c3], λx.'100X'(x)
[ hundrað og  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x
[ :: =c1, +A, +E, +C, c1, -A], λx.x


Learning Sierra-Otomi
Learned 999 words in Sierra-Otomi and structured them in 41 functions.
It took 61 samples to learn those.
Those are:
n’da is 1
yoho is 2
hyu is 3
goho is 4
ku̱t’a is 5
’dato is 6
yoto is 7
hyäto is 8
gu̱to is 9
de̱t’a is 10
de̱’ma’da is 11
Function de̱’ma_ maps {2,3,4,7,8,9} by x -> 1*x+10
de̱’maku̱t’a is 15
de̱’ma’dato is 16
’da̱te is 20
’da̱tema’da is 21
Function ’da̱tema_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function ’da̱tema’_ maps {10,11,de̱’ma_,15,16} by x -> 1*x+20
yote‘ is 40
yotema’da is 41
Function yotema_ maps {2,3,4,5,7,9} by x -> 1*x+40
yotema’dato is 46
yotemahyäto is 48
yotema’de̱’a is 50
Function yotema’de̱’a_ maps {1} by x -> 0*x+51
Function yotema’de̱’ma_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
hyäte is 60
Function hyäte_ maps {1} by x -> 0*x+61
Function hyätema_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function hyätema’_ maps {de̱’ma_} by x -> 0*x+70
Function hyätema’__ maps {de̱’ma_}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 5*x0+1*x1
Function _’da̱te maps {4} by x -> 0*x+80
Function _’da̱tema’da maps {4} by x -> 0*x+81
Function _’da̱tema_ maps {4}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 19*x0+1*x1+4
Function _’da̱tema’_ maps {4}x{10,11,de̱’ma_,15,16} by (x0,x1) -> 19*x0+1*x1+4
yo syento is 200
Function yo syento ’ne _ maps {1,2,3,4,5,6,7,8,9,10,20,21,’da̱tema_,’da̱tema’_,40,41,yotema_,46,48,50,yotema’de̱’a_,yotema’de̱’ma_,60,hyäte_,hyätema_,hyätema’_,hyätema’__,_’da̱te,_’da̱tema’da,_’da̱tema_,_’da̱tema’_} by x -> 1*x+200
Function yo syento ’ne ’_ maps {11,de̱’ma_,15,16} by x -> 1*x+200
Function _ syento maps {1,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ syento ’ne _ maps {1,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,20,21,’da̱tema_,’da̱tema’_,40,41,yotema_,46,48,50,yotema’de̱’a_,yotema’de̱’ma_,60,hyäte_,hyätema_,hyätema’_,hyätema’__,_’da̱te,_’da̱tema’da,_’da̱tema_,_’da̱tema’_} by (x0,x1) -> 100*x0+1*x1
Function _ syento ’ne ’_ maps {1,3,4,5,6,7,8,9}x{11,de̱’ma_,15,16} by (x0,x1) -> 100*x0+1*x1

MG:
[n’da :: c1, -E, -K], 1
[goho :: c1, -H, -B, -K, -A, -D], 4
[de̱’ma :: =c2A, c2, -F, -J], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c4, cFin], λx.x
[de̱t’a :: c2, -I1], 10
[de̱’ma’da :: c2, -J], 11
[de̱’maku̱t’a :: c2, -J], 15
[de̱’ma’dato :: c2, -J], 16
[yoho :: c1, -B, -A, -D], 2
[hyu :: c1, -B, -K, -A, -D], 3
[ku̱t’a :: c1, -B, -K, -D], 5
[’dato :: c1, -B, -K], 6
[yoto :: c1, -B, -K, -A, -D], 7
[hyäto :: c1, -B, -K, -A], 8
[gu̱to :: c1, -B, -K, -A, -D], 9
[’da̱te :: c3, -S1], 20
[’da̱tema’da :: c3, -S1], 21
[’da̱tema :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c3B], λx.x
[’da̱tema’ :: =c2, c3, -S1], λx.'1X+20'(x)
[yote‘ :: c3, -S1], 40
[yotema’da :: c3, -S1], 41
[yotema :: =c3D, c3, -S1], λx.'1X+40'(x)
[ :: =c1, +D, c3D], λx.x
[yotema’dato :: c3, -S1], 46
[yotemahyäto :: c3, -S1], 48
[yotema’de̱’a :: c3, -S1], 50
[yotema’de̱’a :: =c3E, c3, -S1], λx.'0X+51'(x)
[ :: =c1, +E, c3E], λx.x
[yotema’de̱’ma :: =c3B, c3, -S1], λx.'1X+50'(x)
[hyäte :: c3, -S1], 60
[hyäte :: =c3E, c3, -S1], λx.'0X+61'(x)
[hyätema :: =c3B, c3, -S1], λx.'1X+60'(x)
[hyätema’ :: =c3**F, c3, -S1], λx.'0X+70'(x)
[hyätema’ :: =c3*, c3, -S1], λx.x
[ :: =c1, =c3**F, c3*], λxλy.'1X+5Y'(x,y)
[’da̱te :: =c1, +H, c3, -S1], λx.'0X+80'(x)
[’da̱tema’da :: =c1, +H, c3, -S1], λx.'0X+81'(x)
[’da̱tema :: =c3B, =c3H, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +H, c3H], λx.x
[’da̱tema’ :: =c2, =c3H, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +I1, c3], λx.x
[yo syento :: c4], 200
[yo syento ’ne  :: =c3, c4], λx.'1X+200'(x)
[yo syento ’ne ’ :: =c4J, c4], λx.'1X+200'(x)
[ :: =c2, +J, c4J], λx.x
[ syento :: =c1, +K, c4], λx.'100X'(x)
[ syento ’ne  :: =c3, =c4K, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +K, c4K], λx.x
[ syento ’ne ’ :: =c4J, =c4K, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c1, =c3**F, c3**], λxλy.'1X+5Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +B, +K, +D, c1, -B], λx.x
[ :: =c1, +K, +D, c1, -K], λx.x
[ :: =c1, +K, +A, c1, -K], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +B, +K, +A, c1, -B], λx.x
[ :: =c1, +E, +K, c1, -E], λx.x
[ :: =c1, +B, +K, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +F, +J, c2, -F], λx.x
[ :: =c1, +K, +A, +D, c1, -K], λx.x
[ :: =c1, +H, +B, +K, +A, +D, c1, -H], λx.x
[ :: =c1, +B, +K, c1, -B], λx.x


Learning Koasati
Learned 999 words in Koasati and structured them in 18 functions.
It took 28 samples to learn those.
Those are:
chaffaakan is 1
toklon is 2
totchiinan is 3
ostaakan is 4
chahappaakan is 5
hannaalin is 6
Function on_ maps {2,3} by x -> 1*x+5
chakkaalin is 9
pokkoolin is 10
Function pokkol awah _ maps {1,2,3,4,6,9} by x -> 1*x+10
pokkol awah chahappaakan is 15
Function pokkol awah on_ maps {2,3} by x -> 1*x+15
Function pol_ maps {2,3,4,5,on_,9} by x -> 10*x+0
Function pol_ polo awah _ maps {2,3,4,5,on_,9}x{1,2,3,4,5,6,on_,9} by (x0,x1) -> 10*x0+1*x1
Function pola_ maps {6} by x -> 0*x+60
Function pola_ polo awah _ maps {6}x{1,2,3,4,5,6,on_,9} by (x0,x1) -> 10*x0+1*x1
Function chokpi _ maps {1,2,3,4,5,6,on_,9} by x -> 100*x+0
Function chokpi _ awah _ maps {1,2,3,4,5,6,on_,9}x{1,2,3,4,5,6,on_,9,10,pokkol awah _,15,pokkol awah on_,pol_,pol_ polo awah _,pola_,pola_ polo awah _} by (x0,x1) -> 100*x0+1*x1

MG:
[hannaalin :: c2, -E, -B, -D, -S2, -F1], 6
[ :: =c4, cFin], λx.x
[ostaakan :: c2, -C, -B, -D, -S2, -F1], 4
[chahappaakan :: c2, -C, -D, -S2, -F1], 5
[on :: =c2A, c2, -C, -D, -S2, -F1], λx.'1X+5'(x)
[ :: =c1, +A, c2A], λx.x
[chakkaalin :: c2, -C, -B, -D, -S2, -F1], 9
[ :: =c1, +C0, c2, -C], λx.x
[toklon :: c1, -C0, -A], 2
[totchiinan :: c1, -C0, -A], 3
[ :: =c1, c2, -B], λx.x
[chaffaakan :: c1], 1
[ :: =c1, c2, -D], λx.x
[chokpi  :: =c3****D, c4], λx.'100X'(x)
[chokpi  :: =c4*, c4], λx.x
[ awah  :: =c3, =c3****D, c4*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[pokkoolin :: c3, -S1], 10
[pokkol awah  :: =c3B, c3, -S1], λx.'1X+10'(x)
[ :: =c2, +B, c3B], λx.x
[pokkol awah chahappaakan :: c3, -S1], 15
[pokkol awah on :: =c2A, c3, -S1], λx.'1X+15'(x)
[pol :: =c3***C, c3, -S1], λx.'10X'(x)
[pol :: =c3*, c3, -S1], λx.x
[ polo awah  :: =c3****D, =c3***C, c3*], λxλy.'1X+10Y'(x,y)
[pola :: =c3****E, c3, -S1], λx.'0X+60'(x)
[pola :: =c3**, c3, -S1], λx.x
[ polo awah  :: =c3****D, =c3****E, c3**], λxλy.'1X+10Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ polo awah  :: =c3****D, =c3***C, c3***], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3***C], λx.x
[ polo awah  :: =c3****D, =c3****E, c3****], λxλy.'1X+10Y'(x,y)
[ :: =c2, +E, c3****E], λx.x
[ :: =c2, +D, c3****D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +B, +D, +S2, +F1, c2, -B], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c2, +C, +D, +S2, +F1, c2, -C], λx.x
[ :: =c1, +C0, +A, c1, -C0], λx.x
[ :: =c2, +D, +S2, +F1, c2, -D], λx.x
[ :: =c2, +C, +B, +D, +S2, +F1, c2, -C], λx.x
[ :: =c2, +E, +B, +D, +S2, +F1, c2, -E], λx.x


Learning Tamazight

Learned 999 words in Tamazight and structured them in 23 functions.
It took 36 samples to learn those.
Those are:
ⵢⴰⵏ is 1
ⵙⵉⵏ is 2
ⴽⵕⴰⴹ is 3
ⴽⴽⵓⵣ is 4
ⵙⵎⵎⵓⵙ is 5
ⵚⴹⵉⵚ is 6
ⵙⴰ is 7
ⵜⴰⵎ is 8
ⵜⵥⴰ is 9
ⵎⵔⴰⵡ is 10
Function _ ⴷ ⵎⵔⴰⵡ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ ⵉⴷ ⵎⵔⴰⵡ maps {2,3,4,5,6,7} by x -> 10*x+0
Function _ ⵉⴷ ⵎⵔⴰⵡ ⵉ _ maps {2,3,4,5,6,7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ⵜ ⵉⴷ ⵎⵔⴰⵡ maps {8,9} by x -> 10*x+0
Function _ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ _ maps {8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
ⵜⵉⵎⵉⴹⵉ is 100
Function ⵜⵉⵎⵉⴹⵉ ⴷ _ maps {1,2,3,4,5,6,7,8,9,10,_ ⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ ⵉ _,_ⵜ ⵉⴷ ⵎⵔⴰⵡ,_ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ _} by x -> 1*x+100
ⵙⵏⴰⵜ ⵜⵉⵎⴰⴹ is 200
Function ⵙⵏⴰⵜ ⵜⵉⵎⴰⴹ ⴷ _ maps {1,2,3,4,5,6,7,8,9,10,_ ⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ ⵉ _,_ⵜ ⵉⴷ ⵎⵔⴰⵡ,_ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ _} by x -> 1*x+200
ⴽⵕⴰⵟⵜ ⵜⵉⵎⴰⴹ is 300
Function ⴽⵕⴰⵟⵜ ⵜⵉⵎⴰⴹ ⴷ _ maps {1,2,3,4,5,6,7,8,9,10,_ ⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ ⵉ _,_ⵜ ⵉⴷ ⵎⵔⴰⵡ,_ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ _} by x -> 1*x+300
Function _ⵜ ⵜⵉⵎⴰⴹ maps {4,5,6,7,8,9} by x -> 100*x+0
Function _ⵜ ⵜⵉⵎⴰⴹ ⴷ _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_ ⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ,_ ⵉⴷ ⵎⵔⴰⵡ ⵉ _,_ⵜ ⵉⴷ ⵎⵔⴰⵡ,_ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[ⴽⴽⵓⵣ :: c1, -E, -B], 4
[ⵙⵎⵎⵓⵙ :: c1, -E, -B], 5
[ⵚⴹⵉⵚ :: c1, -E, -B], 6
[ⵙⴰ :: c1, -E, -B], 7
[ⵜⴰⵎ :: c1, -E, -C], 8
[ⵜⵥⴰ :: c1, -E, -C], 9
[ⵙⵉⵏ :: c1, -B], 2
[ⴽⵕⴰⴹ :: c1, -B], 3
[ⵢⴰⵏ :: c1], 1
[ⵎⵔⴰⵡ :: c2, -S1], 10
[ ⴷ ⵎⵔⴰⵡ :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[ ⵉⴷ ⵎⵔⴰⵡ :: =c1, +B, c2, -S1], λx.'10X'(x)
[ ⵉⴷ ⵎⵔⴰⵡ ⵉ  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ⵜ ⵉⴷ ⵎⵔⴰⵡ :: =c1, +C, c2, -S1], λx.'10X'(x)
[ⵜ ⵉⴷ ⵎⵔⴰⵡ ⵉ  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[ⵜⵉⵎⵉⴹⵉ :: c3], 100
[ⵜⵉⵎⵉⴹⵉ ⴷ  :: =c2, c3], λx.'1X+100'(x)
[ⵙⵏⴰⵜ ⵜⵉⵎⴰⴹ :: c3], 200
[ⵙⵏⴰⵜ ⵜⵉⵎⴰⴹ ⴷ  :: =c2, c3], λx.'1X+200'(x)
[ⴽⵕⴰⵟⵜ ⵜⵉⵎⴰⴹ :: c3], 300
[ⴽⵕⴰⵟⵜ ⵜⵉⵎⴰⴹ ⴷ  :: =c2, c3], λx.'1X+300'(x)
[ⵜ ⵜⵉⵎⴰⴹ :: =c1, +E, c3], λx.'100X'(x)
[ⵜ ⵜⵉⵎⴰⴹ ⴷ  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning French
Learned 999 words in French and structured them in 45 functions.
It took 89 samples to learn those.
Those are:
un is 1
deux is 2
trois is 3
quatre is 4
cinq is 5
six is 6
sept is 7
huit is 8
neuf is 9
dix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
quinze is 15
seize is 16
Function dix-_ maps {7,8,9} by x -> 1*x+10
vingt is 20
Function vingt et _ maps {1} by x -> 0*x+21
Function vingt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente et _ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante et _ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante et _ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _uante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
soixante is 60
Function soixante-_ maps {2,3,4,5,6,7,8,9,10,12,13,14,15,16,dix-_} by x -> 1*x+60
Function soixante et _ maps {1,11} by x -> 1*x+60
Function _-vingts maps {4} by x -> 0*x+80
Function _-vingt-_ maps {4}x{1,2,3,4,5,6,7,8,9,11,12,13,14,15} by (x0,x1) -> 19*x0+1*x1+4
Function _-_-dix maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+90
Function _-_-seize maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+96
Function _-_-dix-_ maps {4}x{20}x{7,8,9} by (x0,x1,x2) -> 2*x0+4*x1+1*x2+2
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante-_,soixante et _,_-vingts,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_} by x -> 1*x+100
Function _ _ vingt maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+220
Function _ _ vingt et _ maps {2}x{100}x{1} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+221
Function _ _ vingt-_ maps {2}x{100}x{2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 8*x0+2*x1+1*x2+4
Function _ _ quarante maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+240
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cent _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,30,trente et _,trente-_,quarante et _,quarante-_,60,soixante-_,soixante et _,_-vingts,_uante,_uante et _,_uante-_,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_,40,20,vingt et _,vingt-_} by (x0,x1) -> 100*x0+1*x1

MG:
[un :: c1, -B, -F0], 1
[deux :: c1, -K, -E0, -C], 2
[quatre :: c1, -G, -E0, -C], 4
[cinq :: c1, -D, -E0, -C], 5
[vingt :: c2, -I, -J1, -M1, -S2], 20
[cent :: c3, -L, -S1], 100
[ :: =c4, cFin], λx.x
[dix :: c2, -E, -J1, -M1, -S2], 10
[douze :: c2, -E, -J1, -H, -M1, -S2], 12
[treize :: c2, -E, -J1, -H, -M1, -S2], 13
[quatorze :: c2, -E, -J1, -H, -M1, -S2], 14
[quinze :: c2, -E, -J1, -H, -M1, -S2], 15
[seize :: c2, -E, -J1, -M1, -S2], 16
[dix- :: =c2A, c2, -E, -J1, -M1, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[trois :: c1, -E0, -C], 3
[six :: c1, -E0, -C], 6
[sept :: c1, -E0, -C, -A], 7
[huit :: c1, -E0, -C, -A], 8
[neuf :: c1, -E0, -C, -A], 9
[vingt et  :: =c3B, c3, -J, -M, -S1], λx.'0X+21'(x)
[ :: =c1, +B, c3B], λx.x
[vingt- :: =c3C, c3, -J, -M, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[trente :: c3, -J, -M, -S1], 30
[trente et  :: =c3B, c3, -J, -M, -S1], λx.'0X+31'(x)
[trente- :: =c3C, c3, -J, -M, -S1], λx.'1X+30'(x)
[quarante :: c3, -J, -M, -S1], 40
[quarante et  :: =c3B, c3, -J, -M, -S1], λx.'0X+41'(x)
[quarante- :: =c3C, c3, -J, -M, -S1], λx.'1X+40'(x)
[uante :: =c1, +D, c3, -J, -M, -S1], λx.'0X+50'(x)
[uante et  :: =c3B, =c3D, c3, -J, -M, -S1], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +D, c3D], λx.x
[uante- :: =c3C, =c3D, c3, -J, -M, -S1], λxλy.'1X+10Y'(x,y)
[soixante :: c3, -J, -M, -S1], 60
[soixante- :: =c3E, c3, -J, -M, -S1], λx.'1X+60'(x)
[ :: =c2, +E, c3E], λx.x
[soixante et  :: =c3F, c3, -J, -M, -S1], λx.'1X+60'(x)
[ :: =c2, +F, c3F], λx.x
[-vingts :: =c1, +G, c3, -J, -M, -S1], λx.'0X+80'(x)
[-vingt- :: =c3H, =c3G, c3, -J, -M, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c2, +H, c3H], λx.x
[- :: =c3*, =c3G, c3, -J, -J, -J, -M, -M, -M, -S1, -S1, -S1], λxλy.'1X+0Y+90'(x,y)
[-dix :: =c2, +I, c3*], λx.'0X'(x)
[-seize :: =c2, +I, c3**], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3***], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -J], λx.x
[ :: =c2, +J1, c3, -J], λx.x
[onze :: c2, -J1, -H, -M1, -S2, -F], 11
[ :: =c1, c2, -H], λx.x
[-dix :: =c2, +I, c3****], λx.'0X'(x)
[-seize :: =c2, +I, c3*****], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3******], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -M], λx.x
[ :: =c2, +M1, c3, -M], λx.x
[cent  :: =c4J, c4], λx.'1X+100'(x)
[ :: =c3, +J, c4J], λx.x
[  :: =c4*, =c4K, c4], λxλy.'1X+0Y+220'(x,y)
[ :: =c1, +K, c4K], λx.x
[ vingt :: =c3, +L, c4*], λx.'0X'(x)
[ vingt et  :: =c3B, =c4***L, c4**], λxλy.'0X+0Y'(x,y)
[ vingt- :: =c3C, =c4***L, c4***], λxλy.'1X+2Y'(x,y)
[ :: =c3, +L, c4***L], λx.x
[ cents :: =c1, +C, c4], λx.'100X'(x)
[ cent  :: =c4M, =c3C, c4], λxλy.'1X+100Y'(x,y)
[ :: =c3, +M, c4M], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[-dix :: =c2, +I, c3*******], λx.'0X'(x)
[-seize :: =c2, +I, c3********], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3*********], λxλy.'1X+4Y'(x,y)
[ :: =c2, +I, c3*********I], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c3, +L, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c2, +J1, c2], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +M1, c2], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +E, +J1, +M1, +S2, c2, -E], λx.x
[ :: =c1, +E0, +C, +A, c1, -E0], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c3, +S1, +S1, +S1, c3, -S1], λx.x
[ :: =c2, +J1, +H, +M1, +S2, +F, c2, -J1], λx.x
[ :: =c3, +J, +M, +S1, c3, -J], λx.x
[ :: =c1, +G, +E0, +C, c1, -G], λx.x
[ :: =c2, +H, +M1, +S2, c2, -H], λx.x
[ :: =c2, +H, +M1, +S2, +F, c2, -H], λx.x
[ :: =c3, +M, +S1, +S1, +S1, c3, -M], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c3, +J, +J, +M, +M, +M, +S1, +S1, +S1, c3, -J], λx.x
[ :: =c2, +J1, +M1, +S2, c2, -J1], λx.x
[ :: =c1, +E0, +C, c1, -E0], λx.x
[ :: =c3, +M, +S1, c3, -M], λx.x
[ :: =c2, +I, +J1, +M1, +S2, c2, -I], λx.x
[ :: =c3, +M, +M, +M, +S1, +S1, +S1, c3, -M], λx.x
[ :: =c3, +J, +J, +J, +M, +M, +M, +S1, +S1, +S1, c3, -J], λx.x
[ :: =c2, +E, +J1, +H, +M1, +S2, c2, -E], λx.x
[ :: =c3, +M, +M, +S1, +S1, +S1, c3, -M], λx.x
[ :: =c1, +D, +E0, +C, c1, -D], λx.x
[ :: =c2, +M1, +S2, +F, c2, -M1], λx.x
[ :: =c1, +K, +E0, +C, c1, -K], λx.x
[ :: =c2, +M1, +S2, c2, -M1], λx.x
[ :: =c3, +L, +S1, c3, -L], λx.x
[ :: =c2, +J1, +H, +M1, +S2, c2, -J1], λx.x
[ :: =c3, +J, +M, +M, +M, +S1, +S1, +S1, c3, -J], λx.x


Learning Lowland-Oaxaca-Chontal

Learned 100 words in Lowland-Oaxaca-Chontal and structured them in 81 functions.
It took 88 samples to learn those.
Those are:
ñulyi is 1
ukwe’ is 2
fane’ is 3
malpu’ is 4
mague’ is 5
k’anchux is 6
kote’ is 7
malfa’ is 8
penla’ is 9
mbama’ is 10
Function mbamaj _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
mbamaj mague’ is 15
ñuxans is 20
ñuxans’ nulyi’ is 21
Function ñuxans’ _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ jmbama’ maps {3} by x -> 0*x+30
Function _ mbamajfane maps {3} by x -> 0*x+33
Function _ mbamajmalpu maps {3} by x -> 0*x+34
Function _ mbamajmague maps {3} by x -> 0*x+35
Function _ mbamajkote maps {3} by x -> 0*x+37
Function _ mbamaj penla maps {3} by x -> 0*x+39
ukwej ñuxans’ is 40
Function ukwej _’ _ maps {20}x{1} by (x0,x1) -> 0*x0+0*x1+41
Function ukwej _’ ukwe maps {20} by x -> 0*x+42
Function ukwej _’ fane maps {20} by x -> 0*x+43
Function ukwej _’ malpu maps {20} by x -> 0*x+44
Function ukwej _’ mague maps {20} by x -> 0*x+45
Function ukwej _’ kanchux maps {20} by x -> 0*x+46
Function ukwej _’ kote maps {20} by x -> 0*x+47
Function ukwej _’ malfa maps {20} by x -> 0*x+48
Function ukwej _’ penla maps {20} by x -> 0*x+49
maguej mbama’ is 50
Function _ mbamaj_ maps {3,5}x{1} by (x0,x1) -> 10*x0+0*x1+1
Function _ mbamajukwe maps {3,5} by x -> 10*x+2
Function _ mbamaj fane maps {5} by x -> 0*x+53
Function _ mbamaj malpu maps {5} by x -> 0*x+54
Function _ mbamaj mague maps {5} by x -> 0*x+55
Function _ mbamajkanchux maps {3,5} by x -> 10*x+6
Function _ mbamaj kote maps {5} by x -> 0*x+57
Function _ mbamaj malfa maps {3,5} by x -> 10*x+8
Function _ mbamajpenla maps {5} by x -> 0*x+59
Function fanej _’ maps {20} by x -> 0*x+60
Function fanej _’ _ maps {20}x{1} by (x0,x1) -> 0*x0+0*x1+61
Function fanej _’ ukwe maps {20} by x -> 0*x+62
Function fanej _’ fane maps {20} by x -> 0*x+63
Function fanej _’ malpu maps {20} by x -> 0*x+64
Function fanej _’ mague maps {20} by x -> 0*x+65
Function fanej _’ kanchux maps {20} by x -> 0*x+66
Function fanej _’ kote maps {20} by x -> 0*x+67
Function fanej _’ malfa maps {20} by x -> 0*x+68
Function fanej _’ penla maps {20} by x -> 0*x+69
Function fanej _ mbamaj maps {20} by x -> 0*x+70
Function fanej _ mbamaj _ maps {20}x{1} by (x0,x1) -> 0*x0+0*x1+71
Function fanej _ mbamaj ukwe maps {20} by x -> 0*x+72
Function fanej _ mbamaj fane maps {20} by x -> 0*x+73
Function fanej _ mbamaj malpu maps {20} by x -> 0*x+74
Function fanej _ mbamaj mague maps {20} by x -> 0*x+75
Function fanej _ mbamaj kanchux maps {20} by x -> 0*x+76
Function fanej _ mbamaj kote maps {20} by x -> 0*x+77
Function fanej _ mbamaj malfa maps {20} by x -> 0*x+78
Function fanej _ mbamaj penla maps {20} by x -> 0*x+79
malpuj ñuxans is 80
Function malpuj ñuxans’ _ maps {1} by x -> 0*x+81
malpuj ñuxans’ ukwe is 82
malpuj ñuxans’ fane is 83
malpuj ñuxans’ malpu is 84
malpuj ñuxans’ mague is 85
malpuj ñuxans’ kanchux is 86
malpuj ñuxans’ kote is 87
malpuj ñuxans’ malfa is 88
malpuj ñuxans’ penla is 89
malpuj ñuxans mbama is 90
malpuj ñuxans mbamaj ukwe is 92
malpuj ñuxans mbamaj fane is 93
malpuj ñuxans mbamaj malpu is 94
malpuj ñuxans mbamaj mague is 95
Function malpuj ñuxans _ maps {mbamaj _} by x -> 1*x+80
malpuj ñuxans mbamaj kote is 97
malpuj ñuxans mbamaj malfa is 98
malpuj ñuxans mbamaj penla is 99
maxñu is 100

MG:
[ñulyi :: c1, -E, -A], 1
[fane’ :: c1, -C, -B, -F, -A], 3
[mague’ :: c1, -G, -B, -F], 5
[mbamaj  :: =c2A, c2, -H], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ñuxans :: c2, -D], 20
[ :: =c3, cFin], λx.x
[ukwe’ :: c1, -B, -A], 2
[malpu’ :: c1, -B, -A], 4
[k’anchux :: c1, -B, -A], 6
[kote’ :: c1, -B, -A], 7
[malfa’ :: c1, -B, -A], 8
[penla’ :: c1, -B, -A], 9
[ñuxans’ nulyi’ :: c3], 21
[ñuxans’  :: =c3B, c3], λx.'1X+20'(x)
[ :: =c1, +B, c3B], λx.x
[ jmbama’ :: =c1, +C, c3], λx.'0X+30'(x)
[ mbamajfane :: =c1, +C, c3], λx.'0X+33'(x)
[ mbamajmalpu :: =c1, +C, c3], λx.'0X+34'(x)
[ mbamajmague :: =c1, +C, c3], λx.'0X+35'(x)
[ mbamajkote :: =c1, +C, c3], λx.'0X+37'(x)
[ mbamaj penla :: =c1, +C, c3], λx.'0X+39'(x)
[ukwej ñuxans’ :: c3], 40
[ukwej  :: =c3*, c3], λx.'1X+41'(x)
[’  :: =c3E, =c3*********************D, c3*], λxλy.'0X+0Y'(x,y)
[’ ukwe :: =c2, +D, c3**], λx.'0X'(x)
[’ fane :: =c2, +D, c3***], λx.'0X'(x)
[’ malpu :: =c2, +D, c3****], λx.'0X'(x)
[’ mague :: =c2, +D, c3*****], λx.'0X'(x)
[’ kanchux :: =c2, +D, c3******], λx.'0X'(x)
[’ kote :: =c2, +D, c3*******], λx.'0X'(x)
[’ malfa :: =c2, +D, c3********], λx.'0X'(x)
[’ penla :: =c2, +D, c3*********], λx.'0X'(x)
[maguej mbama’ :: c3], 50
[ mbamaj :: =c3E, =c3F, c3], λxλy.'0X+10Y+1'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, +E, c3E], λx.x
[ mbamajukwe :: =c1, +F, c3], λx.'10X+2'(x)
[ mbamaj fane :: =c1, +G, c3], λx.'0X+53'(x)
[ mbamaj malpu :: =c1, +G, c3], λx.'0X+54'(x)
[ mbamaj mague :: =c1, +G, c3], λx.'0X+55'(x)
[ mbamajkanchux :: =c1, +F, c3], λx.'10X+6'(x)
[ mbamaj kote :: =c1, +G, c3], λx.'0X+57'(x)
[ mbamaj malfa :: =c1, +F, c3], λx.'10X+8'(x)
[ mbamajpenla :: =c1, +G, c3], λx.'0X+59'(x)
[fanej  :: =c3**********, c3], λx.'1X+60'(x)
[’ :: =c2, +D, c3**********], λx.'0X'(x)
[’  :: =c3E, =c3*********************D, c3***********], λxλy.'0X+0Y'(x,y)
[’ ukwe :: =c2, +D, c3************], λx.'0X'(x)
[’ fane :: =c2, +D, c3*************], λx.'0X'(x)
[’ malpu :: =c2, +D, c3**************], λx.'0X'(x)
[’ mague :: =c2, +D, c3***************], λx.'0X'(x)
[’ kanchux :: =c2, +D, c3****************], λx.'0X'(x)
[’ kote :: =c2, +D, c3*****************], λx.'0X'(x)
[’ malfa :: =c2, +D, c3******************], λx.'0X'(x)
[’ penla :: =c2, +D, c3*******************], λx.'0X'(x)
[ mbamaj :: =c2, +D, c3********************], λx.'0X'(x)
[ mbamaj  :: =c3E, =c3*********************D, c3*********************], λxλy.'0X+0Y'(x,y)
[ :: =c2, +D, c3*********************D], λx.x
[malpuj ñuxans :: c3], 80
[malpuj ñuxans’  :: =c3E, c3], λx.'0X+81'(x)
[malpuj ñuxans’ ukwe :: c3], 82
[malpuj ñuxans’ fane :: c3], 83
[malpuj ñuxans’ malpu :: c3], 84
[malpuj ñuxans’ mague :: c3], 85
[malpuj ñuxans’ kanchux :: c3], 86
[malpuj ñuxans’ kote :: c3], 87
[malpuj ñuxans’ malfa :: c3], 88
[malpuj ñuxans’ penla :: c3], 89
[malpuj ñuxans mbama :: c3], 90
[malpuj ñuxans mbamaj ukwe :: c3], 92
[malpuj ñuxans mbamaj fane :: c3], 93
[malpuj ñuxans mbamaj malpu :: c3], 94
[malpuj ñuxans mbamaj mague :: c3], 95
[malpuj ñuxans  :: =c3H, c3], λx.'1X+80'(x)
[ :: =c2, +H, c3H], λx.x
[malpuj ñuxans mbamaj kote :: c3], 97
[malpuj ñuxans mbamaj malfa :: c3], 98
[malpuj ñuxans mbamaj penla :: c3], 99
[maxñu :: c3], 100
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[mbama’ :: c2], 10
[mbamaj mague’ :: c2], 15
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +G, +B, +F, c1, -G], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c1, +C, +B, +F, +A, c1, -C], λx.x


Learning Georgian
Learned 999 words in Georgian and structured them in 160 functions.
It took 219 samples to learn those.
Those are:
ერთი is 1
ორი is 2
სამი is 3
ოთხი is 4
ხუთი is 5
ექვსი is 6
შვიდი is 7
რვა is 8
ცხრა is 9
ათი is 10
თერთმეტი is 11
თორმეტი is 12
ცამეტი is 13
თოთხმეტი is 14
თხუთმეტი is 15
თექვსმეტი is 16
ჩვიდმეტი is 17
თვრამეტი is 18
Function _მეტი maps {9} by x -> 0*x+19
ოცი is 20
Function ოცდა_ maps {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+20
ოცდაათი is 30
Function ოცდამე_ maps {17} by x -> 0*x+37
ორმოცი is 40
Function ორმოცდა_ maps {1,2,3,4,5,6,7,9,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+40
ორმოცდარვა is 48
ორმოცდაათი is 50
Function ორმოცდამე_ maps {17} by x -> 0*x+57
სამოცი is 60
Function სამოცდა_ maps {1,2,3,4,5,6,7,8,9,11,13,14,16,18,_მეტი} by x -> 1*x+60
სამოცდაათი is 70
სამოცდათორმეტი is 72
სამოცდათხუთმეტი is 75
Function სამოცდამე_ maps {17} by x -> 0*x+77
ოთხმოცი is 80
Function ოთხმოცდა_ maps {1,2,3,4,5,6,7,8,9,11,12,13,14,15,18,_მეტი} by x -> 1*x+80
ოთხმოცდაათი is 90
ოთხმოცდათექვსმეტი is 96
Function ოთხმოცდამე_ maps {17} by x -> 0*x+97
ასი is 100
Function ას _ maps {10,11,12,13,14,15,16,17,18} by x -> 1*x+100
Function ას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+100
ას ოცი is 120
Function ას ოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,_მეტი} by x -> 1*x+120
ას ოცდათორმეტი is 132
ას ოცდათხუთმეტი is 135
Function ას ოცდამე_ maps {17} by x -> 0*x+137
ას ორმოცი is 140
Function ას ორმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,_მეტი} by x -> 1*x+140
ას ორმოცდათოთხმეტი is 154
Function ას ორმოცდამე_ maps {17} by x -> 0*x+157
ას სამოცი is 160
Function ას სამოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,_მეტი} by x -> 1*x+160
ას სამოცდათექვსმეტი is 176
Function ას სამოცდამე_ maps {17} by x -> 0*x+177
ას ოთხმოცი is 180
Function ას ოთხმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,_მეტი} by x -> 1*x+180
ას ოთხმოცდათხუთმეტი is 195
Function ას ოთხმოცდამე_ maps {17} by x -> 0*x+197
ას ოთხმოცდათვრამეტი is 198
ორასი is 200
Function ორას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+200
Function ორას _ maps {10,11,12,13,14,15,16,17,18} by x -> 1*x+200
ორას ოცი is 220
Function ორას ოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+220
Function ორას ოცდამე_ maps {17} by x -> 0*x+237
ორას ორმოცი is 240
Function ორას ორმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+240
Function ორას ორმოცდამე_ maps {17} by x -> 0*x+257
ორას სამოცი is 260
Function ორას სამოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+260
Function ორას სამოცდამე_ maps {17} by x -> 0*x+277
ორას ოთხმოცი is 280
Function ორას ოთხმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+280
Function ორას ოთხმოცდამე_ maps {17} by x -> 0*x+297
სამასი is 300
Function სამას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+300
Function სამას _ maps {10,11,12,13,14,15,16,17,18} by x -> 1*x+300
სამას ოცი is 320
Function სამას ოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+320
Function სამას ოცდამე_ maps {17} by x -> 0*x+337
სამას ორმოცი is 340
Function სამას ორმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+340
Function სამას ორმოცდამე_ maps {17} by x -> 0*x+357
სამას სამოცი is 360
Function სამას სამოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+360
Function სამას სამოცდამე_ maps {17} by x -> 0*x+377
სამას ოთხმოცი is 380
Function სამას ოთხმოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+380
Function სამას ოთხმოცდამე_ maps {17} by x -> 0*x+397
ოთხასი is 400
Function ოთხას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+400
Function ოთხას _ maps {10,11,12,13,14,15,16,17,18,20} by x -> 1*x+400
Function ოთხას ოცდა_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,_მეტი} by x -> 1*x+420
Function ოთხას ოცდამე_ maps {17} by x -> 0*x+437
Function ოთხას ორმ_ maps {20,ოცდა_} by x -> 1*x+420
Function ოთხას ორმოცდა_ maps {10} by x -> 0*x+450
Function ოთხას ორმოცდამე_ maps {17} by x -> 0*x+457
Function ოთხას სამ_ maps {20,ოცდა_} by x -> 1*x+440
Function ოთხას სამოცდა_ maps {10} by x -> 0*x+470
Function ოთხას სამოცდამე_ maps {17} by x -> 0*x+477
Function ოთხას ოთხმ_ maps {20,ოცდა_} by x -> 1*x+460
Function ოთხას ოთხმოცდა_ maps {10} by x -> 0*x+490
Function ოთხას ოთხმოცდამე_ maps {17} by x -> 0*x+497
ხუთასი is 500
Function ხუთას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+500
Function ხუთას _ maps {10,11,12,13,14,15,16,17,18,20,ოცდა_} by x -> 1*x+500
Function ხუთას ოცდა_ maps {10} by x -> 0*x+530
Function ხუთას ოცდამე_ maps {17} by x -> 0*x+537
Function ხუთას ორმ_ maps {20,ოცდა_} by x -> 1*x+520
Function ხუთას ორმოცდა_ maps {10} by x -> 0*x+550
Function ხუთას ორმოცდამე_ maps {17} by x -> 0*x+557
Function ხუთას სამ_ maps {20,ოცდა_} by x -> 1*x+540
Function ხუთას სამოცდა_ maps {10} by x -> 0*x+570
Function ხუთას სამოცდამე_ maps {17} by x -> 0*x+577
Function ხუთას ოთხმ_ maps {20,ოცდა_} by x -> 1*x+560
Function ხუთას ოთხმოცდა_ maps {10} by x -> 0*x+590
Function ხუთას ოთხმოცდამე_ maps {17} by x -> 0*x+597
ექვსასი is 600
Function ექვსას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+600
Function ექვსას _ maps {10,11,12,13,14,15,16,17,18,20,ოცდა_} by x -> 1*x+600
Function ექვსას ოცდა_ maps {10} by x -> 0*x+630
Function ექვსას ოცდამე_ maps {17} by x -> 0*x+637
Function ექვსას ორმ_ maps {20,ოცდა_} by x -> 1*x+620
Function ექვსას ორმოცდა_ maps {10} by x -> 0*x+650
Function ექვსას ორმოცდამე_ maps {17} by x -> 0*x+657
Function ექვსას სამ_ maps {20,ოცდა_} by x -> 1*x+640
Function ექვსას სამოცდა_ maps {10} by x -> 0*x+670
Function ექვსას სამოცდამე_ maps {17} by x -> 0*x+677
Function ექვსას ოთხმ_ maps {20,ოცდა_} by x -> 1*x+660
Function ექვსას ოთხმოცდა_ maps {10} by x -> 0*x+690
Function ექვსას ოთხმოცდამე_ maps {17} by x -> 0*x+697
შვიდასი is 700
Function შვიდას_ maps {1,2,3,4,5,6,7,8,9,_მეტი} by x -> 1*x+700
Function შვიდას _ maps {10,11,12,13,14,15,16,17,18,20,ოცდა_} by x -> 1*x+700
Function შვიდას ოცდა_ maps {10} by x -> 0*x+730
Function შვიდას ოცდამე_ maps {17} by x -> 0*x+737
Function შვიდას ორმ_ maps {20,ოცდა_} by x -> 1*x+720
Function შვიდას ორმოცდა_ maps {10} by x -> 0*x+750
Function შვიდას ორმოცდამე_ maps {17} by x -> 0*x+757
Function შვიდას სამ_ maps {20,ოცდა_} by x -> 1*x+740
Function შვიდას სამოცდა_ maps {10} by x -> 0*x+770
Function შვიდას სამოცდამე_ maps {17} by x -> 0*x+777
Function შვიდას ოთხმ_ maps {20,ოცდა_} by x -> 1*x+760
Function შვიდას ოთხმოცდა_ maps {10} by x -> 0*x+790
Function შვიდას ოთხმოცდამე_ maps {17} by x -> 0*x+797
Function _ას ოცდა_ maps {8}x{10} by (x0,x1) -> 0*x0+0*x1+830
Function _ას ორმოცდა_ maps {8}x{10} by (x0,x1) -> 0*x0+0*x1+850
Function _ას სამოცდა_ maps {8}x{10} by (x0,x1) -> 0*x0+0*x1+870
Function _ას ოთხმოცდა_ maps {8}x{10} by (x0,x1) -> 0*x0+0*x1+890
Function _ასი maps {8,9} by x -> 100*x+0
Function _ას_ maps {8,9}x{1,2,3,4,5,6,7,8,9,_მეტი} by (x0,x1) -> 100*x0+1*x1
Function _ას _ maps {8,9}x{10,11,12,13,14,15,16,17,18,20,ოცდა_,30} by (x0,x1) -> 100*x0+1*x1
Function _ას ოცდამე_ maps {8,9}x{17} by (x0,x1) -> 100*x0+2*x1+3
Function _ას ორმ_ maps {8,9}x{20,ოცდა_,30} by (x0,x1) -> 100*x0+1*x1+20
Function _ას ორმოცდამე_ maps {8,9}x{17} by (x0,x1) -> 100*x0+3*x1+6
Function _ას სამ_ maps {8,9}x{20,ოცდა_,30} by (x0,x1) -> 100*x0+1*x1+40
Function _ას სამოცდამე_ maps {8,9}x{17} by (x0,x1) -> 100*x0+5*x1+-8
Function _ას ოთხმ_ maps {8,9}x{20,ოცდა_,30} by (x0,x1) -> 100*x0+1*x1+60
Function _ას ოთხმოცდამე_ maps {8,9}x{17} by (x0,x1) -> 100*x0+6*x1+-5

MG:
[ცხრა :: c1, -A, -T, -D0], 9
[ათი :: c2, -Q, -L, -M, -N0, -U0, -I, -R0, -K, -J, -G, -S2], 10
[ჩვიდმეტი :: c2, -C, -N0, -U0, -R0, -G, -S2], 17
[ :: =c4, cFin], λx.x
[მეტი :: =c1, +A, c2, -H, -L, -M, -E, -I, -F, -D, -K, -J, -B, -S2], λx.'0X+19'(x)
[ :: =c1, c2, -H], λx.x
[ერთი :: c1, -D0], 1
[ორი :: c1, -D0], 2
[სამი :: c1, -D0], 3
[ოთხი :: c1, -D0], 4
[ხუთი :: c1, -D0], 5
[ექვსი :: c1, -D0], 6
[შვიდი :: c1, -D0], 7
[რვა :: c1, -T], 8
[თერთმეტი :: c2, -L, -M, -E, -N0, -U0, -I, -F, -D, -R0, -K, -J, -B, -G, -S2], 11
[თორმეტი :: c2, -L, -M, -N0, -U0, -F, -D, -R0, -K, -J, -B, -G, -S2], 12
[ცამეტი :: c2, -L, -M, -E, -N0, -U0, -I, -F, -D, -R0, -K, -J, -B, -G, -S2], 13
[თოთხმეტი :: c2, -L, -M, -E, -N0, -U0, -I, -F, -D, -R0, -K, -B, -G, -S2], 14
[თექვსმეტი :: c2, -L, -M, -E, -N0, -U0, -I, -D, -R0, -J, -B, -G, -S2], 16
[ :: =c1, c2, -L], λx.x
[თხუთმეტი :: c2, -M, -N0, -U0, -F, -D, -R0, -K, -J, -B, -G, -S2], 15
[თვრამეტი :: c2, -M, -E, -N0, -U0, -I, -F, -D, -R0, -K, -J, -B, -G, -S2], 18
[ :: =c1, c2, -M], λx.x
[ :: =c1, c2, -E], λx.x
[ოცი :: c3, -N, -U, -R, -V, -P, -S1], 20
[ :: =c2, +N0, c3, -N], λx.x
[ოცდა :: =c3B, c3, -U, -R, -V, -P, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[ოცდაათი :: c3, -U, -V, -S1], 30
[ :: =c2, +U0, c3, -U], λx.x
[ :: =c1, c2, -I], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D0, c2, -D], λx.x
[ :: =c2, +R0, c3, -R], λx.x
[ :: =c1, c2, -K], λx.x
[ :: =c1, c2, -J], λx.x
[ :: =c1, c2, -B], λx.x
[ორმოცი :: c4], 40
[ორმოცდა :: =c4D, c4], λx.'1X+40'(x)
[ :: =c2, +D, c4D], λx.x
[ორმოცდარვა :: c4], 48
[ორმოცდაათი :: c4], 50
[ორმოცდამე :: =c3C, c4], λx.'0X+57'(x)
[სამოცი :: c4], 60
[სამოცდა :: =c4E, c4], λx.'1X+60'(x)
[ :: =c2, +E, c4E], λx.x
[სამოცდაათი :: c4], 70
[სამოცდათორმეტი :: c4], 72
[სამოცდათხუთმეტი :: c4], 75
[სამოცდამე :: =c3C, c4], λx.'0X+77'(x)
[ოთხმოცი :: c4], 80
[ოთხმოცდა :: =c4F, c4], λx.'1X+80'(x)
[ :: =c2, +F, c4F], λx.x
[ოთხმოცდაათი :: c4], 90
[ოთხმოცდათექვსმეტი :: c4], 96
[ოთხმოცდამე :: =c3C, c4], λx.'0X+97'(x)
[ასი :: c4], 100
[ას  :: =c4G, c4], λx.'1X+100'(x)
[ :: =c2, +G, c4G], λx.x
[ას :: =c4H, c4], λx.'1X+100'(x)
[ :: =c2, +H, c4H], λx.x
[ას ოცი :: c4], 120
[ას ოცდა :: =c4I, c4], λx.'1X+120'(x)
[ :: =c2, +I, c4I], λx.x
[ას ოცდათორმეტი :: c4], 132
[ას ოცდათხუთმეტი :: c4], 135
[ას ოცდამე :: =c3C, c4], λx.'0X+137'(x)
[ას ორმოცი :: c4], 140
[ას ორმოცდა :: =c4J, c4], λx.'1X+140'(x)
[ :: =c2, +J, c4J], λx.x
[ას ორმოცდათოთხმეტი :: c4], 154
[ას ორმოცდამე :: =c3C, c4], λx.'0X+157'(x)
[ას სამოცი :: c4], 160
[ას სამოცდა :: =c4K, c4], λx.'1X+160'(x)
[ :: =c2, +K, c4K], λx.x
[ას სამოცდათექვსმეტი :: c4], 176
[ას სამოცდამე :: =c3C, c4], λx.'0X+177'(x)
[ას ოთხმოცი :: c4], 180
[ას ოთხმოცდა :: =c4L, c4], λx.'1X+180'(x)
[ :: =c2, +L, c4L], λx.x
[ას ოთხმოცდათხუთმეტი :: c4], 195
[ას ოთხმოცდამე :: =c3C, c4], λx.'0X+197'(x)
[ას ოთხმოცდათვრამეტი :: c4], 198
[ორასი :: c4], 200
[ორას :: =c4H, c4], λx.'1X+200'(x)
[ორას  :: =c4G, c4], λx.'1X+200'(x)
[ორას ოცი :: c4], 220
[ორას ოცდა :: =c4M, c4], λx.'1X+220'(x)
[ :: =c2, +M, c4M], λx.x
[ორას ოცდამე :: =c3C, c4], λx.'0X+237'(x)
[ორას ორმოცი :: c4], 240
[ორას ორმოცდა :: =c4M, c4], λx.'1X+240'(x)
[ორას ორმოცდამე :: =c3C, c4], λx.'0X+257'(x)
[ორას სამოცი :: c4], 260
[ორას სამოცდა :: =c4M, c4], λx.'1X+260'(x)
[ორას სამოცდამე :: =c3C, c4], λx.'0X+277'(x)
[ორას ოთხმოცი :: c4], 280
[ორას ოთხმოცდა :: =c4M, c4], λx.'1X+280'(x)
[ორას ოთხმოცდამე :: =c3C, c4], λx.'0X+297'(x)
[სამასი :: c4], 300
[სამას :: =c4H, c4], λx.'1X+300'(x)
[სამას  :: =c4G, c4], λx.'1X+300'(x)
[სამას ოცი :: c4], 320
[სამას ოცდა :: =c4M, c4], λx.'1X+320'(x)
[სამას ოცდამე :: =c3C, c4], λx.'0X+337'(x)
[სამას ორმოცი :: c4], 340
[სამას ორმოცდა :: =c4M, c4], λx.'1X+340'(x)
[სამას ორმოცდამე :: =c3C, c4], λx.'0X+357'(x)
[სამას სამოცი :: c4], 360
[სამას სამოცდა :: =c4M, c4], λx.'1X+360'(x)
[სამას სამოცდამე :: =c3C, c4], λx.'0X+377'(x)
[სამას ოთხმოცი :: c4], 380
[სამას ოთხმოცდა :: =c4M, c4], λx.'1X+380'(x)
[სამას ოთხმოცდამე :: =c3C, c4], λx.'0X+397'(x)
[ოთხასი :: c4], 400
[ოთხას :: =c4H, c4], λx.'1X+400'(x)
[ოთხას  :: =c4N, c4], λx.'1X+400'(x)
[ :: =c3, +N, c4N], λx.x
[ოთხას ოცდა :: =c4M, c4], λx.'1X+420'(x)
[ოთხას ოცდამე :: =c3C, c4], λx.'0X+437'(x)
[ოთხას ორმ :: =c4P, c4], λx.'1X+420'(x)
[ :: =c3, +P, c4P], λx.x
[ოთხას ორმოცდა :: =c4Q, c4], λx.'0X+450'(x)
[ :: =c2, +Q, c4Q], λx.x
[ოთხას ორმოცდამე :: =c3C, c4], λx.'0X+457'(x)
[ოთხას სამ :: =c4P, c4], λx.'1X+440'(x)
[ოთხას სამოცდა :: =c4Q, c4], λx.'0X+470'(x)
[ოთხას სამოცდამე :: =c3C, c4], λx.'0X+477'(x)
[ოთხას ოთხმ :: =c4P, c4], λx.'1X+460'(x)
[ოთხას ოთხმოცდა :: =c4Q, c4], λx.'0X+490'(x)
[ოთხას ოთხმოცდამე :: =c3C, c4], λx.'0X+497'(x)
[ხუთასი :: c4], 500
[ხუთას :: =c4H, c4], λx.'1X+500'(x)
[ხუთას  :: =c4R, c4], λx.'1X+500'(x)
[ :: =c3, +R, c4R], λx.x
[ხუთას ოცდა :: =c4Q, c4], λx.'0X+530'(x)
[ხუთას ოცდამე :: =c3C, c4], λx.'0X+537'(x)
[ხუთას ორმ :: =c4P, c4], λx.'1X+520'(x)
[ხუთას ორმოცდა :: =c4Q, c4], λx.'0X+550'(x)
[ხუთას ორმოცდამე :: =c3C, c4], λx.'0X+557'(x)
[ხუთას სამ :: =c4P, c4], λx.'1X+540'(x)
[ხუთას სამოცდა :: =c4Q, c4], λx.'0X+570'(x)
[ხუთას სამოცდამე :: =c3C, c4], λx.'0X+577'(x)
[ხუთას ოთხმ :: =c4P, c4], λx.'1X+560'(x)
[ხუთას ოთხმოცდა :: =c4Q, c4], λx.'0X+590'(x)
[ხუთას ოთხმოცდამე :: =c3C, c4], λx.'0X+597'(x)
[ექვსასი :: c4], 600
[ექვსას :: =c4H, c4], λx.'1X+600'(x)
[ექვსას  :: =c4R, c4], λx.'1X+600'(x)
[ექვსას ოცდა :: =c4Q, c4], λx.'0X+630'(x)
[ექვსას ოცდამე :: =c3C, c4], λx.'0X+637'(x)
[ექვსას ორმ :: =c4P, c4], λx.'1X+620'(x)
[ექვსას ორმოცდა :: =c4Q, c4], λx.'0X+650'(x)
[ექვსას ორმოცდამე :: =c3C, c4], λx.'0X+657'(x)
[ექვსას სამ :: =c4P, c4], λx.'1X+640'(x)
[ექვსას სამოცდა :: =c4Q, c4], λx.'0X+670'(x)
[ექვსას სამოცდამე :: =c3C, c4], λx.'0X+677'(x)
[ექვსას ოთხმ :: =c4P, c4], λx.'1X+660'(x)
[ექვსას ოთხმოცდა :: =c4Q, c4], λx.'0X+690'(x)
[ექვსას ოთხმოცდამე :: =c3C, c4], λx.'0X+697'(x)
[შვიდასი :: c4], 700
[შვიდას :: =c4H, c4], λx.'1X+700'(x)
[შვიდას  :: =c4R, c4], λx.'1X+700'(x)
[შვიდას ოცდა :: =c4Q, c4], λx.'0X+730'(x)
[შვიდას ოცდამე :: =c3C, c4], λx.'0X+737'(x)
[შვიდას ორმ :: =c4P, c4], λx.'1X+720'(x)
[შვიდას ორმოცდა :: =c4Q, c4], λx.'0X+750'(x)
[შვიდას ორმოცდამე :: =c3C, c4], λx.'0X+757'(x)
[შვიდას სამ :: =c4P, c4], λx.'1X+740'(x)
[შვიდას სამოცდა :: =c4Q, c4], λx.'0X+770'(x)
[შვიდას სამოცდამე :: =c3C, c4], λx.'0X+777'(x)
[შვიდას ოთხმ :: =c4P, c4], λx.'1X+760'(x)
[შვიდას ოთხმოცდა :: =c4Q, c4], λx.'0X+790'(x)
[შვიდას ოთხმოცდამე :: =c3C, c4], λx.'0X+797'(x)
[ას ოცდა :: =c4Q, =c4, c4], λxλy.'0X+0Y+830'(x,y)
[ას ორმოცდა :: =c4Q, =c4, c4], λxλy.'0X+0Y+850'(x,y)
[ას სამოცდა :: =c4Q, =c4, c4], λxλy.'0X+0Y+870'(x,y)
[ას ოთხმოცდა :: =c4Q, =c4, c4], λxλy.'0X+0Y+890'(x,y)
[ასი :: =c1, +T, c4], λx.'100X'(x)
[ას :: =c4H, =c4T, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +T, c4T], λx.x
[ას  :: =c4U, =c4T, c4], λxλy.'1X+100Y'(x,y)
[ :: =c3, +U, c4U], λx.x
[ას ოცდამე :: =c3C, =c4T, c4], λxλy.'2X+100Y+3'(x,y)
[ას ორმ :: =c4V, =c4T, c4], λxλy.'1X+100Y+20'(x,y)
[ :: =c3, +V, c4V], λx.x
[ას ორმოცდამე :: =c3C, =c4T, c4], λxλy.'3X+100Y+6'(x,y)
[ას სამ :: =c4V, =c4T, c4], λxλy.'1X+100Y+40'(x,y)
[ას სამოცდამე :: =c3C, =c4T, c4], λxλy.'5X+100Y+-8'(x,y)
[ას ოთხმ :: =c4V, =c4T, c4], λxλy.'1X+100Y+60'(x,y)
[ას ოთხმოცდამე :: =c3C, =c4T, c4], λxλy.'6X+100Y+-5'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ოცდამე :: =c3C, c3, -S1], λx.'0X+37'(x)
[ :: =c2, +C, c3C], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +R0, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +L, c2], λx.x
[ :: =c2, +M, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c3, +N, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c3, +R, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c3, +P, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +N0, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c3, +U, c3], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c2, +Q, c2], λx.x
[ :: =c1, +T, c1], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +U0, c2], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c3, +V, c3], λx.x
[ :: =c2, +I, +D, +R0, +J, +B, +G, +S2, c2, -I], λx.x
[ :: =c2, +M, +E, +I, +F, +D, +K, +J, +B, +S2, c2, -M], λx.x
[ :: =c2, +L, +M, +E, +I, +F, +D, +K, +J, +B, +S2, c2, -L], λx.x
[ :: =c2, +N0, +U0, +I, +R0, +K, +J, +G, +S2, c2, -N0], λx.x
[ :: =c2, +R0, +K, +J, +B, +G, +S2, c2, -R0], λx.x
[ :: =c2, +M, +N0, +U0, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -M], λx.x
[ :: =c2, +U0, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -U0], λx.x
[ :: =c1, +A, +T, +D0, c1, -A], λx.x
[ :: =c2, +K, +J, +B, +G, +S2, c2, -K], λx.x
[ :: =c2, +R0, +K, +B, +G, +S2, c2, -R0], λx.x
[ :: =c2, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -I], λx.x
[ :: =c2, +D, +R0, +J, +B, +G, +S2, c2, -D], λx.x
[ :: =c2, +N0, +U0, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -N0], λx.x
[ :: =c3, +U, +R, +V, +P, +S1, c3, -U], λx.x
[ :: =c2, +M, +E, +N0, +U0, +I, +D, +R0, +J, +B, +G, +S2, c2, -M], λx.x
[ :: =c2, +N0, +U0, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -N0], λx.x
[ :: =c3, +V, +P, +S1, c3, -V], λx.x
[ :: =c3, +V, +S1, c3, -V], λx.x
[ :: =c1, +T, +D0, c1, -T], λx.x
[ :: =c2, +I, +F, +D, +K, +J, +B, +S2, c2, -I], λx.x
[ :: =c2, +D, +R0, +K, +J, +B, +G, +S2, c2, -D], λx.x
[ :: =c2, +L, +M, +E, +N0, +U0, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -L], λx.x
[ :: =c2, +E, +N0, +U0, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -E], λx.x
[ :: =c2, +C, +N0, +U0, +R0, +G, +S2, c2, -C], λx.x
[ :: =c2, +U0, +I, +D, +R0, +J, +B, +G, +S2, c2, -U0], λx.x
[ :: =c3, +U, +V, +S1, c3, -U], λx.x
[ :: =c2, +L, +M, +N0, +U0, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -L], λx.x
[ :: =c2, +N0, +U0, +R0, +G, +S2, c2, -N0], λx.x
[ :: =c2, +E, +I, +F, +D, +K, +J, +B, +S2, c2, -E], λx.x
[ :: =c2, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -F], λx.x
[ :: =c2, +K, +J, +G, +S2, c2, -K], λx.x
[ :: =c2, +E, +N0, +U0, +I, +D, +R0, +J, +B, +G, +S2, c2, -E], λx.x
[ :: =c2, +E, +N0, +U0, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -E], λx.x
[ :: =c2, +M, +N0, +U0, +I, +R0, +K, +J, +G, +S2, c2, -M], λx.x
[ :: =c2, +R0, +J, +B, +G, +S2, c2, -R0], λx.x
[ :: =c2, +U0, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -U0], λx.x
[ :: =c2, +J, +G, +S2, c2, -J], λx.x
[ :: =c2, +F, +D, +K, +J, +B, +S2, c2, -F], λx.x
[ :: =c2, +L, +M, +E, +N0, +U0, +I, +D, +R0, +J, +B, +G, +S2, c2, -L], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c2, +K, +B, +G, +S2, c2, -K], λx.x
[ :: =c3, +R, +V, +P, +S1, c3, -R], λx.x
[ :: =c2, +U0, +R0, +G, +S2, c2, -U0], λx.x
[ :: =c3, +P, +S1, c3, -P], λx.x
[ :: =c2, +B, +G, +S2, c2, -B], λx.x
[ :: =c2, +H, +L, +M, +E, +I, +F, +D, +K, +J, +B, +S2, c2, -H], λx.x
[ :: =c2, +J, +B, +S2, c2, -J], λx.x
[ :: =c3, +N, +U, +R, +V, +P, +S1, c3, -N], λx.x
[ :: =c2, +R0, +K, +J, +G, +S2, c2, -R0], λx.x
[ :: =c2, +Q, +L, +M, +N0, +U0, +I, +R0, +K, +J, +G, +S2, c2, -Q], λx.x
[ :: =c2, +N0, +U0, +I, +D, +R0, +J, +B, +G, +S2, c2, -N0], λx.x
[ :: =c2, +B, +S2, c2, -B], λx.x
[ :: =c2, +R0, +G, +S2, c2, -R0], λx.x
[ :: =c2, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -I], λx.x
[ :: =c2, +K, +J, +B, +S2, c2, -K], λx.x
[ :: =c2, +D, +R0, +K, +B, +G, +S2, c2, -D], λx.x
[ :: =c2, +L, +M, +E, +N0, +U0, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -L], λx.x
[ :: =c2, +F, +D, +R0, +K, +B, +G, +S2, c2, -F], λx.x
[ :: =c2, +I, +R0, +K, +J, +G, +S2, c2, -I], λx.x
[ :: =c2, +N0, +U0, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -N0], λx.x
[ :: =c2, +U0, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -U0], λx.x
[ :: =c2, +D, +K, +J, +B, +S2, c2, -D], λx.x
[ :: =c2, +M, +E, +N0, +U0, +I, +F, +D, +R0, +K, +J, +B, +G, +S2, c2, -M], λx.x
[ :: =c2, +J, +B, +G, +S2, c2, -J], λx.x
[ :: =c2, +L, +M, +N0, +U0, +I, +R0, +K, +J, +G, +S2, c2, -L], λx.x
[ :: =c2, +M, +E, +N0, +U0, +I, +F, +D, +R0, +K, +B, +G, +S2, c2, -M], λx.x
[ :: =c2, +U0, +I, +R0, +K, +J, +G, +S2, c2, -U0], λx.x


Learning Calo

Learned 999 words in Calo and structured them in 32 functions.
It took 47 samples to learn those.
Those are:
yeque is 1
dui is 2
trin is 3
ostar is 4
panche is 5
jobe is 6
ester is 7
otor is 8
nebel is 9
deque is 10
yedeque is 11
Function _deque maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
bin is 20
Function bin_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trianda is 30
Function trianda_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
panchardí is 50
Function panchardí_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _nta maps {6} by x -> 0*x+60
Function _nta_ maps {6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _dí maps {4,7} by x -> 10*x+0
Function _dí_ maps {4,7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _enta maps {8} by x -> 0*x+80
Function _enta_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
esnete is 90
Function esnete_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
gres is 100
Function _ gres _ maps {1}x{1,2,3,4,5,6,7,8,9,10,11,_deque,20,bin_,30,trianda_,50,panchardí_,_nta,_nta_,_dí,_dí_,_enta,_enta_,90,esnete_} by (x0,x1) -> 50*x0+1*x1+50
Function _sgrés maps {2} by x -> 0*x+200
Function _sgrés _ maps {2}x{1,2,3,4,5,6,7,8,9,10,11,_deque,20,bin_,30,trianda_,50,panchardí_,_nta,_nta_,_dí,_dí_,_enta,_enta_,90,esnete_} by (x0,x1) -> 80*x0+1*x1+40
Function _grés maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _grés _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_deque,20,bin_,30,trianda_,50,panchardí_,_nta,_nta_,_dí,_dí_,_enta,_enta_,90,esnete_} by (x0,x1) -> 100*x0+1*x1

MG:
[yeque :: c1, -F], 1
[dui :: c1, -H, -A], 2
[jobe :: c1, -C, -I, -A], 6
[otor :: c1, -E, -I, -A], 8
[ :: =c3, cFin], λx.x
[deque :: c2, -S1], 10
[yedeque :: c2, -S1], 11
[deque :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[bin :: c2, -S1], 20
[bin :: =c1, c2, -S1], λx.'1X+20'(x)
[trianda :: c2, -S1], 30
[trianda :: =c1, c2, -S1], λx.'1X+30'(x)
[panchardí :: c2, -S1], 50
[panchardí :: =c1, c2, -S1], λx.'1X+50'(x)
[nta :: =c1, +C, c2, -S1], λx.'0X+60'(x)
[nta :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[dí :: =c1, +D, c2, -S1], λx.'10X'(x)
[dí :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[enta :: =c1, +E, c2, -S1], λx.'0X+80'(x)
[enta :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[esnete :: c2, -S1], 90
[esnete :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[trin :: c1, -I, -A], 3
[ostar :: c1, -I, -A, -D], 4
[panche :: c1, -I, -A], 5
[ester :: c1, -I, -A, -D], 7
[nebel :: c1, -I, -A], 9
[gres :: c3], 100
[ gres  :: =c2, =c3F, c3], λxλy.'1X+50Y+50'(x,y)
[ :: =c1, +F, c3F], λx.x
[sgrés :: =c1, +H, c3], λx.'0X+200'(x)
[sgrés  :: =c2, =c3H, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +H, c3H], λx.x
[grés :: =c1, +I, c3], λx.'100X'(x)
[grés  :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +I, +A, c1, -I], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +C, +I, +A, c1, -C], λx.x
[ :: =c1, +I, +A, +D, c1, -I], λx.x
[ :: =c1, +E, +I, +A, c1, -E], λx.x


Learning Polari
Learned 12 words in Polari and structured them in 11 functions.
It took 12 samples to learn those.
Those are:
una is 1
dooey is 2
tray is 3
quarter is 4
chinker is 5
say is 6
say oney is 7
Function say _ maps {2,3} by x -> 1*x+6
daiture is 10
long dedger is 11
kenza is 12

MG:
[ :: =c2, cFin], λx.x
[dooey :: c1, -A], 2
[tray :: c1, -A], 3
[quarter :: c2], 4
[chinker :: c2], 5
[say :: c2], 6
[say oney :: c2], 7
[say  :: =c2A, c2], λx.'1X+6'(x)
[ :: =c1, +A, c2A], λx.x
[daiture :: c2], 10
[long dedger :: c2], 11
[kenza :: c2], 12
[ :: =c1, c2], λx.x
[una :: c1], 1
[ :: =c1, +A, c1], λx.x


Learning Central-Tarahumara
Learned 100 words in Central-Tarahumara and structured them in 28 functions.
It took 37 samples to learn those.
Those are:
bilé is 1
okuá is 2
bikiyá is 3
nawó is 4
malí is 5
usani is 6
kicháo is 7
osánawó is 8
kímakoi is 9
makoi is 10
Function makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
osámakoi is 20
Function osámakoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
baisá makoi is 30
Function baisá makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
nawosa makoi is 40
Function nawosa makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
malisa makoi is 50
Function malisa makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
usansa makoi is 60
Function usansa makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _sa makoi maps {7} by x -> 0*x+70
Function _sa makoi miná _ maps {7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
osánawosa makoi is 80
Function osánawosa makoi miná _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function ki_sa makoi maps {10} by x -> 0*x+90
Function ki_sa makoi miná _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1
Function _ siento maps {1} by x -> 0*x+100

MG:
[bilé :: c1, -D, -A], 1
[kicháo :: c1, -B, -A], 7
[makoi :: c1, -C], 10
[ :: =c2, cFin], λx.x
[okuá :: c1, -A], 2
[bikiyá :: c1, -A], 3
[nawó :: c1, -A], 4
[malí :: c1, -A], 5
[usani :: c1, -A], 6
[osánawó :: c1, -A], 8
[kímakoi :: c1, -A], 9
[makoi miná  :: =c2**A, c2], λx.'1X+10'(x)
[osámakoi :: c2], 20
[osámakoi miná  :: =c2**A, c2], λx.'1X+20'(x)
[baisá makoi :: c2], 30
[baisá makoi miná  :: =c2**A, c2], λx.'1X+30'(x)
[nawosa makoi :: c2], 40
[nawosa makoi miná  :: =c2**A, c2], λx.'1X+40'(x)
[malisa makoi :: c2], 50
[malisa makoi miná  :: =c2**A, c2], λx.'1X+50'(x)
[usansa makoi :: c2], 60
[usansa makoi miná  :: =c2**A, c2], λx.'1X+60'(x)
[sa makoi :: =c1, +B, c2], λx.'0X+70'(x)
[sa makoi miná  :: =c2**A, =c2B, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[osánawosa makoi :: c2], 80
[osánawosa makoi miná  :: =c2**A, c2], λx.'1X+80'(x)
[ki :: =c2*, c2], λx.'1X+90'(x)
[sa makoi :: =c1, +C, c2*], λx.'0X'(x)
[sa makoi miná  :: =c2**A, =c2**C, c2**], λxλy.'1X+9Y'(x,y)
[ :: =c1, +C, c2**C], λx.x
[ :: =c1, +A, c2**A], λx.x
[ siento :: =c1, +D, c2], λx.'0X+100'(x)
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +D, +A, c1, -D], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Northern-Sami
Learned 999 words in Northern-Sami and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
okta is 1
guokte is 2
golbma is 3
njeallje is 4
vihtta is 5
guhtta is 6
čieža is 7
gávcci is 8
ovcci is 9
logi is 10
Function _nuppelohkái maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _logi maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _logi_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
čuođi is 100
Function čuođi_ maps {1,2,3,4,5,6,7,8,9,10,_nuppelohkái,_logi,_logi_} by x -> 1*x+100
Function _čuođi maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _čuođi_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_nuppelohkái,_logi,_logi_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[logi :: c2, -S1], 10
[nuppelohkái :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[logi :: =c1, +B, c2, -S1], λx.'10X'(x)
[logi :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[okta :: c1], 1
[guokte :: c1, -B], 2
[golbma :: c1, -B], 3
[njeallje :: c1, -B], 4
[vihtta :: c1, -B], 5
[guhtta :: c1, -B], 6
[čieža :: c1, -B], 7
[gávcci :: c1, -B], 8
[ovcci :: c1, -B], 9
[čuođi :: c3], 100
[čuođi :: =c2, c3], λx.'1X+100'(x)
[čuođi :: =c1, +B, c3], λx.'100X'(x)
[čuođi :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Nengone
Learned 30 words in Nengone and structured them in 28 functions.
It took 29 samples to learn those.
Those are:
sa is 1
rewe is 2
tini is 3
ece is 4
sedong is 5
Function sedong ne _ maps {1} by x -> 0*x+6
sedong ne rew is 7
sedong ne tin is 8
sedong ne ec is 9
ruenin is 10
Function ruenin ne _ maps {1} by x -> 0*x+11
ruenin ne rew is 12
ruenin ne tin is 13
ruenin ne ec is 14
adenin is 15
Function adenin ne _ maps {1} by x -> 0*x+16
adenin ne rew is 17
adenin ne tin is 18
adenin ne ec is 19
Function _rengom maps {1} by x -> 0*x+20
Function _rengom ne rew maps {1} by x -> 0*x+22
Function _rengom ne tin maps {1} by x -> 0*x+23
Function _rengom ne ec maps {1} by x -> 0*x+24
Function _rengom ne _ maps {1}x{1,5,10} by (x0,x1) -> 10*x0+1*x1+10
Function _rengom ne sedo_ maps {1}x{1} by (x0,x1) -> 0*x0+0*x1+26
Function _rengom ne sedorew maps {1} by x -> 0*x+27
Function _rengom ne sedotin maps {1} by x -> 0*x+28
Function _rengom ne sedoec maps {1} by x -> 0*x+29

MG:
[sa :: c1], 1
[ :: =c3, cFin], λx.x
[ruenin ne  :: =c1, c3], λx.'0X+11'(x)
[ruenin ne rew :: c3], 12
[ruenin ne tin :: c3], 13
[ruenin ne ec :: c3], 14
[adenin :: c3], 15
[adenin ne  :: =c1, c3], λx.'0X+16'(x)
[adenin ne rew :: c3], 17
[adenin ne tin :: c3], 18
[adenin ne ec :: c3], 19
[rengom :: =cnix, =c1, c3], λxλy.'1X+0Y+20'(x,y)
[ :: cnix], 0
[rengom ne rew :: =cnix, =c1, c3], λxλy.'1X+0Y+22'(x,y)
[rengom ne tin :: =cnix, =c1, c3], λxλy.'1X+0Y+23'(x,y)
[rengom ne ec :: =cnix, =c1, c3], λxλy.'1X+0Y+24'(x,y)
[rengom ne  :: =c3B, =c1, c3], λxλy.'1X+10Y+10'(x,y)
[ :: =c2, +B, c3B], λx.x
[rengom ne sedo :: =c1, =c1, c3], λxλy.'0X+0Y+26'(x,y)
[rengom ne sedorew :: =cnix, =c1, c3], λxλy.'1X+0Y+27'(x,y)
[rengom ne sedotin :: =cnix, =c1, c3], λxλy.'1X+0Y+28'(x,y)
[rengom ne sedoec :: =cnix, =c1, c3], λxλy.'1X+0Y+29'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[rewe :: c2, -S1], 2
[tini :: c2, -S1], 3
[ece :: c2, -S1], 4
[sedong :: c2, -S1, -B], 5
[sedong ne  :: =c1, c2, -S1], λx.'0X+6'(x)
[sedong ne rew :: c2, -S1], 7
[sedong ne tin :: c2, -S1], 8
[sedong ne ec :: c2, -S1], 9
[ruenin :: c2, -S1, -B], 10
[ :: =c1, c2, -B], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +S1, +B, c2, -S1], λx.x


Learning Romansh

Learned 999 words in Romansh and structured them in 56 functions.
It took 89 samples to learn those.
Those are:
in is 1
dus is 2
trais is 3
quatter is 4
Function tsch_tg maps {1} by x -> 0*x+5
sis is 6
set is 7
otg is 8
nov is 9
diesch is 10
Function _desch maps {1} by x -> 0*x+11
dudesch is 12
tredesch is 13
quattordesch is 14
Function qu_desch maps {1} by x -> 0*x+15
sedesch is 16
Function deschd_ maps {8} by x -> 0*x+18
Function desch_ maps {7,9} by x -> 1*x+10
ventg is 20
Function ventga_ maps {2,3,4,tsch_tg,6,7,9} by x -> 1*x+20
Function ventg_ maps {1,8} by x -> 1*x+20
trenta is 30
Function trenta_ maps {2,3,4,tsch_tg,6,7,9} by x -> 1*x+30
Function trent_ maps {1,8} by x -> 1*x+30
quaranta is 40
Function quarant_ maps {1} by x -> 0*x+41
Function quaranta_ maps {2,3,4,tsch_tg,6,7,9} by x -> 1*x+40
quarantotg is 48
tschuncanta is 50
Function tschuncanta_ maps {2,3,4,tsch_tg,6,7,9} by x -> 1*x+50
Function tschuncant_ maps {1,8} by x -> 1*x+50
sessanta is 60
Function sessanta_ maps {2,3,4,tsch_tg,6,7,9} by x -> 1*x+60
Function sessant_ maps {1,8} by x -> 1*x+60
Function _tanta maps {7} by x -> 0*x+70
Function _tanta_ maps {7}x{2,3,4,tsch_tg,6,7,9} by (x0,x1) -> 10*x0+1*x1
Function _tant_ maps {7}x{1,8} by (x0,x1) -> 10*x0+1*x1
Function _anta maps {8,9} by x -> 10*x+0
Function _ant_ maps {8,9}x{1,8} by (x0,x1) -> 10*x0+1*x1
Function _anta_ maps {8,9}x{2,3,4,tsch_tg,6,7,9} by (x0,x1) -> 10*x0+1*x1
tschient is 100
Function tschiente_ maps {2,3,4,tsch_tg,6,7,9,10,_desch,12,13,14,qu_desch,16,deschd_,desch_,20,ventga_,ventg_} by x -> 1*x+100
Function tschiented_ maps {1,8} by x -> 1*x+100
Function tschient_ maps {30,trent_,trenta_,40,quarant_,quaranta_,48,50,tschuncanta_,tschuncant_,60,sessanta_,sessant_,_tanta,_tanta_,_tant_,_anta,_ant_,_anta_} by x -> 1*x+100
duatschient is 200
Function duatschiente_ maps {2,3,4,tsch_tg,6,7,9,10,_desch,12,13,14,qu_desch,16,deschd_,desch_,20,ventga_,ventg_} by x -> 1*x+200
Function duatschiented_ maps {1,8} by x -> 1*x+200
Function duatschient_ maps {30,trent_,trenta_,40,quarant_,quaranta_,48,50,tschuncanta_,tschuncant_,60,sessanta_,sessant_,_tanta,_tanta_,_tant_,_anta,_ant_,_anta_} by x -> 1*x+200
traitschient is 300
Function traitschiente_ maps {2,3,4,tsch_tg,6,7,9,10,_desch,12,13,14,qu_desch,16,deschd_,desch_,20,ventga_,ventg_} by x -> 1*x+300
Function traitschiented_ maps {1,8} by x -> 1*x+300
Function traitschient_ maps {30,trent_,trenta_,40,quarant_,quaranta_,48,50,tschuncanta_,tschuncant_,60,sessanta_,sessant_,_tanta,_tanta_,_tant_,_anta,_ant_,_anta_} by x -> 1*x+300
Function _tschient maps {4,tsch_tg,6,7,8,9} by x -> 100*x+0
Function _tschiented_ maps {4,tsch_tg,6,7,8,9}x{1,8} by (x0,x1) -> 100*x0+1*x1
Function _tschiente_ maps {4,tsch_tg,6,7,8,9}x{2,3,4,tsch_tg,6,7,9,10,_desch,12,13,14,qu_desch,16,deschd_,desch_,20,ventga_,ventg_} by (x0,x1) -> 100*x0+1*x1
Function _tschient_ maps {4,tsch_tg,6,7,8,9}x{30,trent_,trenta_,40,quarant_,quaranta_,48,50,tschuncanta_,tschuncant_,60,sessanta_,sessant_,_tanta,_tanta_,_tant_,_anta,_ant_,_anta_} by (x0,x1) -> 100*x0+1*x1

MG:
[in :: c1], 1
[set :: c2, -F, -C, -J, -H0, -D, -S2], 7
[otg :: c2, -B, -E, -J, -G, -S2], 8
[ :: =c4, cFin], λx.x
[ :: =c1, c2, -E], λx.x
[nov :: c2, -C, -J, -H0, -G, -D, -S2], 9
[quatter :: c2, -J, -H0, -D, -S2], 4
[tsch :: =c2*, c2, -J, -H0, -D, -S2], λx.'1X+5'(x)
[tg :: =cnix, =c1, c2*], λxλy.'1X+0Y'(x,y)
[ :: cnix], 0
[sis :: c2, -J, -H0, -D, -S2], 6
[diesch :: c3, -H, -S1], 10
[desch :: =cnix, =c1, c3, -H, -S1], λxλy.'1X+0Y+11'(x,y)
[dudesch :: c3, -H, -S1], 12
[tredesch :: c3, -H, -S1], 13
[quattordesch :: c3, -H, -S1], 14
[qu :: =c3*, c3, -H, -S1], λx.'1X+15'(x)
[desch :: =cnix, =c1, c3*], λxλy.'1X+0Y'(x,y)
[sedesch :: c3, -H, -S1], 16
[deschd :: =c3B, c3, -H, -S1], λx.'0X+18'(x)
[ :: =c2, +B, c3B], λx.x
[desch :: =c3C, c3, -H, -S1], λx.'1X+10'(x)
[ :: =c2, +C, c3C], λx.x
[ventg :: c3, -H, -S1], 20
[ventga :: =c3D, c3, -H, -S1], λx.'1X+20'(x)
[ :: =c2, +D, c3D], λx.x
[ventg :: =c3E, c3, -H, -S1], λx.'1X+20'(x)
[ :: =c2, +E, c3E], λx.x
[ :: =c2, +H0, c3, -H], λx.x
[dus :: c2, -H0, -D, -S2], 2
[trais :: c2, -H0, -D, -S2], 3
[trenta :: c3, -I, -S1], 30
[trenta :: =c3D, c3, -I, -S1], λx.'1X+30'(x)
[trent :: =c3E, c3, -I, -S1], λx.'1X+30'(x)
[quaranta :: c3, -I, -S1], 40
[quarant :: =c1, c3, -I, -S1], λx.'0X+41'(x)
[quaranta :: =c3D, c3, -I, -S1], λx.'1X+40'(x)
[quarantotg :: c3, -I, -S1], 48
[tschuncanta :: c3, -I, -S1], 50
[tschuncanta :: =c3D, c3, -I, -S1], λx.'1X+50'(x)
[tschuncant :: =c3E, c3, -I, -S1], λx.'1X+50'(x)
[sessanta :: c3, -I, -S1], 60
[sessanta :: =c3D, c3, -I, -S1], λx.'1X+60'(x)
[sessant :: =c3E, c3, -I, -S1], λx.'1X+60'(x)
[tanta :: =c2, +F, c3, -I, -S1], λx.'0X+70'(x)
[tanta :: =c3D, =c3F, c3, -I, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c2, +F, c3F], λx.x
[tant :: =c3E, =c3F, c3, -I, -S1], λxλy.'1X+10Y'(x,y)
[anta :: =c2, +G, c3, -I, -S1], λx.'10X'(x)
[ant :: =c3E, =c3G, c3, -I, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c2, +G, c3G], λx.x
[anta :: =c3D, =c3G, c3, -I, -S1], λxλy.'1X+10Y'(x,y)
[tschient :: c4], 100
[tschiente :: =c4H, c4], λx.'1X+100'(x)
[ :: =c3, +H, c4H], λx.x
[tschiented :: =c3E, c4], λx.'1X+100'(x)
[tschient :: =c4I, c4], λx.'1X+100'(x)
[ :: =c3, +I, c4I], λx.x
[duatschient :: c4], 200
[duatschiente :: =c4H, c4], λx.'1X+200'(x)
[duatschiented :: =c3E, c4], λx.'1X+200'(x)
[duatschient :: =c4I, c4], λx.'1X+200'(x)
[traitschient :: c4], 300
[traitschiente :: =c4H, c4], λx.'1X+300'(x)
[traitschiented :: =c3E, c4], λx.'1X+300'(x)
[traitschient :: =c4I, c4], λx.'1X+300'(x)
[tschient :: =c2, +J, c4], λx.'100X'(x)
[tschiented :: =c3E, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[tschiente :: =c4H, =c4J, c4], λxλy.'1X+100Y'(x,y)
[tschient :: =c4I, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +H0, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +B, +E, +J, +G, +S2, c2, -B], λx.x
[ :: =c2, +E, +J, +G, +S2, c2, -E], λx.x
[ :: =c2, +C, +J, +H0, +D, +S2, c2, -C], λx.x
[ :: =c2, +F, +C, +J, +H0, +D, +S2, c2, -F], λx.x
[ :: =c2, +H0, +D, +S2, c2, -H0], λx.x
[ :: =c2, +J, +G, +S2, c2, -J], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c2, +H0, +G, +D, +S2, c2, -H0], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c3, +I, +S1, c3, -I], λx.x
[ :: =c2, +J, +H0, +D, +S2, c2, -J], λx.x
[ :: =c2, +C, +J, +H0, +G, +D, +S2, c2, -C], λx.x
[ :: =c2, +J, +H0, +G, +D, +S2, c2, -J], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x


Learning Basque
Learned 999 words in Basque and structured them in 30 functions.
It took 43 samples to learn those.
Those are:
bat is 1
bi is 2
hiru is 3
lau is 4
bost is 5
sei is 6
zazpi is 7
zortzi is 8
bederatzi is 9
hamar is 10
hamaika is 11
Function hama_ maps {2,3,4,6,7} by x -> 1*x+10
hamabost is 15
Function heme_ maps {8} by x -> 0*x+18
hemeretzi is 19
hogei is 20
Function hogeita _ maps {1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19} by x -> 1*x+20
berrogei is 40
Function berrogeita _ maps {1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19} by x -> 1*x+40
Function _rogei maps {3,4} by x -> 20*x+0
Function _rogeita _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19} by (x0,x1) -> 20*x0+1*x1
ehun is 100
Function ehun eta _ maps {1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19,20,hogeita _,40,berrogeita _,_rogei,_rogeita _} by x -> 1*x+100
berrehun is 200
Function berrehun eta _ maps {1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19,20,hogeita _,40,berrogeita _,_rogei,_rogeita _} by x -> 1*x+200
Function _rehun maps {3} by x -> 0*x+300
Function _rehun eta _ maps {3}x{1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19,20,hogeita _,40,berrogeita _,_rogei,_rogeita _} by (x0,x1) -> 90*x0+1*x1+30
Function _ehun maps {4,5,6,7,8,9} by x -> 100*x+0
Function _ehun eta _ maps {4,5,6,7,8}x{1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19,20,hogeita _,40,berrogeita _,_rogei,_rogeita _} by (x0,x1) -> 100*x0+1*x1
Function _ehun  ta _ maps {9}x{1,2,3,4,5,6,7,8,9,10,11,hama_,15,heme_,19,20,hogeita _,40,berrogeita _,_rogei,_rogeita _} by (x0,x1) -> 99*x0+1*x1+9

MG:
[hiru :: c1, -F, -A, -D], 3
[zortzi :: c1, -B, -H, -G0], 8
[bederatzi :: c2, -I, -E1, -G, -S2], 9
[ :: =c4, cFin], λx.x
[hogei :: c3, -S1], 20
[hogeita  :: =c2, c3, -S1], λx.'1X+20'(x)
[berrogei :: c3, -S1], 40
[berrogeita  :: =c2, c3, -S1], λx.'1X+40'(x)
[rogei :: =c1, +D, c3, -S1], λx.'20X'(x)
[rogeita  :: =c2, =c3D, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[bat :: c1], 1
[bi :: c1, -A], 2
[lau :: c1, -H, -G0, -A, -D], 4
[bost :: c1, -H, -G0], 5
[sei :: c1, -H, -G0, -A], 6
[zazpi :: c1, -H, -G0, -A], 7
[ :: =c2, +E1, c3], λx.x
[hamar :: c2, -E1, -S2], 10
[hamaika :: c2, -E1, -S2], 11
[hama :: =c2A, c2, -E1, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[hamabost :: c2, -E1, -S2], 15
[heme :: =c2B, c2, -E1, -S2], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[hemeretzi :: c2, -E1, -S2], 19
[ :: =c1, c2], λx.x
[ :: =c1, +G0, c2, -G], λx.x
[ehun :: c4], 100
[ehun eta  :: =c3, c4], λx.'1X+100'(x)
[berrehun :: c4], 200
[berrehun eta  :: =c3, c4], λx.'1X+200'(x)
[rehun :: =c1, +F, c4], λx.'0X+300'(x)
[rehun eta  :: =c3, =c4F, c4], λxλy.'1X+90Y+30'(x,y)
[ :: =c1, +F, c4F], λx.x
[ehun :: =c2, +G, c4], λx.'100X'(x)
[ehun eta  :: =c3, =c4H, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c4H], λx.x
[ehun  ta  :: =c3, =c4I, c4], λxλy.'1X+99Y+9'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +E1, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +H, +G0, c1, -H], λx.x
[ :: =c1, +B, +H, +G0, c1, -B], λx.x
[ :: =c2, +E1, +S2, c2, -E1], λx.x
[ :: =c1, +H, +G0, +A, +D, c1, -H], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c2, +I, +E1, +G, +S2, c2, -I], λx.x
[ :: =c2, +E1, +G, +S2, c2, -E1], λx.x
[ :: =c1, +G0, +A, +D, c1, -G0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +H, +G0, +A, c1, -H], λx.x
[ :: =c1, +G0, +A, c1, -G0], λx.x
[ :: =c1, +F, +A, +D, c1, -F], λx.x


Learning Rapa-Nui

Learned 999 words in Rapa-Nui and structured them in 75 functions.
It took 262 samples to learn those.
Those are:
tahi is 1
rua is 2
toru is 3
hā is 4
rima is 5
ono is 6
hitu is 7
va’u is 8
iva is 9
ho’e ’ahuru is 10
ho’e ’ahuru mā ho’e is 11
ho’e ’ahuru mā piti is 12
ho’e ’ahuru mā maha is 14
ho’e ’ahuru mā pae is 15
Function ho’e ’ahuru mā _ maps {3,6,7,8,9} by x -> 1*x+10
piti ’ahuru is 20
piti ’ahuru mā ho’e is 21
piti ’ahuru mā piti is 22
piti ’ahuru mā maha is 24
piti ’ahuru mā pae is 25
Function piti ’ahuru mā _ maps {3,6,7,8,9} by x -> 1*x+20
maha ’ahuru is 40
maha ’ahuru mā ho’e is 41
maha ’ahuru mā piti is 42
maha ’ahuru mā maha is 44
maha ’ahuru mā pae is 45
Function maha ’ahuru mā _ maps {3,6,7,8,9} by x -> 1*x+40
pae ’ahuru is 50
pae ’ahuru mā ho’e is 51
pae ’ahuru mā piti is 52
pae ’ahuru mā maha is 54
pae ’ahuru mā pae is 55
Function pae ’ahuru mā _ maps {3,6,7,8,9} by x -> 1*x+50
Function _ ’ahuru maps {3,6,7,8,9} by x -> 10*x+0
Function _ ’ahuru mā ho’e maps {3,6,7,8,9} by x -> 10*x+1
Function _ ’ahuru mā piti maps {3,6,7,8,9} by x -> 10*x+2
Function _ ’ahuru mā _ maps {3,6,7,8,9}x{3,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ ’ahuru mā maha maps {3,6,7,8,9} by x -> 10*x+4
Function _ ’ahuru mā pae maps {3,6,7,8,9} by x -> 10*x+5
Function ho’e _nere maps {4} by x -> 0*x+100
Function ho’e _nere mā ho’e maps {4} by x -> 0*x+101
Function ho’e _nere mā piti maps {4} by x -> 0*x+102
Function ho’e _nere mā maha maps {4} by x -> 0*x+104
Function ho’e _nere mā pae maps {4} by x -> 0*x+105
Function ho’e _nere mā _ maps {4}x{3,6,7,8,9} by (x0,x1) -> 24*x0+1*x1+4
Function ho’e _nere (e) _ maps {4}x{10,11,12,14,15,ho’e ’ahuru mā _,20,21,22,24,25,piti ’ahuru mā _,_ ’ahuru,_ ’ahuru mā ho’e,_ ’ahuru mā piti,_ ’ahuru mā _,_ ’ahuru mā maha,_ ’ahuru mā pae,40,41,42,maha ’ahuru mā _,44,45,50,51,52,pae ’ahuru mā _,54,55} by (x0,x1) -> 24*x0+1*x1+4
Function piti _nere maps {4} by x -> 0*x+200
Function piti _nere mā ho’e maps {4} by x -> 0*x+201
Function piti _nere mā piti maps {4} by x -> 0*x+202
Function piti _nere mā maha maps {4} by x -> 0*x+204
Function piti _nere mā pae maps {4} by x -> 0*x+205
Function piti _nere mā _ maps {4}x{3,6,7,8,9} by (x0,x1) -> 47*x0+1*x1+12
Function piti _nere (e) _ maps {4}x{10,11,12,14,15,ho’e ’ahuru mā _,20,21,22,24,25,piti ’ahuru mā _,40,41,42,44,45,maha ’ahuru mā _,50,51,52,54,55,pae ’ahuru mā _,_ ’ahuru,_ ’ahuru mā ho’e,_ ’ahuru mā piti,_ ’ahuru mā _,_ ’ahuru mā maha,_ ’ahuru mā pae} by (x0,x1) -> 47*x0+1*x1+12
Function _ _nere (e) iva ’ahuru mā iva maps {3}x{4} by (x0,x1) -> 0*x0+0*x1+399
Function maha _nere maps {4} by x -> 0*x+400
Function maha _nere mā ho’e maps {4} by x -> 0*x+401
Function maha _nere mā piti maps {4} by x -> 0*x+402
Function maha _nere mā maha maps {4} by x -> 0*x+404
Function maha _nere mā pae maps {4} by x -> 0*x+405
Function maha _nere mā _ maps {4}x{3,6,7,8,9} by (x0,x1) -> 94*x0+1*x1+24
Function maha _nere (e) _ maps {4}x{10,11,12,14,15,ho’e ’ahuru mā _,20,21,22,24,25,piti ’ahuru mā _,40,41,42,44,45,maha ’ahuru mā _,50,51,52,54,55,pae ’ahuru mā _,_ ’ahuru,_ ’ahuru mā ho’e,_ ’ahuru mā piti,_ ’ahuru mā _,_ ’ahuru mā maha,_ ’ahuru mā pae} by (x0,x1) -> 94*x0+1*x1+24
Function pae _nere maps {4} by x -> 0*x+500
Function pae _nere mā ho’e maps {4} by x -> 0*x+501
Function pae _nere mā piti maps {4} by x -> 0*x+502
Function pae _nere mā maha maps {4} by x -> 0*x+504
Function pae _nere mā pae maps {4} by x -> 0*x+505
Function pae _nere mā _ maps {4}x{3,6,7,8,9} by (x0,x1) -> 118*x0+1*x1+28
Function pae _nere (e) _ maps {4}x{10,11,12,14,15,ho’e ’ahuru mā _,20,21,22,24,25,piti ’ahuru mā _,40,41,42,44,45,maha ’ahuru mā _,50,51,52,54,55,pae ’ahuru mā _,_ ’ahuru,_ ’ahuru mā ho’e,_ ’ahuru mā piti,_ ’ahuru mā _,_ ’ahuru mā maha,_ ’ahuru mā pae} by (x0,x1) -> 118*x0+1*x1+28
Function _ _nere maps {3,6,7,8,9}x{4} by (x0,x1) -> 100*x0+0*x1
Function _ _nere mā ho’e maps {3,6,7,8,9}x{4} by (x0,x1) -> 100*x0+0*x1+1
Function _ _nere mā piti maps {3,6,7,8,9}x{4} by (x0,x1) -> 100*x0+0*x1+2
Function _ _nere mā _ maps {3,6,7,8,9}x{4}x{3,6,7,8,9} by (x0,x1,x2) -> 100*x0+0*x1+1*x2
Function _ _nere mā maha maps {3,6,7,8,9}x{4} by (x0,x1) -> 100*x0+1*x1
Function _ _nere mā pae maps {3,6,7,8,9}x{4} by (x0,x1) -> 100*x0+1*x1+1
Function _ _nere (e) _ maps {3,6,7,8,9}x{4}x{10,11,12,14,15,ho’e ’ahuru mā _,20,21,22,24,25,piti ’ahuru mā _,40,41,42,44,45,maha ’ahuru mā _,50,51,52,54,55,pae ’ahuru mā _,_ ’ahuru,_ ’ahuru mā ho’e,_ ’ahuru mā piti,_ ’ahuru mā _,_ ’ahuru mā maha,_ ’ahuru mā pae} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[toru :: c1, -E, -A], 3
[hā :: c1, -B], 4
[ :: =c3, cFin], λx.x
[ho’e ’ahuru :: c2], 10
[ho’e ’ahuru mā ho’e :: c2], 11
[ho’e ’ahuru mā piti :: c2], 12
[ho’e ’ahuru mā maha :: c2], 14
[ho’e ’ahuru mā pae :: c2], 15
[ho’e ’ahuru mā  :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[piti ’ahuru :: c2], 20
[piti ’ahuru mā ho’e :: c2], 21
[piti ’ahuru mā piti :: c2], 22
[piti ’ahuru mā maha :: c2], 24
[piti ’ahuru mā pae :: c2], 25
[piti ’ahuru mā  :: =c2A, c2], λx.'1X+20'(x)
[maha ’ahuru :: c2], 40
[maha ’ahuru mā ho’e :: c2], 41
[maha ’ahuru mā piti :: c2], 42
[maha ’ahuru mā maha :: c2], 44
[maha ’ahuru mā pae :: c2], 45
[maha ’ahuru mā  :: =c2A, c2], λx.'1X+40'(x)
[pae ’ahuru :: c2], 50
[pae ’ahuru mā ho’e :: c2], 51
[pae ’ahuru mā piti :: c2], 52
[pae ’ahuru mā maha :: c2], 54
[pae ’ahuru mā pae :: c2], 55
[pae ’ahuru mā  :: =c2A, c2], λx.'1X+50'(x)
[ ’ahuru :: =c1, +A, c2], λx.'10X'(x)
[ ’ahuru mā ho’e :: =c1, +A, c2], λx.'10X+1'(x)
[ ’ahuru mā piti :: =c1, +A, c2], λx.'10X+2'(x)
[ ’ahuru mā  :: =c2A, =c2A, c2], λxλy.'1X+10Y'(x,y)
[ ’ahuru mā maha :: =c1, +A, c2], λx.'10X+4'(x)
[ ’ahuru mā pae :: =c1, +A, c2], λx.'10X+5'(x)
[ono :: c1, -A], 6
[hitu :: c1, -A], 7
[va’u :: c1, -A], 8
[iva :: c1, -A], 9
[ho’e  :: =c3*, c3], λx.'1X+100'(x)
[nere :: =c1, +B, c3*], λx.'0X'(x)
[nere mā ho’e :: =c1, +B, c3**], λx.'0X'(x)
[nere mā piti :: =c1, +B, c3***], λx.'0X'(x)
[nere mā maha :: =c1, +B, c3****], λx.'0X'(x)
[nere mā pae :: =c1, +B, c3*****], λx.'0X'(x)
[nere mā  :: =c2A, =c3************************************B, c3******], λxλy.'1X+24Y'(x,y)
[nere (e)  :: =c2, =c3************************************B, c3*******], λxλy.'1X+24Y'(x,y)
[piti  :: =c3********, c3], λx.'1X+200'(x)
[nere :: =c1, +B, c3********], λx.'0X'(x)
[nere mā ho’e :: =c1, +B, c3*********], λx.'0X'(x)
[nere mā piti :: =c1, +B, c3**********], λx.'0X'(x)
[nere mā maha :: =c1, +B, c3***********], λx.'0X'(x)
[nere mā pae :: =c1, +B, c3************], λx.'0X'(x)
[nere mā  :: =c2A, =c3************************************B, c3*************], λxλy.'1X+47Y'(x,y)
[nere (e)  :: =c2, =c3************************************B, c3**************], λxλy.'1X+47Y'(x,y)
[  :: =c3***************, =c3E, c3], λxλy.'1X+0Y+399'(x,y)
[ :: =c1, +E, c3E], λx.x
[nere (e) iva ’ahuru mā iva :: =c1, +B, c3***************], λx.'0X'(x)
[maha  :: =c3****************, c3], λx.'1X+400'(x)
[nere :: =c1, +B, c3****************], λx.'0X'(x)
[nere mā ho’e :: =c1, +B, c3*****************], λx.'0X'(x)
[nere mā piti :: =c1, +B, c3******************], λx.'0X'(x)
[nere mā maha :: =c1, +B, c3*******************], λx.'0X'(x)
[nere mā pae :: =c1, +B, c3********************], λx.'0X'(x)
[nere mā  :: =c2A, =c3************************************B, c3*********************], λxλy.'1X+94Y'(x,y)
[nere (e)  :: =c2, =c3************************************B, c3**********************], λxλy.'1X+94Y'(x,y)
[pae  :: =c3***********************, c3], λx.'1X+500'(x)
[nere :: =c1, +B, c3***********************], λx.'0X'(x)
[nere mā ho’e :: =c1, +B, c3************************], λx.'0X'(x)
[nere mā piti :: =c1, +B, c3*************************], λx.'0X'(x)
[nere mā maha :: =c1, +B, c3**************************], λx.'0X'(x)
[nere mā pae :: =c1, +B, c3***************************], λx.'0X'(x)
[nere mā  :: =c2A, =c3************************************B, c3****************************], λxλy.'1X+118Y'(x,y)
[nere (e)  :: =c2, =c3************************************B, c3*****************************], λxλy.'1X+118Y'(x,y)
[  :: =c3******************************, =c2A, c3], λxλy.'1X+100Y'(x,y)
[nere :: =c1, +B, c3******************************], λx.'0X'(x)
[nere mā ho’e :: =c1, +B, c3*******************************], λx.'0X'(x)
[nere mā piti :: =c1, +B, c3********************************], λx.'0X'(x)
[nere mā  :: =c2A, =c3************************************B, c3*********************************], λxλy.'1X+0Y'(x,y)
[nere mā maha :: =c1, +B, c3**********************************], λx.x
[nere mā pae :: =c1, +B, c3***********************************], λx.x
[nere (e)  :: =c2, =c3************************************B, c3************************************], λxλy.'1X+0Y'(x,y)
[ :: =c1, +B, c3************************************B], λx.x
[ :: =c1, c3], λx.x
[tahi :: c1], 1
[rua :: c1], 2
[rima :: c1], 5
[ :: =c2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x


Learning Pennsylvania-German

Learned 999 words in Pennsylvania-German and structured them in 40 functions.
It took 57 samples to learn those.
Those are:
eens is 1
zwee is 2
drei is 3
vier is 4
fimf is 5
sex is 6
siwwe is 7
acht is 8
nein is 9
zehe is 10
elf is 11
zwelf is 12
vazeh is 14
fuffzeh is 15
sechzeh is 16
Function _zeh maps {3,7,8,9} by x -> 1*x+10
zwansich is 20
eenunzwansich is 21
Function _unzwansich maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ssich maps {3} by x -> 0*x+30
Function eenun_ssich maps {3} by x -> 0*x+31
Function _un_ssich maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
vazich is 40
eenunvazich is 41
Function _unvazich maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
fuffzich is 50
eenunfuffzich is 51
Function _unfuffzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
sechzich is 60
eenunsechzich is 61
Function _unsechzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _zich maps {7,8,9} by x -> 10*x+0
Function eenun_zich maps {7,8,9} by x -> 10*x+1
Function _un_zich maps {2,3,4,5,6,7,8,9}x{7,8,9} by (x0,x1) -> 1*x0+10*x1
en hunnert is 100
Function en hunnert un _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+100
Function en hunnert _ maps {10,11,12,14,15,16,_zeh,20,21,_unzwansich,_ssich,eenun_ssich,_un_ssich,40,41,_unvazich,50,51,_unfuffzich,60,61,_unsechzich,_zich,eenun_zich,_un_zich} by x -> 1*x+100
Function _ hunnert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hunnert un _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ hunnert _ maps {2,3,4,5,6,7,8,9}x{10,11,12,14,15,16,_zeh,20,21,_unzwansich,_ssich,eenun_ssich,_un_ssich,40,41,_unvazich,50,51,_unfuffzich,60,61,_unsechzich,_zich,eenun_zich,_un_zich} by (x0,x1) -> 100*x0+1*x1

MG:
[drei :: c1, -C, -B, -A], 3
[ :: =c3, cFin], λx.x
[eens :: c1], 1
[zwee :: c1, -B], 2
[vier :: c1, -B], 4
[fimf :: c1, -B], 5
[sex :: c1, -B], 6
[siwwe :: c1, -B, -A, -D], 7
[acht :: c1, -B, -A, -D], 8
[nein :: c1, -B, -A, -D], 9
[zehe :: c2], 10
[elf :: c2], 11
[zwelf :: c2], 12
[vazeh :: c2], 14
[fuffzeh :: c2], 15
[sechzeh :: c2], 16
[zeh :: =c1, +A, c2], λx.'1X+10'(x)
[zwansich :: c2], 20
[eenunzwansich :: c2], 21
[unzwansich :: =c1, +B, c2], λx.'1X+20'(x)
[ssich :: =c1, +C, c2], λx.'0X+30'(x)
[eenun :: =c2*, c2], λx.'1X+31'(x)
[ssich :: =c1, +C, c2*], λx.'0X'(x)
[un :: =c2**, =c2B, c2], λxλy.'1X+1Y+3'(x,y)
[ :: =c1, +B, c2B], λx.x
[ssich :: =c1, +C, c2**], λx.'9X'(x)
[vazich :: c2], 40
[eenunvazich :: c2], 41
[unvazich :: =c1, +B, c2], λx.'1X+40'(x)
[fuffzich :: c2], 50
[eenunfuffzich :: c2], 51
[unfuffzich :: =c1, +B, c2], λx.'1X+50'(x)
[sechzich :: c2], 60
[eenunsechzich :: c2], 61
[unsechzich :: =c1, +B, c2], λx.'1X+60'(x)
[zich :: =c1, +D, c2], λx.'10X'(x)
[eenun :: =c2***, c2], λx.'1X+1'(x)
[zich :: =c1, +D, c2***], λx.'10X'(x)
[un :: =c2****, =c2B, c2], λxλy.'1X+1Y'(x,y)
[zich :: =c1, +D, c2****], λx.'10X'(x)
[en hunnert :: c3], 100
[en hunnert un  :: =c1, c3], λx.'1X+100'(x)
[en hunnert  :: =c2, c3], λx.'1X+100'(x)
[ hunnert :: =c1, +B, c3], λx.'100X'(x)
[ hunnert un  :: =c1, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ hunnert  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Yakut
Learned 999 words in Yakut and structured them in 23 functions.
It took 151 samples to learn those.
Those are:
биир is 1
икки is 2
үс is 3
түөрт is 4
биэс is 5
алта is 6
сэттэ is 7
аҕыс is 8
тоҕус is 9
уон is 10
Function уон _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
сүүрбэ is 20
Function сүүрбэ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
отут is 30
Function отут _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _ уон maps {4,5,6,7,8,9} by x -> 10*x+0
Function _ уон _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function сү_ maps {3} by x -> 0*x+100
Function сү_ биэс уон maps {3} by x -> 0*x+150
Function сү_ _ maps {3}x{1,2,3,4,5,6,7,8,9,10,уон _,20,сүүрбэ _,30,отут _,_ уон,_ уон _} by (x0,x1) -> 30*x0+1*x1+10
Function _ сү_ тоҕус уон тоҕус maps {2}x{3} by (x0,x1) -> 0*x0+0*x1+299
Function _ сү_ maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 100*x0+0*x1
Function _ сү_ _ maps {2,3,4,5,6,7,8,9}x{3}x{1,2,3,4,5,6,7,8,9,10,уон _,20,сүүрбэ _,30,отут _,_ уон,_ уон _} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[икки :: c1, -E, -F], 2
[үс :: c1, -C, -F], 3
[ :: =c3, cFin], λx.x
[түөрт :: c1, -B, -F], 4
[биэс :: c1, -B, -F], 5
[алта :: c1, -B, -F], 6
[сэттэ :: c1, -B, -F], 7
[аҕыс :: c1, -B, -F], 8
[тоҕус :: c1, -B, -F], 9
[биир :: c1], 1
[уон :: c2, -S1], 10
[уон  :: =c1, c2, -S1], λx.'1X+10'(x)
[сүүрбэ :: c2, -S1], 20
[сүүрбэ  :: =c1, c2, -S1], λx.'1X+20'(x)
[отут :: c2, -S1], 30
[отут  :: =c1, c2, -S1], λx.'1X+30'(x)
[ уон :: =c1, +B, c2, -S1], λx.'10X'(x)
[ уон  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[сү :: =c3****C, c3], λx.'0X+100'(x)
[сү :: =c3*, c3], λx.'1X+150'(x)
[ биэс уон :: =c1, +C, c3*], λx.'0X'(x)
[  :: =c2, =c3****C, c3**], λxλy.'1X+30Y'(x,y)
[ сү :: =c3***, =c3E, c3], λxλy.'1X+0Y+299'(x,y)
[ :: =c1, +E, c3E], λx.x
[ тоҕус уон тоҕус :: =c1, +C, c3***], λx.'0X'(x)
[ сү :: =c3****C, =c3F, c3], λxλy.'0X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ сү :: =c3****, =c3F, c3], λxλy.'1X+100Y'(x,y)
[  :: =c2, =c3****C, c3****], λxλy.'1X+0Y'(x,y)
[ :: =c1, +C, c3****C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +E, +F, c1, -E], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x


Learning Aukan
Learned 999 words in Aukan and structured them in 20 functions.
It took 28 samples to learn those.
Those are:
wan is 1
tu is 2
dii is 3
fo is 4
feifi is 5
sigisi is 6
seibin is 7
aitin is 8
neigin is 9
tin is 10
elufu is 11
twalufu is 12
Function tin na _ maps {3,4,5,6,7,8} by x -> 1*x+10
Function tin a _ maps {9} by x -> 0*x+19
twenti is 20
Function twenti a _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _tenti maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _tenti a _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ ondoo maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ondoo anga _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,tin na _,tin a _,20,twenti a _,_tenti,_tenti a _} by (x0,x1) -> 100*x0+1*x1

MG:
[neigin :: c1, -B, -D], 9
[ :: =c3, cFin], λx.x
[tin :: c2, -S1], 10
[elufu :: c2, -S1], 11
[twalufu :: c2, -S1], 12
[tin na  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[tin a  :: =c2B, c2, -S1], λx.'0X+19'(x)
[ :: =c1, +B, c2B], λx.x
[twenti :: c2, -S1], 20
[twenti a  :: =c1, c2, -S1], λx.'1X+20'(x)
[tenti :: =c1, +D, c2, -S1], λx.'10X'(x)
[tenti a  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[ :: =c1, c2], λx.x
[wan :: c1], 1
[tu :: c1], 2
[dii :: c1, -A, -D], 3
[fo :: c1, -A, -D], 4
[feifi :: c1, -A, -D], 5
[sigisi :: c1, -A, -D], 6
[seibin :: c1, -A, -D], 7
[aitin :: c1, -A, -D], 8
[ ondoo :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ ondoo anga  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x


Learning Irish
Learned 999 words in Irish and structured them in 37 functions.
It took 59 samples to learn those.
Those are:
aon is 1
dó is 2
trí is 3
ceathair is 4
cúig is 5
sé is 6
seacht is 7
ocht is 8
naoi is 9
deich is 10
Function _ dhéag maps {2} by x -> 0*x+12
Function _ déag maps {1,3,4,5,6,7,8,9} by x -> 1*x+10
fiche is 20
Function fiche a _ maps {2,3,4,5,6,7,9} by x -> 1*x+20
Function fiche a h_ maps {1,8} by x -> 1*x+20
Function _ocha maps {3} by x -> 0*x+30
Function _ocha a _ maps {3}x{2,3,4,5,6,7,9} by (x0,x1) -> 9*x0+1*x1+3
Function _ocha a h_ maps {3}x{1,8} by (x0,x1) -> 9*x0+1*x1+3
ceathracha is 40
Function ceathracha a _ maps {2,3,4,5,6,7,9} by x -> 1*x+40
Function ceathracha a h_ maps {1,8} by x -> 1*x+40
caoga is 50
Function caoga a _ maps {2,3,4,5,6,7,9} by x -> 1*x+50
Function caoga a h_ maps {1,8} by x -> 1*x+50
seasca is 60
Function seasca a _ maps {2,3,4,5,6,7,9} by x -> 1*x+60
Function seasca a h_ maps {1,8} by x -> 1*x+60
Function _ó maps {7,8} by x -> 10*x+0
Function _ó a h_ maps {7,8}x{1,8} by (x0,x1) -> 10*x0+1*x1
Function _ó a _ maps {7,8}x{2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
nócha is 90
Function nócha a _ maps {2,3,4,5,6,7,9} by x -> 1*x+90
Function nócha a h_ maps {1,8} by x -> 1*x+90
céad is 100
Function céad _ maps {1,2,3,4,5,6,7,8,9,10,_ dhéag,_ déag,20,fiche a _,fiche a h_,_ocha,_ocha a _,_ocha a h_,40,ceathracha a _,ceathracha a h_,50,caoga a _,caoga a h_,60,seasca a _,seasca a h_,_ó,_ó a h_,_ó a _,90,nócha a _,nócha a h_} by x -> 1*x+100
Function _ céad maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ céad _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_ dhéag,_ déag,20,fiche a _,fiche a h_,_ocha,_ocha a _,_ocha a h_,40,ceathracha a _,ceathracha a h_,50,caoga a _,caoga a h_,60,seasca a _,seasca a h_,_ó,_ó a h_,_ó a _,90,nócha a _,nócha a h_} by (x0,x1) -> 100*x0+1*x1

MG:
[dó :: c1, -A, -C, -H], 2
[trí :: c1, -E, -C, -H, -B], 3
[ :: =c3, cFin], λx.x
[ceathair :: c1, -C, -H, -B], 4
[cúig :: c1, -C, -H, -B], 5
[sé :: c1, -C, -H, -B], 6
[seacht :: c1, -C, -H, -B, -F], 7
[naoi :: c1, -C, -H, -B], 9
[ocht :: c1, -H, -B, -F, -D], 8
[deich :: c2, -S1], 10
[ dhéag :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[ déag :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[fiche :: c2, -S1], 20
[fiche a  :: =c2C, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[fiche a h :: =c2D, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +D, c2D], λx.x
[ocha :: =c1, +E, c2, -S1], λx.'0X+30'(x)
[ocha a  :: =c2C, =c2E, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +E, c2E], λx.x
[ocha a h :: =c2D, =c2E, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ceathracha :: c2, -S1], 40
[ceathracha a  :: =c2C, c2, -S1], λx.'1X+40'(x)
[ceathracha a h :: =c2D, c2, -S1], λx.'1X+40'(x)
[caoga :: c2, -S1], 50
[caoga a  :: =c2C, c2, -S1], λx.'1X+50'(x)
[caoga a h :: =c2D, c2, -S1], λx.'1X+50'(x)
[seasca :: c2, -S1], 60
[seasca a  :: =c2C, c2, -S1], λx.'1X+60'(x)
[seasca a h :: =c2D, c2, -S1], λx.'1X+60'(x)
[ó :: =c1, +F, c2, -S1], λx.'10X'(x)
[ó a h :: =c2D, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[ó a  :: =c2C, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[nócha :: c2, -S1], 90
[nócha a  :: =c2C, c2, -S1], λx.'1X+90'(x)
[nócha a h :: =c2D, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[aon :: c1, -B, -D], 1
[céad :: c3], 100
[céad  :: =c2, c3], λx.'1X+100'(x)
[ céad :: =c1, +H, c3], λx.'100X'(x)
[ céad  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c1, +B, +F, +D, c1, -B], λx.x
[ :: =c1, +C, +H, +B, +F, c1, -C], λx.x
[ :: =c1, +E, +C, +H, +B, c1, -E], λx.x
[ :: =c1, +C, +H, +B, c1, -C], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +A, +C, +H, c1, -A], λx.x
[ :: =c1, +C, +H, c1, -C], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +F, +D, c1, -F], λx.x
[ :: =c1, +H, +B, +F, c1, -H], λx.x
[ :: =c1, +H, +B, +F, +D, c1, -H], λx.x


Learning Maori

Learned 999 words in Maori and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
tahi is 1
rua is 2
toru is 3
whā is 4
rima is 5
ono is 6
whitu is 7
waru is 8
iwa is 9
tekau is 10
Function tekau mā _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ tekau maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ tekau mā _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function ko_ rau maps {1} by x -> 0*x+100
Function ko_ rau _ maps {1}x{1,2,3,4,5,6,7,8,9,10,tekau mā _,_ tekau,_ tekau mā _} by (x0,x1) -> 50*x0+1*x1+50
Function _ rau maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ rau _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,tekau mā _,_ tekau,_ tekau mā _} by (x0,x1) -> 100*x0+1*x1

MG:
[tahi :: c1, -C], 1
[ :: =c3, cFin], λx.x
[rua :: c1, -B], 2
[toru :: c1, -B], 3
[whā :: c1, -B], 4
[rima :: c1, -B], 5
[ono :: c1, -B], 6
[whitu :: c1, -B], 7
[waru :: c1, -B], 8
[iwa :: c1, -B], 9
[tekau :: c2, -S1], 10
[tekau mā  :: =c1, c2, -S1], λx.'1X+10'(x)
[ tekau :: =c1, +B, c2, -S1], λx.'10X'(x)
[ tekau mā  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[ko :: =c3*, c3], λx.'1X+100'(x)
[ rau :: =c1, +C, c3*], λx.'0X'(x)
[ rau  :: =c2, =c3**C, c3**], λxλy.'1X+50Y'(x,y)
[ :: =c1, +C, c3**C], λx.x
[ rau :: =c1, +B, c3], λx.'100X'(x)
[ rau  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Ukrainian
Learned 999 words in Ukrainian and structured them in 42 functions.
It took 64 samples to learn those.
Those are:
один is 1
два is 2
три is 3
чотири is 4
п’ять is 5
шість is 6
сім is 7
вісім is 8
дев’ять is 9
десять is 10
Function _адцять maps {1} by x -> 0*x+11
Function _надцять maps {2,3,7,8} by x -> 1*x+10
чотирнадцять is 14
п’ятнадцять is 15
шістнадцять is 16
дев’ятнадцять is 19
Function _дцять maps {2,3} by x -> 10*x+0
Function _дцять _ maps {2,3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
сорок is 40
Function сорок _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
п’ятдесят is 50
Function п’ятдесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
шістдесят is 60
Function шістдесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _десят maps {7,8} by x -> 10*x+0
Function _десят _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
дев’яносто is 90
Function дев’яносто _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by x -> 1*x+100
двісті is 200
Function двісті _ maps {1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by x -> 1*x+200
Function _ста maps {3,4} by x -> 100*x+0
Function _ста _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by (x0,x1) -> 100*x0+1*x1
п’ятсот is 500
Function п’ятсот _ maps {1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by x -> 1*x+500
шістсот is 600
Function шістсот _ maps {1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by x -> 1*x+600
Function _сот maps {7,8} by x -> 100*x+0
Function _сот _ maps {7,8}x{1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by (x0,x1) -> 100*x0+1*x1
дев’ятсот is 900
Function дев’ятсот _ maps {1,2,3,4,5,6,7,8,9,10,_адцять,_надцять,14,15,16,19,_дцять,_дцять _,40,сорок _,50,п’ятдесят _,60,шістдесят _,_десят,_десят _,90,дев’яносто _} by x -> 1*x+900

MG:
[один :: c1, -A], 1
[ :: =c3, cFin], λx.x
[сім :: c1, -E, -B], 7
[вісім :: c1, -E, -B], 8
[два :: c1, -C, -B], 2
[три :: c1, -C, -B, -G], 3
[чотири :: c1, -G], 4
[п’ять :: c1], 5
[шість :: c1], 6
[дев’ять :: c1], 9
[сто :: c3], 100
[сто  :: =c2, c3], λx.'1X+100'(x)
[двісті :: c3], 200
[двісті  :: =c2, c3], λx.'1X+200'(x)
[ста :: =c1, +G, c3], λx.'100X'(x)
[ста  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[п’ятсот :: c3], 500
[п’ятсот  :: =c2, c3], λx.'1X+500'(x)
[шістсот :: c3], 600
[шістсот  :: =c2, c3], λx.'1X+600'(x)
[сот :: =c1, +E, c3], λx.'100X'(x)
[сот  :: =c2, =c2E, c3], λxλy.'1X+100Y'(x,y)
[дев’ятсот :: c3], 900
[дев’ятсот  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[десять :: c2, -S1], 10
[адцять :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[надцять :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[чотирнадцять :: c2, -S1], 14
[п’ятнадцять :: c2, -S1], 15
[шістнадцять :: c2, -S1], 16
[дев’ятнадцять :: c2, -S1], 19
[дцять :: =c1, +C, c2, -S1], λx.'10X'(x)
[дцять  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[сорок :: c2, -S1], 40
[сорок  :: =c1, c2, -S1], λx.'1X+40'(x)
[п’ятдесят :: c2, -S1], 50
[п’ятдесят  :: =c1, c2, -S1], λx.'1X+50'(x)
[шістдесят :: c2, -S1], 60
[шістдесят  :: =c1, c2, -S1], λx.'1X+60'(x)
[десят :: =c1, +E, c2, -S1], λx.'10X'(x)
[десят  :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[дев’яносто :: c2, -S1], 90
[дев’яносто  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +B, +G, c1, -C], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Venetian
Learned 999 words in Venetian and structured them in 45 functions.
It took 62 samples to learn those.
Those are:
un is 1
dó is 2
tre is 3
quatro is 4
zsinque is 5
sie is 6
sete is 7
oto is 8
nóve is 9
diéxe is 10
óndexe is 11
Function _dexe maps {2} by x -> 0*x+12
trédexe is 13
quatòrdexe is 14
quìndexe is 15
sédexe is 16
Function di_ maps {7} by x -> 0*x+17
Function disd_ maps {8} by x -> 0*x+18
Function dis_ maps {9} by x -> 0*x+19
vinti is 20
Function vinti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _nta maps {3} by x -> 0*x+30
Function _nta-_ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
quaranta is 40
Function quaranta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
zsinquanta is 50
Function zsinquanta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesanta is 60
Function sesanta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setanta is 70
Function setanta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
otanta is 80
Function otanta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
novanta is 90
Function novanta-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
zsento is 100
Function zsento-_ maps {1,2,3,4,5,6,7,8,9,10,11,_dexe,13,14,15,16,di_,disd_,dis_,20,vinti-_,_nta,_nta-_,40,quaranta-_,50,zsinquanta-_,60,sesanta-_,70,setanta-_,80,otanta-_,90,novanta-_} by x -> 1*x+100
doxento is 200
Function doxento-_ maps {1,2,3,4,5,6,7,8,9,10,11,_dexe,13,14,15,16,di_,disd_,dis_,20,vinti-_,_nta,_nta-_,40,quaranta-_,50,zsinquanta-_,60,sesanta-_,70,setanta-_,80,otanta-_,90,novanta-_} by x -> 1*x+200
Function _xento maps {3,4} by x -> 100*x+0
Function _xento-_ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,_dexe,13,14,15,16,di_,disd_,dis_,20,vinti-_,_nta,_nta-_,40,quaranta-_,50,zsinquanta-_,60,sesanta-_,70,setanta-_,80,otanta-_,90,novanta-_} by (x0,x1) -> 100*x0+1*x1
Function _zsento maps {5,6,7,8} by x -> 100*x+0
Function _zsento-_ maps {5,6,7,8}x{1,2,3,4,5,6,7,8,9,10,11,_dexe,13,14,15,16,di_,disd_,dis_,20,vinti-_,_nta,_nta-_,40,quaranta-_,50,zsinquanta-_,60,sesanta-_,70,setanta-_,80,otanta-_,90,novanta-_} by (x0,x1) -> 100*x0+1*x1
novezsento is 900
Function novezsento-_ maps {1,2,3,4,5,6,7,8,9,10,11,_dexe,13,14,15,16,di_,disd_,dis_,20,vinti-_,_nta,_nta-_,40,quaranta-_,50,zsinquanta-_,60,sesanta-_,70,setanta-_,80,otanta-_,90,novanta-_} by x -> 1*x+900

MG:
[dó :: c1, -A], 2
[tre :: c1, -F, -H], 3
[sete :: c1, -B, -I], 7
[oto :: c1, -C, -I], 8
[nóve :: c1, -D], 9
[ :: =c3, cFin], λx.x
[un :: c1], 1
[quatro :: c1, -H], 4
[zsinque :: c1, -I], 5
[sie :: c1, -I], 6
[diéxe :: c2, -S1], 10
[óndexe :: c2, -S1], 11
[dexe :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[trédexe :: c2, -S1], 13
[quatòrdexe :: c2, -S1], 14
[quìndexe :: c2, -S1], 15
[sédexe :: c2, -S1], 16
[di :: =c2B, c2, -S1], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[disd :: =c2C, c2, -S1], λx.'0X+18'(x)
[ :: =c1, +C, c2C], λx.x
[dis :: =c2D, c2, -S1], λx.'0X+19'(x)
[ :: =c1, +D, c2D], λx.x
[vinti :: c2, -S1], 20
[vinti- :: =c1, c2, -S1], λx.'1X+20'(x)
[nta :: =c1, +F, c2, -S1], λx.'0X+30'(x)
[nta- :: =c1, =c2F, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +F, c2F], λx.x
[quaranta :: c2, -S1], 40
[quaranta- :: =c1, c2, -S1], λx.'1X+40'(x)
[zsinquanta :: c2, -S1], 50
[zsinquanta- :: =c1, c2, -S1], λx.'1X+50'(x)
[sesanta :: c2, -S1], 60
[sesanta- :: =c1, c2, -S1], λx.'1X+60'(x)
[setanta :: c2, -S1], 70
[setanta- :: =c1, c2, -S1], λx.'1X+70'(x)
[otanta :: c2, -S1], 80
[otanta- :: =c1, c2, -S1], λx.'1X+80'(x)
[novanta :: c2, -S1], 90
[novanta- :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[zsento :: c3], 100
[zsento- :: =c2, c3], λx.'1X+100'(x)
[doxento :: c3], 200
[doxento- :: =c2, c3], λx.'1X+200'(x)
[xento :: =c1, +H, c3], λx.'100X'(x)
[xento- :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[zsento :: =c1, +I, c3], λx.'100X'(x)
[zsento- :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[novezsento :: c3], 900
[novezsento- :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +F, +H, c1, -F], λx.x
[ :: =c1, +B, +I, c1, -B], λx.x
[ :: =c1, +C, +I, c1, -C], λx.x


Learning Chuvash

Learned 999 words in Chuvash and structured them in 64 functions.
It took 82 samples to learn those.
Those are:
пĕрре is 1
иккĕ is 2
виççĕ is 3
тăваттă is 4
пиллĕк is 5
улттă is 6
çиччĕ is 7
саккăр is 8
тăххăр is 9
вуннă is 10
вун пĕр is 11
Function вун _ maps {2,3,4,6,7,8,9} by x -> 1*x+10
вун пиллĕк is 15
çирĕм is 20
çирĕм пĕр is 21
Function çирĕм _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
вăтăр is 30
вăтăр пĕр is 31
Function вăтăр _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
хĕрĕх is 40
хĕрĕх пĕр is 41
Function хĕрĕх _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
аллă is 50
аллă пĕр is 51
Function аллă _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
утмăл is 60
утмăл пĕр is 61
Function утмăл _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
çитмĕль is 70
çитмĕль пĕр is 71
Function çитмĕль _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
сакăр вуннă is 80
Function сакăр _ maps {11} by x -> 0*x+81
Function сакăр вун _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
тăхăр вуннă is 90
Function тăхăр _ maps {11} by x -> 0*x+91
Function тăхăр вун _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
çĕр is 100
çĕр пĕр is 101
Function çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+100
ик çĕр is 200
ик çĕр пĕр is 201
Function ик çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+200
виç çĕр is 300
виç çĕр пĕр is 301
Function виç çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+300
тăватă çĕр is 400
тăватă çĕр пĕр is 401
Function тăватă çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+400
пилĕк çĕр is 500
пилĕк çĕр пĕр is 501
Function пилĕк çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+500
ултă çĕр is 600
ултă çĕр пĕр is 601
Function ултă çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+600
çичĕ çĕр is 700
çичĕ çĕр пĕр is 701
Function çичĕ çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+700
сакăр çĕр is 800
сакăр çĕр пĕр is 801
Function сакăр çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+800
тăхăр çĕр is 900
тăхăр çĕр пĕр is 901
Function тăхăр çĕр _ maps {2,3,4,5,6,7,8,9,10,11,вун _,15,20,21,çирĕм _,30,31,вăтăр _,40,41,хĕрĕх _,50,51,аллă _,60,61,утмăл _,70,71,çитмĕль _,80,сакăр _,сакăр вун _,90,тăхăр _,тăхăр вун _} by x -> 1*x+900

MG:
[вун пĕр :: c1, -C, -D0], 11
[ :: =c3, cFin], λx.x
[иккĕ :: c1, -B, -A, -D0], 2
[виççĕ :: c1, -B, -A, -D0], 3
[тăваттă :: c1, -B, -A, -D0], 4
[пиллĕк :: c1, -B, -D0], 5
[улттă :: c1, -B, -A, -D0], 6
[çиччĕ :: c1, -B, -A, -D0], 7
[саккăр :: c1, -B, -A, -D0], 8
[тăххăр :: c1, -B, -A, -D0], 9
[вун  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[вун пиллĕк :: c2, -S1], 15
[çирĕм :: c2, -S1], 20
[çирĕм пĕр :: c2, -S1], 21
[çирĕм  :: =c2B, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[вăтăр :: c2, -S1], 30
[вăтăр пĕр :: c2, -S1], 31
[вăтăр  :: =c2B, c2, -S1], λx.'1X+30'(x)
[хĕрĕх :: c2, -S1], 40
[хĕрĕх пĕр :: c2, -S1], 41
[хĕрĕх  :: =c2B, c2, -S1], λx.'1X+40'(x)
[аллă :: c2, -S1], 50
[аллă пĕр :: c2, -S1], 51
[аллă  :: =c2B, c2, -S1], λx.'1X+50'(x)
[утмăл :: c2, -S1], 60
[утмăл пĕр :: c2, -S1], 61
[утмăл  :: =c2B, c2, -S1], λx.'1X+60'(x)
[çитмĕль :: c2, -S1], 70
[çитмĕль пĕр :: c2, -S1], 71
[çитмĕль  :: =c2B, c2, -S1], λx.'1X+70'(x)
[сакăр вуннă :: c2, -S1], 80
[сакăр  :: =c2C, c2, -S1], λx.'0X+81'(x)
[ :: =c1, +C, c2C], λx.x
[сакăр вун  :: =c2B, c2, -S1], λx.'1X+80'(x)
[тăхăр вуннă :: c2, -S1], 90
[тăхăр  :: =c2C, c2, -S1], λx.'0X+91'(x)
[тăхăр вун  :: =c2B, c2, -S1], λx.'1X+90'(x)
[ :: =c1, +D0, c2], λx.x
[вуннă :: c1, -D0], 10
[çĕр :: c3], 100
[çĕр пĕр :: c3], 101
[çĕр  :: =c2, c3], λx.'1X+100'(x)
[ик çĕр :: c3], 200
[ик çĕр пĕр :: c3], 201
[ик çĕр  :: =c2, c3], λx.'1X+200'(x)
[виç çĕр :: c3], 300
[виç çĕр пĕр :: c3], 301
[виç çĕр  :: =c2, c3], λx.'1X+300'(x)
[тăватă çĕр :: c3], 400
[тăватă çĕр пĕр :: c3], 401
[тăватă çĕр  :: =c2, c3], λx.'1X+400'(x)
[пилĕк çĕр :: c3], 500
[пилĕк çĕр пĕр :: c3], 501
[пилĕк çĕр  :: =c2, c3], λx.'1X+500'(x)
[ултă çĕр :: c3], 600
[ултă çĕр пĕр :: c3], 601
[ултă çĕр  :: =c2, c3], λx.'1X+600'(x)
[çичĕ çĕр :: c3], 700
[çичĕ çĕр пĕр :: c3], 701
[çичĕ çĕр  :: =c2, c3], λx.'1X+700'(x)
[сакăр çĕр :: c3], 800
[сакăр çĕр пĕр :: c3], 801
[сакăр çĕр  :: =c2, c3], λx.'1X+800'(x)
[тăхăр çĕр :: c3], 900
[тăхăр çĕр пĕр :: c3], 901
[тăхăр çĕр  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[пĕрре :: c1], 1
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +A, +D0, c1, -B], λx.x
[ :: =c1, +C, +D0, c1, -C], λx.x
[ :: =c1, +A, +D0, c1, -A], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x


Learning Alutiiq
Learned 99 words in Alutiiq and structured them in 16 functions.
It took 21 samples to learn those.
Those are:
allringuq is 1
mal’uk is 2
pingayun is 3
staaman is 4
talliman is 5
arwilgen is 6
mallruungin is 7
inglulgen is 8
qulnguyan is 9
qulen is 10
Function qula _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
qula talliman is 15
suinaq is 20
Function suinaq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ qula maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _ qula _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1

MG:
[ :: =c2, cFin], λx.x
[pingayun :: c1, -C, -A], 3
[staaman :: c1, -C, -A], 4
[talliman :: c1, -C], 5
[arwilgen :: c1, -C, -A], 6
[mallruungin :: c1, -C, -A], 7
[inglulgen :: c1, -C, -A], 8
[qulnguyan :: c1, -C, -A], 9
[allringuq :: c1, -A], 1
[mal’uk :: c1, -A], 2
[qulen :: c2], 10
[qula  :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[qula talliman :: c2], 15
[suinaq :: c2], 20
[suinaq  :: =c1, c2], λx.'1X+20'(x)
[ qula :: =c1, +C, c2], λx.'10X'(x)
[ qula  :: =c1, =c2C, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Slovak
Learned 999 words in Slovak and structured them in 26 functions.
It took 38 samples to learn those.
Those are:
jeden is 1
dva is 2
tri is 3
štyri is 4
päť is 5
šesť is 6
sedem is 7
osem is 8
deväť is 9
desať is 10
Function _ásť maps {1} by x -> 0*x+11
Function _násť maps {2,3,7,8} by x -> 1*x+10
štrnásť is 14
pätnásť is 15
šestnásť is 16
devätnásť is 19
Function _dsať maps {2,3,4} by x -> 10*x+0
Function _dsať_ maps {2,3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _desiat maps {5,6,7,8,9} by x -> 10*x+0
Function _desiat_ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sto is 100
Function sto_ maps {1,2,3,4,5,6,7,8,9,10,_ásť,_násť,14,15,16,19,_dsať,_dsať_,_desiat,_desiat_} by x -> 1*x+100
dvesto is 200
Function dvesto_ maps {1,2,3,4,5,6,7,8,9,10,_ásť,_násť,14,15,16,19,_dsať,_dsať_,_desiat,_desiat_} by x -> 1*x+200
Function _sto maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _sto_ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_ásť,_násť,14,15,16,19,_dsať,_dsať_,_desiat,_desiat_} by (x0,x1) -> 100*x0+1*x1

MG:
[jeden :: c1, -A], 1
[ :: =c3, cFin], λx.x
[päť :: c1, -E, -G], 5
[šesť :: c1, -E, -G], 6
[sedem :: c1, -E, -B, -G], 7
[osem :: c1, -E, -B, -G], 8
[deväť :: c1, -E, -G], 9
[dva :: c1, -C, -B], 2
[tri :: c1, -C, -B, -G], 3
[štyri :: c1, -C, -G], 4
[sto :: c3], 100
[sto :: =c2, c3], λx.'1X+100'(x)
[dvesto :: c3], 200
[dvesto :: =c2, c3], λx.'1X+200'(x)
[sto :: =c1, +G, c3], λx.'100X'(x)
[sto :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[desať :: c2, -S1], 10
[ásť :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[násť :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[štrnásť :: c2, -S1], 14
[pätnásť :: c2, -S1], 15
[šestnásť :: c2, -S1], 16
[devätnásť :: c2, -S1], 19
[dsať :: =c1, +C, c2, -S1], λx.'10X'(x)
[dsať :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[desiat :: =c1, +E, c2, -S1], λx.'10X'(x)
[desiat :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c1, +C, +B, +G, c1, -C], λx.x
[ :: =c1, +E, +B, +G, c1, -E], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x
[ :: =c1, +C, +G, c1, -C], λx.x


Learning Kalderash-Romani

Learned 999 words in Kalderash-Romani and structured them in 28 functions.
It took 42 samples to learn those.
Those are:
jek is 1
duj is 2
trin is 3
štar is 4
panź is 5
šov is 6
jefta is 7
oxto is 8
iňa is 9
deš is 10
Function dešu_ maps {1,2,3,4,5,6,9} by x -> 1*x+10
Function deš_ maps {7,8} by x -> 1*x+10
biš is 20
Function biš taj _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tranda is 30
Function tranda taj _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
saranda is 40
Function saranda taj _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
pinda is 50
Function pinda taj _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ardeš maps {6} by x -> 0*x+60
Function _ardeš taj _ maps {6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _vardeš maps {7,8,9} by x -> 10*x+0
Function _vardeš taj _ maps {7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
šêl is 100
Function šêl _ maps {1,2,3,4,5,6,7,8,9,10,dešu_,deš_,20,biš taj _,30,tranda taj _,40,saranda taj _,50,pinda taj _,_ardeš,_ardeš taj _,_vardeš,_vardeš taj _} by x -> 1*x+100
Function _ šêla maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ šêla _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,dešu_,deš_,20,biš taj _,30,tranda taj _,40,saranda taj _,50,pinda taj _,_ardeš,_ardeš taj _,_vardeš,_vardeš taj _} by (x0,x1) -> 100*x0+1*x1

MG:
[šov :: c1, -D, -G, -A], 6
[ :: =c3, cFin], λx.x
[jefta :: c1, -E, -G, -B], 7
[oxto :: c1, -E, -G, -B], 8
[iňa :: c1, -E, -G, -A], 9
[jek :: c1, -A], 1
[duj :: c1, -G, -A], 2
[trin :: c1, -G, -A], 3
[štar :: c1, -G, -A], 4
[panź :: c1, -G, -A], 5
[šêl :: c3], 100
[šêl  :: =c2, c3], λx.'1X+100'(x)
[ šêla :: =c1, +G, c3], λx.'100X'(x)
[ šêla  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[deš :: c2, -S1], 10
[dešu :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[deš :: =c2B, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[biš :: c2, -S1], 20
[biš taj  :: =c1, c2, -S1], λx.'1X+20'(x)
[tranda :: c2, -S1], 30
[tranda taj  :: =c1, c2, -S1], λx.'1X+30'(x)
[saranda :: c2, -S1], 40
[saranda taj  :: =c1, c2, -S1], λx.'1X+40'(x)
[pinda :: c2, -S1], 50
[pinda taj  :: =c1, c2, -S1], λx.'1X+50'(x)
[ardeš :: =c1, +D, c2, -S1], λx.'0X+60'(x)
[ardeš taj  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[vardeš :: =c1, +E, c2, -S1], λx.'10X'(x)
[vardeš taj  :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, +A, c1, -E], λx.x
[ :: =c1, +G, +B, c1, -G], λx.x
[ :: =c1, +E, +G, +B, c1, -E], λx.x
[ :: =c1, +D, +G, +A, c1, -D], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Spanish
Learned 999 words in Spanish and structured them in 45 functions.
It took 152 samples to learn those.
Those are:
uno is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
dieciséis is 16
Function dieci_ maps {7,8,9} by x -> 1*x+10
veinte is 20
veintiún is 21
veintidós is 22
veintitrés is 23
Function veinti_ maps {4,5,7,8,9} by x -> 1*x+20
veintiséis is 26
treinta is 30
Function treinta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarenta is 40
Function cuarenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cien is 100
Function ciento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _cientos maps {2,3,4,6,8,9} by x -> 100*x+0
Function _cientos _ maps {2,3,4,6,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500
Function sete_tos maps {100} by x -> 0*x+700
Function sete_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dieci_,20,21,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 7*x0+1*x1

MG:
[cien :: c2, -F, -S1], 100
[ :: =c3, cFin], λx.x
[dos :: c1, -E], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E], 6
[ocho :: c1, -E, -B, -A], 8
[nueve :: c1, -E, -B, -A], 9
[uno :: c1], 1
[cinco :: c1, -B], 5
[siete :: c1, -B, -A], 7
[diez :: c2, -D, -S1], 10
[once :: c2, -D, -S1], 11
[doce :: c2, -D, -S1], 12
[trece :: c2, -D, -S1], 13
[catorce :: c2, -D, -S1], 14
[quince :: c2, -D, -S1], 15
[dieciséis :: c2, -D, -S1], 16
[dieci :: =c2A, c2, -D, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[veinte :: c2, -D, -S1], 20
[veintiún :: c2, -D, -S1], 21
[veintidós :: c2, -D, -S1], 22
[veintitrés :: c2, -D, -S1], 23
[veinti :: =c2B, c2, -D, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[veintiséis :: c2, -D, -S1], 26
[treinta :: c2, -D, -S1], 30
[treinta y  :: =c1, c2, -D, -S1], λx.'1X+30'(x)
[cuarenta :: c2, -D, -S1], 40
[cuarenta y  :: =c1, c2, -D, -S1], λx.'1X+40'(x)
[cincuenta :: c2, -D, -S1], 50
[cincuenta y  :: =c1, c2, -D, -S1], λx.'1X+50'(x)
[sesenta :: c2, -D, -S1], 60
[sesenta y  :: =c1, c2, -D, -S1], λx.'1X+60'(x)
[setenta :: c2, -D, -S1], 70
[setenta y  :: =c1, c2, -D, -S1], λx.'1X+70'(x)
[ochenta :: c2, -D, -S1], 80
[ochenta y  :: =c1, c2, -D, -S1], λx.'1X+80'(x)
[noventa :: c2, -D, -S1], 90
[noventa y  :: =c1, c2, -D, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -D], λx.x
[ciento  :: =c3**D, c3], λx.'1X+100'(x)
[cientos :: =c1, +E, c3], λx.'100X'(x)
[cientos  :: =c3**D, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[quinientos :: c3], 500
[quinientos  :: =c3**D, c3], λx.'1X+500'(x)
[sete :: =c3*, c3], λx.'1X+700'(x)
[tos :: =c2, +F, c3*], λx.'0X'(x)
[tos  :: =c3**D, =c3**F, c3**], λxλy.'1X+7Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c2, +D, c3**D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x


Learning Chol
Learned 400 words in Chol and structured them in 58 functions.
It took 93 samples to learn those.
Those are:
jump’ej is 1
cha’p’ej is 2
uxp’ej is 3
chänp’ej is 4
jo’p’ej is 5
wäcp’ej is 6
wucp’ej is 7
waxäcp’ej is 8
bolomp’ej is 9
Function lu_ maps {1} by x -> 0*x+10
Function junlu_ maps {1} by x -> 0*x+11
lajchämp’ej is 12
Function uxlu_ maps {1} by x -> 0*x+13
Function chänlu_ maps {1} by x -> 0*x+14
Function jo’lu_ maps {1} by x -> 0*x+15
Function wäclu_ maps {1} by x -> 0*x+16
Function wuclu_ maps {1} by x -> 0*x+17
Function waxäclu_ maps {1} by x -> 0*x+18
Function bolonlu_ maps {1} by x -> 0*x+19
junk’al is 20
Function _ i cha’c’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+20
cha’c’al is 40
Function _ i yuxc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+40
uxc’al is 60
Function _ i chänc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+60
chänc’al is 80
Function _ i jo’c’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+80
jo’c’al is 100
Function _ i wäcc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+100
wäcc’al is 120
Function _ i wucc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+120
wucc’al is 140
Function _ i waxäcc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+140
waxäcc’al is 160
Function _ i bolonc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+160
bolonc’al is 180
Function _ i lujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+180
lujunc’al is 200
Function _ i junlujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+200
junlujunc’al is 220
Function _ i laj_ maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_}x{80} by (x0,x1) -> 1*x0+3*x1+-20
lajchänc’al is 240
Function _ i uxlujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+240
uxlujunc’al is 260
Function _ i chänlujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+260
chänlujunc’al is 280
Function _ i jo’lujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+280
jo’lujunc’al is 300
Function _ i wäclujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+300
wäclujunc’al is 320
Function _ i wuclujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+320
wuclujunc’al is 340
Function _ i waxäclujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+340
waxäclujunc’al is 360
Function _ i bolonlujunc’al maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+360
bolonlujunc’al is 380
Function _ i jumbasc’ maps {1,2,3,4,5,6,7,8,9,lu_,junlu_,12,uxlu_,chänlu_,jo’lu_,wäclu_,wuclu_,waxäclu_,bolonlu_} by x -> 1*x+380
jumbasc’ is 400

MG:
[jump’ej :: c1], 1
[chänc’al :: c3, -C], 80
[ :: =c4, cFin], λx.x
[cha’p’ej :: c2, -S2], 2
[uxp’ej :: c2, -S2], 3
[chänp’ej :: c2, -S2], 4
[jo’p’ej :: c2, -S2], 5
[wäcp’ej :: c2, -S2], 6
[wucp’ej :: c2, -S2], 7
[waxäcp’ej :: c2, -S2], 8
[bolomp’ej :: c2, -S2], 9
[lu :: =c1, c2, -S2], λx.'0X+10'(x)
[junlu :: =c1, c2, -S2], λx.'0X+11'(x)
[lajchämp’ej :: c2, -S2], 12
[uxlu :: =c1, c2, -S2], λx.'0X+13'(x)
[chänlu :: =c1, c2, -S2], λx.'0X+14'(x)
[jo’lu :: =c1, c2, -S2], λx.'0X+15'(x)
[wäclu :: =c1, c2, -S2], λx.'0X+16'(x)
[wuclu :: =c1, c2, -S2], λx.'0X+17'(x)
[waxäclu :: =c1, c2, -S2], λx.'0X+18'(x)
[bolonlu :: =c1, c2, -S2], λx.'0X+19'(x)
[ :: =c1, c2], λx.x
[ i jo’c’al :: =cnix, =c2, c4], λxλy.'1X+1Y+80'(x,y)
[ :: cnix], 0
[jo’c’al :: c4], 100
[ i wäcc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+100'(x,y)
[wäcc’al :: c4], 120
[ i wucc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+120'(x,y)
[wucc’al :: c4], 140
[ i waxäcc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+140'(x,y)
[waxäcc’al :: c4], 160
[ i bolonc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+160'(x,y)
[bolonc’al :: c4], 180
[ i lujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+180'(x,y)
[lujunc’al :: c4], 200
[ i junlujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+200'(x,y)
[junlujunc’al :: c4], 220
[ i laj :: =c4C, =c2, c4], λxλy.'3X+1Y+-20'(x,y)
[ :: =c3, +C, c4C], λx.x
[lajchänc’al :: c4], 240
[ i uxlujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+240'(x,y)
[uxlujunc’al :: c4], 260
[ i chänlujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+260'(x,y)
[chänlujunc’al :: c4], 280
[ i jo’lujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+280'(x,y)
[jo’lujunc’al :: c4], 300
[ i wäclujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+300'(x,y)
[wäclujunc’al :: c4], 320
[ i wuclujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+320'(x,y)
[wuclujunc’al :: c4], 340
[ i waxäclujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+340'(x,y)
[waxäclujunc’al :: c4], 360
[ i bolonlujunc’al :: =cnix, =c2, c4], λxλy.'1X+1Y+360'(x,y)
[bolonlujunc’al :: c4], 380
[ i jumbasc’ :: =cnix, =c2, c4], λxλy.'1X+1Y+380'(x,y)
[jumbasc’ :: c4], 400
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[junk’al :: c3], 20
[ i cha’c’al :: =cnix, =c2, c3], λxλy.'1X+1Y+20'(x,y)
[cha’c’al :: c3], 40
[ i yuxc’al :: =cnix, =c2, c3], λxλy.'1X+1Y+40'(x,y)
[uxc’al :: c3], 60
[ i chänc’al :: =cnix, =c2, c3], λxλy.'1X+1Y+60'(x,y)
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +C, c3], λx.x
[ :: =c2, +S2, c2], λx.x


Learning Innu

Learned 999 words in Innu and structured them in 29 functions.
It took 43 samples to learn those.
Those are:
peikᵘ is 1
nishᵘ is 2
nishtᵘ is 3
neu is 4
patetat is 5
kutuasht is 6
nishuasht is 7
nishuaush is 8
peikushteu is 9
kutunnu is 10
Function kutunnu ashu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
nishunnu is 20
Function nishunnu ashu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
nishtunnu is 30
Function nishtunnu ashu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _nnu maps {4} by x -> 0*x+40
Function _nnu ashu _ maps {4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+4
Function _-tatunnu maps {5,6,7,8,9} by x -> 10*x+0
Function _-tatunnu ashu _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
peikumitashumitannu is 100
Function peikumitashumitannu ashu _ maps {1,2,3,4,5,6,7,8,9,10,kutunnu ashu _,20,nishunnu ashu _,30,nishtunnu ashu _,_nnu,_nnu ashu _,_-tatunnu,_-tatunnu ashu _} by x -> 1*x+100
nishumitashumitannu is 200
Function nishumitashumitannu ashu _ maps {1,2,3,4,5,6,7,8,9,10,kutunnu ashu _,20,nishunnu ashu _,30,nishtunnu ashu _,_nnu,_nnu ashu _,_-tatunnu,_-tatunnu ashu _} by x -> 1*x+200
nishtumitashumitannu is 300
Function nishtumitashumitannu ashu _ maps {1,2,3,4,5,6,7,8,9,10,kutunnu ashu _,20,nishunnu ashu _,30,nishtunnu ashu _,_nnu,_nnu ashu _,_-tatunnu,_-tatunnu ashu _} by x -> 1*x+300
Function _mitashumitannu maps {4} by x -> 0*x+400
Function _mitashumitannu ashu _ maps {4}x{1,2,3,4,5,6,7,8,9,10,kutunnu ashu _,20,nishunnu ashu _,30,nishtunnu ashu _,_nnu,_nnu ashu _,_-tatunnu,_-tatunnu ashu _} by (x0,x1) -> 94*x0+1*x1+24
Function _-tatumitashumitannu maps {5,6,7,8,9} by x -> 100*x+0
Function _-tatumitashumitannu ashu _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,kutunnu ashu _,20,nishunnu ashu _,30,nishtunnu ashu _,_nnu,_nnu ashu _,_-tatunnu,_-tatunnu ashu _} by (x0,x1) -> 100*x0+1*x1

MG:
[neu :: c1, -B], 4
[ :: =c3, cFin], λx.x
[patetat :: c1, -C], 5
[kutuasht :: c1, -C], 6
[nishuasht :: c1, -C], 7
[nishuaush :: c1, -C], 8
[peikushteu :: c1, -C], 9
[peikᵘ :: c1], 1
[nishᵘ :: c1], 2
[nishtᵘ :: c1], 3
[kutunnu :: c2, -S1], 10
[kutunnu ashu  :: =c1, c2, -S1], λx.'1X+10'(x)
[nishunnu :: c2, -S1], 20
[nishunnu ashu  :: =c1, c2, -S1], λx.'1X+20'(x)
[nishtunnu :: c2, -S1], 30
[nishtunnu ashu  :: =c1, c2, -S1], λx.'1X+30'(x)
[nnu :: =c1, +B, c2, -S1], λx.'0X+40'(x)
[nnu ashu  :: =c1, =c2B, c2, -S1], λxλy.'1X+9Y+4'(x,y)
[ :: =c1, +B, c2B], λx.x
[-tatunnu :: =c1, +C, c2, -S1], λx.'10X'(x)
[-tatunnu ashu  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[peikumitashumitannu :: c3], 100
[peikumitashumitannu ashu  :: =c2, c3], λx.'1X+100'(x)
[nishumitashumitannu :: c3], 200
[nishumitashumitannu ashu  :: =c2, c3], λx.'1X+200'(x)
[nishtumitashumitannu :: c3], 300
[nishtumitashumitannu ashu  :: =c2, c3], λx.'1X+300'(x)
[mitashumitannu :: =c1, +B, c3], λx.'0X+400'(x)
[mitashumitannu ashu  :: =c2, =c2B, c3], λxλy.'1X+94Y+24'(x,y)
[-tatumitashumitannu :: =c1, +C, c3], λx.'100X'(x)
[-tatumitashumitannu ashu  :: =c2, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Sardinian
Learned 999 words in Sardinian and structured them in 63 functions.
It took 96 samples to learn those.
Those are:
unu is 1
duos is 2
tres is 3
bàtoro is 4
chimbe is 5
ses is 6
sete is 7
oto is 8
noe is 9
deghe is 10
undighi is 11
doighi is 12
treighi is 13
batordighi is 14
bindighi is 15
seighi is 16
Function deghe_ maps {7,8,9} by x -> 1*x+10
binti is 20
Function binti_ maps {2,3,4,5,6,7,9} by x -> 1*x+20
Function bint_ maps {1,8} by x -> 1*x+20
trinta is 30
Function trinta_ maps {2,3,4,5,6,7,9} by x -> 1*x+30
Function trint_ maps {1,8} by x -> 1*x+30
baranta is 40
Function barant_ maps {1} by x -> 0*x+41
Function baranta_ maps {2,3,4,5,6,7,9} by x -> 1*x+40
barantoto is 48
chinbanta is 50
Function chinbanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+50
Function chinbant_ maps {1,8} by x -> 1*x+50
Function _santa maps {6} by x -> 0*x+60
Function _santa_ maps {6}x{2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
Function _sant_ maps {6}x{1,8} by (x0,x1) -> 10*x0+1*x1
setanta is 70
Function setanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+70
Function setant_ maps {1,8} by x -> 1*x+70
otanta is 80
Function otanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+80
Function otant_ maps {1,8} by x -> 1*x+80
nonanta is 90
Function nonanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+90
Function nonant_ maps {1,8} by x -> 1*x+90
chentu is 100
Function chentu e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+100
Function chentu_ maps {20,bint_,binti_} by x -> 1*x+100
duchentos is 200
Function duchentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+200
Function duchentos_ maps {20,bint_,binti_} by x -> 1*x+200
trechentos is 300
Function trechentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+300
Function trechentos_ maps {20,bint_,binti_} by x -> 1*x+300
batorchentos is 400
Function batorchentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+400
Function batorchentos_ maps {20,bint_,binti_} by x -> 1*x+400
chinbichentos is 500
Function chinbichentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+500
Function chinbichentos_ maps {20,bint_,binti_} by x -> 1*x+500
Function _chentos maps {6,7,8} by x -> 100*x+0
Function _chentos e _ maps {6,7,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by (x0,x1) -> 100*x0+1*x1
Function _chentos_ maps {6,7,8}x{20,bint_,binti_} by (x0,x1) -> 100*x0+1*x1
nobichentos is 900
Function nobichentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deghe_,30,trinta_,trint_,40,barant_,baranta_,48,50,chinbanta_,chinbant_,_santa,_santa_,_sant_,70,setanta_,setant_,80,otanta_,otant_,90,nonanta_,nonant_} by x -> 1*x+900
Function nobichentos_ maps {20,bint_,binti_} by x -> 1*x+900

MG:
[unu :: c1, -D, -C], 1
[ses :: c1, -E, -H, -B], 6
[ :: =c3, cFin], λx.x
[oto :: c1, -C, -H, -A], 8
[sete :: c1, -H, -B, -A], 7
[duos :: c1, -B], 2
[tres :: c1, -B], 3
[bàtoro :: c1, -B], 4
[chimbe :: c1, -B], 5
[noe :: c1, -B, -A], 9
[binti :: c2, -G, -S1], 20
[binti :: =c2B, c2, -G, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[bint :: =c2C, c2, -G, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[chentu :: c3], 100
[chentu e  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[chentu :: =c3G, c3], λx.'1X+100'(x)
[ :: =c2, +G, c3G], λx.x
[duchentos :: c3], 200
[duchentos e  :: =c3F, c3], λx.'1X+200'(x)
[duchentos :: =c3G, c3], λx.'1X+200'(x)
[trechentos :: c3], 300
[trechentos e  :: =c3F, c3], λx.'1X+300'(x)
[trechentos :: =c3G, c3], λx.'1X+300'(x)
[batorchentos :: c3], 400
[batorchentos e  :: =c3F, c3], λx.'1X+400'(x)
[batorchentos :: =c3G, c3], λx.'1X+400'(x)
[chinbichentos :: c3], 500
[chinbichentos e  :: =c3F, c3], λx.'1X+500'(x)
[chinbichentos :: =c3G, c3], λx.'1X+500'(x)
[chentos :: =c1, +H, c3], λx.'100X'(x)
[chentos e  :: =c3F, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[chentos :: =c3G, =c3H, c3], λxλy.'1X+100Y'(x,y)
[nobichentos :: c3], 900
[nobichentos e  :: =c3F, c3], λx.'1X+900'(x)
[nobichentos :: =c3G, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[deghe :: c2, -S1, -F], 10
[undighi :: c2, -S1, -F], 11
[doighi :: c2, -S1, -F], 12
[treighi :: c2, -S1, -F], 13
[batordighi :: c2, -S1, -F], 14
[bindighi :: c2, -S1, -F], 15
[seighi :: c2, -S1, -F], 16
[deghe :: =c2A, c2, -S1, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[trinta :: c2, -S1, -F], 30
[trinta :: =c2B, c2, -S1, -F], λx.'1X+30'(x)
[trint :: =c2C, c2, -S1, -F], λx.'1X+30'(x)
[baranta :: c2, -S1, -F], 40
[barant :: =c2D, c2, -S1, -F], λx.'0X+41'(x)
[ :: =c1, +D, c2D], λx.x
[baranta :: =c2B, c2, -S1, -F], λx.'1X+40'(x)
[barantoto :: c2, -S1, -F], 48
[chinbanta :: c2, -S1, -F], 50
[chinbanta :: =c2B, c2, -S1, -F], λx.'1X+50'(x)
[chinbant :: =c2C, c2, -S1, -F], λx.'1X+50'(x)
[santa :: =c1, +E, c2, -S1, -F], λx.'0X+60'(x)
[santa :: =c2B, =c2E, c2, -S1, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[sant :: =c2C, =c2E, c2, -S1, -F], λxλy.'1X+10Y'(x,y)
[setanta :: c2, -S1, -F], 70
[setanta :: =c2B, c2, -S1, -F], λx.'1X+70'(x)
[setant :: =c2C, c2, -S1, -F], λx.'1X+70'(x)
[otanta :: c2, -S1, -F], 80
[otanta :: =c2B, c2, -S1, -F], λx.'1X+80'(x)
[otant :: =c2C, c2, -S1, -F], λx.'1X+80'(x)
[nonanta :: c2, -S1, -F], 90
[nonanta :: =c2B, c2, -S1, -F], λx.'1X+90'(x)
[nonant :: =c2C, c2, -S1, -F], λx.'1X+90'(x)
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +H, +B, c1, -E], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c1, +D, +C, c1, -D], λx.x
[ :: =c1, +C, +H, +A, c1, -C], λx.x
[ :: =c1, +H, +B, +A, c1, -H], λx.x


Learning Ladin

Learned 999 words in Ladin and structured them in 47 functions.
It took 68 samples to learn those.
Those are:
un is 1
doi is 2
trei is 3
cater is 4
cinch is 5
sies is 6
set is 7
ot is 8
nuef is 9
diesc is 10
Function _desc maps {1} by x -> 0*x+11
dodesc is 12
tredesc is 13
catordesc is 14
chindesc is 15
seidesc is 16
Function dejes_ maps {7} by x -> 0*x+17
Function dejed_ maps {8} by x -> 0*x+18
Function deje_ maps {9} by x -> 0*x+19
vint is 20
Function vinte_ maps {2,3,4,5,6,7,9} by x -> 1*x+20
Function vint_ maps {1,8} by x -> 1*x+20
trenta is 30
Function trente_ maps {2,3,4,5,6,7,9} by x -> 1*x+30
Function trent_ maps {1,8} by x -> 1*x+30
caranta is 40
Function carant_ maps {1} by x -> 0*x+41
Function carante_ maps {2,3,4,5,6,7,9} by x -> 1*x+40
carantot is 48
cincanta is 50
Function cincante_ maps {2,3,4,5,6,7,9} by x -> 1*x+50
Function cincant_ maps {1,8} by x -> 1*x+50
sessanta is 60
Function sessante_ maps {2,3,4,5,6,7,9} by x -> 1*x+60
Function sessant_ maps {1,8} by x -> 1*x+60
Function _anta maps {7,8} by x -> 10*x+0
Function _ant_ maps {7,8}x{1,8} by (x0,x1) -> 10*x0+1*x1
Function _ante_ maps {7,8}x{2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
nonanta is 90
Function nonante_ maps {2,3,4,5,6,7,9} by x -> 1*x+90
Function nonant_ maps {1,8} by x -> 1*x+90
cent is 100
Function cente_ maps {1,2,3,4,5,6,7,8,9,10,_desc,12,13,14,15,16,dejes_,dejed_,deje_,20,vinte_,vint_,30,trente_,trent_,40,carant_,carante_,48,50,cincante_,cincant_,60,sessante_,sessant_,_anta,_ant_,_ante_,90,nonante_,nonant_} by x -> 1*x+100
Function _cent maps {2,3,4,5,7,8,9} by x -> 100*x+0
Function _cente_ maps {2,3,4,5,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_desc,12,13,14,15,16,dejes_,dejed_,deje_,20,vinte_,vint_,30,trente_,trent_,40,carant_,carante_,48,50,cincante_,cincant_,60,sessante_,sessant_,_anta,_ant_,_ante_,90,nonante_,nonant_} by (x0,x1) -> 100*x0+1*x1
Function _çent maps {6} by x -> 0*x+600
Function _çente_ maps {6}x{1,2,3,4,5,6,7,8,9,10,_desc,12,13,14,15,16,dejes_,dejed_,deje_,20,vinte_,vint_,30,trente_,trent_,40,carant_,carante_,48,50,cincante_,cincant_,60,sessante_,sessant_,_anta,_ant_,_ante_,90,nonante_,nonant_} by (x0,x1) -> 97*x0+1*x1+18

MG:
[un :: c1, -A, -F], 1
[sies :: c1, -J, -E], 6
[set :: c1, -B, -E, -G, -I], 7
[ot :: c1, -C, -G, -I, -F], 8
[nuef :: c1, -D, -E, -I], 9
[ :: =c3, cFin], λx.x
[doi :: c1, -E, -I], 2
[trei :: c1, -E, -I], 3
[cater :: c1, -E, -I], 4
[cinch :: c1, -E, -I], 5
[diesc :: c2, -S1], 10
[desc :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[dodesc :: c2, -S1], 12
[tredesc :: c2, -S1], 13
[catordesc :: c2, -S1], 14
[chindesc :: c2, -S1], 15
[seidesc :: c2, -S1], 16
[dejes :: =c2B, c2, -S1], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[dejed :: =c2C, c2, -S1], λx.'0X+18'(x)
[ :: =c1, +C, c2C], λx.x
[deje :: =c2D, c2, -S1], λx.'0X+19'(x)
[ :: =c1, +D, c2D], λx.x
[vint :: c2, -S1], 20
[vinte :: =c2E, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +E, c2E], λx.x
[vint :: =c2F, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +F, c2F], λx.x
[trenta :: c2, -S1], 30
[trente :: =c2E, c2, -S1], λx.'1X+30'(x)
[trent :: =c2F, c2, -S1], λx.'1X+30'(x)
[caranta :: c2, -S1], 40
[carant :: =c2A, c2, -S1], λx.'0X+41'(x)
[ :: =c1, +A, c2A], λx.x
[carante :: =c2E, c2, -S1], λx.'1X+40'(x)
[carantot :: c2, -S1], 48
[cincanta :: c2, -S1], 50
[cincante :: =c2E, c2, -S1], λx.'1X+50'(x)
[cincant :: =c2F, c2, -S1], λx.'1X+50'(x)
[sessanta :: c2, -S1], 60
[sessante :: =c2E, c2, -S1], λx.'1X+60'(x)
[sessant :: =c2F, c2, -S1], λx.'1X+60'(x)
[anta :: =c1, +G, c2, -S1], λx.'10X'(x)
[ant :: =c2F, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +G, c2G], λx.x
[ante :: =c2E, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[nonanta :: c2, -S1], 90
[nonante :: =c2E, c2, -S1], λx.'1X+90'(x)
[nonant :: =c2F, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[cent :: c3], 100
[cente :: =c2, c3], λx.'1X+100'(x)
[cent :: =c1, +I, c3], λx.'100X'(x)
[cente :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[çent :: =c1, +J, c3], λx.'0X+600'(x)
[çente :: =c2, =c3J, c3], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, +J, c3J], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, +I, c1, -E], λx.x
[ :: =c1, +E, +I, c1, -E], λx.x
[ :: =c1, +J, +E, c1, -J], λx.x
[ :: =c1, +C, +G, +I, +F, c1, -C], λx.x
[ :: =c1, +G, +I, c1, -G], λx.x
[ :: =c1, +I, +F, c1, -I], λx.x
[ :: =c1, +G, +I, +F, c1, -G], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +B, +E, +G, +I, c1, -B], λx.x
[ :: =c1, +D, +E, +I, c1, -D], λx.x


Learning Lingala
Learned 999 words in Lingala and structured them in 16 functions.
It took 23 samples to learn those.
Those are:
mókó is 1
míbalé is 2
mísáto is 3
mínei is 4
mítáno is 5
motóba is 6
sámbó is 7
mwámbe is 8
libwá is 9
zómi is 10
Function zómi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function ntúkú _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function ntúkú _ na _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nkámá is 100
Function nkámá _ na _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,zómi na _,ntúkú _,ntúkú _ na _} by (x0,x1) -> 100*x0+1*x1
Function nkámá _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0

MG:
[ :: =c3, cFin], λx.x
[zómi :: c2, -S1], 10
[zómi na  :: =c1, c2, -S1], λx.'1X+10'(x)
[ntúkú  :: =c2**B, c2, -S1], λx.'10X'(x)
[ntúkú  :: =c2*, c2, -S1], λx.x
[ na  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[mókó :: c1], 1
[míbalé :: c1, -B], 2
[mísáto :: c1, -B], 3
[mínei :: c1, -B], 4
[mítáno :: c1, -B], 5
[motóba :: c1, -B], 6
[sámbó :: c1, -B], 7
[mwámbe :: c1, -B], 8
[libwá :: c1, -B], 9
[nkámá :: c3], 100
[nkámá  :: =c3*, c3], λx.x
[ na  :: =c2, =c1, c3*], λxλy.'1X+100Y'(x,y)
[nkámá  :: =c2**B, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ na  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Latin
Learned 999 words in Latin and structured them in 67 functions.
It took 85 samples to learn those.
Those are:
unus is 1
duo is 2
tres is 3
quattuor is 4
quinque is 5
sex is 6
septem is 7
octo is 8
novem is 9
decem is 10
undecim is 11
tredecim is 13
Function _decim maps {2,4} by x -> 1*x+10
quindecim is 15
sedecim is 16
septendecim is 17
Function _deviginti maps {2} by x -> 0*x+18
undeviginti is 19
viginti is 20
Function viginti _ maps {1,2,3,4,5,6,7} by x -> 1*x+20
Function _detriginta maps {2} by x -> 0*x+28
undetriginta is 29
triginta is 30
Function triginta _ maps {1,2,3,4,5,6,7} by x -> 1*x+30
Function _dequadraginta maps {2} by x -> 0*x+38
undequadraginta is 39
quadraginta is 40
Function quadraginta _ maps {1,2,3,4,5,6,7} by x -> 1*x+40
Function _dequinquaginta maps {2} by x -> 0*x+48
undequinquaginta is 49
quinquaginta is 50
Function quinquaginta _ maps {1,2,3,4,5,6,7} by x -> 1*x+50
Function _de_aginta maps {2}x{6} by (x0,x1) -> 0*x0+0*x1+58
Function unde_aginta maps {6} by x -> 0*x+59
Function _aginta maps {6} by x -> 0*x+60
Function _aginta _ maps {6}x{1,2,3,4,5,6,7} by (x0,x1) -> 10*x0+1*x1
Function _deseptuaginta maps {2} by x -> 0*x+68
undeseptuaginta is 69
septuaginta is 70
Function septuaginta _ maps {1,2,3,4,5,6,7} by x -> 1*x+70
Function _de_ginta maps {2}x{8} by (x0,x1) -> 0*x0+0*x1+78
Function unde_ginta maps {8} by x -> 0*x+79
Function _ginta maps {8} by x -> 0*x+80
Function _ginta _ maps {8}x{1,2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
Function _denonaginta maps {2} by x -> 0*x+88
nonaginta is 90
Function nonaginta _ maps {1,2,3,4,5,6,7,8} by x -> 1*x+90
undecentum is 99
centum is 100
Function centum _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+100
Function centum 	_ maps {_dequinquaginta} by x -> 0*x+148
ducenti is 200
Function ducenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+200
trecenti is 300
Function trecenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+300
quadringenti is 400
Function quadringenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+400
quingenti is 500
Function quingenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+500
sescenti is 600
Function sescenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+600
septingenti is 700
Function septingenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+700
octingenti is 800
Function octingenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+800
nongenti is 900
Function nongenti _ maps {1,2,3,4,5,6,7,8,9,10,11,13,_decim,15,16,17,_deviginti,19,20,viginti _,_detriginta,29,30,triginta _,_dequadraginta,39,40,quadraginta _,_dequinquaginta,49,50,quinquaginta _,_de_aginta,unde_aginta,_aginta,_aginta _,_deseptuaginta,69,70,septuaginta _,_de_ginta,unde_ginta,_ginta,_ginta _,_denonaginta,90,nonaginta _,99} by x -> 1*x+900

MG:
[duo :: c1, -B, -C, -G, -A, -F], 2
[sex :: c1, -D, -C, -G, -F], 6
[octo :: c1, -E, -G], 8
[dequinquaginta :: =c1, +B, c2, -I, -S1], λx.'0X+48'(x)
[ :: =c3, cFin], λx.x
[unus :: c1, -C, -G, -F], 1
[tres :: c1, -C, -G, -F], 3
[quattuor :: c1, -C, -G, -A, -F], 4
[quinque :: c1, -C, -G, -F], 5
[septem :: c1, -C, -G, -F], 7
[decem :: c2, -H, -S1], 10
[undecim :: c2, -H, -S1], 11
[tredecim :: c2, -H, -S1], 13
[decim :: =c1, +A, c2, -H, -S1], λx.'1X+10'(x)
[quindecim :: c2, -H, -S1], 15
[sedecim :: c2, -H, -S1], 16
[septendecim :: c2, -H, -S1], 17
[deviginti :: =c1, +B, c2, -H, -S1], λx.'0X+18'(x)
[undeviginti :: c2, -H, -S1], 19
[viginti :: c2, -H, -S1], 20
[viginti  :: =c2C, c2, -H, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[detriginta :: =c1, +B, c2, -H, -S1], λx.'0X+28'(x)
[undetriginta :: c2, -H, -S1], 29
[triginta :: c2, -H, -S1], 30
[triginta  :: =c2C, c2, -H, -S1], λx.'1X+30'(x)
[dequadraginta :: =c1, +B, c2, -H, -S1], λx.'0X+38'(x)
[undequadraginta :: c2, -H, -S1], 39
[quadraginta :: c2, -H, -S1], 40
[quadraginta  :: =c2C, c2, -H, -S1], λx.'1X+40'(x)
[undequinquaginta :: c2, -H, -S1], 49
[quinquaginta :: c2, -H, -S1], 50
[quinquaginta  :: =c2C, c2, -H, -S1], λx.'1X+50'(x)
[de :: =c2*, =c2B, c2, -H, -S1], λxλy.'1X+0Y+58'(x,y)
[ :: =c1, +B, c2B], λx.x
[aginta :: =c1, +D, c2*], λx.'0X'(x)
[unde :: =c2**, c2, -H, -S1], λx.'1X+59'(x)
[aginta :: =c1, +D, c2**], λx.'0X'(x)
[aginta :: =c1, +D, c2, -H, -S1], λx.'0X+60'(x)
[aginta  :: =c2C, =c2D, c2, -H, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[deseptuaginta :: =c1, +B, c2, -H, -S1], λx.'0X+68'(x)
[undeseptuaginta :: c2, -H, -S1], 69
[septuaginta :: c2, -H, -S1], 70
[septuaginta  :: =c2C, c2, -H, -S1], λx.'1X+70'(x)
[de :: =c2***, =c2B, c2, -H, -S1], λxλy.'1X+0Y+78'(x,y)
[ginta :: =c1, +E, c2***], λx.'0X'(x)
[unde :: =c2****, c2, -H, -S1], λx.'1X+79'(x)
[ginta :: =c1, +E, c2****], λx.'0X'(x)
[ginta :: =c1, +E, c2, -H, -S1], λx.'0X+80'(x)
[ginta  :: =c2F, =c2E, c2, -H, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, +F, c2F], λx.x
[denonaginta :: =c1, +B, c2, -H, -S1], λx.'0X+88'(x)
[nonaginta :: c2, -H, -S1], 90
[nonaginta  :: =c2G, c2, -H, -S1], λx.'1X+90'(x)
[ :: =c1, +G, c2G], λx.x
[undecentum :: c2, -H, -S1], 99
[ :: =c1, c2], λx.x
[novem :: c1, -F], 9
[ :: =c1, c2, -H], λx.x
[centum :: c3], 100
[centum  :: =c3H, c3], λx.'1X+100'(x)
[ :: =c2, +H, c3H], λx.x
[centum 	 :: =c3I, c3], λx.'0X+148'(x)
[ :: =c2, +I, c3I], λx.x
[ducenti :: c3], 200
[ducenti  :: =c2, c3], λx.'1X+200'(x)
[trecenti :: c3], 300
[trecenti  :: =c2, c3], λx.'1X+300'(x)
[quadringenti :: c3], 400
[quadringenti  :: =c2, c3], λx.'1X+400'(x)
[quingenti :: c3], 500
[quingenti  :: =c2, c3], λx.'1X+500'(x)
[sescenti :: c3], 600
[sescenti  :: =c2, c3], λx.'1X+600'(x)
[septingenti :: c3], 700
[septingenti  :: =c2, c3], λx.'1X+700'(x)
[octingenti :: c3], 800
[octingenti  :: =c2, c3], λx.'1X+800'(x)
[nongenti :: c3], 900
[nongenti  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +G, +F, c1, -C], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x
[ :: =c1, +B, +C, +G, +A, +F, c1, -B], λx.x
[ :: =c1, +D, +C, +G, +F, c1, -D], λx.x
[ :: =c1, +G, +F, c1, -G], λx.x
[ :: =c2, +H, +S1, c2, -H], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +G, +A, +F, c1, -G], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +C, +G, +A, +F, c1, -C], λx.x


Learning Araki

Learned 999 words in Araki and structured them in 46 functions.
It took 812 samples to learn those.
Those are:
mo hese is 1
mo dua is 2
mo rolu is 3
mo v̈ari is 4
mo lim̈a is 5
mo haion is 6
mo haip̈iru is 7
mo haualu is 8
mo haisua is 9
mo sagavulu is 10
Function mo sagavul comana _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
mo sagavul comana mo lim̈a is 15
mo gavul dua is 20
Function mo gavul dua _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
mo gavul rolu is 30
Function mo gavul rolu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
mo gavul v̈ari is 40
Function mo gavul v̈ari _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
mo gavul lim̈a is 50
Function mo gavul lim̈a _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
mo gavul haion is 60
Function mo gavul haion _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
mo gavul haip̈iru is 70
Function mo gavul haip̈iru _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
mo gavul haualu is 80
Function mo gavul haualu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
mo gavul haisua is 90
Function mo gavul haisua _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
mo gavul sagavulu is 100
Function mo gavul sagavulu _ maps {1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by x -> 1*x+100
mo gavul sagavulu dua is 200
Function _ dua _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 2*x0+1*x1
Function _ rolu maps {100} by x -> 0*x+300
Function _ rolu _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 3*x0+1*x1
Function _ v̈ari maps {100} by x -> 0*x+400
Function _ v̈ari _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 4*x0+1*x1
Function _ lim̈a maps {100} by x -> 0*x+500
Function _ lim̈a _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 5*x0+1*x1
Function _ haion maps {100} by x -> 0*x+600
Function _ haion _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 6*x0+1*x1
Function _ haip̈iru maps {100} by x -> 0*x+700
Function _ haip̈iru _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 7*x0+1*x1
Function _ haualu maps {100} by x -> 0*x+800
Function _ haualu _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 8*x0+1*x1
Function _ haisua maps {100} by x -> 0*x+900
Function _ haisua _ maps {100}x{1,2,3,4,5,6,7,8,9,10,mo sagavul comana _,15,20,mo gavul dua _,30,mo gavul rolu _,40,mo gavul v̈ari _,50,mo gavul lim̈a _,60,mo gavul haion _,70,mo gavul haip̈iru _,80,mo gavul haualu _,90,mo gavul haisua _} by (x0,x1) -> 9*x0+1*x1

MG:
[mo gavul sagavulu :: c2, -D, -S1], 100
[ :: =c3, cFin], λx.x
[mo sagavulu :: c2, -C, -S1], 10
[mo sagavul comana  :: =c2A, c2, -C, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[mo sagavul comana mo lim̈a :: c2, -C, -S1], 15
[mo gavul dua :: c2, -C, -S1], 20
[mo gavul dua  :: =c1, c2, -C, -S1], λx.'1X+20'(x)
[mo gavul rolu :: c2, -C, -S1], 30
[mo gavul rolu  :: =c1, c2, -C, -S1], λx.'1X+30'(x)
[mo gavul v̈ari :: c2, -C, -S1], 40
[mo gavul v̈ari  :: =c1, c2, -C, -S1], λx.'1X+40'(x)
[mo gavul lim̈a :: c2, -C, -S1], 50
[mo gavul lim̈a  :: =c1, c2, -C, -S1], λx.'1X+50'(x)
[mo gavul haion :: c2, -C, -S1], 60
[mo gavul haion  :: =c1, c2, -C, -S1], λx.'1X+60'(x)
[mo gavul haip̈iru :: c2, -C, -S1], 70
[mo gavul haip̈iru  :: =c1, c2, -C, -S1], λx.'1X+70'(x)
[mo gavul haualu :: c2, -C, -S1], 80
[mo gavul haualu  :: =c1, c2, -C, -S1], λx.'1X+80'(x)
[mo gavul haisua :: c2, -C, -S1], 90
[mo gavul haisua  :: =c1, c2, -C, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -C], λx.x
[mo hese :: c1, -A], 1
[mo dua :: c1, -A], 2
[mo rolu :: c1, -A], 3
[mo v̈ari :: c1, -A], 4
[mo lim̈a :: c1], 5
[mo haion :: c1, -A], 6
[mo haip̈iru :: c1, -A], 7
[mo haualu :: c1, -A], 8
[mo haisua :: c1, -A], 9
[mo gavul sagavulu  :: =c3C, c3], λx.'1X+100'(x)
[ :: =c2, +C, c3C], λx.x
[mo gavul sagavulu dua :: c3], 200
[ dua  :: =c3C, =c3D, c3], λxλy.'1X+2Y'(x,y)
[ :: =c2, +D, c3D], λx.x
[ rolu :: =c2, +D, c3], λx.'0X+300'(x)
[ rolu  :: =c3C, =c3D, c3], λxλy.'1X+3Y'(x,y)
[ v̈ari :: =c2, +D, c3], λx.'0X+400'(x)
[ v̈ari  :: =c3C, =c3D, c3], λxλy.'1X+4Y'(x,y)
[ lim̈a :: =c2, +D, c3], λx.'0X+500'(x)
[ lim̈a  :: =c3C, =c3D, c3], λxλy.'1X+5Y'(x,y)
[ haion :: =c2, +D, c3], λx.'0X+600'(x)
[ haion  :: =c3C, =c3D, c3], λxλy.'1X+6Y'(x,y)
[ haip̈iru :: =c2, +D, c3], λx.'0X+700'(x)
[ haip̈iru  :: =c3C, =c3D, c3], λxλy.'1X+7Y'(x,y)
[ haualu :: =c2, +D, c3], λx.'0X+800'(x)
[ haualu  :: =c3C, =c3D, c3], λxλy.'1X+8Y'(x,y)
[ haisua :: =c2, +D, c3], λx.'0X+900'(x)
[ haisua  :: =c3C, =c3D, c3], λxλy.'1X+9Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x


Learning Danish
Learned 999 words in Danish and structured them in 37 functions.
It took 51 samples to learn those.
Those are:
en is 1
to is 2
tre is 3
fire is 4
fem is 5
seks is 6
syv is 7
otte is 8
ni is 9
ti is 10
elleve is 11
Function _lv maps {2} by x -> 0*x+12
Function fjort_ maps {1} by x -> 0*x+14
Function _t_ maps {5,6}x{1} by (x0,x1) -> 1*x0+5*x1+5
Function sytt_ maps {1} by x -> 0*x+17
Function att_ maps {1} by x -> 0*x+18
Function _tt_ maps {3,9}x{1} by (x0,x1) -> 1*x0+5*x1+5
tyve is 20
Function _ogtyve maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _dive maps {3} by x -> 0*x+30
Function _og_dive maps {1,2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
fyrre is 40
Function _ogfyrre maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function halv_ds maps {3} by x -> 0*x+50
Function _oghalv_ds maps {1,2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+15*x1+5
Function _s maps {3} by x -> 0*x+60
Function _og_s maps {1,2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+18*x1+6
halvfjerds is 70
Function _oghalvfjerds maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
firs is 80
Function _ogfirs maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function halv_s maps {5} by x -> 0*x+90
Function _oghalv_s maps {1,2,3,4,5,6,7,8,9}x{5} by (x0,x1) -> 1*x0+17*x1+5
hundred is 100
Function _ hundred og _ maps {1}x{1,2,3,4,5,6,7,8,9,10,11,_lv,fjort_,_t_,sytt_,att_,_tt_,20,_ogtyve,_dive,_og_dive,40,_ogfyrre,halv_ds,_oghalv_ds,_s,_og_s,70,_oghalvfjerds,80,_ogfirs,halv_s,_oghalv_s} by (x0,x1) -> 50*x0+1*x1+50
Function _ hundrede maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundrede og _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_lv,fjort_,_t_,sytt_,att_,_tt_,20,_ogtyve,_dive,_og_dive,40,_ogfyrre,halv_ds,_oghalv_ds,_s,_og_s,70,_oghalvfjerds,80,_ogfirs,halv_s,_oghalv_s} by (x0,x1) -> 100*x0+1*x1

MG:
[en :: c1, -B], 1
[to :: c1, -A, -I], 2
[tre :: c1, -F, -I, -D], 3
[fem :: c1, -G, -C, -I], 5
[ :: =c3, cFin], λx.x
[fire :: c1, -I], 4
[seks :: c1, -C, -I], 6
[syv :: c1, -I], 7
[otte :: c1, -I], 8
[ni :: c1, -I, -D], 9
[ti :: c2, -S1], 10
[elleve :: c2, -S1], 11
[lv :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[fjort :: =c2B, c2, -S1], λx.'0X+14'(x)
[ :: =c1, +B, c2B], λx.x
[t :: =c2B, =c2C, c2, -S1], λxλy.'5X+1Y+5'(x,y)
[ :: =c1, +C, c2C], λx.x
[sytt :: =c2B, c2, -S1], λx.'0X+17'(x)
[att :: =c2B, c2, -S1], λx.'0X+18'(x)
[tt :: =c2B, =c2D, c2, -S1], λxλy.'5X+1Y+5'(x,y)
[ :: =c1, +D, c2D], λx.x
[tyve :: c2, -S1], 20
[ogtyve :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[dive :: =c1, +F, c2, -S1], λx.'0X+30'(x)
[og :: =c2*, =c1, c2, -S1, -S1], λxλy.'1X+1Y+3'(x,y)
[dive :: =c1, +F, c2*], λx.'9X'(x)
[fyrre :: c2, -S1], 40
[ogfyrre :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[halv :: =c2**, c2, -S1], λx.'1X+50'(x)
[ds :: =c1, +F, c2**], λx.'0X'(x)
[oghalv :: =c2***, =c1, c2, -S1], λxλy.'1X+1Y+5'(x,y)
[ds :: =c1, +F, c2***], λx.'15X'(x)
[s :: =c1, +F, c2, -S1], λx.'0X+60'(x)
[s :: =c1, +F, c2****], λx.'18X'(x)
[halvfjerds :: c2, -S1], 70
[oghalvfjerds :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+70'(x,y)
[firs :: c2, -S1], 80
[ogfirs :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+80'(x,y)
[halv :: =c2*****, c2, -S1], λx.'1X+90'(x)
[s :: =c1, +G, c2*****], λx.'0X'(x)
[oghalv :: =c2******, =c1, c2, -S1], λxλy.'1X+1Y+5'(x,y)
[s :: =c1, +G, c2******], λx.'17X'(x)
[ :: =c1, c2], λx.x
[hundred :: c3], 100
[ hundred og  :: =c2, =c2B, c3], λxλy.'1X+50Y+50'(x,y)
[ hundrede :: =c1, +I, c3], λx.'100X'(x)
[ hundrede og  :: =c2, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +I, +D, c1, -I], λx.x
[ :: =c1, +F, +I, +D, c1, -F], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +C, +I, c1, -C], λx.x
[ :: =c1, +G, +C, +I, c1, -G], λx.x
[ :: =c1, +A, +I, c1, -A], λx.x


Learning Proto-Indo-European

Learned 999 words in Proto-Indo-European and structured them in 45 functions.
It took 63 samples to learn those.
Those are:
oinos is 1
dwōu is 2
trejes is 3
qétwores is 4
penqe is 5
seks is 6
septḿ is 7
oktṓu is 8
newṇ is 9
dekṃ is 10
sémdekṃ is 11
Function _ dekṃ maps {2,3,4,5,7,9} by x -> 1*x+10
sweks dekṃ is 16
oktṓ dekṃ is 18
dwid kṃtī is 20
oināwid kṃtī is 21
Function _ dwid kṃtī maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trídkṃta is 30
Function _ tridkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
qetwŕdkṃta is 40
Function _ qetwŕdkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
penqédkṃta is 50
Function _ penqédkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sé ksdkṃta is 60
Function _ sé ksdkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _dkṃta maps {7} by x -> 0*x+70
Function _ _dkṃta maps {1,2,3,4,5,6,7,8,9}x{7} by (x0,x1) -> 1*x0+10*x1
oktṓdkṃta is 80
Function _ oktṓdkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
néwṇdkṃta is 90
Function _ néwṇdkṃta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
dkṃtóm is 100
Function _ dkṃtóm maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+100
dwikṃtos is 200
Function _ dwikṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+200
trikṃtos is 300
Function _ trikṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+300
qatwṛkṃtos is 400
Function _ qatwṛkṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+400
Function _kṃtos maps {5,6,9} by x -> 100*x+0
Function _ _kṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta}x{5,6,9} by (x0,x1) -> 1*x0+100*x1
septṃkṃtos is 700
Function _ septṃkṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+700
oktōkṃtos is 800
Function _ oktōkṃtos maps {1,2,3,4,5,6,7,8,9,10,11,_ dekṃ,16,18,20,21,_ dwid kṃtī,30,_ tridkṃta,40,_ qetwŕdkṃta,50,_ penqédkṃta,60,_ sé ksdkṃta,_dkṃta,_ _dkṃta,80,_ oktṓdkṃta,90,_ néwṇdkṃta} by x -> 1*x+800

MG:
[septḿ :: c1, -D, -B, -A], 7
[ :: =c3, cFin], λx.x
[dekṃ :: c2, -S1], 10
[sémdekṃ :: c2, -S1], 11
[ dekṃ :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[sweks dekṃ :: c2, -S1], 16
[oktṓ dekṃ :: c2, -S1], 18
[dwid kṃtī :: c2, -S1], 20
[oināwid kṃtī :: c2, -S1], 21
[ dwid kṃtī :: =c1, +B, c2, -S1], λx.'1X+20'(x)
[trídkṃta :: c2, -S1], 30
[ tridkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[ :: cnix], 0
[qetwŕdkṃta :: c2, -S1], 40
[ qetwŕdkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[penqédkṃta :: c2, -S1], 50
[ penqédkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+50'(x,y)
[sé ksdkṃta :: c2, -S1], 60
[ sé ksdkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+60'(x,y)
[dkṃta :: =c1, +D, c2, -S1], λx.'0X+70'(x)
[  :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[dkṃta :: =c1, +D, c2*], λx.'10X'(x)
[oktṓdkṃta :: c2, -S1], 80
[ oktṓdkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+80'(x,y)
[néwṇdkṃta :: c2, -S1], 90
[ néwṇdkṃta :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+90'(x,y)
[ :: =c1, c2], λx.x
[oinos :: c1], 1
[dwōu :: c1, -B, -A], 2
[trejes :: c1, -B, -A], 3
[qétwores :: c1, -B, -A], 4
[penqe :: c1, -B, -F, -A], 5
[seks :: c1, -B, -F], 6
[oktṓu :: c1, -B], 8
[newṇ :: c1, -B, -F, -A], 9
[dkṃtóm :: c3], 100
[ dkṃtóm :: =cnix, =c2, c3], λxλy.'1X+1Y+100'(x,y)
[dwikṃtos :: c3], 200
[ dwikṃtos :: =cnix, =c2, c3], λxλy.'1X+1Y+200'(x,y)
[trikṃtos :: c3], 300
[ trikṃtos :: =cnix, =c2, c3], λxλy.'1X+1Y+300'(x,y)
[qatwṛkṃtos :: c3], 400
[ qatwṛkṃtos :: =cnix, =c2, c3], λxλy.'1X+1Y+400'(x,y)
[kṃtos :: =c1, +F, c3], λx.'100X'(x)
[  :: =c3*, =c2, c3], λxλy.'1X+1Y'(x,y)
[kṃtos :: =c1, +F, c3*], λx.'100X'(x)
[septṃkṃtos :: c3], 700
[ septṃkṃtos :: =cnix, =c2, c3], λxλy.'1X+1Y+700'(x,y)
[oktōkṃtos :: c3], 800
[ oktōkṃtos :: =cnix, =c2, c3], λxλy.'1X+1Y+800'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +D, +B, +A, c1, -D], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x


Learning Swiss-German
Learned 999 words in Swiss-German and structured them in 38 functions.
It took 52 samples to learn those.
Those are:
eis is 1
zwöi is 2
drü is 3
vier is 4
füf is 5
säch is 6
sibe is 7
acht is 8
nüün is 9
zäh is 10
euf is 11
zwöuf is 12
dryzäh is 13
Function _zäh maps {4,5,6,7,8,9} by x -> 1*x+10
zwänzg is 20
einezwänzg is 21
Function _ezwänzg maps {2,3,4,5,6,8,9} by x -> 1*x+20
Function _nezwänzg maps {7} by x -> 0*x+27
dryssg is 30
einedryssg is 31
Function _edryssg maps {2,3,4,5,6,8,9} by x -> 1*x+30
Function _nedryssg maps {7} by x -> 0*x+37
Function _zg maps {4,5,7,9} by x -> 10*x+0
Function eine_zg maps {4,5,7,9} by x -> 10*x+1
Function _e_zg maps {2,3,4,5,6,8,9}x{4,5,7,9} by (x0,x1) -> 1*x0+10*x1
Function _ne_zg maps {7}x{4,5,7,9} by (x0,x1) -> 1*x0+10*x1
sëchzg is 60
einesëchzg is 61
Function _esëchzg maps {2,3,4,5,6,8,9} by x -> 1*x+60
Function _nesëchzg maps {7} by x -> 0*x+67
achzg is 80
eineachzg is 81
Function _eachzg maps {2,3,4,5,6,8,9} by x -> 1*x+80
Function _neachzg maps {7} by x -> 0*x+87
Hundert is 100
Function Hundert _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,_zäh,20,21,_ezwänzg,_nezwänzg,30,31,_edryssg,_nedryssg,_zg,eine_zg,_e_zg,_ne_zg,60,61,_esëchzg,_nesëchzg,80,81,_eachzg,_neachzg} by x -> 1*x+100
Function _ Hundert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ Hundert _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,_zäh,20,21,_ezwänzg,_nezwänzg,30,31,_edryssg,_nedryssg,_zg,eine_zg,_e_zg,_ne_zg,60,61,_esëchzg,_nesëchzg,80,81,_eachzg,_neachzg} by (x0,x1) -> 100*x0+1*x1

MG:
[sibe :: c1, -C, -A, -D, -F], 7
[ :: =c3, cFin], λx.x
[zäh :: c2, -S1], 10
[euf :: c2, -S1], 11
[zwöuf :: c2, -S1], 12
[dryzäh :: c2, -S1], 13
[zäh :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[zwänzg :: c2, -S1], 20
[einezwänzg :: c2, -S1], 21
[ezwänzg :: =c1, +B, c2, -S1], λx.'1X+20'(x)
[nezwänzg :: =c1, +C, c2, -S1], λx.'0X+27'(x)
[dryssg :: c2, -S1], 30
[einedryssg :: c2, -S1], 31
[edryssg :: =c1, +B, c2, -S1], λx.'1X+30'(x)
[nedryssg :: =c1, +C, c2, -S1], λx.'0X+37'(x)
[zg :: =c1, +D, c2, -S1], λx.'10X'(x)
[eine :: =c2*, c2, -S1], λx.'1X+1'(x)
[zg :: =c1, +D, c2*], λx.'10X'(x)
[e :: =c2**, =c2B, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[zg :: =c1, +D, c2**], λx.'10X'(x)
[ne :: =c2***, =c2C, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[zg :: =c1, +D, c2***], λx.'10X'(x)
[sëchzg :: c2, -S1], 60
[einesëchzg :: c2, -S1], 61
[esëchzg :: =c1, +B, c2, -S1], λx.'1X+60'(x)
[nesëchzg :: =c1, +C, c2, -S1], λx.'0X+67'(x)
[achzg :: c2, -S1], 80
[eineachzg :: c2, -S1], 81
[eachzg :: =c1, +B, c2, -S1], λx.'1X+80'(x)
[neachzg :: =c1, +C, c2, -S1], λx.'0X+87'(x)
[ :: =c1, c2], λx.x
[eis :: c1], 1
[zwöi :: c1, -B, -F], 2
[drü :: c1, -B, -F], 3
[vier :: c1, -B, -A, -D, -F], 4
[füf :: c1, -B, -A, -D, -F], 5
[säch :: c1, -B, -A, -F], 6
[acht :: c1, -B, -A, -F], 8
[nüün :: c1, -B, -A, -D, -F], 9
[Hundert :: c3], 100
[Hundert  :: =c2, c3], λx.'1X+100'(x)
[ Hundert :: =c1, +F, c3], λx.'100X'(x)
[ Hundert  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +D, +F, c1, -A], λx.x
[ :: =c1, +B, +A, +D, +F, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +A, +F, c1, -B], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +C, +A, +D, +F, c1, -C], λx.x
[ :: =c1, +D, +F, c1, -D], λx.x


Learning Plautdietsch
Learned 99 words in Plautdietsch and structured them in 40 functions.
It took 49 samples to learn those.
Those are:
eent is 1
twee is 2
dree is 3
vea is 4
fiew is 5
sas is 6
säwen is 7
acht is 8
näajen is 9
tieen is 10
alf is 11
twalf is 12
drettieen is 13
vieetieen is 14
feftieen is 15
Function _tieen maps {6,7,8,9} by x -> 1*x+10
twintich is 20
een un twintich is 21
Function _ un twintich maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
dartich is 30
een un dartich is 31
Function _ un dartich maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
vieetich is 40
een un vieetich is 41
Function _ un vieetich maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
feftich is 50
een un feftich is 51
Function _ un feftich maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
zastich is 60
een un zastich is 61
Function _ un zastich maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
zäwentich is 70
een un zäwentich is 71
Function _ un zäwentich maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
tachentich is 80
een un tachentich is 81
Function _ un tachentich maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _tich maps {9} by x -> 0*x+90
Function een un _tich maps {9} by x -> 0*x+91
Function _ un _tich maps {2,3,4,5,6,7,8,9}x{9} by (x0,x1) -> 1*x0+10*x1

MG:
[näajen :: c1, -C, -B, -A], 9
[ :: =c2, cFin], λx.x
[twee :: c1, -B], 2
[dree :: c1, -B], 3
[vea :: c1, -B], 4
[fiew :: c1, -B], 5
[sas :: c1, -B, -A], 6
[säwen :: c1, -B, -A], 7
[acht :: c1, -B, -A], 8
[tieen :: c2], 10
[alf :: c2], 11
[twalf :: c2], 12
[drettieen :: c2], 13
[vieetieen :: c2], 14
[feftieen :: c2], 15
[tieen :: =c1, +A, c2], λx.'1X+10'(x)
[twintich :: c2], 20
[een un twintich :: c2], 21
[ un twintich :: =c1, +B, c2], λx.'1X+20'(x)
[dartich :: c2], 30
[een un dartich :: c2], 31
[ un dartich :: =c1, +B, c2], λx.'1X+30'(x)
[vieetich :: c2], 40
[een un vieetich :: c2], 41
[ un vieetich :: =c1, +B, c2], λx.'1X+40'(x)
[feftich :: c2], 50
[een un feftich :: c2], 51
[ un feftich :: =c1, +B, c2], λx.'1X+50'(x)
[zastich :: c2], 60
[een un zastich :: c2], 61
[ un zastich :: =c1, +B, c2], λx.'1X+60'(x)
[zäwentich :: c2], 70
[een un zäwentich :: c2], 71
[ un zäwentich :: =c1, +B, c2], λx.'1X+70'(x)
[tachentich :: c2], 80
[een un tachentich :: c2], 81
[ un tachentich :: =c1, +B, c2], λx.'1X+80'(x)
[tich :: =c1, +C, c2], λx.'0X+90'(x)
[een un  :: =c2*, c2], λx.'1X+91'(x)
[tich :: =c1, +C, c2*], λx.'0X'(x)
[ un  :: =c2**, =c2B, c2], λxλy.'1X+1Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[tich :: =c1, +C, c2**], λx.'10X'(x)
[ :: =c1, c2], λx.x
[eent :: c1], 1
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning German

Learned 999 words in German and structured them in 34 functions.
It took 47 samples to learn those.
Those are:
eins is 1
zwei is 2
drei is 3
vier is 4
fünf is 5
sechs is 6
sieben is 7
acht is 8
neun is 9
zehn is 10
elf is 11
zwölf is 12
Function _zehn maps {3,4,5,8,9} by x -> 1*x+10
sechzehn is 16
siebzehn is 17
zwanzig is 20
einundzwanzig is 21
Function _undzwanzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ßig maps {3} by x -> 0*x+30
Function einund_ßig maps {3} by x -> 0*x+31
Function _und_ßig maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
Function _zig maps {4,5,8,9} by x -> 10*x+0
Function einund_zig maps {4,5,8,9} by x -> 10*x+1
Function _und_zig maps {2,3,4,5,6,7,8,9}x{4,5,8,9} by (x0,x1) -> 1*x0+10*x1
sechzig is 60
einundsechzig is 61
Function _undsechzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
siebzig is 70
einundsiebzig is 71
Function _undsiebzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
hundert is 100
Function hundert_ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zehn,16,17,20,21,_undzwanzig,_ßig,einund_ßig,_und_ßig,_zig,einund_zig,_und_zig,60,61,_undsechzig,70,71,_undsiebzig} by x -> 1*x+100
Function _hundert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hundert_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_zehn,16,17,20,21,_undzwanzig,_ßig,einund_ßig,_und_ßig,_zig,einund_zig,_und_zig,60,61,_undsechzig,70,71,_undsiebzig} by (x0,x1) -> 100*x0+1*x1

MG:
[drei :: c1, -C, -B, -A], 3
[ :: =c3, cFin], λx.x
[zehn :: c2, -S1], 10
[elf :: c2, -S1], 11
[zwölf :: c2, -S1], 12
[zehn :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[sechzehn :: c2, -S1], 16
[siebzehn :: c2, -S1], 17
[zwanzig :: c2, -S1], 20
[einundzwanzig :: c2, -S1], 21
[undzwanzig :: =c1, +B, c2, -S1], λx.'1X+20'(x)
[ßig :: =c1, +C, c2, -S1], λx.'0X+30'(x)
[einund :: =c2*, c2, -S1], λx.'1X+31'(x)
[ßig :: =c1, +C, c2*], λx.'0X'(x)
[und :: =c2**, =c2B, c2, -S1], λxλy.'1X+1Y+3'(x,y)
[ :: =c1, +B, c2B], λx.x
[ßig :: =c1, +C, c2**], λx.'9X'(x)
[zig :: =c1, +D, c2, -S1], λx.'10X'(x)
[einund :: =c2***, c2, -S1], λx.'1X+1'(x)
[zig :: =c1, +D, c2***], λx.'10X'(x)
[und :: =c2****, =c2B, c2, -S1], λxλy.'1X+1Y'(x,y)
[zig :: =c1, +D, c2****], λx.'10X'(x)
[sechzig :: c2, -S1], 60
[einundsechzig :: c2, -S1], 61
[undsechzig :: =c1, +B, c2, -S1], λx.'1X+60'(x)
[siebzig :: c2, -S1], 70
[einundsiebzig :: c2, -S1], 71
[undsiebzig :: =c1, +B, c2, -S1], λx.'1X+70'(x)
[ :: =c1, c2], λx.x
[eins :: c1], 1
[zwei :: c1, -B], 2
[vier :: c1, -B, -A, -D], 4
[fünf :: c1, -B, -A, -D], 5
[sechs :: c1, -B], 6
[sieben :: c1, -B], 7
[acht :: c1, -B, -A, -D], 8
[neun :: c1, -B, -A, -D], 9
[hundert :: c3], 100
[hundert :: =c2, c3], λx.'1X+100'(x)
[hundert :: =c1, +B, c3], λx.'100X'(x)
[hundert :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Serbian
Learned 999 words in Serbian and structured them in 32 functions.
It took 46 samples to learn those.
Those are:
један is 1
два is 2
три is 3
четири is 4
пет is 5
шест is 6
седам is 7
осам is 8
девет is 9
десет is 10
Function _аест maps {1} by x -> 0*x+11
Function _наест maps {2,3,5,7,8,9} by x -> 1*x+10
четрнаест is 14
шеснаест is 16
Function _десет maps {2,3,7,8} by x -> 10*x+0
Function _десет и _ maps {2,3,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
четрдесет is 40
Function четрдесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
педесет is 50
Function педесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
шездесет is 60
Function шездесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
деведесет is 90
Function деведесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,_аест,_наест,14,16,_десет,_десет и _,40,четрдесет и _,50,педесет и _,60,шездесет и _,90,деведесет и _} by x -> 1*x+100
Function _ сто maps {2} by x -> 0*x+200
Function _ сто _ maps {2}x{1,2,3,4,5,6,7,8,9,10,_аест,_наест,14,16,_десет,_десет и _,40,четрдесет и _,50,педесет и _,60,шездесет и _,90,деведесет и _} by (x0,x1) -> 80*x0+1*x1+40
Function _ста maps {3} by x -> 0*x+300
Function _ста _ maps {3}x{1,2,3,4,5,6,7,8,9,10,_аест,_наест,14,16,_десет,_десет и _,40,четрдесет и _,50,педесет и _,60,шездесет и _,90,деведесет и _} by (x0,x1) -> 90*x0+1*x1+30
Function _сто maps {4,5,6,7,8,9} by x -> 100*x+0
Function _сто _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_аест,_наест,14,16,_десет,_десет и _,40,четрдесет и _,50,педесет и _,60,шездесет и _,90,деведесет и _} by (x0,x1) -> 100*x0+1*x1

MG:
[један :: c1, -A], 1
[два :: c1, -F, -C, -B], 2
[три :: c1, -G, -C, -B], 3
[ :: =c3, cFin], λx.x
[десет :: c2, -S1], 10
[аест :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[наест :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[четрнаест :: c2, -S1], 14
[шеснаест :: c2, -S1], 16
[десет :: =c1, +C, c2, -S1], λx.'10X'(x)
[десет и  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[четрдесет :: c2, -S1], 40
[четрдесет и  :: =c1, c2, -S1], λx.'1X+40'(x)
[педесет :: c2, -S1], 50
[педесет и  :: =c1, c2, -S1], λx.'1X+50'(x)
[шездесет :: c2, -S1], 60
[шездесет и  :: =c1, c2, -S1], λx.'1X+60'(x)
[деведесет :: c2, -S1], 90
[деведесет и  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[четири :: c1, -H], 4
[пет :: c1, -H, -B], 5
[шест :: c1, -H], 6
[седам :: c1, -C, -H, -B], 7
[осам :: c1, -C, -H, -B], 8
[девет :: c1, -H, -B], 9
[сто :: c3], 100
[сто  :: =c2, c3], λx.'1X+100'(x)
[ сто :: =c1, +F, c3], λx.'0X+200'(x)
[ сто  :: =c2, =c3F, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +F, c3F], λx.x
[ста :: =c1, +G, c3], λx.'0X+300'(x)
[ста  :: =c2, =c3G, c3], λxλy.'1X+90Y+30'(x,y)
[ :: =c1, +G, c3G], λx.x
[сто :: =c1, +H, c3], λx.'100X'(x)
[сто  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c1, +C, +H, +B, c1, -C], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x
[ :: =c1, +G, +C, +B, c1, -G], λx.x
[ :: =c1, +F, +C, +B, c1, -F], λx.x


Learning Upper-Sorbian
Learned 999 words in Upper-Sorbian and structured them in 41 functions.
It took 130 samples to learn those.
Those are:
jedyn is 1
dwaj is 2
tři is 3
štyri is 4
pjeć is 5
šěsć is 6
sydom is 7
wósom is 8
dźewjeć is 9
dźesać is 10
jědnaće is 11
dwanaće is 12
štyrnaće is 14
pjatnaće is 15
šěsnaće is 16
Function _naće maps {3,7} by x -> 1*x+10
wosomnaće is 18
dźewjatnaće is 19
dwaceći is 20
Function _adwaceći maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ceći maps {3} by x -> 0*x+30
Function _a_ceći maps {1,2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
štyrceći is 40
Function _aštyrceći maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
połsta is 50
Function _apołsta maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _dźesat maps {6,7,9} by x -> 10*x+0
Function _a_dźesat maps {1,2,3,4,5,6,7,8,9}x{6,7,9} by (x0,x1) -> 1*x0+10*x1
wosomdźesat is 80
Function _awosomdźesat maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
sto is 100
Function sto a _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_naće,18,19,20,_adwaceći,_ceći,_a_ceći,40,_aštyrceći,50,_apołsta,_dźesat,_a_dźesat,80,_awosomdźesat} by x -> 1*x+100
dwě sćě is 200
Function _ _ a dwaceći maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+220
Function _ _ a štyrceći maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+240
Function _ sta maps {3,4} by x -> 100*x+0
Function _ sta a _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_naće,18,19,20,_adwaceći,_ceći,_a_ceći,40,_aštyrceći,50,_apołsta,_dźesat,_a_dźesat,80,_awosomdźesat} by (x0,x1) -> 100*x0+1*x1
Function _ sto a _ maps {2,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_naće,18,19,_ceći,_dźesat,80,_adwaceći,_a_ceći,_aštyrceći,_apołsta,_a_dźesat,_awosomdźesat,20,40} by (x0,x1) -> 100*x0+1*x1
Function _ _ a połsta maps {2,5,6,7,8,9}x{100} by (x0,x1) -> 100*x0+0*x1+50
Function _ stow maps {5,6,7,9} by x -> 100*x+0
Function wosom _w maps {100} by x -> 0*x+800

MG:
[dwaj :: c1, -F, -I], 2
[tři :: c1, -C, -H, -A], 3
[sto :: c2, -G, -S1], 100
[ :: =c3, cFin], λx.x
[dźesać :: c2, -E, -J, -S1], 10
[jědnaće :: c2, -E, -J, -S1], 11
[dwanaće :: c2, -E, -J, -S1], 12
[štyrnaće :: c2, -E, -J, -S1], 14
[pjatnaće :: c2, -E, -J, -S1], 15
[šěsnaće :: c2, -E, -J, -S1], 16
[naće :: =c1, +A, c2, -E, -J, -S1], λx.'1X+10'(x)
[wosomnaće :: c2, -E, -J, -S1], 18
[dźewjatnaće :: c2, -E, -J, -S1], 19
[dwaceći :: c2, -E, -J, -S1], 20
[adwaceći :: =cnix, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[ceći :: =c1, +C, c2, -E, -J, -S1], λx.'0X+30'(x)
[a :: =c2*, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y+3'(x,y)
[ceći :: =c1, +C, c2*], λx.'9X'(x)
[štyrceći :: c2, -E, -J, -S1], 40
[aštyrceći :: =cnix, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y+40'(x,y)
[połsta :: c2, -E, -S1], 50
[apołsta :: =cnix, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y+50'(x,y)
[dźesat :: =c1, +D, c2, -E, -J, -S1], λx.'10X'(x)
[a :: =c2**, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y'(x,y)
[dźesat :: =c1, +D, c2**], λx.'10X'(x)
[wosomdźesat :: c2, -E, -J, -S1], 80
[awosomdźesat :: =cnix, =c1, c2, -E, -J, -S1], λxλy.'1X+1Y+80'(x,y)
[ :: =c1, c2, -E], λx.x
[jedyn :: c1], 1
[štyri :: c1, -H], 4
[pjeć :: c1, -I, -K], 5
[šěsć :: c1, -I, -K, -D], 6
[sydom :: c1, -I, -K, -A, -D], 7
[wósom :: c1, -I], 8
[dźewjeć :: c1, -I, -K, -D], 9
[ :: =c1, c2, -J], λx.x
[sto a  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[dwě sćě :: c3], 200
[  :: =c3*, =c3F, c3], λxλy.'1X+0Y+220'(x,y)
[ :: =c1, +F, c3F], λx.x
[ a dwaceći :: =c2, +G, c3*], λx.'0X'(x)
[ a štyrceći :: =c2, +G, c3**], λx.'0X'(x)
[ sta :: =c1, +H, c3], λx.'100X'(x)
[ sta a  :: =c3E, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ sto a  :: =c3J, =c3I, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c3I], λx.x
[ :: =c2, +J, c3J], λx.x
[  :: =c3***, =c3I, c3], λxλy.'1X+100Y+50'(x,y)
[ a połsta :: =c2, +G, c3***], λx.'0X'(x)
[ stow :: =c1, +K, c3], λx.'100X'(x)
[wosom  :: =c3****, c3], λx.'1X+800'(x)
[w :: =c2, +G, c3****], λx.'0X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +I, +K, +A, +D, c1, -I], λx.x
[ :: =c1, +I, +K, +D, c1, -I], λx.x
[ :: =c1, +K, +D, c1, -K], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c2, +E, +J, +S1, c2, -E], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +I, +K, c1, -I], λx.x
[ :: =c1, +F, +I, c1, -F], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +K, +A, +D, c1, -K], λx.x
[ :: =c1, +C, +H, +A, c1, -C], λx.x
[ :: =c2, +J, +S1, c2, -J], λx.x




Learning Kaqchikel

Learned 459 words in Kaqchikel and structured them in 53 functions.
It took 80 samples to learn those.
Those are:
jun is 1
kaʼiʼ is 2
oxiʼ is 3
kajiʼ is 4
woʼoʼ is 5
waqiʼ is 6
wuquʼ is 7
waqxaqiʼ is 8
bʼelejeʼ is 9
lajuj is 10
julajuj is 11
kabʼlajuj is 12
oxlajuj is 13
kajlajuj is 14
woʼlajuj is 15
waqlajuj is 16
wuqlajuj is 17
waqxaqlajuj is 18
bʼelejlajuj is 19
jukʼal is 20
Function jukʼal _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+20
kak’al is 40
Function kak’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+40
oxk’al is 60
Function oxk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+60
kajk’al is 80
Function kajk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+80
ok’al is 100
Function ok’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+100
waqk’al is 120
Function waqk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+120
wuqk’al is 140
Function wuqk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+140
waqxaqk’al is 160
Function waqxaqk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+160
b’elejk’al is 180
Function b’elejk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+180
lajk’al is 200
Function lajk’al _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+200
Function kab’_k’al maps {10} by x -> 0*x+240
Function kab’_k’al _ maps {10}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by (x0,x1) -> 24*x0+1*x1
Function _k’al maps {11,13,14,16,17,18} by x -> 20*x+0
Function _k’al _ maps {11,13,14,16,17,18}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by (x0,x1) -> 20*x0+1*x1
Function wo_k’al maps {10} by x -> 0*x+300
Function wo_k’al _ maps {10}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by (x0,x1) -> 30*x0+1*x1
Function b’ele_k’al maps {10} by x -> 0*x+380
Function b’ele_k’al _ maps {10}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by (x0,x1) -> 38*x0+1*x1
juq’o’ is 400
Function juq’o’ _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+400
juk’al juq’o’ is 420
Function juk’al juq’o’ _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+420
Function _ juq’o’ maps {40} by x -> 0*x+440
Function _ juq’o’ _ maps {40}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by (x0,x1) -> 11*x0+1*x1

MG:
[lajuj :: c1, -B], 10
[kak’al :: c2, -D], 40
[ :: =c3, cFin], λx.x
[julajuj :: c1, -C], 11
[oxlajuj :: c1, -C], 13
[kajlajuj :: c1, -C], 14
[waqlajuj :: c1, -C], 16
[wuqlajuj :: c1, -C], 17
[waqxaqlajuj :: c1, -C], 18
[jun :: c1], 1
[kaʼiʼ :: c1], 2
[oxiʼ :: c1], 3
[kajiʼ :: c1], 4
[woʼoʼ :: c1], 5
[waqiʼ :: c1], 6
[wuquʼ :: c1], 7
[waqxaqiʼ :: c1], 8
[bʼelejeʼ :: c1], 9
[kabʼlajuj :: c1], 12
[woʼlajuj :: c1], 15
[bʼelejlajuj :: c1], 19
[kak’al  :: =c1, c3], λx.'1X+40'(x)
[oxk’al :: c3], 60
[oxk’al  :: =c1, c3], λx.'1X+60'(x)
[kajk’al :: c3], 80
[kajk’al  :: =c1, c3], λx.'1X+80'(x)
[ok’al :: c3], 100
[ok’al  :: =c1, c3], λx.'1X+100'(x)
[waqk’al :: c3], 120
[waqk’al  :: =c1, c3], λx.'1X+120'(x)
[wuqk’al :: c3], 140
[wuqk’al  :: =c1, c3], λx.'1X+140'(x)
[waqxaqk’al :: c3], 160
[waqxaqk’al  :: =c1, c3], λx.'1X+160'(x)
[b’elejk’al :: c3], 180
[b’elejk’al  :: =c1, c3], λx.'1X+180'(x)
[lajk’al :: c3], 200
[lajk’al  :: =c1, c3], λx.'1X+200'(x)
[kab’ :: =c3*, c3], λx.'1X+240'(x)
[k’al :: =c1, +B, c3*], λx.'0X'(x)
[k’al  :: =c1, =c3******B, c3**], λxλy.'1X+24Y'(x,y)
[k’al :: =c1, +C, c3], λx.'20X'(x)
[k’al  :: =c1, =c3C, c3], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[wo :: =c3***, c3], λx.'1X+300'(x)
[k’al :: =c1, +B, c3***], λx.'0X'(x)
[k’al  :: =c1, =c3******B, c3****], λxλy.'1X+30Y'(x,y)
[b’ele :: =c3*****, c3], λx.'1X+380'(x)
[k’al :: =c1, +B, c3*****], λx.'0X'(x)
[k’al  :: =c1, =c3******B, c3******], λxλy.'1X+38Y'(x,y)
[ :: =c1, +B, c3******B], λx.x
[juq’o’ :: c3], 400
[juq’o’  :: =c1, c3], λx.'1X+400'(x)
[juk’al juq’o’ :: c3], 420
[juk’al juq’o’  :: =c1, c3], λx.'1X+420'(x)
[ juq’o’ :: =c2, +D, c3], λx.'0X+440'(x)
[ juq’o’  :: =c1, =c3D, c3], λxλy.'1X+11Y'(x,y)
[ :: =c2, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[jukʼal :: c2], 20
[jukʼal  :: =c1, c2], λx.'1X+20'(x)
[ :: =c1, +B, c1], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Ume-Sami
Learned 100 words in Ume-Sami and structured them in 16 functions.
It took 21 samples to learn those.
Those are:
akte is 1
guökte is 2
gulbme is 3
nilje is 4
vijhte is 5
guvhte is 6
tjijtje is 7
gaktse is 8
åktse is 9
lúhke is 10
lúhke jah ákte is 11
Function lúhke jah _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ lúhkeh maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ _h ákte maps {2,3,4,5,6,7,8,9}x{10} by (x0,x1) -> 10*x0+0*x1+1
Function _ lúhkeh _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
tjúöhte is 100

MG:
[lúhke :: c1, -B], 10
[ :: =c2, cFin], λx.x
[guökte :: c1, -A], 2
[gulbme :: c1, -A], 3
[nilje :: c1, -A], 4
[vijhte :: c1, -A], 5
[guvhte :: c1, -A], 6
[tjijtje :: c1, -A], 7
[gaktse :: c1, -A], 8
[åktse :: c1, -A], 9
[lúhke jah ákte :: c2], 11
[lúhke jah  :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ lúhkeh :: =c1, +A, c2], λx.'10X'(x)
[  :: =c2*, =c2A, c2], λxλy.'1X+10Y+1'(x,y)
[h ákte :: =c1, +B, c2*], λx.'0X'(x)
[ lúhkeh  :: =c2A, =c2A, c2], λxλy.'1X+10Y'(x,y)
[tjúöhte :: c2], 100
[ :: =c1, c2], λx.x
[akte :: c1], 1
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x


Learning Asturian
Learned 999 words in Asturian and structured them in 47 functions.
It took 245 samples to learn those.
Those are:
un is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
deciséis is 16
Function deci_ maps {7,8,9} by x -> 1*x+10
venti is 20
ventiún is 21
ventidós is 22
ventitrés is 23
Function venti_ maps {4,5,7,8,9} by x -> 1*x+20
ventiséis is 26
trenta is 30
Function trenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuaranta is 40
Function cuaranta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setanta is 70
Function setanta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cien is 100
Function cien _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deci_,20,21,22,23,venti_,26,30,trenta y _,40,cuaranta y _,50,cincuenta y _,60,sesenta y _,70,setanta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _cientos maps {2,3,4,6,8} by x -> 100*x+0
Function _cientos _ maps {2,3,4,6,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deci_,20,21,22,23,venti_,26,30,trenta y _,40,cuaranta y _,50,cincuenta y _,60,sesenta y _,70,setanta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deci_,20,21,22,23,venti_,26,30,trenta y _,40,cuaranta y _,50,cincuenta y _,60,sesenta y _,70,setanta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500
Function sete_tos maps {100} by x -> 0*x+700
Function sete_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deci_,20,21,22,23,venti_,26,30,trenta y _,40,cuaranta y _,50,cincuenta y _,60,sesenta y _,70,setanta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 7*x0+1*x1
Function nove_tos maps {100} by x -> 0*x+900
Function nove_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,deci_,20,21,22,23,venti_,26,30,trenta y _,40,cuaranta y _,50,cincuenta y _,60,sesenta y _,70,setanta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 9*x0+1*x1

MG:
[cien :: c2, -F, -S1], 100
[ :: =c3, cFin], λx.x
[dos :: c1, -E], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E], 6
[ocho :: c1, -E, -B, -A], 8
[un :: c1], 1
[cinco :: c1, -B], 5
[siete :: c1, -B, -A], 7
[nueve :: c1, -B, -A], 9
[diez :: c2, -D, -S1], 10
[once :: c2, -D, -S1], 11
[doce :: c2, -D, -S1], 12
[trece :: c2, -D, -S1], 13
[catorce :: c2, -D, -S1], 14
[quince :: c2, -D, -S1], 15
[deciséis :: c2, -D, -S1], 16
[deci :: =c2A, c2, -D, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[venti :: c2, -D, -S1], 20
[ventiún :: c2, -D, -S1], 21
[ventidós :: c2, -D, -S1], 22
[ventitrés :: c2, -D, -S1], 23
[venti :: =c2B, c2, -D, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[ventiséis :: c2, -D, -S1], 26
[trenta :: c2, -D, -S1], 30
[trenta y  :: =c1, c2, -D, -S1], λx.'1X+30'(x)
[cuaranta :: c2, -D, -S1], 40
[cuaranta y  :: =c1, c2, -D, -S1], λx.'1X+40'(x)
[cincuenta :: c2, -D, -S1], 50
[cincuenta y  :: =c1, c2, -D, -S1], λx.'1X+50'(x)
[sesenta :: c2, -D, -S1], 60
[sesenta y  :: =c1, c2, -D, -S1], λx.'1X+60'(x)
[setanta :: c2, -D, -S1], 70
[setanta y  :: =c1, c2, -D, -S1], λx.'1X+70'(x)
[ochenta :: c2, -D, -S1], 80
[ochenta y  :: =c1, c2, -D, -S1], λx.'1X+80'(x)
[noventa :: c2, -D, -S1], 90
[noventa y  :: =c1, c2, -D, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -D], λx.x
[cien  :: =c3****D, c3], λx.'1X+100'(x)
[cientos :: =c1, +E, c3], λx.'100X'(x)
[cientos  :: =c3****D, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[quinientos :: c3], 500
[quinientos  :: =c3****D, c3], λx.'1X+500'(x)
[sete :: =c3*, c3], λx.'1X+700'(x)
[tos :: =c2, +F, c3*], λx.'0X'(x)
[tos  :: =c3****D, =c3****F, c3**], λxλy.'1X+7Y'(x,y)
[nove :: =c3***, c3], λx.'1X+900'(x)
[tos :: =c2, +F, c3***], λx.'0X'(x)
[tos  :: =c3****D, =c3****F, c3****], λxλy.'1X+9Y'(x,y)
[ :: =c2, +F, c3****F], λx.x
[ :: =c2, +D, c3****D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x


Learning Copala-Triqui

Learned 999 words in Copala-Triqui and structured them in 64 functions.
It took 76 samples to learn those.
Those are:
hngòoj is 1
wwìi is 2
wàhnin is 3
gàhan is 4
ùhunj is 5
wàtanj is 6
txìj is 7
tìnj is 8
hìn is 9
txìh is 10
xàn is 11
xùwìj is 12
xàhnìnj is 13
Function xì_j maps {4} by x -> 0*x+14
xìnùnh is 15
xìnùnh yàn is 16
xìnùnh wwìj is 17
xìnùnh wàhnìnj is 18
Function xìnùnh _j maps {4} by x -> 0*x+19
kò is 20
kò yàn is 21
kò wwìj is 22
kò wàhnìnj is 23
Function kò _j maps {4} by x -> 0*x+24
kò hùnh is 25
kò wàtành is 26
Function kò _ maps {7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j} by x -> 1*x+20
wìj xxìyà is 40
wìj xxìyà yàn is 41
wìj xxìyà wwìj is 42
wìj xxìyà wàhnìnj is 43
Function wìj xxìyà _j maps {4} by x -> 0*x+44
wìj xxìyà hùnh is 45
wìj xxìyà wàtành is 46
Function wìj xxìyà _ maps {7,8,9} by x -> 1*x+40
Function wwìj xxìyà _ maps {10,11,12,13,xì_j,15,16,17,18,xìnùnh _j} by x -> 1*x+40
wàhnìnj xxìyà is 60
wàhnìnj xxìyà yàn is 61
wàhnìnj xxìyà wwìj is 62
wàhnìnj xxìyà wàhnìnj is 63
Function wàhnìnj xxìyà _j maps {4} by x -> 0*x+64
wàhnìnj xxìyà hùnh is 65
wàhnìnj xxìyà wàtành is 66
Function wàhnìnj xxìyà _ maps {7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j} by x -> 1*x+60
Function _j xxìyà maps {4} by x -> 0*x+80
Function _j xxìyà yàn maps {4} by x -> 0*x+81
Function _j xxìyà wwìj maps {4} by x -> 0*x+82
Function _j xxìyà wàhnìnj maps {4} by x -> 0*x+83
Function _j xxìyà _j maps {4}x{4} by (x0,x1) -> 0*x0+0*x1+84
Function _j xxìyà hùnh maps {4} by x -> 0*x+85
Function _j xxìyà wàtành maps {4} by x -> 0*x+86
Function _j xxìyà _ maps {4}x{7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j} by (x0,x1) -> 19*x0+1*x1+4
hngò syéntu is 100
hngò syéntu taá hngò is 101
hngò syéntu taá wwìj is 102
Function hngò syéntu taá _ maps {3,4,5,6,7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j,20,21,22,23,kò _j,25,26,kò _,40,41,42,43,wìj xxìyà _j,45,46,wìj xxìyà _,wwìj xxìyà _,60,61,62,63,wàhnìnj xxìyà _j,65,66,wàhnìnj xxìyà _,_j xxìyà,_j xxìyà yàn,_j xxìyà wwìj,_j xxìyà wàhnìnj,_j xxìyà _j,_j xxìyà hùnh,_j xxìyà wàtành,_j xxìyà _} by x -> 1*x+100
wwìj syéntu is 200
wwìj syéntu taá hngò is 201
wwìj syéntu taá wwìj is 202
Function wwìj syéntu taá _ maps {3,4,5,6,7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j,20,21,22,23,kò _j,25,26,kò _,40,41,42,43,wìj xxìyà _j,45,46,wìj xxìyà _,wwìj xxìyà _,60,61,62,63,wàhnìnj xxìyà _j,65,66,wàhnìnj xxìyà _,_j xxìyà,_j xxìyà yàn,_j xxìyà wwìj,_j xxìyà wàhnìnj,_j xxìyà _j,_j xxìyà hùnh,_j xxìyà wàtành,_j xxìyà _} by x -> 1*x+200
Function _ syéntu maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ syéntu taá hngò maps {3,4,5,6,7,8,9} by x -> 100*x+1
Function _ syéntu taá wwìj maps {3,4,5,6,7,8,9} by x -> 100*x+2
Function _ syéntu taá _ maps {3,4,5,6,7,8,9}x{3,4,5,6,7,8,9,10,11,12,13,xì_j,15,16,17,18,xìnùnh _j,20,21,22,23,kò _j,25,26,kò _,40,41,42,43,wìj xxìyà _j,45,46,wìj xxìyà _,wwìj xxìyà _,60,61,62,63,wàhnìnj xxìyà _j,65,66,wàhnìnj xxìyà _,_j xxìyà,_j xxìyà yàn,_j xxìyà wwìj,_j xxìyà wàhnìnj,_j xxìyà _j,_j xxìyà hùnh,_j xxìyà wàtành,_j xxìyà _} by (x0,x1) -> 100*x0+1*x1

MG:
[gàhan :: c1, -A, -E0, -F0], 4
[ :: =c4, cFin], λx.x
[kò :: c3, -S1], 20
[kò yàn :: c3, -S1], 21
[kò wwìj :: c3, -S1], 22
[kò wàhnìnj :: c3, -S1], 23
[kò  :: =c3*, c3, -S1], λx.'1X+24'(x)
[j :: =c1, +A, c3*], λx.'0X'(x)
[kò hùnh :: c3, -S1], 25
[kò wàtành :: c3, -S1], 26
[kò  :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[wìj xxìyà :: c3, -S1], 40
[wìj xxìyà yàn :: c3, -S1], 41
[wìj xxìyà wwìj :: c3, -S1], 42
[wìj xxìyà wàhnìnj :: c3, -S1], 43
[wìj xxìyà  :: =c3**, c3, -S1], λx.'1X+44'(x)
[j :: =c1, +A, c3**], λx.'0X'(x)
[wìj xxìyà hùnh :: c3, -S1], 45
[wìj xxìyà wàtành :: c3, -S1], 46
[wìj xxìyà  :: =c3C, c3, -S1], λx.'1X+40'(x)
[ :: =c2, +C, c3C], λx.x
[wwìj xxìyà  :: =c3D, c3, -S1], λx.'1X+40'(x)
[ :: =c2, +D, c3D], λx.x
[wàhnìnj xxìyà :: c3, -S1], 60
[wàhnìnj xxìyà yàn :: c3, -S1], 61
[wàhnìnj xxìyà wwìj :: c3, -S1], 62
[wàhnìnj xxìyà wàhnìnj :: c3, -S1], 63
[wàhnìnj xxìyà  :: =c3***, c3, -S1], λx.'1X+64'(x)
[j :: =c1, +A, c3***], λx.'0X'(x)
[wàhnìnj xxìyà hùnh :: c3, -S1], 65
[wàhnìnj xxìyà wàtành :: c3, -S1], 66
[wàhnìnj xxìyà  :: =c3B, c3, -S1], λx.'1X+60'(x)
[j xxìyà :: =c1, +A, c3, -S1], λx.'0X+80'(x)
[j xxìyà yàn :: =c1, +A, c3, -S1], λx.'0X+81'(x)
[j xxìyà wwìj :: =c1, +A, c3, -S1], λx.'0X+82'(x)
[j xxìyà wàhnìnj :: =c1, +A, c3, -S1], λx.'0X+83'(x)
[j xxìyà  :: =c3****, =c3A, c3, -S1], λxλy.'1X+0Y+84'(x,y)
[ :: =c1, +A, c3A], λx.x
[j :: =c1, +A, c3****], λx.'0X'(x)
[j xxìyà hùnh :: =c1, +A, c3, -S1], λx.'0X+85'(x)
[j xxìyà wàtành :: =c1, +A, c3, -S1], λx.'0X+86'(x)
[j xxìyà  :: =c3B, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +E0, c3], λx.x
[wàhnin :: c1, -E0, -F0], 3
[ :: =c2, +E1, c3], λx.x
[ùhunj :: c2, -E1, -S2, -F], 5
[wàtanj :: c2, -E1, -S2, -F], 6
[txìj :: c2, -E1, -C, -B, -S2, -F], 7
[tìnj :: c2, -E1, -C, -B, -S2, -F], 8
[hìn :: c2, -E1, -C, -B, -S2, -F], 9
[txìh :: c2, -E1, -B, -D, -S2], 10
[xàn :: c2, -E1, -B, -D, -S2], 11
[xùwìj :: c2, -E1, -B, -D, -S2], 12
[xàhnìnj :: c2, -E1, -B, -D, -S2], 13
[xì :: =c2*, c2, -E1, -B, -D, -S2], λx.'1X+14'(x)
[j :: =c1, +A, c2*], λx.'0X'(x)
[xìnùnh :: c2, -E1, -B, -D, -S2], 15
[xìnùnh yàn :: c2, -E1, -B, -D, -S2], 16
[xìnùnh wwìj :: c2, -E1, -B, -D, -S2], 17
[xìnùnh wàhnìnj :: c2, -E1, -B, -D, -S2], 18
[xìnùnh  :: =c2**, c2, -E1, -B, -D, -S2], λx.'1X+19'(x)
[j :: =c1, +A, c2**], λx.'0X'(x)
[hngò syéntu :: c4], 100
[hngò syéntu taá hngò :: c4], 101
[hngò syéntu taá wwìj :: c4], 102
[hngò syéntu taá  :: =c3, c4], λx.'1X+100'(x)
[wwìj syéntu :: c4], 200
[wwìj syéntu taá hngò :: c4], 201
[wwìj syéntu taá wwìj :: c4], 202
[wwìj syéntu taá  :: =c3, c4], λx.'1X+200'(x)
[ syéntu :: =c2, +F, c4], λx.'100X'(x)
[ syéntu taá hngò :: =c2, +F, c4], λx.'100X+1'(x)
[ syéntu taá wwìj :: =c2, +F, c4], λx.'100X+2'(x)
[ syéntu taá  :: =c3, =c4F, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +F, c4F], λx.x
[ :: =c1, c4], λx.x
[hngòoj :: c1], 1
[wwìi :: c1], 2
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +E1, c2], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E1, +S2, +F, c2, -E1], λx.x
[ :: =c2, +E1, +B, +D, +S2, c2, -E1], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +E1, +C, +B, +S2, +F, c2, -E1], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c2, +B, +D, +S2, c2, -B], λx.x
[ :: =c1, +E0, +F0, c1, -E0], λx.x
[ :: =c1, +A, +E0, +F0, c1, -A], λx.x
[ :: =c2, +B, +S2, +F, c2, -B], λx.x
[ :: =c2, +C, +B, +S2, +F, c2, -C], λx.x


Learning Bambara
Learned 999 words in Bambara and structured them in 25 functions.
It took 39 samples to learn those.
Those are:
kélen is 1
fila is 2
sàba is 3
náani is 4
dúuru is 5
wɔɔrɔ is 6
wólonwula is 7
séegin is 8
k̀ɔnɔntɔn is 9
tán is 10
Function tán ní _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
mùgan is 20
Function mùgan ní _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
bínaani is 40
Function bínaani ní _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function bí_ maps {3,5,6,8,9} by x -> 10*x+0
Function bí_ ní _ maps {3,5,6,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function bíwolon_ maps {2} by x -> 0*x+70
Function bíwolon_ ní _ maps {2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 28*x0+1*x1+14
k̀ɛmɛ is 100
Function k̀ɛmɛ ní _ maps {1,2,3,4,5,6,7,8,9,10,tán ní _,20,mùgan ní _,40,bínaani ní _,bí_,bí_ ní _,bíwolon_,bíwolon_ ní _} by x -> 1*x+100
Function k̀ɛmɛ _ maps {2,3,4,5,6} by x -> 100*x+0
Function k̀ɛmɛ _ ní _ maps {2,3,4,5,6}x{1,2,3,4,5,6,7,8,9,10,tán ní _,20,mùgan ní _,40,bínaani ní _,bí_,bí_ ní _,bíwolon_,bíwolon_ ní _} by (x0,x1) -> 100*x0+1*x1
Function _ k̀ɛmɛ maps {7,8,9} by x -> 100*x+0
Function _ k̀ɛmɛ ní _ maps {7,8,9}x{1,2,3,4,5,6,7,8,9,10,tán ní _,20,mùgan ní _,40,bínaani ní _,bí_,bí_ ní _,bíwolon_,bíwolon_ ní _} by (x0,x1) -> 100*x0+1*x1

MG:
[fila :: c1, -C, -E], 2
[ :: =c3, cFin], λx.x
[sàba :: c1, -E, -B], 3
[náani :: c1, -E], 4
[dúuru :: c1, -E, -B], 5
[wɔɔrɔ :: c1, -E, -B], 6
[séegin :: c1, -B, -F], 8
[k̀ɔnɔntɔn :: c1, -B, -F], 9
[wólonwula :: c1, -F], 7
[kélen :: c1], 1
[tán :: c2, -S1], 10
[tán ní  :: =c1, c2, -S1], λx.'1X+10'(x)
[mùgan :: c2, -S1], 20
[mùgan ní  :: =c1, c2, -S1], λx.'1X+20'(x)
[bínaani :: c2, -S1], 40
[bínaani ní  :: =c1, c2, -S1], λx.'1X+40'(x)
[bí :: =c2***B, c2, -S1], λx.'10X'(x)
[bí :: =c2*, c2, -S1], λx.x
[ ní  :: =c1, =c2***B, c2*], λxλy.'1X+10Y'(x,y)
[bíwolon :: =c2****C, c2, -S1], λx.'0X+70'(x)
[bíwolon :: =c2**, c2, -S1], λx.'1X+14'(x)
[ ní  :: =c1, =c2****C, c2**], λxλy.'1X+28Y'(x,y)
[ :: =c1, c2], λx.x
[k̀ɛmɛ :: c3], 100
[k̀ɛmɛ ní  :: =c2, c3], λx.'1X+100'(x)
[k̀ɛmɛ  :: =c3*E, c3], λx.'100X'(x)
[k̀ɛmɛ  :: =c3*, c3], λx.x
[ ní  :: =c2, =c3*E, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3*E], λx.x
[ k̀ɛmɛ :: =c1, +F, c3], λx.'100X'(x)
[ k̀ɛmɛ ní  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ ní  :: =c1, =c2***B, c2***], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2***B], λx.x
[ ní  :: =c1, =c2****C, c2****], λxλy.'1X+28Y'(x,y)
[ :: =c1, +C, c2****C], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +E, c1, -C], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x




Learning Shuswap

Learned 999 words in Shuswap and structured them in 42 functions.
It took 56 samples to learn those.
Those are:
úpeket te sxetspqíqenksts is 1
seséle is 2
kellés is 3
mus is 4
tsilkst is 5
teq̓mékst is 6
tsútsllke7 is 7
nek̓7ú7ps is 8
temllenkúk̓we7 is 9
úpekst is 10
úpekst ell nek̓ú7 is 11
Function úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
sell7úpekst is 20
sell7úpekst ell nek̓ú7 is 21
Function sell7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
kell7úpekst is 30
kell7úpekst ell nek̓ú7 is 31
Function kell7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
mell7úpekst is 40
mell7úpekst ell nek̓ú7 is 41
Function mell7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
tselkll7úpekst is 50
tselkll7úpekst ell nek̓ú7 is 51
Function tselkll7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
teq̓mekll7úpekst is 60
teq̓mekll7úpekst ell nek̓ú7 is 61
Function teq̓mekll7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
tsetskell7úpekst is 70
tsetskell7úpekst ell nek̓ú7 is 71
Function tsetskell7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
nek̓u7pll7úpekst is 80
nek̓u7pll7úpekst ell nek̓ú7 is 81
Function nek̓u7pll7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
temllenk̓well7úpekst is 90
temllenk̓well7úpekst ell nek̓ú7 is 91
Function temllenk̓well7úpekst ell _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
xetspqíqenkst is 100
xetspqíqenkst nek̓ú7 is 101
Function xetspqíqenkst _ maps {2,3,4,5,6,7,8,9,10,11,úpekst ell _,20,21,sell7úpekst ell _,30,31,kell7úpekst ell _,40,41,mell7úpekst ell _,50,51,tselkll7úpekst ell _,60,61,teq̓mekll7úpekst ell _,70,71,tsetskell7úpekst ell _,80,81,nek̓u7pll7úpekst ell _,90,91,temllenk̓well7úpekst ell _} by x -> 1*x+100
Function _ te sxetspqíqenkst maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ te sxetspqíqenkst nek̓ú7 maps {2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _ te sxetspqíqenkst _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,11,úpekst ell _,20,21,sell7úpekst ell _,30,31,kell7úpekst ell _,40,41,mell7úpekst ell _,50,51,tselkll7úpekst ell _,60,61,teq̓mekll7úpekst ell _,70,71,tsetskell7úpekst ell _,80,81,nek̓u7pll7úpekst ell _,90,91,temllenk̓well7úpekst ell _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[seséle :: c1, -A, -B0], 2
[kellés :: c1, -A, -B0], 3
[mus :: c1, -A, -B0], 4
[tsilkst :: c1, -A, -B0], 5
[teq̓mékst :: c1, -A, -B0], 6
[tsútsllke7 :: c1, -A, -B0], 7
[nek̓7ú7ps :: c1, -A, -B0], 8
[temllenkúk̓we7 :: c1, -A, -B0], 9
[xetspqíqenkst :: c3], 100
[xetspqíqenkst nek̓ú7 :: c3], 101
[xetspqíqenkst  :: =c2, c3], λx.'1X+100'(x)
[ te sxetspqíqenkst :: =c1, +A, c3], λx.'100X'(x)
[ te sxetspqíqenkst nek̓ú7 :: =c1, +A, c3], λx.'100X+1'(x)
[ te sxetspqíqenkst  :: =c2, =c2A, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[úpeket te sxetspqíqenksts :: c1], 1
[ :: =c2, +S1, c3], λx.x
[úpekst :: c2, -S1], 10
[úpekst ell nek̓ú7 :: c2, -S1], 11
[úpekst ell  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[sell7úpekst :: c2, -S1], 20
[sell7úpekst ell nek̓ú7 :: c2, -S1], 21
[sell7úpekst ell  :: =c2A, c2, -S1], λx.'1X+20'(x)
[kell7úpekst :: c2, -S1], 30
[kell7úpekst ell nek̓ú7 :: c2, -S1], 31
[kell7úpekst ell  :: =c2A, c2, -S1], λx.'1X+30'(x)
[mell7úpekst :: c2, -S1], 40
[mell7úpekst ell nek̓ú7 :: c2, -S1], 41
[mell7úpekst ell  :: =c2A, c2, -S1], λx.'1X+40'(x)
[tselkll7úpekst :: c2, -S1], 50
[tselkll7úpekst ell nek̓ú7 :: c2, -S1], 51
[tselkll7úpekst ell  :: =c2A, c2, -S1], λx.'1X+50'(x)
[teq̓mekll7úpekst :: c2, -S1], 60
[teq̓mekll7úpekst ell nek̓ú7 :: c2, -S1], 61
[teq̓mekll7úpekst ell  :: =c2A, c2, -S1], λx.'1X+60'(x)
[tsetskell7úpekst :: c2, -S1], 70
[tsetskell7úpekst ell nek̓ú7 :: c2, -S1], 71
[tsetskell7úpekst ell  :: =c2A, c2, -S1], λx.'1X+70'(x)
[nek̓u7pll7úpekst :: c2, -S1], 80
[nek̓u7pll7úpekst ell nek̓ú7 :: c2, -S1], 81
[nek̓u7pll7úpekst ell  :: =c2A, c2, -S1], λx.'1X+80'(x)
[temllenk̓well7úpekst :: c2, -S1], 90
[temllenk̓well7úpekst ell nek̓ú7 :: c2, -S1], 91
[temllenk̓well7úpekst ell  :: =c2A, c2, -S1], λx.'1X+90'(x)
[ :: =c1, +B0, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +B0, c1, -A], λx.x


Learning Saanich
Learned 999 words in Saanich and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
nət̕θəʔ is 1
čəsəʔ is 2
ɬixʷ is 3
ŋas is 4
ɬq̕ečəs is 5
t̕x̣əŋ is 6
t̕θaʔkʷəs is 7
teʔθəs is 8
təkʷəxʷ is 9
ʔapən is 10
Function ʔapən ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
t̕θaxʷkʷəs is 20
Function t̕θaxʷkʷəs ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
ɬəxʷɬšeʔ is 30
Function ɬəxʷɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
ŋəsɬšeʔ is 40
Function ŋəsɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ɬq̕əčsɬšeʔ is 50
Function ɬq̕əčsɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
t̕x̣əməɬšeʔ is 60
Function t̕x̣əməɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
t̕θəʔkʷsɬšeʔ is 70
Function t̕θəʔkʷsɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
štəmaʔəs is 80
Function štəmaʔəs ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
təkʷxʷəɬšeʔ is 90
Function təkʷxʷəɬšeʔ ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sneč̕əw̕əč is 100
Function sneč̕əw̕əč ʔiʔ kʷs _ maps {1,2,3,4,5,6,7,8,9,10,ʔapən ʔiʔ kʷs _,20,t̕θaxʷkʷəs ʔiʔ kʷs _,30,ɬəxʷɬšeʔ ʔiʔ kʷs _,40,ŋəsɬšeʔ ʔiʔ kʷs _,50,ɬq̕əčsɬšeʔ ʔiʔ kʷs _,60,t̕x̣əməɬšeʔ ʔiʔ kʷs _,70,t̕θəʔkʷsɬšeʔ ʔiʔ kʷs _,80,štəmaʔəs ʔiʔ kʷs _,90,təkʷxʷəɬšeʔ ʔiʔ kʷs _} by x -> 1*x+100
Function _ sneč̕əw̕əč maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ sneč̕əw̕əč ʔiʔ kʷs _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,ʔapən ʔiʔ kʷs _,20,t̕θaxʷkʷəs ʔiʔ kʷs _,30,ɬəxʷɬšeʔ ʔiʔ kʷs _,40,ŋəsɬšeʔ ʔiʔ kʷs _,50,ɬq̕əčsɬšeʔ ʔiʔ kʷs _,60,t̕x̣əməɬšeʔ ʔiʔ kʷs _,70,t̕θəʔkʷsɬšeʔ ʔiʔ kʷs _,80,štəmaʔəs ʔiʔ kʷs _,90,təkʷxʷəɬšeʔ ʔiʔ kʷs _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[čəsəʔ :: c1, -C], 2
[ɬixʷ :: c1, -C], 3
[ŋas :: c1, -C], 4
[ɬq̕ečəs :: c1, -C], 5
[t̕x̣əŋ :: c1, -C], 6
[t̕θaʔkʷəs :: c1, -C], 7
[teʔθəs :: c1, -C], 8
[təkʷəxʷ :: c1, -C], 9
[ʔapən :: c2, -S1], 10
[ʔapən ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+10'(x)
[t̕θaxʷkʷəs :: c2, -S1], 20
[t̕θaxʷkʷəs ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+20'(x)
[ɬəxʷɬšeʔ :: c2, -S1], 30
[ɬəxʷɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+30'(x)
[ŋəsɬšeʔ :: c2, -S1], 40
[ŋəsɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+40'(x)
[ɬq̕əčsɬšeʔ :: c2, -S1], 50
[ɬq̕əčsɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+50'(x)
[t̕x̣əməɬšeʔ :: c2, -S1], 60
[t̕x̣əməɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+60'(x)
[t̕θəʔkʷsɬšeʔ :: c2, -S1], 70
[t̕θəʔkʷsɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+70'(x)
[štəmaʔəs :: c2, -S1], 80
[štəmaʔəs ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+80'(x)
[təkʷxʷəɬšeʔ :: c2, -S1], 90
[təkʷxʷəɬšeʔ ʔiʔ kʷs  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[nət̕θəʔ :: c1], 1
[sneč̕əw̕əč :: c3], 100
[sneč̕əw̕əč ʔiʔ kʷs  :: =c2, c3], λx.'1X+100'(x)
[ sneč̕əw̕əč :: =c1, +C, c3], λx.'100X'(x)
[ sneč̕əw̕əč ʔiʔ kʷs  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Quetzaltepec-Mixe
Learned 100 words in Quetzaltepec-Mixe and structured them in 30 functions.
It took 47 samples to learn those.
Those are:
tu’uk is 1
määjtsk is 2
tëkëëk is 3
taxk is 4
mëkooxk is 5
tëtuujk is 6
wxtuujk is 7
tuktuujk is 8
taxtuujk is 9
maajk is 10
Function ma_ maps {2} by x -> 0*x+12
Function maajk_ maps {1,3} by x -> 1*x+10
mamaajks is 14
mamokx is 15
Function mamokx_ maps {1,2,3} by x -> 1*x+15
Function mamokxma_ maps {4} by x -> 0*x+19
i’px is 20
Function i’px_ maps {1,2,3,4,5,6,7,8,9,10,maajk_} by x -> 1*x+20
Function i’px__ maps {10}x{2,4,5,6,7,8,9} by (x0,x1) -> 3*x0+1*x1
wxiikx is 40
Function wxiikx_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
wxiikxmyaajk is 50
Function wxiikxmyaajk_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
tëkë’px is 60
Function tëkë’px_ maps {1,2,3,4,5,6,7,8,9,10,maajk_} by x -> 1*x+60
Function tëkë’px__ maps {10}x{2,4,5,6,7,8,9} by (x0,x1) -> 7*x0+1*x1
mata’px is 80
Function mata’px_ maps {1,2,3,4,5,6,7,8,9,10,maajk_} by x -> 1*x+80
Function mata’px__ maps {10}x{2,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1
mëko’px is 100

MG:
[määjtsk :: c1, -A, -G0], 2
[taxk :: c2, -D, -E, -H, -G, -S1], 4
[maajk :: c2, -F, -E, -S1], 10
[ :: =c3, cFin], λx.x
[mëkooxk :: c2, -E, -H, -G, -S1], 5
[tëtuujk :: c2, -E, -H, -G, -S1], 6
[wxtuujk :: c2, -E, -H, -G, -S1], 7
[tuktuujk :: c2, -E, -H, -G, -S1], 8
[taxtuujk :: c2, -E, -H, -G, -S1], 9
[maajk :: =c2B, c2, -E, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2, -E], λx.x
[tu’uk :: c1, -B], 1
[tëkëëk :: c1, -B], 3
[ :: =c1, c2, -H], λx.x
[ :: =c1, +G0, c2, -G], λx.x
[mamaajks :: c3], 14
[mamokx :: c3], 15
[mamokx :: =c1, c3], λx.'1X+15'(x)
[mamokxma :: =c3D, c3], λx.'0X+19'(x)
[ :: =c2, +D, c3D], λx.x
[i’px :: c3], 20
[i’px :: =c3E, c3], λx.'1X+20'(x)
[ :: =c2, +E, c3E], λx.x
[i’px :: =c3*, c3], λx.x
[ :: =c3***G, =c3***F, c3*], λxλy.'1X+3Y'(x,y)
[wxiikx :: c3], 40
[wxiikx :: =c3H, c3], λx.'1X+40'(x)
[ :: =c2, +H, c3H], λx.x
[wxiikxmyaajk :: c3], 50
[wxiikxmyaajk :: =c3H, c3], λx.'1X+50'(x)
[tëkë’px :: c3], 60
[tëkë’px :: =c3E, c3], λx.'1X+60'(x)
[tëkë’px :: =c3**, c3], λx.x
[ :: =c3***G, =c3***F, c3**], λxλy.'1X+7Y'(x,y)
[mata’px :: c3], 80
[mata’px :: =c3E, c3], λx.'1X+80'(x)
[mata’px :: =c3***, c3], λx.x
[ :: =c3***G, =c3***F, c3***], λxλy.'1X+9Y'(x,y)
[ :: =c2, +F, c3***F], λx.x
[ :: =c2, +G, c3***G], λx.x
[mëko’px :: c3], 100
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ma :: =c2A, c2, -S1], λx.'0X+12'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +A, +G0, c1, -A], λx.x
[ :: =c2, +H, +G, +S1, c2, -H], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c2, +D, +E, +H, +G, +S1, c2, -D], λx.x
[ :: =c2, +F, +E, +S1, c2, -F], λx.x
[ :: =c2, +E, +H, +G, +S1, c2, -E], λx.x


Learning Nigerian-Fulfulde

Learned 999 words in Nigerian-Fulfulde and structured them in 17 functions.
It took 27 samples to learn those.
Those are:
go’o is 1
ɗiɗi is 2
tati is 3
nayi is 4
jowi is 5
joweego is 6
Function jowee_ maps {2,3,4} by x -> 1*x+5
sappo is 10
Function sappo e _ maps {1,2,3,4,5,6,jowee_} by x -> 1*x+10
Function cappanɗe _ maps {2,3,4,5,jowee_} by x -> 10*x+0
Function cappanɗe _ e _ maps {2,3,4,5,jowee_}x{1,2,3,4,5,6,jowee_} by (x0,x1) -> 10*x0+1*x1
Function cappanɗe _o maps {6} by x -> 0*x+60
Function cappanɗe _o e _ maps {6}x{1,2,3,4,5,6,jowee_} by (x0,x1) -> 10*x0+1*x1
teemerre is 100
Function teemerre e _ maps {1,2,3,4,5,6,jowee_,10,sappo e _,cappanɗe _,cappanɗe _ e _,cappanɗe _o,cappanɗe _o e _} by x -> 1*x+100
Function teemeɗɗe _ maps {2,3,4,5,6,jowee_} by x -> 100*x+0
Function teemeɗɗe _ e _ maps {2,3,4,5,6,jowee_}x{1,2,3,4,5,6,jowee_,10,sappo e _,cappanɗe _,cappanɗe _ e _,cappanɗe _o,cappanɗe _o e _} by (x0,x1) -> 100*x0+1*x1

MG:
[joweego :: c2, -D, -E1, -B, -F, -S2], 6
[ :: =c4, cFin], λx.x
[sappo :: c3, -S1], 10
[sappo e  :: =c3******B, c3, -S1], λx.'1X+10'(x)
[cappanɗe  :: =c3****C, c3, -S1], λx.'10X'(x)
[cappanɗe  :: =c3*, c3, -S1], λx.x
[ e  :: =c3******B, =c3****C, c3*], λxλy.'1X+10Y'(x,y)
[cappanɗe  :: =c3**, c3, -S1, -S1], λx.'1X+60'(x)
[o :: =c2, +D, c3**], λx.'0X'(x)
[o e  :: =c3******B, =c3******D, c3***], λxλy.'1X+10Y'(x,y)
[ :: =c1, c3], λx.x
[go’o :: c1], 1
[ɗiɗi :: c1, -C0, -F0, -A], 2
[tati :: c1, -C0, -F0, -A], 3
[nayi :: c1, -C0, -F0, -A], 4
[ :: =c2, +E1, c3], λx.x
[jowi :: c2, -E1, -C, -B, -F, -S2], 5
[jowee :: =c2A, c2, -E1, -C, -B, -F, -S2], λx.'1X+5'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +C0, c2, -C], λx.x
[ :: =c1, c2, -B], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[teemerre :: c4], 100
[teemerre e  :: =c3, c4], λx.'1X+100'(x)
[teemeɗɗe  :: =c4*F, c4], λx.'100X'(x)
[teemeɗɗe  :: =c4*, c4], λx.x
[ e  :: =c3, =c4*F, c4*], λxλy.'1X+100Y'(x,y)
[ :: =c2, +F, c4*F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ e  :: =c3******B, =c3****C, c3****], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3****C], λx.x
[o :: =c2, +D, c3*****], λx.'0X'(x)
[o e  :: =c3******B, =c3******D, c3******], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3******D], λx.x
[ :: =c2, +B, c3******B], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +E1, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +C0, c1], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E1, +B, +F, +S2, c2, -E1], λx.x
[ :: =c1, +F0, +A, c1, -F0], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c2, +D, +E1, +B, +F, +S2, c2, -D], λx.x
[ :: =c1, +C0, +F0, +A, c1, -C0], λx.x
[ :: =c2, +B, +F, +S2, c2, -B], λx.x
[ :: =c2, +E1, +C, +B, +F, +S2, c2, -E1], λx.x
[ :: =c2, +C, +B, +F, +S2, c2, -C], λx.x
[ :: =c2, +F, +S2, c2, -F], λx.x


Learning North-Frisian
Learned 999 words in North-Frisian and structured them in 35 functions.
It took 48 samples to learn those.
Those are:
iinj is 1
tou is 2
tri is 3
fjouer is 4
fiiw is 5
seeks is 6
soowen is 7
oocht is 8
nüügen is 9
tiin is 10
alwen is 11
tweelwen is 12
tratäin is 13
füftäin is 15
Function _täin maps {4,6,7,8,9} by x -> 1*x+10
twunti is 20
Function _äntwunti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
dörti is 30
Function _ändörti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
fäärti is 40
Function _änfäärti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
füfti is 50
Function _änfüfti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
süsti is 60
Function _änsüsti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sööwenti is 70
Function _änsööwenti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tachenti is 80
Function _äntachenti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
näägenti is 90
Function _ännäägenti maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
Function _ hunert maps {1} by x -> 0*x+100
Function _ hunert _ maps {1}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,_täin,20,_äntwunti,30,_ändörti,40,_änfäärti,50,_änfüfti,60,_änsüsti,70,_änsööwenti,80,_äntachenti,90,_ännäägenti} by (x0,x1) -> 50*x0+1*x1+50
Function _hunert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hunert _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,_täin,20,_äntwunti,30,_ändörti,40,_änfäärti,50,_änfüfti,60,_änsüsti,70,_änsööwenti,80,_äntachenti,90,_ännäägenti} by (x0,x1) -> 100*x0+1*x1

MG:
[iinj :: c1, -C], 1
[ :: =c3, cFin], λx.x
[tou :: c1, -E], 2
[tri :: c1, -E], 3
[fjouer :: c1, -E, -A], 4
[fiiw :: c1, -E], 5
[seeks :: c1, -E, -A], 6
[soowen :: c1, -E, -A], 7
[oocht :: c1, -E, -A], 8
[nüügen :: c1, -E, -A], 9
[tiin :: c2, -S1], 10
[alwen :: c2, -S1], 11
[tweelwen :: c2, -S1], 12
[tratäin :: c2, -S1], 13
[füftäin :: c2, -S1], 15
[täin :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[twunti :: c2, -S1], 20
[äntwunti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[dörti :: c2, -S1], 30
[ändörti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[fäärti :: c2, -S1], 40
[änfäärti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[füfti :: c2, -S1], 50
[änfüfti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+50'(x,y)
[süsti :: c2, -S1], 60
[änsüsti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+60'(x,y)
[sööwenti :: c2, -S1], 70
[änsööwenti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+70'(x,y)
[tachenti :: c2, -S1], 80
[äntachenti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+80'(x,y)
[näägenti :: c2, -S1], 90
[ännäägenti :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+90'(x,y)
[ :: =c1, c2], λx.x
[ hunert :: =c1, +C, c3], λx.'0X+100'(x)
[ hunert  :: =c2, =c3C, c3], λxλy.'1X+50Y+50'(x,y)
[ :: =c1, +C, c3C], λx.x
[hunert :: =c1, +E, c3], λx.'100X'(x)
[hunert  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x


Learning Russian
Learned 999 words in Russian and structured them in 35 functions.
It took 51 samples to learn those.
Those are:
один is 1
две is 2
три is 3
четыре is 4
пять is 5
шесть is 6
семь is 7
восемь is 8
девять is 9
десять is 10
Function _надцать maps {1,2,3} by x -> 1*x+10
четырнадцать is 14
пятнадцать is 15
шестнадцать is 16
семнадцать is 17
восемнадцать is 18
девятнадцать is 19
двадцать is 20
Function двадцать _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _дцать maps {3} by x -> 0*x+30
Function _дцать _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
сорок is 40
Function сорок _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _десят maps {5,6,7,8} by x -> 10*x+0
Function _десят _ maps {5,6,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
девяносто is 90
Function девяносто _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,_надцать,14,15,16,17,18,19,20,двадцать _,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by x -> 1*x+100
Function _сти maps {2} by x -> 0*x+200
Function _сти _ maps {2}x{1,2,3,4,5,6,7,8,9,10,_надцать,14,15,16,17,18,19,20,двадцать _,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by (x0,x1) -> 80*x0+1*x1+40
Function _ста maps {3,4} by x -> 100*x+0
Function _ста _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,_надцать,14,15,16,17,18,19,20,двадцать _,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by (x0,x1) -> 100*x0+1*x1
Function _сот maps {5,6,7,8,9} by x -> 100*x+0
Function _сот _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_надцать,14,15,16,17,18,19,20,двадцать _,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by (x0,x1) -> 100*x0+1*x1

MG:
[две :: c1, -F, -A], 2
[три :: c1, -C, -G, -A], 3
[ :: =c3, cFin], λx.x
[десять :: c2, -S1], 10
[надцать :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[четырнадцать :: c2, -S1], 14
[пятнадцать :: c2, -S1], 15
[шестнадцать :: c2, -S1], 16
[семнадцать :: c2, -S1], 17
[восемнадцать :: c2, -S1], 18
[девятнадцать :: c2, -S1], 19
[двадцать :: c2, -S1], 20
[двадцать  :: =c1, c2, -S1], λx.'1X+20'(x)
[дцать :: =c1, +C, c2, -S1], λx.'0X+30'(x)
[дцать  :: =c1, =c2C, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +C, c2C], λx.x
[сорок :: c2, -S1], 40
[сорок  :: =c1, c2, -S1], λx.'1X+40'(x)
[десят :: =c1, +D, c2, -S1], λx.'10X'(x)
[десят  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[девяносто :: c2, -S1], 90
[девяносто  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[один :: c1, -A], 1
[четыре :: c1, -G], 4
[пять :: c1, -H, -D], 5
[шесть :: c1, -H, -D], 6
[семь :: c1, -H, -D], 7
[восемь :: c1, -H, -D], 8
[девять :: c1, -H], 9
[сто :: c3], 100
[сто  :: =c2, c3], λx.'1X+100'(x)
[сти :: =c1, +F, c3], λx.'0X+200'(x)
[сти  :: =c2, =c3F, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +F, c3F], λx.x
[ста :: =c1, +G, c3], λx.'100X'(x)
[ста  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[сот :: =c1, +H, c3], λx.'100X'(x)
[сот  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +C, +G, +A, c1, -C], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x
[ :: =c1, +H, +D, c1, -H], λx.x


Learning Tezoatlan-Mixtec

Learned 999 words in Tezoatlan-Mixtec and structured them in 21 functions.
It took 31 samples to learn those.
Those are:
iin is 1
uu̱ is 2
oni̱ is 3
komi̱ is 4
o’o̱n is 5
iño̱ is 6
usa̱ is 7
ona̱ is 8
ii̱n is 9
uxi̱ is 10
Function uxi̱ _ maps {1,2,3,4} by x -> 1*x+10
sa’o̱n is 15
Function sa’o̱n _ maps {1,2,3,4} by x -> 1*x+15
oko̱ is 20
Function oko̱ _ maps {1,2,3,4,5,6,7,8,9,10,uxi̱ _,15,sa’o̱n _} by x -> 1*x+20
Function _ diko maps {2,3} by x -> 20*x+0
Function _ diko _ maps {2,3}x{1,2,3,4,5,6,7,8,9,10,uxi̱ _,15,sa’o̱n _} by (x0,x1) -> 20*x0+1*x1
Function _ díko maps {4} by x -> 0*x+80
Function _ díko _ maps {4}x{1,2,3,4,5,6,7,8,9,10,uxi̱ _,15,sa’o̱n _} by (x0,x1) -> 19*x0+1*x1+4
Function _ sientó maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ sientó _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,uxi̱ _,15,sa’o̱n _,20,oko̱ _,_ diko,_ diko _,_ díko,_ díko _} by (x0,x1) -> 100*x0+1*x1

MG:
[komi̱ :: c1, -D], 4
[ :: =c4, cFin], λx.x
[o’o̱n :: c2, -E, -B, -S2, -F1], 5
[iño̱ :: c2, -E, -B, -S2, -F1], 6
[usa̱ :: c2, -E, -B, -S2, -F1], 7
[ona̱ :: c2, -E, -B, -S2, -F1], 8
[ii̱n :: c2, -E, -B, -S2, -F1], 9
[ :: =c1, c2, -E], λx.x
[iin :: c1], 1
[uu̱ :: c1, -C], 2
[oni̱ :: c1, -C], 3
[uxi̱ :: c2, -B, -S2, -F1], 10
[uxi̱  :: =c1, c2, -B, -S2, -F1], λx.'1X+10'(x)
[sa’o̱n :: c2, -B, -S2, -F1], 15
[sa’o̱n  :: =c1, c2, -B, -S2, -F1], λx.'1X+15'(x)
[ :: =c1, c2, -B], λx.x
[ sientó :: =c2, +E, c4], λx.'100X'(x)
[ sientó  :: =c3, =c4E, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +E, c4E], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[oko̱ :: c3, -S1], 20
[oko̱  :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[ diko :: =c1, +C, c3, -S1], λx.'20X'(x)
[ diko  :: =c3B, =c3C, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ díko :: =c1, +D, c3, -S1], λx.'0X+80'(x)
[ díko  :: =c3B, =c3D, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +B, +S2, +F1, c2, -B], λx.x
[ :: =c2, +E, +B, +S2, +F1, c2, -E], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x


Learning Kazakh
Learned 999 words in Kazakh and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
бір is 1
екі is 2
үш is 3
төрт is 4
бес is 5
алты is 6
жеті is 7
сегіз is 8
тоғыз is 9
он is 10
Function он _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
жиырма is 20
Function жиырма _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
отыз is 30
Function отыз _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
қырық is 40
Function қырық _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
елу is 50
Function елу _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
алпыс is 60
Function алпыс _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
жетпіс is 70
Function жетпіс _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
сексен is 80
Function сексен _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
тоқсан is 90
Function тоқсан _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
жүз is 100
Function жүз _ maps {1,2,3,4,5,6,7,8,9,10,он _,20,жиырма _,30,отыз _,40,қырық _,50,елу _,60,алпыс _,70,жетпіс _,80,сексен _,90,тоқсан _} by x -> 1*x+100
Function _ жүз maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ жүз _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,он _,20,жиырма _,30,отыз _,40,қырық _,50,елу _,60,алпыс _,70,жетпіс _,80,сексен _,90,тоқсан _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[екі :: c1, -C], 2
[үш :: c1, -C], 3
[төрт :: c1, -C], 4
[бес :: c1, -C], 5
[алты :: c1, -C], 6
[жеті :: c1, -C], 7
[сегіз :: c1, -C], 8
[тоғыз :: c1, -C], 9
[он :: c2, -S1], 10
[он  :: =c1, c2, -S1], λx.'1X+10'(x)
[жиырма :: c2, -S1], 20
[жиырма  :: =c1, c2, -S1], λx.'1X+20'(x)
[отыз :: c2, -S1], 30
[отыз  :: =c1, c2, -S1], λx.'1X+30'(x)
[қырық :: c2, -S1], 40
[қырық  :: =c1, c2, -S1], λx.'1X+40'(x)
[елу :: c2, -S1], 50
[елу  :: =c1, c2, -S1], λx.'1X+50'(x)
[алпыс :: c2, -S1], 60
[алпыс  :: =c1, c2, -S1], λx.'1X+60'(x)
[жетпіс :: c2, -S1], 70
[жетпіс  :: =c1, c2, -S1], λx.'1X+70'(x)
[сексен :: c2, -S1], 80
[сексен  :: =c1, c2, -S1], λx.'1X+80'(x)
[тоқсан :: c2, -S1], 90
[тоқсан  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[бір :: c1], 1
[жүз :: c3], 100
[жүз  :: =c2, c3], λx.'1X+100'(x)
[ жүз :: =c1, +C, c3], λx.'100X'(x)
[ жүз  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Siletz-Dee-Ni
Learned 100 words in Siletz-Dee-Ni and structured them in 48 functions.
It took 68 samples to learn those.
Those are:
lha’ is 1
naa-xe is 2
taa-xe is 3
dvn-chi’ is 4
srwee-la’ is 5
k’wee-staa-ni is 6
srch’ee-t’e is 7
laa-nii-srvt-naa-ta is 8
Function _-duy maps {1} by x -> 0*x+9
nee-san is 10
Function nee-san-_-ch’aa-ta maps {1,2,3,4,5,6,8,_-duy} by x -> 1*x+10
Function nee-san-_e-ch’aa-ta maps {7} by x -> 0*x+17
naa-tvn-nee-san is 20
Function naa-tvn-nee-san-_e-ch’aa-ta maps {2,3,7} by x -> 1*x+20
Function naa-tvn-nee-san-_-ch’aa-ta maps {1,4,5,_-duy} by x -> 1*x+20
Function naa-tvn-nee-san-_i-ch’aa-ta maps {6} by x -> 0*x+26
Function naa-tvn-nee-san-_a-ch’aa-ta maps {8} by x -> 0*x+28
taa-tvn-nee-san is 30
Function taa-tvn-nee-san-_e-ch’aa-ta maps {2,3,7} by x -> 1*x+30
Function taa-tvn-nee-san-_-ch’aa-ta maps {1,4,5,_-duy} by x -> 1*x+30
Function taa-tvn-nee-san-_i-ch’aa-ta maps {6} by x -> 0*x+36
Function taa-tvn-nee-san-_a-ch’aa-ta maps {8} by x -> 0*x+38
dinch-tvn-nee-san is 40
Function dinch-tvn-nee-san-_e-ch’aa-ta maps {2,3,7} by x -> 1*x+40
Function dinch-tvn-nee-san-_-ch’aa-ta maps {1,4,5,_-duy} by x -> 1*x+40
Function dinch-tvn-nee-san-_i-ch’aa-ta maps {6} by x -> 0*x+46
Function dinch-tvn-nee-san-_a-ch’aa-ta maps {8} by x -> 0*x+48
Function _i-tvn-nee-san maps {6} by x -> 0*x+60
Function _i-tvn-nee-san-_e-ch’aa-ta maps {6}x{2,3,7} by (x0,x1) -> 10*x0+1*x1
Function _i-tvn-nee-san-_-ch’aa-ta maps {6}x{1,4,5,_-duy} by (x0,x1) -> 10*x0+1*x1
Function _i-tvn-nee-san-_i-ch’aa-ta maps {6}x{6} by (x0,x1) -> 0*x0+0*x1+66
Function _i-tvn-nee-san-_a-ch’aa-ta maps {6}x{8} by (x0,x1) -> 0*x0+0*x1+68
Function _e-tvn-nee-san maps {7} by x -> 0*x+70
Function _e-tvn-nee-san-_e-ch’aa-ta maps {7}x{2,3,7} by (x0,x1) -> 10*x0+1*x1
Function _e-tvn-nee-san-_-ch’aa-ta maps {7}x{1,4,5,_-duy} by (x0,x1) -> 10*x0+1*x1
Function _e-tvn-nee-san-_i-ch’aa-ta maps {7}x{6} by (x0,x1) -> 0*x0+0*x1+76
Function _e-tvn-nee-san-_a-ch’aa-ta maps {7}x{8} by (x0,x1) -> 0*x0+0*x1+78
Function _a-tvn-nee-san maps {8} by x -> 0*x+80
Function _a-tvn-nee-san-_e-ch’aa-ta maps {8}x{2,3,7} by (x0,x1) -> 10*x0+1*x1
Function _a-tvn-nee-san-_-ch’aa-ta maps {8}x{1,4,5,_-duy} by (x0,x1) -> 10*x0+1*x1
Function _a-tvn-nee-san-_i-ch’aa-ta maps {8}x{6} by (x0,x1) -> 0*x0+0*x1+86
Function _a-tvn-nee-san-_a-ch’aa-ta maps {8}x{8} by (x0,x1) -> 0*x0+0*x1+88
Function _-tvn-nee-san maps {5,_-duy} by x -> 10*x+0
Function _-tvn-nee-san-_-ch’aa-ta maps {5,_-duy}x{1,4,5,_-duy} by (x0,x1) -> 10*x0+1*x1
Function _-tvn-nee-san-_e-ch’aa-ta maps {5,_-duy}x{2,3,7} by (x0,x1) -> 10*x0+1*x1
Function _-tvn-nee-san-_i-ch’aa-ta maps {5,_-duy}x{6} by (x0,x1) -> 10*x0+1*x1
Function _-tvn-nee-san-_a-ch’aa-ta maps {5,_-duy}x{8} by (x0,x1) -> 10*x0+1*x1
Function _-chvn maps {1} by x -> 0*x+100

MG:
[lha’ :: c1], 1
[k’wee-staa-ni :: c2, -F, -B, -S1], 6
[srch’ee-t’e :: c2, -C, -D, -S1], 7
[laa-nii-srvt-naa-ta :: c2, -G, -B, -S1], 8
[ :: =c3, cFin], λx.x
[dvn-chi’ :: c2, -E, -B, -S1], 4
[srwee-la’ :: c2, -E, -H, -B, -S1], 5
[-duy :: =cnix, =c1, c2, -E, -H, -B, -S1], λxλy.'1X+0Y+9'(x,y)
[ :: cnix], 0
[ :: =c1, c2, -E], λx.x
[naa-xe :: c2, -B, -D, -S1], 2
[taa-xe :: c2, -B, -D, -S1], 3
[ :: =c1, c2, -B], λx.x
[nee-san :: c3], 10
[nee-san- :: =c3*, c3], λx.'1X+10'(x)
[-ch’aa-ta :: =c2, +B, c3*], λx.x
[nee-san- :: =c3**, c3], λx.'1X+17'(x)
[e-ch’aa-ta :: =c2, +C, c3**], λx.'0X'(x)
[naa-tvn-nee-san :: c3], 20
[naa-tvn-nee-san- :: =c3***, c3], λx.'1X+20'(x)
[e-ch’aa-ta :: =c2, +D, c3***], λx.x
[naa-tvn-nee-san- :: =c3****, c3], λx.'1X+20'(x)
[-ch’aa-ta :: =c2, +E, c3****], λx.x
[naa-tvn-nee-san- :: =c3*****, c3], λx.'1X+26'(x)
[i-ch’aa-ta :: =c2, +F, c3*****], λx.'0X'(x)
[naa-tvn-nee-san- :: =c3******, c3], λx.'1X+28'(x)
[a-ch’aa-ta :: =c2, +G, c3******], λx.'0X'(x)
[taa-tvn-nee-san :: c3], 30
[taa-tvn-nee-san- :: =c3*******, c3], λx.'1X+30'(x)
[e-ch’aa-ta :: =c2, +D, c3*******], λx.x
[taa-tvn-nee-san- :: =c3********, c3], λx.'1X+30'(x)
[-ch’aa-ta :: =c2, +E, c3********], λx.x
[taa-tvn-nee-san- :: =c3*********, c3], λx.'1X+36'(x)
[i-ch’aa-ta :: =c2, +F, c3*********], λx.'0X'(x)
[taa-tvn-nee-san- :: =c3**********, c3], λx.'1X+38'(x)
[a-ch’aa-ta :: =c2, +G, c3**********], λx.'0X'(x)
[dinch-tvn-nee-san :: c3], 40
[dinch-tvn-nee-san- :: =c3***********, c3], λx.'1X+40'(x)
[e-ch’aa-ta :: =c2, +D, c3***********], λx.x
[dinch-tvn-nee-san- :: =c3************, c3], λx.'1X+40'(x)
[-ch’aa-ta :: =c2, +E, c3************], λx.x
[dinch-tvn-nee-san- :: =c3*************, c3], λx.'1X+46'(x)
[i-ch’aa-ta :: =c2, +F, c3*************], λx.'0X'(x)
[dinch-tvn-nee-san- :: =c3**************, c3], λx.'1X+48'(x)
[a-ch’aa-ta :: =c2, +G, c3**************], λx.'0X'(x)
[i-tvn-nee-san :: =c2, +F, c3], λx.'0X+60'(x)
[i-tvn-nee-san- :: =c3***************, =c3F, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +F, c3F], λx.x
[e-ch’aa-ta :: =c2, +D, c3***************], λx.x
[i-tvn-nee-san- :: =c3****************, =c3F, c3], λxλy.'1X+10Y'(x,y)
[-ch’aa-ta :: =c2, +E, c3****************], λx.x
[i-tvn-nee-san- :: =c3*****************, =c3F, c3], λxλy.'1X+0Y+66'(x,y)
[i-ch’aa-ta :: =c2, +F, c3*****************], λx.'0X'(x)
[i-tvn-nee-san- :: =c3******************, =c3F, c3], λxλy.'1X+0Y+68'(x,y)
[a-ch’aa-ta :: =c2, +G, c3******************], λx.'0X'(x)
[e-tvn-nee-san :: =c2, +C, c3], λx.'0X+70'(x)
[e-tvn-nee-san- :: =c3*******************, =c3C, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[e-ch’aa-ta :: =c2, +D, c3*******************], λx.x
[e-tvn-nee-san- :: =c3********************, =c3C, c3], λxλy.'1X+10Y'(x,y)
[-ch’aa-ta :: =c2, +E, c3********************], λx.x
[e-tvn-nee-san- :: =c3*********************, =c3C, c3], λxλy.'1X+0Y+76'(x,y)
[i-ch’aa-ta :: =c2, +F, c3*********************], λx.'0X'(x)
[e-tvn-nee-san- :: =c3**********************, =c3C, c3], λxλy.'1X+0Y+78'(x,y)
[a-ch’aa-ta :: =c2, +G, c3**********************], λx.'0X'(x)
[a-tvn-nee-san :: =c2, +G, c3], λx.'0X+80'(x)
[a-tvn-nee-san- :: =c3***********************, =c3G, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +G, c3G], λx.x
[e-ch’aa-ta :: =c2, +D, c3***********************], λx.x
[a-tvn-nee-san- :: =c3************************, =c3G, c3], λxλy.'1X+10Y'(x,y)
[-ch’aa-ta :: =c2, +E, c3************************], λx.x
[a-tvn-nee-san- :: =c3*************************, =c3G, c3], λxλy.'1X+0Y+86'(x,y)
[i-ch’aa-ta :: =c2, +F, c3*************************], λx.'0X'(x)
[a-tvn-nee-san- :: =c3**************************, =c3G, c3], λxλy.'1X+0Y+88'(x,y)
[a-ch’aa-ta :: =c2, +G, c3**************************], λx.'0X'(x)
[-tvn-nee-san :: =c2, +H, c3], λx.'10X'(x)
[-tvn-nee-san- :: =c3***************************, =c3H, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +H, c3H], λx.x
[-ch’aa-ta :: =c2, +E, c3***************************], λx.x
[-tvn-nee-san- :: =c3****************************, =c3H, c3], λxλy.'1X+10Y'(x,y)
[e-ch’aa-ta :: =c2, +D, c3****************************], λx.x
[-tvn-nee-san- :: =c3*****************************, =c3H, c3], λxλy.'1X+10Y'(x,y)
[i-ch’aa-ta :: =c2, +F, c3*****************************], λx.x
[-tvn-nee-san- :: =c3******************************, =c3H, c3], λxλy.'1X+10Y'(x,y)
[a-ch’aa-ta :: =c2, +G, c3******************************], λx.x
[-chvn :: =cnix, =c1, c3], λxλy.'1X+0Y+100'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c2, +E, +H, +B, +S1, c2, -E], λx.x
[ :: =c2, +C, +D, +S1, c2, -C], λx.x
[ :: =c2, +B, +S1, c2, -B], λx.x
[ :: =c2, +B, +D, +S1, c2, -B], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +F, +B, +S1, c2, -F], λx.x
[ :: =c2, +G, +B, +S1, c2, -G], λx.x
[ :: =c2, +E, +B, +S1, c2, -E], λx.x
[ :: =c2, +H, +B, +S1, c2, -H], λx.x


Learning Llanito

Learned 20 words in Llanito and structured them in 19 functions.
It took 20 samples to learn those.
Those are:
wan is 1
tu is 2
fri is 3
kwatro is 4
faiv is 5
siks is 6
seven is 7
eit is 8
nain is 9
ten is 10
ileven is 11
twelv is 12
fetin is 13
fotin is 14
fiftin is 15
sèventin is 17
Function _in maps {8} by x -> 0*x+18
Function _tin maps {6,9} by x -> 1*x+10
twenti is 20

MG:
[eit :: c1, -A], 8
[ :: =c2, cFin], λx.x
[siks :: c1, -B], 6
[nain :: c1, -B], 9
[ten :: c2], 10
[ileven :: c2], 11
[twelv :: c2], 12
[fetin :: c2], 13
[fotin :: c2], 14
[fiftin :: c2], 15
[sèventin :: c2], 17
[in :: =c1, +A, c2], λx.'0X+18'(x)
[tin :: =c1, +B, c2], λx.'1X+10'(x)
[twenti :: c2], 20
[ :: =c1, c2], λx.x
[wan :: c1], 1
[tu :: c1], 2
[fri :: c1], 3
[kwatro :: c1], 4
[faiv :: c1], 5
[seven :: c1], 7
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x


Learning Mwani
Learned 999 words in Mwani and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
m’moja is 1
mbire is 2
natu is 3
n’né is 4
n’tano is 5
sita is 6
saba is 7
nane is 8
khénta is 9
kumi is 10
Function kumi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
shirini is 20
Function shirini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
talatini is 30
Function talatini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
arubaine is 40
Function arubaine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
amusine is 50
Function amusine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sitine is 60
Function sitine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sabine is 70
Function sabine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tamanine is 80
Function tamanine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
tusuine is 90
Function tusuine na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
mia is 100
Function mia na _ maps {1,2,3,4,5,6,7,8,9,10,kumi na _,20,shirini na _,30,talatini na _,40,arubaine na _,50,amusine na _,60,sitine na _,70,sabine na _,80,tamanine na _,90,tusuine na _} by x -> 1*x+100
Function mia _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function mia _ na _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,kumi na _,20,shirini na _,30,talatini na _,40,arubaine na _,50,amusine na _,60,sitine na _,70,sabine na _,80,tamanine na _,90,tusuine na _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[mbire :: c1, -C], 2
[natu :: c1, -C], 3
[n’né :: c1, -C], 4
[n’tano :: c1, -C], 5
[sita :: c1, -C], 6
[saba :: c1, -C], 7
[nane :: c1, -C], 8
[khénta :: c1, -C], 9
[kumi :: c2, -S1], 10
[kumi na  :: =c1, c2, -S1], λx.'1X+10'(x)
[shirini :: c2, -S1], 20
[shirini na  :: =c1, c2, -S1], λx.'1X+20'(x)
[talatini :: c2, -S1], 30
[talatini na  :: =c1, c2, -S1], λx.'1X+30'(x)
[arubaine :: c2, -S1], 40
[arubaine na  :: =c1, c2, -S1], λx.'1X+40'(x)
[amusine :: c2, -S1], 50
[amusine na  :: =c1, c2, -S1], λx.'1X+50'(x)
[sitine :: c2, -S1], 60
[sitine na  :: =c1, c2, -S1], λx.'1X+60'(x)
[sabine :: c2, -S1], 70
[sabine na  :: =c1, c2, -S1], λx.'1X+70'(x)
[tamanine :: c2, -S1], 80
[tamanine na  :: =c1, c2, -S1], λx.'1X+80'(x)
[tusuine :: c2, -S1], 90
[tusuine na  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[m’moja :: c1], 1
[mia :: c3], 100
[mia na  :: =c2, c3], λx.'1X+100'(x)
[mia  :: =c3*C, c3], λx.'100X'(x)
[mia  :: =c3*, c3], λx.x
[ na  :: =c2, =c3*C, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3*C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Klallam
Learned 999 words in Klallam and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
nə́c̕uʔ is 1
čə́saʔ is 2
ɬíxʷ is 3
ŋús is 4
ɬq̕áčš is 5
t̕x̣ə́ŋ is 6
c̕úʔkʷs is 7
táʔcs is 8
tə́kʷxʷ is 9
ʔúpən is 10
Function ʔúpən ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
nəc̕xʷk̕ʷə́s is 20
Function nəc̕xʷk̕ʷə́s ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
ɬxʷɬšáʔ is 30
Function ɬxʷɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
ŋəsɬšáʔ is 40
Function ŋəsɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ɬq̕čšɬšáʔ is 50
Function ɬq̕čšɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
t̕x̣əŋɬšáʔ is 60
Function t̕x̣əŋɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
c̕aʔkʷsɬšáʔ is 70
Function c̕aʔkʷsɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
taʔcsɬšáʔ is 80
Function taʔcsɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
təkʷxʷɬšáʔ is 90
Function təkʷxʷɬšáʔ ʔiʔ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
snáč̕əwəč is 100
Function snáč̕əwəč ʔiʔ _ maps {1,2,3,4,5,6,7,8,9,10,ʔúpən ʔiʔ _,20,nəc̕xʷk̕ʷə́s ʔiʔ _,30,ɬxʷɬšáʔ ʔiʔ _,40,ŋəsɬšáʔ ʔiʔ _,50,ɬq̕čšɬšáʔ ʔiʔ _,60,t̕x̣əŋɬšáʔ ʔiʔ _,70,c̕aʔkʷsɬšáʔ ʔiʔ _,80,taʔcsɬšáʔ ʔiʔ _,90,təkʷxʷɬšáʔ ʔiʔ _} by x -> 1*x+100
Function _ snáč̕əwəč maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ snáč̕əwəč ʔiʔ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,ʔúpən ʔiʔ _,20,nəc̕xʷk̕ʷə́s ʔiʔ _,30,ɬxʷɬšáʔ ʔiʔ _,40,ŋəsɬšáʔ ʔiʔ _,50,ɬq̕čšɬšáʔ ʔiʔ _,60,t̕x̣əŋɬšáʔ ʔiʔ _,70,c̕aʔkʷsɬšáʔ ʔiʔ _,80,taʔcsɬšáʔ ʔiʔ _,90,təkʷxʷɬšáʔ ʔiʔ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[čə́saʔ :: c1, -C], 2
[ɬíxʷ :: c1, -C], 3
[ŋús :: c1, -C], 4
[ɬq̕áčš :: c1, -C], 5
[t̕x̣ə́ŋ :: c1, -C], 6
[c̕úʔkʷs :: c1, -C], 7
[táʔcs :: c1, -C], 8
[tə́kʷxʷ :: c1, -C], 9
[ʔúpən :: c2, -S1], 10
[ʔúpən ʔiʔ  :: =c1, c2, -S1], λx.'1X+10'(x)
[nəc̕xʷk̕ʷə́s :: c2, -S1], 20
[nəc̕xʷk̕ʷə́s ʔiʔ  :: =c1, c2, -S1], λx.'1X+20'(x)
[ɬxʷɬšáʔ :: c2, -S1], 30
[ɬxʷɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+30'(x)
[ŋəsɬšáʔ :: c2, -S1], 40
[ŋəsɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+40'(x)
[ɬq̕čšɬšáʔ :: c2, -S1], 50
[ɬq̕čšɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+50'(x)
[t̕x̣əŋɬšáʔ :: c2, -S1], 60
[t̕x̣əŋɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+60'(x)
[c̕aʔkʷsɬšáʔ :: c2, -S1], 70
[c̕aʔkʷsɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+70'(x)
[taʔcsɬšáʔ :: c2, -S1], 80
[taʔcsɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+80'(x)
[təkʷxʷɬšáʔ :: c2, -S1], 90
[təkʷxʷɬšáʔ ʔiʔ  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[nə́c̕uʔ :: c1], 1
[snáč̕əwəč :: c3], 100
[snáč̕əwəč ʔiʔ  :: =c2, c3], λx.'1X+100'(x)
[ snáč̕əwəč :: =c1, +C, c3], λx.'100X'(x)
[ snáč̕əwəč ʔiʔ  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x




Learning Albanian
Learned 999 words in Albanian and structured them in 20 functions.
It took 31 samples to learn those.
Those are:
një is 1
dy is 2
tre is 3
katër is 4
pesë is 5
gjashtë is 6
shtatë is 7
tetë is 8
nëntë is 9
dhjetë is 10
Function _mbëdhjete maps {2} by x -> 0*x+12
Function _mbëdhjetë maps {1,3,4,5,6,7,8,9} by x -> 1*x+10
tridhjetë is 30
Function tridhjetë e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _zet maps {1,2} by x -> 20*x+0
Function _zet e _ maps {1,2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 20*x0+1*x1
Function _dhjetë maps {5,6,7,8,9} by x -> 10*x+0
Function _dhjetë e _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _qind maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _qind e _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_mbëdhjete,_mbëdhjetë,30,tridhjetë e _,_zet,_zet e _,_dhjetë,_dhjetë e _} by (x0,x1) -> 100*x0+1*x1

MG:
[dy :: c1, -A, -D], 2
[ :: =c3, cFin], λx.x
[pesë :: c1, -E, -B], 5
[gjashtë :: c1, -E, -B], 6
[shtatë :: c1, -E, -B], 7
[tetë :: c1, -E, -B], 8
[nëntë :: c1, -E, -B], 9
[një :: c1, -B, -D], 1
[tre :: c1, -B], 3
[katër :: c1, -B], 4
[qind :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[qind e  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[dhjetë :: c2, -S1], 10
[mbëdhjete :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[mbëdhjetë :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[tridhjetë :: c2, -S1], 30
[tridhjetë e  :: =c1, c2, -S1], λx.'1X+30'(x)
[zet :: =c1, +D, c2, -S1], λx.'20X'(x)
[zet e  :: =c1, =c2D, c2, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[dhjetë :: =c1, +E, c2, -S1], λx.'10X'(x)
[dhjetë e  :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Luxembourgish
Learned 999 words in Luxembourgish and structured them in 46 functions.
It took 59 samples to learn those.
Those are:
eent is 1
zwee is 2
dräi is 3
véier is 4
fënnef is 5
sechs is 6
siwen is 7
aacht is 8
néng is 9
zéng is 10
eelef is 11
zwielef is 12
Function _zéng maps {3,4} by x -> 1*x+10
fofzéng is 15
siechzéng is 16
siwwenzéng is 17
uechtzéng is 18
nonzéng is 19
zwanzeg is 20
eenanzwanzeg is 21
Function _anzwanzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
drësseg is 30
eenandrësseg is 31
Function _andrësseg maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _zeg maps {4} by x -> 0*x+40
Function eena_zeg maps {4} by x -> 0*x+41
Function _a_zeg maps {2,3,4,5,6,7,8,9}x{4} by (x0,x1) -> 1*x0+9*x1+4
fofzeg is 50
eenafofzeg is 51
Function _afofzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
sechzeg is 60
eenasechzeg is 61
Function _asechzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
siwwenzeg is 70
eenasiwwenzeg is 71
Function _asiwwenzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
achtzeg is 80
eenanachtzeg is 81
Function _anachtzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
nonzeg is 90
eenannonzeg is 91
Function _annonzeg maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
honnert is 100
Function honnert_ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zéng,15,16,17,18,19,20,21,_anzwanzeg,30,31,_andrësseg,_zeg,eena_zeg,_a_zeg,50,51,_afofzeg,60,61,_asechzeg,70,71,_asiwwenzeg,80,81,_anachtzeg,90,91,_annonzeg} by x -> 1*x+100
Function _honnert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _honnert_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_zéng,15,16,17,18,19,20,21,_anzwanzeg,30,31,_andrësseg,_zeg,eena_zeg,_a_zeg,50,51,_afofzeg,60,61,_asechzeg,70,71,_asiwwenzeg,80,81,_anachtzeg,90,91,_annonzeg} by (x0,x1) -> 100*x0+1*x1

MG:
[véier :: c1, -C, -B, -A], 4
[ :: =c3, cFin], λx.x
[zwee :: c1, -B], 2
[dräi :: c1, -B, -A], 3
[fënnef :: c1, -B], 5
[sechs :: c1, -B], 6
[siwen :: c1, -B], 7
[aacht :: c1, -B], 8
[néng :: c1, -B], 9
[zéng :: c2, -S1], 10
[eelef :: c2, -S1], 11
[zwielef :: c2, -S1], 12
[zéng :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[fofzéng :: c2, -S1], 15
[siechzéng :: c2, -S1], 16
[siwwenzéng :: c2, -S1], 17
[uechtzéng :: c2, -S1], 18
[nonzéng :: c2, -S1], 19
[zwanzeg :: c2, -S1], 20
[eenanzwanzeg :: c2, -S1], 21
[anzwanzeg :: =c1, +B, c2, -S1], λx.'1X+20'(x)
[drësseg :: c2, -S1], 30
[eenandrësseg :: c2, -S1], 31
[andrësseg :: =c1, +B, c2, -S1], λx.'1X+30'(x)
[zeg :: =c1, +C, c2, -S1], λx.'0X+40'(x)
[eena :: =c2*, c2, -S1], λx.'1X+41'(x)
[zeg :: =c1, +C, c2*], λx.'0X'(x)
[a :: =c2**, =c2B, c2, -S1], λxλy.'1X+1Y+4'(x,y)
[ :: =c1, +B, c2B], λx.x
[zeg :: =c1, +C, c2**], λx.'9X'(x)
[fofzeg :: c2, -S1], 50
[eenafofzeg :: c2, -S1], 51
[afofzeg :: =c1, +B, c2, -S1], λx.'1X+50'(x)
[sechzeg :: c2, -S1], 60
[eenasechzeg :: c2, -S1], 61
[asechzeg :: =c1, +B, c2, -S1], λx.'1X+60'(x)
[siwwenzeg :: c2, -S1], 70
[eenasiwwenzeg :: c2, -S1], 71
[asiwwenzeg :: =c1, +B, c2, -S1], λx.'1X+70'(x)
[achtzeg :: c2, -S1], 80
[eenanachtzeg :: c2, -S1], 81
[anachtzeg :: =c1, +B, c2, -S1], λx.'1X+80'(x)
[nonzeg :: c2, -S1], 90
[eenannonzeg :: c2, -S1], 91
[annonzeg :: =c1, +B, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[eent :: c1], 1
[honnert :: c3], 100
[honnert :: =c2, c3], λx.'1X+100'(x)
[honnert :: =c1, +B, c3], λx.'100X'(x)
[honnert :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Inari-Sami

Learned 999 words in Inari-Sami and structured them in 29 functions.
It took 42 samples to learn those.
Those are:
ohtâ is 1
kyehti is 2
kulmâ is 3
nelji is 4
vittâ is 5
kuttâ is 6
čiččâm is 7
käävci is 8
oovce is 9
love is 10
ohtunubáloh is 11
kyehtnubáloh is 12
Function _nubáloh maps {3,4,5,6,7,8,9} by x -> 1*x+10
kyehtlov is 20
Function kyehtlov_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _lov maps {3,4,7} by x -> 10*x+0
Function _lov_ maps {3,4,7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
vittlov is 50
Function vittlov_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
kuttlov is 60
Function kuttlov_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
kähcilov is 80
Function kähcilov_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
ohcelov is 90
Function ohcelov_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
čyeđe is 100
Function čyeđe _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_nubáloh,20,kyehtlov_,_lov,_lov_,50,vittlov_,60,kuttlov_,80,kähcilov_,90,ohcelov_} by x -> 1*x+100
Function _čyeđe maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _čyeđe _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_nubáloh,20,kyehtlov_,_lov,_lov_,50,vittlov_,60,kuttlov_,80,kähcilov_,90,ohcelov_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kyehti :: c1, -E], 2
[kulmâ :: c1, -E, -C, -A], 3
[nelji :: c1, -E, -C, -A], 4
[vittâ :: c1, -E, -A], 5
[kuttâ :: c1, -E, -A], 6
[čiččâm :: c1, -E, -C, -A], 7
[käävci :: c1, -E, -A], 8
[oovce :: c1, -E, -A], 9
[ohtâ :: c1], 1
[love :: c2, -S1], 10
[ohtunubáloh :: c2, -S1], 11
[kyehtnubáloh :: c2, -S1], 12
[nubáloh :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[kyehtlov :: c2, -S1], 20
[kyehtlov :: =c1, c2, -S1], λx.'1X+20'(x)
[lov :: =c1, +C, c2, -S1], λx.'10X'(x)
[lov :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[vittlov :: c2, -S1], 50
[vittlov :: =c1, c2, -S1], λx.'1X+50'(x)
[kuttlov :: c2, -S1], 60
[kuttlov :: =c1, c2, -S1], λx.'1X+60'(x)
[kähcilov :: c2, -S1], 80
[kähcilov :: =c1, c2, -S1], λx.'1X+80'(x)
[ohcelov :: c2, -S1], 90
[ohcelov :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[čyeđe :: c3], 100
[čyeđe  :: =c2, c3], λx.'1X+100'(x)
[čyeđe :: =c1, +E, c3], λx.'100X'(x)
[čyeđe  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Mapudungun
Learned 999 words in Mapudungun and structured them in 15 functions.
It took 22 samples to learn those.
Those are:
kiñe is 1
epu is 2
küla is 3
meli is 4
kechu is 5
kayu is 6
reqle is 7
pura is 8
aylla is 9
mari is 10
Function mari _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ mari maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ mari _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ pataka maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ pataka _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,mari _,_ mari,_ mari _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[mari :: c2, -S1], 10
[mari  :: =c1, c2, -S1], λx.'1X+10'(x)
[ mari :: =c1, +B, c2, -S1], λx.'10X'(x)
[ mari  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[kiñe :: c1], 1
[epu :: c1, -B], 2
[küla :: c1, -B], 3
[meli :: c1, -B], 4
[kechu :: c1, -B], 5
[kayu :: c1, -B], 6
[reqle :: c1, -B], 7
[pura :: c1, -B], 8
[aylla :: c1, -B], 9
[ pataka :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ pataka  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Sranan-Tongo
Learned 999 words in Sranan-Tongo and structured them in 17 functions.
It took 24 samples to learn those.
Those are:
wan is 1
tu is 2
dri is 3
fo is 4
feifi is 5
siksi is 6
seibi is 7
aiti is 8
neigi is 9
tin is 10
erfu is 11
twarfu is 12
Function tin-na-_ maps {3,4,5,6,7,8,9} by x -> 1*x+10
Function _tenti maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _tenti-na-_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hondru maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hondru nanga _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,tin-na-_,_tenti,_tenti-na-_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[wan :: c1], 1
[tu :: c1, -B], 2
[dri :: c1, -B, -A], 3
[fo :: c1, -B, -A], 4
[feifi :: c1, -B, -A], 5
[siksi :: c1, -B, -A], 6
[seibi :: c1, -B, -A], 7
[aiti :: c1, -B, -A], 8
[neigi :: c1, -B, -A], 9
[tin :: c2, -S1], 10
[erfu :: c2, -S1], 11
[twarfu :: c2, -S1], 12
[tin-na- :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[tenti :: =c1, +B, c2, -S1], λx.'10X'(x)
[tenti-na- :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[ hondru :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hondru nanga  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Totontepec-Mixe
Learned 999 words in Totontepec-Mixe and structured them in 36 functions.
It took 57 samples to learn those.
Those are:
to’c is 1
me̲jtsc is 2
toojc is 3
mactaaxc is 4
mugo̲o̲xc is 5
tojtu̲c is 6
vuxtojtu̲c is 7
todojtu̲c is 8
taxtojtu̲c is 9
majc is 10
Function mac_ maps {1,2,3} by x -> 1*x+10
macmajcts is 14
macmó̲cx is 15
mactojt is 16
macvuxtojt is 17
mactodojt is 18
mactaxtojt is 19
ii’px is 20
Function ii’px_ maps {1,2,3,4,6,7,8,9,10,mac_,14,15,16,17,18,19} by x -> 1*x+20
ii’pxmó̲cx is 25
vu̲jxtcupx is 40
Function vu̲jxtcupx_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+40
vu̲jxtcupxmó̲cx is 45
Function vu̲jxtcupxu̲c_ maps {10,mac_,14,15,16,17,18,19} by x -> 1*x+40
toogupx is 60
Function toogupx_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+60
toogupxmó̲cx is 65
Function toogupxu̲c_ maps {10,mac_,14,15,16,17,18,19} by x -> 1*x+60
Function _tupx maps {10} by x -> 0*x+80
Function _tupxmó̲cx maps {10} by x -> 0*x+85
Function _tupx_ maps {10}x{1,2,3,4,6,7,8,9} by (x0,x1) -> 8*x0+1*x1
Function _tupxu̲c_ maps {10}x{10,mac_,14,15,16,17,18,19} by (x0,x1) -> 8*x0+1*x1
mó̲cupx is 100
Function mó̲cupx _ maps {1,2,3,4,5,6,7,8,9,10,mac_,14,15,16,17,18,19,20,ii’px_,25,40,vu̲jxtcupx_,45,vu̲jxtcupxu̲c_,60,toogupx_,65,toogupxu̲c_,_tupx,_tupxmó̲cx,_tupx_,_tupxu̲c_} by x -> 1*x+100
Function _ mó̲cupx maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ mó̲cupx _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,mac_,14,15,16,17,18,19,20,ii’px_,25,40,vu̲jxtcupx_,45,vu̲jxtcupxu̲c_,60,toogupx_,65,toogupxu̲c_,_tupx,_tupxmó̲cx,_tupx_,_tupxu̲c_} by (x0,x1) -> 100*x0+1*x1

MG:
[majc :: c2, -E, -B, -D, -S2, -F1], 10
[ :: =c4, cFin], λx.x
[mactaaxc :: c2, -C, -B, -G, -S2, -F1], 4
[tojtu̲c :: c2, -C, -B, -G, -S2, -F1], 6
[vuxtojtu̲c :: c2, -C, -B, -G, -S2, -F1], 7
[todojtu̲c :: c2, -C, -B, -G, -S2, -F1], 8
[taxtojtu̲c :: c2, -C, -B, -G, -S2, -F1], 9
[ :: =c1, c2, -C], λx.x
[to’c :: c1], 1
[me̲jtsc :: c1, -G0], 2
[toojc :: c1, -G0], 3
[mac :: =c1, c2, -B, -D, -S2, -F1], λx.'1X+10'(x)
[macmajcts :: c2, -B, -D, -S2, -F1], 14
[macmó̲cx :: c2, -B, -D, -S2, -F1], 15
[mactojt :: c2, -B, -D, -S2, -F1], 16
[macvuxtojt :: c2, -B, -D, -S2, -F1], 17
[mactodojt :: c2, -B, -D, -S2, -F1], 18
[mactaxtojt :: c2, -B, -D, -S2, -F1], 19
[ :: =c1, c2, -B], λx.x
[mugo̲o̲xc :: c2, -G, -S2, -F1], 5
[ :: =c1, +G0, c2, -G], λx.x
[mó̲cupx :: c4], 100
[mó̲cupx  :: =c3, c4], λx.'1X+100'(x)
[ mó̲cupx :: =c2, +G, c4], λx.'100X'(x)
[ mó̲cupx  :: =c3, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +G, c4G], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ii’px :: c3, -S1], 20
[ii’px :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[ii’pxmó̲cx :: c3, -S1], 25
[vu̲jxtcupx :: c3, -S1], 40
[vu̲jxtcupx :: =c3C, c3, -S1], λx.'1X+40'(x)
[ :: =c2, +C, c3C], λx.x
[vu̲jxtcupxmó̲cx :: c3, -S1], 45
[vu̲jxtcupxu̲c :: =c3D, c3, -S1], λx.'1X+40'(x)
[ :: =c2, +D, c3D], λx.x
[toogupx :: c3, -S1], 60
[toogupx :: =c3C, c3, -S1], λx.'1X+60'(x)
[toogupxmó̲cx :: c3, -S1], 65
[toogupxu̲c :: =c3D, c3, -S1], λx.'1X+60'(x)
[tupx :: =c2, +E, c3, -S1], λx.'0X+80'(x)
[tupxmó̲cx :: =c2, +E, c3, -S1], λx.'0X+85'(x)
[tupx :: =c3C, =c3E, c3, -S1], λxλy.'1X+8Y'(x,y)
[ :: =c2, +E, c3E], λx.x
[tupxu̲c :: =c3D, =c3E, c3, -S1], λxλy.'1X+8Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +C, +B, +G, +S2, +F1, c2, -C], λx.x
[ :: =c2, +B, +D, +S2, +F1, c2, -B], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c2, +B, +G, +S2, +F1, c2, -B], λx.x
[ :: =c2, +D, +S2, +F1, c2, -D], λx.x
[ :: =c2, +G, +S2, +F1, c2, -G], λx.x
[ :: =c2, +E, +B, +D, +S2, +F1, c2, -E], λx.x




Learning Occitan

Learned 999 words in Occitan and structured them in 37 functions.
It took 50 samples to learn those.
Those are:
un is 1
dos is 2
tres is 3
quatre is 4
cinc is 5
sièis is 6
sèt is 7
uèch is 8
nòu is 9
dètz is 10
onze is 11
dotze is 12
tretze is 13
catòrze is 14
quinze is 15
setze is 16
Function dètz-e-_ maps {7,8,9} by x -> 1*x+10
vint is 20
Function vint-e-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trenta is 30
Function trenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
quaranta is 40
Function quaranta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquanta is 50
Function cinquanta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
seissanta is 60
Function seissanta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setanta is 70
Function setanta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochanta is 80
Function ochanta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
nonanta is 90
Function nonanta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dètz-e-_,20,vint-e-_,30,trenta _,40,quaranta _,50,cinquanta _,60,seissanta _,70,setanta _,80,ochanta _,90,nonanta _} by x -> 1*x+100
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cents _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dètz-e-_,20,vint-e-_,30,trenta _,40,quaranta _,50,cinquanta _,60,seissanta _,70,setanta _,80,ochanta _,90,nonanta _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[dètz :: c2, -S1], 10
[onze :: c2, -S1], 11
[dotze :: c2, -S1], 12
[tretze :: c2, -S1], 13
[catòrze :: c2, -S1], 14
[quinze :: c2, -S1], 15
[setze :: c2, -S1], 16
[dètz-e- :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vint :: c2, -S1], 20
[vint-e- :: =c1, c2, -S1], λx.'1X+20'(x)
[trenta :: c2, -S1], 30
[trenta  :: =c1, c2, -S1], λx.'1X+30'(x)
[quaranta :: c2, -S1], 40
[quaranta  :: =c1, c2, -S1], λx.'1X+40'(x)
[cinquanta :: c2, -S1], 50
[cinquanta  :: =c1, c2, -S1], λx.'1X+50'(x)
[seissanta :: c2, -S1], 60
[seissanta  :: =c1, c2, -S1], λx.'1X+60'(x)
[setanta :: c2, -S1], 70
[setanta  :: =c1, c2, -S1], λx.'1X+70'(x)
[ochanta :: c2, -S1], 80
[ochanta  :: =c1, c2, -S1], λx.'1X+80'(x)
[nonanta :: c2, -S1], 90
[nonanta  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[un :: c1], 1
[dos :: c1, -D], 2
[tres :: c1, -D], 3
[quatre :: c1, -D], 4
[cinc :: c1, -D], 5
[sièis :: c1, -D], 6
[sèt :: c1, -A, -D], 7
[uèch :: c1, -A, -D], 8
[nòu :: c1, -A, -D], 9
[cent :: c3], 100
[cent  :: =c2, c3], λx.'1X+100'(x)
[ cents :: =c1, +D, c3], λx.'100X'(x)
[ cents  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x




Learning Tukudede
Learned 999 words in Tukudede and structured them in 16 functions.
It took 25 samples to learn those.
Those are:
iso is 1
ruu is 2
telu is 3
paat is 4
lim is 5
Function hohon_ maps {1} by x -> 0*x+6
Function hoho _ maps {2,3} by x -> 1*x+5
hoho pat is 9
sagulu is 10
Function sagulu gresi _ maps {1,2,3,4,5,hohon_,hoho _,9} by x -> 1*x+10
Function sakui _ maps {2,3,4,5,hohon_,hoho _} by x -> 10*x+0
Function sakui _ gresi _ maps {2,3,4,5,hohon_,hoho _}x{1,2,3,4,5,hohon_,hoho _,9} by (x0,x1) -> 10*x0+1*x1
Function sakui hoho _ maps {4} by x -> 0*x+90
Function sakui hoho _ gresi _ maps {4}x{1,2,3,4,5,hohon_,hoho _,9} by (x0,x1) -> 21*x0+1*x1+6
Function atus _ maps {1,2,3,4,5,hohon_,hoho _,9} by x -> 100*x+0
Function atus _ _ maps {1,2,3,4,5,hohon_,hoho _,9}x{1,2,3,4,5,hohon_,hoho _,9,10,sagulu gresi _,sakui _,sakui _ gresi _,sakui hoho _,sakui hoho _ gresi _} by (x0,x1) -> 100*x0+1*x1

MG:
[iso :: c1, -A], 1
[paat :: c2, -E, -D, -S2, -F1], 4
[ :: =c4, cFin], λx.x
[lim :: c2, -D, -S2, -F1], 5
[hohon :: =c2A, c2, -D, -S2, -F1], λx.'0X+6'(x)
[ :: =c1, +A, c2A], λx.x
[hoho  :: =c2B, c2, -D, -S2, -F1], λx.'1X+5'(x)
[ :: =c1, +B, c2B], λx.x
[hoho pat :: c2, -S2, -F1], 9
[ :: =c1, c2], λx.x
[ruu :: c1, -B, -D0], 2
[telu :: c1, -B, -D0], 3
[ :: =c1, +D0, c2, -D], λx.x
[atus  :: =c2, c4], λx.'100X'(x)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sagulu :: c3, -S1], 10
[sagulu gresi  :: =c2, c3, -S1], λx.'1X+10'(x)
[sakui  :: =c3***D, c3, -S1], λx.'10X'(x)
[sakui  :: =c3*, c3, -S1], λx.x
[ gresi  :: =c2, =c3***D, c3*], λxλy.'1X+10Y'(x,y)
[sakui hoho  :: =c3****E, c3, -S1], λx.'0X+90'(x)
[sakui hoho  :: =c3**, c3, -S1], λx.'1X+6'(x)
[ gresi  :: =c2, =c3****E, c3**], λxλy.'1X+21Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ gresi  :: =c2, =c3***D, c3***], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3***D], λx.x
[ gresi  :: =c2, =c3****E, c3****], λxλy.'1X+21Y'(x,y)
[ :: =c2, +E, c3****E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x
[ :: =c2, +E, +D, +S2, +F1, c2, -E], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c2, +D, +S2, +F1, c2, -D], λx.x


Learning Arhuaco
Learned 999 words in Arhuaco and structured them in 18 functions.
It took 26 samples to learn those.
Those are:
in’gwi is 1
mowga is 2
máykʉnʉ is 3
ma’keywa is 4
asewa is 5
chin̈wa is 6
koga is 7
abewa is 8
ikawa is 9
uga is 10
Function _ uga _ kʉttow maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ uga maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
syentu is 100
Function syentu _ maps {1,2,3,4,5,6,7,8,9,_ uga _ kʉttow,_ uga} by x -> 1*x+100
Function syentu _ _ maps {1}x{10} by (x0,x1) -> 0*x0+0*x1+110
Function _ syentu maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ syentu _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,_ uga _ kʉttow,_ uga} by (x0,x1) -> 100*x0+1*x1
Function _ syentu _ _ maps {2,3,4,5,6,7,8,9}x{1}x{10} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[in’gwi :: c1, -D], 1
[uga :: c2, -E, -S1], 10
[ :: =c3, cFin], λx.x
[ uga  :: =c2*, =c1, c2, -C, -S1], λxλy.'1X+10Y'(x,y)
[ kʉttow :: =cnix, =c1, c2*], λxλy.'1X+1Y'(x,y)
[ :: cnix], 0
[ uga :: =c1, +B, c2, -C, -S1], λx.'10X'(x)
[ :: =c1, c2, -C], λx.x
[mowga :: c1, -B], 2
[máykʉnʉ :: c1, -B], 3
[ma’keywa :: c1, -B], 4
[asewa :: c1, -B], 5
[chin̈wa :: c1, -B], 6
[koga :: c1, -B], 7
[abewa :: c1, -B], 8
[ikawa :: c1, -B], 9
[syentu :: c3], 100
[syentu  :: =c3C, c3], λx.'1X+100'(x)
[ :: =c2, +C, c3C], λx.x
[syentu  :: =c3*, c3], λx.'1X+110'(x)
[  :: =c3**E, =c3**D, c3*], λxλy.'0X+0Y'(x,y)
[ syentu :: =c1, +B, c3], λx.'100X'(x)
[ syentu  :: =c3C, =c3B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +B, c3B], λx.x
[ syentu  :: =c3**, =c3B, c3], λxλy.'1X+100Y'(x,y)
[  :: =c3**E, =c3**D, c3**], λxλy.'1X+0Y'(x,y)
[ :: =c1, +D, c3**D], λx.x
[ :: =c2, +E, c3**E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x


Learning Kalina
Learned 400 words in Kalina and structured them in 14 functions.
It took 24 samples to learn those.
Those are:
òwin is 1
oko is 2
oruwa is 3
okupàen is 4
ainatone is 5
Function _-tòima maps {1,2,3,4} by x -> 1*x+5
ainapatoro is 10
Function ainapatoro itùponaka _ maps {1,2,3,4,_-tòima} by x -> 1*x+10
atonèpu is 15
Function _-karìna maps {1,2,3,4,5,_-tòima,10,15} by x -> 20*x+0
Function _-karìna itùponaka _ maps {1,2,3,4,5,_-tòima,10,15}x{1,2,3,4,5,_-tòima,10,ainapatoro itùponaka _,15} by (x0,x1) -> 20*x0+1*x1
Function _-itùponaka-_-karìna maps {10,15}x{1,2,3,4} by (x0,x1) -> 20*x0+20*x1
Function _-itùponaka-_-karìna itùponaka _ maps {10,15}x{1,2,3,4}x{1,2,3,4,5,_-tòima,10,ainapatoro itùponaka _,15} by (x0,x1,x2) -> 20*x0+20*x1+1*x2
karìna-karìna is 400

MG:
[ :: =c4, cFin], λx.x
[ainapatoro :: c3, -E, -C, -D, -S1], 10
[atonèpu :: c3, -E, -C, -D, -S1], 15
[ :: =c1, c3, -C], λx.x
[òwin :: c1], 1
[oko :: c1], 2
[oruwa :: c1], 3
[okupàen :: c1], 4
[ :: =c2, +C1, c3, -C], λx.x
[ainatone :: c2, -C1, -D1, -S2], 5
[-tòima :: =cnix, =c1, c2, -C1, -B, -D1, -S2], λxλy.'1X+1Y+5'(x,y)
[ :: cnix], 0
[ :: =c1, c2, -B], λx.x
[ainapatoro itùponaka  :: =c3B, c3, -D, -S1], λx.'1X+10'(x)
[ :: =c2, +B, c3B], λx.x
[ :: =c1, c3, -D], λx.x
[ :: =c2, +D1, c3, -D], λx.x
[-karìna :: =c3, +C, c4], λx.'20X'(x)
[-karìna itùponaka  :: =c4**D, =c4C, c4], λxλy.'1X+20Y'(x,y)
[ :: =c3, +C, c4C], λx.x
[-itùponaka- :: =c4*, =c4E, c4], λxλy.'1X+20Y'(x,y)
[ :: =c3, +E, c4E], λx.x
[-karìna :: =cnix, =c1, c4*], λxλy.'1X+20Y'(x,y)
[-karìna itùponaka  :: =c4**D, =c1, c4**], λxλy.'1X+20Y'(x,y)
[ :: =c3, +D, c4**D], λx.x
[karìna-karìna :: c4], 400
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +C, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C1, c2], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c3, +C, +D, +S1, c3, -C], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c2, +C1, +D1, +S2, c2, -C1], λx.x
[ :: =c2, +C1, +B, +D1, +S2, c2, -C1], λx.x
[ :: =c2, +B, +D1, +S2, c2, -B], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x
[ :: =c3, +E, +C, +D, +S1, c3, -E], λx.x


Learning Votic

Learned 999 words in Votic and structured them in 31 functions.
It took 45 samples to learn those.
Those are:
ühs is 1
kahs is 2
ke̮m is 3
nellä is 4
vīsi is 5
kūsi is 6
seitsē is 7
kahe̮sā is 8
ühesǟ is 9
tšümmē is 10
Function _te̮·šše̮me̮tta maps {1,2,3,4,7,8,9} by x -> 1*x+10
vīste̮·šše̮me̮tta is 15
kūste̮·šše̮me̮tta is 16
kahš́tš́ümmettä is 20
Function kahš́tš́ümmettä _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _tšümmettä maps {3,4,7,8,9} by x -> 10*x+0
Function _tšümmettä _ maps {3,4,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
vīš́tš́ümmettä is 50
Function vīš́tš́ümmettä _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
kūš́tš́ümmettä is 60
Function kūš́tš́ümmettä _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sata is 100
Function sata_ maps {1,2,3,4,5,6,7,8,9,10,_te̮·šše̮me̮tta,15,16,20,kahš́tš́ümmettä _,_tšümmettä,_tšümmettä _,50,vīš́tš́ümmettä _,60,kūš́tš́ümmettä _} by x -> 1*x+100
Function _atā maps {2} by x -> 0*x+200
Function _atā_ maps {2}x{1,2,3,4,5,6,7,8,9,10,_te̮·šše̮me̮tta,15,16,20,kahš́tš́ümmettä _,_tšümmettä,_tšümmettä _,50,vīš́tš́ümmettä _,60,kūš́tš́ümmettä _} by (x0,x1) -> 80*x0+1*x1+40
Function _satā maps {3,4,7,8,9} by x -> 100*x+0
Function _satā_ maps {3,4,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_te̮·šše̮me̮tta,15,16,20,kahš́tš́ümmettä _,_tšümmettä,_tšümmettä _,50,vīš́tš́ümmettä _,60,kūš́tš́ümmettä _} by (x0,x1) -> 100*x0+1*x1
vīssatā is 500
Function vīssatā_ maps {1,2,3,4,5,6,7,8,9,10,_te̮·šše̮me̮tta,15,16,20,kahš́tš́ümmettä _,_tšümmettä,_tšümmettä _,50,vīš́tš́ümmettä _,60,kūš́tš́ümmettä _} by x -> 1*x+500
kūssatā is 600
Function kūssatā_ maps {1,2,3,4,5,6,7,8,9,10,_te̮·šše̮me̮tta,15,16,20,kahš́tš́ümmettä _,_tšümmettä,_tšümmettä _,50,vīš́tš́ümmettä _,60,kūš́tš́ümmettä _} by x -> 1*x+600

MG:
[kahs :: c1, -E, -A], 2
[ :: =c3, cFin], λx.x
[ke̮m :: c1, -C, -A], 3
[nellä :: c1, -C, -A], 4
[seitsē :: c1, -C, -A], 7
[kahe̮sā :: c1, -C, -A], 8
[ühesǟ :: c1, -C, -A], 9
[ühs :: c1, -A], 1
[vīsi :: c1], 5
[kūsi :: c1], 6
[tšümmē :: c2, -S1], 10
[te̮·šše̮me̮tta :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[vīste̮·šše̮me̮tta :: c2, -S1], 15
[kūste̮·šše̮me̮tta :: c2, -S1], 16
[kahš́tš́ümmettä :: c2, -S1], 20
[kahš́tš́ümmettä  :: =c1, c2, -S1], λx.'1X+20'(x)
[tšümmettä :: =c1, +C, c2, -S1], λx.'10X'(x)
[tšümmettä  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[vīš́tš́ümmettä :: c2, -S1], 50
[vīš́tš́ümmettä  :: =c1, c2, -S1], λx.'1X+50'(x)
[kūš́tš́ümmettä :: c2, -S1], 60
[kūš́tš́ümmettä  :: =c1, c2, -S1], λx.'1X+60'(x)
[ :: =c1, c2], λx.x
[sata :: c3], 100
[sata :: =c2, c3], λx.'1X+100'(x)
[atā :: =c1, +E, c3], λx.'0X+200'(x)
[atā :: =c2, =c3E, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +E, c3E], λx.x
[satā :: =c1, +C, c3], λx.'100X'(x)
[satā :: =c2, =c2C, c3], λxλy.'1X+100Y'(x,y)
[vīssatā :: c3], 500
[vīssatā :: =c2, c3], λx.'1X+500'(x)
[kūssatā :: c3], 600
[kūssatā :: =c2, c3], λx.'1X+600'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Lower-Sorbian
Learned 999 words in Lower-Sorbian and structured them in 35 functions.
It took 130 samples to learn those.
Those are:
jaden is 1
dwa is 2
tśi is 3
styri is 4
pěś is 5
šesć is 6
sedym is 7
wósym is 8
źewjeś is 9
źaseś is 10
jadnasćo is 11
Function _nasćo maps {2,3,5,7,9} by x -> 1*x+10
styrnasćo is 14
šesnasćo is 16
wosymnasćo is 18
Function _źasća maps {2,3} by x -> 10*x+0
Function _a_źasća maps {1,3,4,5,6,7,8,9}x{2,3} by (x0,x1) -> 1*x0+10*x1
Function __źasća maps {2}x{2,3} by (x0,x1) -> 1*x0+10*x1
styrźasća is 40
Function _styrźasća maps {2} by x -> 0*x+42
Function _astyrźasća maps {1,3,4,5,6,7,8,9} by x -> 1*x+40
Function _źaset maps {5,6,7,9} by x -> 10*x+0
Function _a_źaset maps {1,3,4,5,6,7,8,9}x{5,6,7,9} by (x0,x1) -> 1*x0+10*x1
Function __źaset maps {2}x{5,6,7,9} by (x0,x1) -> 1*x0+10*x1
wosymźaset is 80
Function _wosymźaset maps {2} by x -> 0*x+82
Function _awosymźaset maps {1,3,4,5,6,7,8,9} by x -> 1*x+80
sto is 100
Function sto a _ maps {1,2,3,4,5,6,7,8,9,10,11,_nasćo,14,16,18,_źasća,_a_źasća,__źasća,40,_styrźasća,_astyrźasća,_źaset,_a_źaset,__źaset,80,_wosymźaset,_awosymźaset} by x -> 1*x+100
dwěsćě is 200
Function dwěsćě a _ maps {1,2,3,4,5,6,7,8,9,10,11,_nasćo,14,16,18,_źasća,_a_źasća,__źasća,40,_styrźasća,_astyrźasća,_źaset,_a_źaset,__źaset,80,_wosymźaset,_awosymźaset} by x -> 1*x+200
Function _sta maps {3,4} by x -> 100*x+0
Function _ sto a _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_nasćo,14,16,18,40,80,_źasća,_a_źasća,__źasća,_astyrźasća,_styrźasća,_źaset,_a_źaset,__źaset,_awosymźaset,_wosymźaset} by (x0,x1) -> 100*x0+1*x1
Function _stow maps {5,6,7,9} by x -> 100*x+0
Function wosym_w maps {100} by x -> 0*x+800

MG:
[dwa :: c1, -D, -B, -A], 2
[sto :: c2, -J, -S1], 100
[ :: =c3, cFin], λx.x
[pěś :: c1, -E, -C, -H, -A], 5
[šesć :: c1, -E, -C, -H], 6
[sedym :: c1, -E, -C, -H, -A], 7
[źewjeś :: c1, -E, -C, -H, -A], 9
[jaden :: c1, -C], 1
[tśi :: c1, -C, -H, -B, -G, -A], 3
[styri :: c1, -C, -H, -G], 4
[wósym :: c1, -C, -H], 8
[źaseś :: c2, -I, -S1, -F], 10
[jadnasćo :: c2, -I, -S1, -F], 11
[nasćo :: =c1, +A, c2, -I, -S1, -F], λx.'1X+10'(x)
[styrnasćo :: c2, -I, -S1, -F], 14
[šesnasćo :: c2, -I, -S1, -F], 16
[wosymnasćo :: c2, -I, -S1, -F], 18
[źasća :: =c1, +B, c2, -I, -S1, -F], λx.'10X'(x)
[a :: =c2*, =c2C, c2, -I, -S1, -F], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[źasća :: =c1, +B, c2*], λx.'10X'(x)
[ :: =c2**, =c2D, c2, -I, -S1, -F], λxλy.'1X+1Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[źasća :: =c1, +B, c2**], λx.'10X'(x)
[styrźasća :: c2, -I, -S1, -F], 40
[styrźasća :: =c1, +D, c2, -I, -S1, -F], λx.'0X+42'(x)
[astyrźasća :: =c1, +C, c2, -I, -S1, -F], λx.'1X+40'(x)
[źaset :: =c1, +E, c2, -I, -S1, -F], λx.'10X'(x)
[a :: =c2***, =c2C, c2, -I, -S1, -F], λxλy.'1X+1Y'(x,y)
[źaset :: =c1, +E, c2***], λx.'10X'(x)
[ :: =c2****, =c2D, c2, -I, -S1, -F], λxλy.'1X+1Y'(x,y)
[źaset :: =c1, +E, c2****], λx.'10X'(x)
[wosymźaset :: c2, -I, -S1, -F], 80
[wosymźaset :: =c1, +D, c2, -I, -S1, -F], λx.'0X+82'(x)
[awosymźaset :: =c1, +C, c2, -I, -S1, -F], λx.'1X+80'(x)
[ :: =c1, c2, -I], λx.x
[sto a  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[dwěsćě :: c3], 200
[dwěsćě a  :: =c3F, c3], λx.'1X+200'(x)
[sta :: =c1, +G, c3], λx.'100X'(x)
[ sto a  :: =c3I, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c2, +I, c3I], λx.x
[stow :: =c1, +E, c3], λx.'100X'(x)
[wosym :: =c3*, c3], λx.'1X+800'(x)
[w :: =c2, +J, c3*], λx.'0X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +B, +G, +A, c1, -B], λx.x
[ :: =c1, +D, +B, +A, c1, -D], λx.x
[ :: =c1, +H, +A, c1, -H], λx.x
[ :: =c1, +C, +H, +G, c1, -C], λx.x
[ :: =c1, +E, +C, +H, +A, c1, -E], λx.x
[ :: =c1, +H, +B, +G, +A, c1, -H], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +H, +G, c1, -H], λx.x
[ :: =c2, +I, +S1, +F, c2, -I], λx.x
[ :: =c1, +C, +H, c1, -C], λx.x
[ :: =c1, +E, +C, +H, c1, -E], λx.x
[ :: =c1, +C, +H, +A, c1, -C], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c1, +C, +H, +B, +G, +A, c1, -C], λx.x
[ :: =c2, +J, +S1, c2, -J], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Hungarian
Learned 999 words in Hungarian and structured them in 27 functions.
It took 41 samples to learn those.
Those are:
egy is 1
kettő is 2
három is 3
négy is 4
öt is 5
hat is 6
hét is 7
nyolc is 8
kilenc is 9
tíz is 10
Function tizen_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
tizenöt is 15
húsz is 20
Function huszon_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
harminc is 30
Function harminc_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function n_ven maps {1} by x -> 0*x+40
Function n_ven_ maps {1}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 20*x0+1*x1+20
hetven is 70
Function hetven_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
Function _van maps {6,8} by x -> 10*x+0
Function _van_ maps {6,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ven maps {5,9} by x -> 10*x+0
Function _ven_ maps {5,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
száz is 100
Function _száz_ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,tizen_,15,20,huszon_,30,harminc_,n_ven,n_ven_,70,hetven_,_van,_van_,_ven,_ven_} by (x0,x1) -> 100*x0+1*x1
Function _száz maps {2,3,4,5,6,7,8,9} by x -> 100*x+0

MG:
[egy :: c1, -C, -A], 1
[ :: =c3, cFin], λx.x
[öt :: c1, -E, -G], 5
[kilenc :: c1, -E, -G, -A], 9
[kettő :: c1, -G, -A], 2
[három :: c1, -G, -A], 3
[négy :: c1, -G, -A], 4
[hat :: c1, -G, -A, -D], 6
[hét :: c1, -G, -A], 7
[nyolc :: c1, -G, -A, -D], 8
[száz :: c3], 100
[száz :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[száz :: =c1, +G, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[tíz :: c2, -S1], 10
[tizen :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[tizenöt :: c2, -S1], 15
[húsz :: c2, -S1], 20
[huszon :: =c1, c2, -S1], λx.'1X+20'(x)
[harminc :: c2, -S1], 30
[harminc :: =c1, c2, -S1], λx.'1X+30'(x)
[n :: =c2*, c2, -S1, -S1], λx.'1X+40'(x)
[ven :: =c1, +C, c2*], λx.'0X'(x)
[ven :: =c1, =c2****C, c2**], λxλy.'1X+20Y'(x,y)
[hetven :: c2, -S1], 70
[hetven :: =c1, c2, -S1], λx.'1X+70'(x)
[van :: =c1, +D, c2, -S1], λx.'10X'(x)
[van :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[ven :: =c1, +E, c2, -S1], λx.'10X'(x)
[ven :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ven :: =c1, +C, c2***], λx.'0X'(x)
[ven :: =c1, =c2****C, c2****], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c2****C], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, +A, c1, -E], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Arberesh

Learned 20 words in Arberesh and structured them in 14 functions.
It took 15 samples to learn those.
Those are:
një is 1
di is 2
tre is 3
kartë is 4
pesë is 5
gjashtë is 6
shtatë is 7
tetë is 8
nëntë is 9
dhjetë is 10
Function _mbëdhetë maps {2} by x -> 0*x+12
trimbëdhjetë is 13
Function _mbëdhjetë maps {1,4,5,6,7,8,9} by x -> 1*x+10
Function _zet maps {1} by x -> 0*x+20

MG:
[një :: c1, -C, -B], 1
[di :: c1, -A], 2
[ :: =c2, cFin], λx.x
[kartë :: c1, -B], 4
[pesë :: c1, -B], 5
[gjashtë :: c1, -B], 6
[shtatë :: c1, -B], 7
[tetë :: c1, -B], 8
[nëntë :: c1, -B], 9
[dhjetë :: c2], 10
[mbëdhetë :: =c1, +A, c2], λx.'0X+12'(x)
[trimbëdhjetë :: c2], 13
[mbëdhjetë :: =c1, +B, c2], λx.'1X+10'(x)
[zet :: =c1, +C, c2], λx.'0X+20'(x)
[ :: =c1, c2], λx.x
[tre :: c1], 3
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Picard
Learned 100 words in Picard and structured them in 39 functions.
It took 50 samples to learn those.
Those are:
un is 1
deus is 2
troés is 3
quate is 4
chonc is 5
sis is 6
sèt is 7
ût is 8
nué is 9
dich is 10
onze is 11
dousse is 12
trèsse is 13
quatore is 14
tchinse is 15
sèse is 16
Function dis-_ maps {7,8,9} by x -> 1*x+10
vint is 20
Function vint-et-_ maps {1} by x -> 0*x+21
Function vint-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente-et-_ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante-et-_ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
chonquante is 50
Function chonquante-et-_ maps {1} by x -> 0*x+51
Function chonquante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _sante maps {6} by x -> 0*x+60
Function _sante-et-_ maps {6}x{1} by (x0,x1) -> 0*x0+0*x1+61
Function _sante-_ maps {6}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ante maps {7,8} by x -> 10*x+0
Function _ante-et-_ maps {7,8}x{1} by (x0,x1) -> 10*x0+0*x1+1
Function _ante-_ maps {7,8}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
novante is 90
Function novante-et-_ maps {1} by x -> 0*x+91
Function novante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
chent is 100

MG:
[un :: c1, -B], 1
[sis :: c1, -D, -C], 6
[ :: =c2, cFin], λx.x
[sèt :: c1, -E, -C, -A], 7
[ût :: c1, -E, -C, -A], 8
[deus :: c1, -C], 2
[troés :: c1, -C], 3
[quate :: c1, -C], 4
[chonc :: c1, -C], 5
[nué :: c1, -C, -A], 9
[dich :: c2], 10
[onze :: c2], 11
[dousse :: c2], 12
[trèsse :: c2], 13
[quatore :: c2], 14
[tchinse :: c2], 15
[sèse :: c2], 16
[dis- :: =c2A, c2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vint :: c2], 20
[vint-et- :: =c2B, c2], λx.'0X+21'(x)
[ :: =c1, +B, c2B], λx.x
[vint- :: =c2C, c2], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[trente :: c2], 30
[trente-et- :: =c2B, c2], λx.'0X+31'(x)
[trente- :: =c2C, c2], λx.'1X+30'(x)
[quarante :: c2], 40
[quarante-et- :: =c2B, c2], λx.'0X+41'(x)
[quarante- :: =c2C, c2], λx.'1X+40'(x)
[chonquante :: c2], 50
[chonquante-et- :: =c2B, c2], λx.'0X+51'(x)
[chonquante- :: =c2C, c2], λx.'1X+50'(x)
[sante :: =c1, +D, c2], λx.'0X+60'(x)
[sante-et- :: =c2B, =c2D, c2], λxλy.'0X+0Y+61'(x,y)
[ :: =c1, +D, c2D], λx.x
[sante- :: =c2C, =c2D, c2], λxλy.'1X+10Y'(x,y)
[ante :: =c1, +E, c2], λx.'10X'(x)
[ante-et- :: =c2B, =c2E, c2], λxλy.'0X+10Y+1'(x,y)
[ :: =c1, +E, c2E], λx.x
[ante- :: =c2C, =c2E, c2], λxλy.'1X+10Y'(x,y)
[novante :: c2], 90
[novante-et- :: =c2B, c2], λx.'0X+91'(x)
[novante- :: =c2C, c2], λx.'1X+90'(x)
[chent :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +D, +C, c1, -D], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Corsican
Learned 999 words in Corsican and structured them in 56 functions.
It took 82 samples to learn those.
Those are:
unu is 1
dui is 2
trè is 3
quattru is 4
cinque is 5
séi is 6
sétte is 7
óttu is 8
nóve is 9
déce is 10
òndeci is 11
dòdeci is 12
Function _deci maps {3} by x -> 0*x+13
quattòrdeci is 14
quindeci is 15
sèdeci is 16
Function dices_ maps {7} by x -> 0*x+17
Function dici_ maps {8} by x -> 0*x+18
Function dicen_ maps {9} by x -> 0*x+19
vinti is 20
Function vinti_ maps {2,3,4,5,6,7,9} by x -> 1*x+20
Function vint_ maps {1,8} by x -> 1*x+20
Function _nta maps {3} by x -> 0*x+30
Function _nta_ maps {3}x{2,3,4,5,6,7,9} by (x0,x1) -> 9*x0+1*x1+3
Function _nt_ maps {3}x{1,8} by (x0,x1) -> 9*x0+1*x1+3
quaranta is 40
Function quarant_ maps {1} by x -> 0*x+41
Function quaranta_ maps {2,3,4,5,6,7,9} by x -> 1*x+40
quarantóttu is 48
cinquanta is 50
Function cinquanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+50
Function cinquant_ maps {1,8} by x -> 1*x+50
sessanta is 60
Function sessanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+60
Function sessant_ maps {1,8} by x -> 1*x+60
settanta is 70
Function settanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+70
Function settant_ maps {1,8} by x -> 1*x+70
ottanta is 80
Function ottanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+80
Function ottant_ maps {1,8} by x -> 1*x+80
novanta is 90
Function novanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+90
Function novant_ maps {1,8} by x -> 1*x+90
cèntu is 100
Function cèntu è _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_deci,14,15,16,dices_,dici_,dicen_} by x -> 1*x+100
Function cèntu_ maps {20,vint_,vinti_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,80,ottanta_,ottant_,90,novanta_,novant_} by x -> 1*x+100
Function _ecèntu maps {2} by x -> 0*x+200
Function _ecèntu è _ maps {2}x{1,2,3,4,5,6,7,8,9,10,11,12,_deci,14,15,16,dices_,dici_,dicen_} by (x0,x1) -> 80*x0+1*x1+40
Function _ecèntu _ maps {2}x{20,vint_,vinti_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,80,ottanta_,ottant_,90,novanta_,novant_} by (x0,x1) -> 80*x0+1*x1+40
trecèntu is 300
Function trecèntu è _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_deci,14,15,16,dices_,dici_,dicen_} by x -> 1*x+300
Function trecèntu _ maps {20,vint_,vinti_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,80,ottanta_,ottant_,90,novanta_,novant_} by x -> 1*x+300
Function _cèntu maps {4,5,6,7,8,9} by x -> 100*x+0
Function _cèntu è _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_deci,14,15,16,dices_,dici_,dicen_} by (x0,x1) -> 100*x0+1*x1
Function _cèntu _ maps {4,5,6,7,8,9}x{20,vint_,vinti_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,80,ottanta_,ottant_,90,novanta_,novant_} by (x0,x1) -> 100*x0+1*x1

MG:
[unu :: c1, -G, -F], 1
[dui :: c1, -J, -E], 2
[trè :: c1, -A, -E], 3
[sétte :: c1, -B, -E, -K], 7
[óttu :: c1, -C, -K, -F], 8
[nóve :: c1, -D, -E, -K], 9
[ :: =c3, cFin], λx.x
[quattru :: c1, -E, -K], 4
[cinque :: c1, -E, -K], 5
[séi :: c1, -E, -K], 6
[déce :: c2, -H, -S1], 10
[òndeci :: c2, -H, -S1], 11
[dòdeci :: c2, -H, -S1], 12
[deci :: =c1, +A, c2, -H, -S1], λx.'0X+13'(x)
[quattòrdeci :: c2, -H, -S1], 14
[quindeci :: c2, -H, -S1], 15
[sèdeci :: c2, -H, -S1], 16
[dices :: =c2B, c2, -H, -S1], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[dici :: =c2C, c2, -H, -S1], λx.'0X+18'(x)
[ :: =c1, +C, c2C], λx.x
[dicen :: =c2D, c2, -H, -S1], λx.'0X+19'(x)
[ :: =c1, +D, c2D], λx.x
[ :: =c1, c2, -H], λx.x
[vinti :: c2, -I, -S1], 20
[vinti :: =c2E, c2, -I, -S1], λx.'1X+20'(x)
[ :: =c1, +E, c2E], λx.x
[vint :: =c2F, c2, -I, -S1], λx.'1X+20'(x)
[ :: =c1, +F, c2F], λx.x
[nta :: =c1, +A, c2, -I, -S1], λx.'0X+30'(x)
[nta :: =c2E, =c2A, c2, -I, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +A, c2A], λx.x
[nt :: =c2F, =c2A, c2, -I, -S1], λxλy.'1X+9Y+3'(x,y)
[quaranta :: c2, -I, -S1], 40
[quarant :: =c2G, c2, -I, -S1], λx.'0X+41'(x)
[ :: =c1, +G, c2G], λx.x
[quaranta :: =c2E, c2, -I, -S1], λx.'1X+40'(x)
[quarantóttu :: c2, -I, -S1], 48
[cinquanta :: c2, -I, -S1], 50
[cinquanta :: =c2E, c2, -I, -S1], λx.'1X+50'(x)
[cinquant :: =c2F, c2, -I, -S1], λx.'1X+50'(x)
[sessanta :: c2, -I, -S1], 60
[sessanta :: =c2E, c2, -I, -S1], λx.'1X+60'(x)
[sessant :: =c2F, c2, -I, -S1], λx.'1X+60'(x)
[settanta :: c2, -I, -S1], 70
[settanta :: =c2E, c2, -I, -S1], λx.'1X+70'(x)
[settant :: =c2F, c2, -I, -S1], λx.'1X+70'(x)
[ottanta :: c2, -I, -S1], 80
[ottanta :: =c2E, c2, -I, -S1], λx.'1X+80'(x)
[ottant :: =c2F, c2, -I, -S1], λx.'1X+80'(x)
[novanta :: c2, -I, -S1], 90
[novanta :: =c2E, c2, -I, -S1], λx.'1X+90'(x)
[novant :: =c2F, c2, -I, -S1], λx.'1X+90'(x)
[cèntu :: c3], 100
[cèntu è  :: =c3H, c3], λx.'1X+100'(x)
[ :: =c2, +H, c3H], λx.x
[cèntu :: =c3I, c3], λx.'1X+100'(x)
[ :: =c2, +I, c3I], λx.x
[ecèntu :: =c1, +J, c3], λx.'0X+200'(x)
[ecèntu è  :: =c3H, =c3J, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +J, c3J], λx.x
[ecèntu  :: =c3I, =c3J, c3], λxλy.'1X+80Y+40'(x,y)
[trecèntu :: c3], 300
[trecèntu è  :: =c3H, c3], λx.'1X+300'(x)
[trecèntu  :: =c3I, c3], λx.'1X+300'(x)
[cèntu :: =c1, +K, c3], λx.'100X'(x)
[cèntu è  :: =c3H, =c3K, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +K, c3K], λx.x
[cèntu  :: =c3I, =c3K, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +E, c1, -A], λx.x
[ :: =c1, +J, +E, c1, -J], λx.x
[ :: =c1, +D, +E, +K, c1, -D], λx.x
[ :: =c1, +B, +E, +K, c1, -B], λx.x
[ :: =c1, +C, +K, +F, c1, -C], λx.x
[ :: =c1, +E, +K, c1, -E], λx.x
[ :: =c1, +G, +F, c1, -G], λx.x
[ :: =c2, +H, +S1, c2, -H], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +K, +F, c1, -K], λx.x


Learning Finnish

Learned 999 words in Finnish and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
yksi is 1
kaksi is 2
kolme is 3
neljä is 4
viisi is 5
kuusi is 6
seitsemän is 7
kahdeksan is 8
yhdeksän is 9
kymmenen is 10
Function _toista maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kymmentä maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kymmentä_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sata is 100
Function sata_ maps {1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by x -> 1*x+100
Function _sataa maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sataa_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kymmenen :: c2, -S1], 10
[toista :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[kymmentä :: =c1, +B, c2, -S1], λx.'10X'(x)
[kymmentä :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[yksi :: c1], 1
[kaksi :: c1, -B], 2
[kolme :: c1, -B], 3
[neljä :: c1, -B], 4
[viisi :: c1, -B], 5
[kuusi :: c1, -B], 6
[seitsemän :: c1, -B], 7
[kahdeksan :: c1, -B], 8
[yhdeksän :: c1, -B], 9
[sata :: c3], 100
[sata :: =c2, c3], λx.'1X+100'(x)
[sataa :: =c1, +B, c3], λx.'100X'(x)
[sataa :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Kituba
Learned 999 words in Kituba and structured them in 15 functions.
It took 22 samples to learn those.
Those are:
mósì is 1
zóólè is 2
tátù is 3
yíyà is 4
táánù is 5
sàmbánù is 6
nsàmbwáádì is 7
náánà is 8
yívwà is 9
kúúmì is 10
Function kúúmì nà _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function màkúúmì _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function màkúúmì _ nà _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function nkámà _ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function nkámà _ nà _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,kúúmì nà _,màkúúmì _,màkúúmì _ nà _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kúúmì :: c2, -S1], 10
[kúúmì nà  :: =c1, c2, -S1], λx.'1X+10'(x)
[màkúúmì  :: =c2**B, c2, -S1], λx.'10X'(x)
[màkúúmì  :: =c2*, c2, -S1], λx.x
[ nà  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[mósì :: c1], 1
[zóólè :: c1, -B], 2
[tátù :: c1, -B], 3
[yíyà :: c1, -B], 4
[táánù :: c1, -B], 5
[sàmbánù :: c1, -B], 6
[nsàmbwáádì :: c1, -B], 7
[náánà :: c1, -B], 8
[yívwà :: c1, -B], 9
[nkámà  :: =c1, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ nà  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Soga
Learned 999 words in Soga and structured them in 51 functions.
It took 158 samples to learn those.
Those are:
ndala is 1
ibiri is 2
isatu is 3
inha is 4
itaanu is 5
mukaaga is 6
musanvu is 7
munaana is 8
mwenda is 9
ikumi is 10
ikumi na ndhala is 11
Function ikumi na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
abiri is 20
abiri na ndhala is 21
Function abiri na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
asatu is 30
asatu na ndhala is 31
Function asatu na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
anha is 40
ana na ndhala is 41
Function ana na _ maps {2,3,4,5,6,7,9} by x -> 1*x+40
ana na munaana is 48
ataanho is 50
ataanho na ndhala is 51
Function ataanho na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
nkaaga is 60
nkaaga na ndhala is 61
Function nkaaga na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
nsanvu is 70
nsanvu na ndhala is 71
Function nsanvu na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
kinaanha is 80
kinaana na ndhala is 81
Function kinaana na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
kyenda is 90
kyenda na ndhala is 91
Function kyenda na _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
Function k_ maps {10} by x -> 0*x+100
Function k_ _ maps {10}x{1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by (x0,x1) -> 10*x0+1*x1
Function b_ maps {2,3,5} by x -> 100*x+0
Function b_ _ maps {2,3,5}x{1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by (x0,x1) -> 100*x0+1*x1
bina is 400
Function bina _ maps {1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by x -> 1*x+400
lukaaga is 600
Function lukaaga _ maps {1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by x -> 1*x+600
lusanvu is 700
Function lusanvu _ maps {1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by x -> 1*x+700
lunaana is 800
Function lunaana _ maps {1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by x -> 1*x+800
lwenda is 900
Function lwenda _ maps {1,2,3,4,5,6,7,8,9,10,11,ikumi na _,20,21,abiri na _,30,31,asatu na _,40,41,ana na _,48,50,51,ataanho na _,60,61,nkaaga na _,70,71,nsanvu na _,80,81,kinaana na _,90,91,kyenda na _} by x -> 1*x+900

MG:
[ikumi :: c2, -C, -S1], 10
[ :: =c3, cFin], λx.x
[ibiri :: c1, -E, -B, -A], 2
[isatu :: c1, -E, -B, -A], 3
[itaanu :: c1, -E, -B, -A], 5
[inha :: c1, -B, -A], 4
[mukaaga :: c1, -B, -A], 6
[musanvu :: c1, -B, -A], 7
[mwenda :: c1, -B, -A], 9
[munaana :: c1, -A], 8
[ikumi na ndhala :: c2, -S1], 11
[ikumi na  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[abiri :: c2, -S1], 20
[abiri na ndhala :: c2, -S1], 21
[abiri na  :: =c2A, c2, -S1], λx.'1X+20'(x)
[asatu :: c2, -S1], 30
[asatu na ndhala :: c2, -S1], 31
[asatu na  :: =c2A, c2, -S1], λx.'1X+30'(x)
[anha :: c2, -S1], 40
[ana na ndhala :: c2, -S1], 41
[ana na  :: =c2B, c2, -S1], λx.'1X+40'(x)
[ :: =c1, +B, c2B], λx.x
[ana na munaana :: c2, -S1], 48
[ataanho :: c2, -S1], 50
[ataanho na ndhala :: c2, -S1], 51
[ataanho na  :: =c2A, c2, -S1], λx.'1X+50'(x)
[nkaaga :: c2, -S1], 60
[nkaaga na ndhala :: c2, -S1], 61
[nkaaga na  :: =c2A, c2, -S1], λx.'1X+60'(x)
[nsanvu :: c2, -S1], 70
[nsanvu na ndhala :: c2, -S1], 71
[nsanvu na  :: =c2A, c2, -S1], λx.'1X+70'(x)
[kinaanha :: c2, -S1], 80
[kinaana na ndhala :: c2, -S1], 81
[kinaana na  :: =c2A, c2, -S1], λx.'1X+80'(x)
[kyenda :: c2, -S1], 90
[kyenda na ndhala :: c2, -S1], 91
[kyenda na  :: =c2A, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ndala :: c1], 1
[k :: =c3*C, c3], λx.'0X+100'(x)
[k :: =c3*, c3], λx.x
[  :: =c2, =c3*C, c3*], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3*C], λx.x
[b :: =c3**E, c3], λx.'100X'(x)
[b :: =c3**, c3], λx.x
[  :: =c2, =c3**E, c3**], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3**E], λx.x
[bina :: c3], 400
[bina  :: =c2, c3], λx.'1X+400'(x)
[lukaaga :: c3], 600
[lukaaga  :: =c2, c3], λx.'1X+600'(x)
[lusanvu :: c3], 700
[lusanvu  :: =c2, c3], λx.'1X+700'(x)
[lunaana :: c3], 800
[lunaana  :: =c2, c3], λx.'1X+800'(x)
[lwenda :: c3], 900
[lwenda  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Acholi
Learned 999 words in Acholi and structured them in 16 functions.
It took 25 samples to learn those.
Those are:
acel is 1
aryo is 2
adek is 3
aŋwen is 4
abic is 5
abicel is 6
abiro is 7
aboro is 8
aboŋwen is 9
apar is 10
Function apar wiye _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function pyer_ wiye _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function pyer_ maps {2,3,4,5,7,8,9,6} by x -> 10*x+0
miya is 100
Function miya _ ki _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,apar wiye _,pyer_ wiye _,pyer_} by (x0,x1) -> 100*x0+1*x1
Function miya _ maps {2,3,4,5,7,8,9,6} by x -> 100*x+0

MG:
[ :: =c3, cFin], λx.x
[aryo :: c1, -C, -B], 2
[adek :: c1, -C, -B], 3
[aŋwen :: c1, -C, -B], 4
[abic :: c1, -C, -B], 5
[abicel :: c1, -C, -B], 6
[abiro :: c1, -C, -B], 7
[aboro :: c1, -C, -B], 8
[aboŋwen :: c1, -C, -B], 9
[acel :: c1], 1
[apar :: c2, -S1], 10
[apar wiye  :: =c1, c2, -S1], λx.'1X+10'(x)
[pyer :: =c2*, c2, -S1], λx.x
[ wiye  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[pyer :: =c2C, c2, -S1], λx.'10X'(x)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[miya :: c3], 100
[miya  :: =c3*, c3], λx.x
[ ki  :: =c2, =c1, c3*], λxλy.'1X+100Y'(x,y)
[miya  :: =c2C, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ wiye  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Garifuna

Learned 999 words in Garifuna and structured them in 42 functions.
It took 57 samples to learn those.
Those are:
aban is 1
biñá is 2
ürüwa is 3
gádürü is 4
seingü is 5
sisi is 6
sedü is 7
widü is 8
nefu is 9
dîsi is 10
ûnsu is 11
dûsu is 12
tareisi is 13
katorsu is 14
keinsi is 15
dîsisi is 16
Function dî_ maps {7} by x -> 0*x+17
Function dísi_ maps {8,9} by x -> 1*x+10
wein is 20
wein biama is 22
Function wein _ maps {1,3,4,5,6,7,8,9} by x -> 1*x+20
darandi is 30
darandi biama is 32
Function darandi _ maps {1,3,4,5,6,7,8,9} by x -> 1*x+30
biama wein is 40
biama wein biama is 42
Function biama wein _ maps {1,3,4,5,6,7,8,9} by x -> 1*x+40
dimí san is 50
dimí san biama is 52
Function dimí san _ maps {1,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ wein maps {3,4} by x -> 20*x+0
Function _ wein _ maps {3,4}x{1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dî_,dísi_} by (x0,x1) -> 20*x0+1*x1
Function _ wein biama maps {3,4} by x -> 20*x+2
san is 100
san biama is 102
Function san _ maps {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dî_,dísi_,20,22,wein _,30,32,darandi _,40,42,biama wein _,50,52,dimí san _,_ wein,_ wein _,_ wein biama} by x -> 1*x+100
biama san is 200
biama san biama is 202
Function biama san _ maps {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dî_,dísi_,20,22,wein _,30,32,darandi _,40,42,biama wein _,50,52,dimí san _,_ wein,_ wein _,_ wein biama} by x -> 1*x+200
Function _ san maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ san _ maps {3,4,5,6,7,8,9}x{1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dî_,dísi_,20,22,wein _,30,32,darandi _,40,42,biama wein _,50,52,dimí san _,_ wein,_ wein _,_ wein biama} by (x0,x1) -> 100*x0+1*x1
Function _ san biama maps {3,4,5,6,7,8,9} by x -> 100*x+2

MG:
[sedü :: c1, -A, -E0, -C, -G, -F0], 7
[ :: =c4, cFin], λx.x
[dîsi :: c2, -S2, -F1], 10
[ûnsu :: c2, -S2, -F1], 11
[dûsu :: c2, -S2, -F1], 12
[tareisi :: c2, -S2, -F1], 13
[katorsu :: c2, -S2, -F1], 14
[keinsi :: c2, -S2, -F1], 15
[dîsisi :: c2, -S2, -F1], 16
[dî :: =c2A, c2, -S2, -F1], λx.'0X+17'(x)
[ :: =c1, +A, c2A], λx.x
[dísi :: =c2B, c2, -S2, -F1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +E0, c2], λx.x
[aban :: c1, -E0, -C, -F0], 1
[ürüwa :: c1, -E0, -C, -G, -D, -F0], 3
[gádürü :: c1, -E0, -C, -G, -D, -F0], 4
[seingü :: c1, -E0, -C, -G, -F0], 5
[sisi :: c1, -E0, -C, -G, -F0], 6
[widü :: c1, -E0, -C, -G, -B, -F0], 8
[nefu :: c1, -E0, -C, -G, -B, -F0], 9
[san :: c4], 100
[san biama :: c4], 102
[san  :: =c3, c4], λx.'1X+100'(x)
[biama san :: c4], 200
[biama san biama :: c4], 202
[biama san  :: =c3, c4], λx.'1X+200'(x)
[ san :: =c1, +G, c4], λx.'100X'(x)
[ san  :: =c3, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[ san biama :: =c1, +G, c4], λx.'100X+2'(x)
[ :: =c1, c4], λx.x
[biñá :: c1], 2
[ :: =c3, +S1, c4], λx.x
[wein :: c3, -S1], 20
[wein biama :: c3, -S1], 22
[wein  :: =c3C, c3, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[darandi :: c3, -S1], 30
[darandi biama :: c3, -S1], 32
[darandi  :: =c3C, c3, -S1], λx.'1X+30'(x)
[biama wein :: c3, -S1], 40
[biama wein biama :: c3, -S1], 42
[biama wein  :: =c3C, c3, -S1], λx.'1X+40'(x)
[dimí san :: c3, -S1], 50
[dimí san biama :: c3, -S1], 52
[dimí san  :: =c3C, c3, -S1], λx.'1X+50'(x)
[ wein :: =c1, +D, c3, -S1], λx.'20X'(x)
[ wein  :: =c2, =c3D, c3, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ wein biama :: =c1, +D, c3, -S1], λx.'20X+2'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c3], λx.x
[ :: =c2, +F1, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +G, +D, +F0, c1, -G], λx.x
[ :: =c1, +C, +G, +B, +F0, c1, -C], λx.x
[ :: =c1, +G, +B, +F0, c1, -G], λx.x
[ :: =c1, +C, +G, +F0, c1, -C], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c1, +C, +G, +D, +F0, c1, -C], λx.x
[ :: =c1, +A, +E0, +C, +G, +F0, c1, -A], λx.x
[ :: =c1, +G, +F0, c1, -G], λx.x
[ :: =c1, +E0, +C, +F0, c1, -E0], λx.x
[ :: =c1, +E0, +C, +G, +D, +F0, c1, -E0], λx.x
[ :: =c1, +E0, +C, +G, +F0, c1, -E0], λx.x
[ :: =c1, +C, +F0, c1, -C], λx.x
[ :: =c1, +E0, +C, +G, +B, +F0, c1, -E0], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c1, +D, +F0, c1, -D], λx.x


Learning Baka
Learned 100 words in Baka and structured them in 16 functions.
It took 21 samples to learn those.
Those are:
bəlèŋ is 1
cew is 2
màkar is 3
wúfaɗ is 4
zlàm is 5
múku is 6
sisíri is 7
slalákúr is 8
holombo is 9
kru is 10
kru hə̀r bə̀lèŋ is 11
Function kru hə̀r _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function kókúr _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function kókúr _ hə̀r bə̀lèŋ maps {2,3,4,5,6,7,8,9} by x -> 10*x+1
Function kókúr _ hə̀r _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
dèŋ is 100

MG:
[ :: =c2, cFin], λx.x
[cew :: c1, -A], 2
[màkar :: c1, -A], 3
[wúfaɗ :: c1, -A], 4
[zlàm :: c1, -A], 5
[múku :: c1, -A], 6
[sisíri :: c1, -A], 7
[slalákúr :: c1, -A], 8
[holombo :: c1, -A], 9
[kru :: c2], 10
[kru hə̀r bə̀lèŋ :: c2], 11
[kru hə̀r  :: =c2**A, c2], λx.'1X+10'(x)
[kókúr  :: =c2**A, c2], λx.'10X'(x)
[kókúr  :: =c2*, c2], λx.'1X+1'(x)
[ hə̀r bə̀lèŋ :: =c1, +A, c2*], λx.'10X'(x)
[ hə̀r  :: =c2**A, =c2**A, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2**A], λx.x
[dèŋ :: c2], 100
[ :: =c1, c2], λx.x
[bəlèŋ :: c1], 1
[ :: =c1, +A, c1], λx.x


Learning Lachixio-Zapotec
Learned 999 words in Lachixio-Zapotec and structured them in 26 functions.
It took 118 samples to learn those.
Those are:
tucu is 1
chiucu is 2
chuna is 3
tacu is 4
ayu’ is 5
xu’cu is 6
achi is 7
xunu is 8
quie’ is 9
chi’i is 10
Function chi’i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
ala is 20
Function ala _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function ala lli_ maps {10,chi’i _} by x -> 1*x+20
chiu’a is 40
Function chiu’a _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function chiu’a nu’ _ maps {10,chi’i _} by x -> 1*x+40
ayuna is 60
Function ayuna _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function ayuna nu’ _ maps {10,chi’i _} by x -> 1*x+60
Function _ nu’ ala maps {4} by x -> 0*x+80
Function _ nu’ ala _ maps {4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 19*x0+1*x1+4
Function _ _ lli chi’i maps {3}x{20} by (x0,x1) -> 0*x0+0*x1+90
Function _ _ lli chi’i _ maps {3}x{20}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 3*x0+4*x1+1*x2+1
Function _ _u maps {1,2,3,4,5,6,7,8,9}x{5} by (x0,x1) -> 100*x0+0*x1
Function _ _u _ maps {1,2,3,4,5,6,7,8,9}x{5}x{1,2,3,4,5,6,7,8,9,10,chi’i _,20,ala _,ala lli_,40,chiu’a _,chiu’a nu’ _,60,ayuna _,ayuna nu’ _,_ nu’ ala,_ nu’ ala _,_ _ lli chi’i,_ _ lli chi’i _} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[chuna :: c1, -D], 3
[tacu :: c1, -C], 4
[ayu’ :: c1, -F], 5
[ala :: c2, -E], 20
[ :: =c4, cFin], λx.x
[ala  :: =c1, c3, -S1], λx.'1X+20'(x)
[ala lli :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[chiu’a :: c3, -S1], 40
[chiu’a  :: =c1, c3, -S1], λx.'1X+40'(x)
[chiu’a nu’  :: =c3B, c3, -S1], λx.'1X+40'(x)
[ayuna :: c3, -S1], 60
[ayuna  :: =c1, c3, -S1], λx.'1X+60'(x)
[ayuna nu’  :: =c3B, c3, -S1], λx.'1X+60'(x)
[ nu’ ala :: =c1, +C, c3, -S1], λx.'0X+80'(x)
[ nu’ ala  :: =c1, =c3C, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +C, c3C], λx.x
[  :: =c3*, =c3D, c3, -S1, -S1], λxλy.'1X+0Y+90'(x,y)
[ :: =c1, +D, c3D], λx.x
[ lli chi’i :: =c2, +E, c3*], λx.'0X'(x)
[ lli chi’i  :: =c1, =c3****E, c3**], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3], λx.x
[tucu :: c1], 1
[chiucu :: c1], 2
[xu’cu :: c1], 6
[achi :: c1], 7
[xunu :: c1], 8
[quie’ :: c1], 9
[ :: =c2, c3], λx.x
[chi’i :: c2, -B], 10
[chi’i  :: =c1, c2, -B], λx.'1X+10'(x)
[  :: =c4*, =c1, c4], λxλy.'1X+100Y'(x,y)
[u :: =c1, +F, c4*], λx.'0X'(x)
[u  :: =c3, =c4**F, c4**], λxλy.'1X+0Y'(x,y)
[ :: =c1, +F, c4**F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ lli chi’i :: =c2, +E, c3***], λx.'0X'(x)
[ lli chi’i  :: =c1, =c3****E, c3****], λxλy.'1X+4Y'(x,y)
[ :: =c2, +E, c3****E], λx.x
[ :: =c2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x


Learning Veps
Learned 100 words in Veps and structured them in 21 functions.
It took 28 samples to learn those.
Those are:
üks’ is 1
kaks’ is 2
koume is 3
nelli is 4
viž is 5
kuz’ is 6
seiččeme is 7
kahesa is 8
ühesa is 9
kümne is 10
Function _toštkümne maps {1} by x -> 0*x+11
Function _toštküme maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
kuumeküme is 30
Function kuumeküme _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
nellküme is 40
Function nellküme _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _küme maps {2,5,7,8,9} by x -> 10*x+0
Function _küme _ maps {2,5,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
kuzküme is 60
Function kuzküme _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sada is 100

MG:
[üks’ :: c1, -A], 1
[ :: =c2, cFin], λx.x
[kaks’ :: c1, -B, -D], 2
[koume :: c1, -B], 3
[nelli :: c1, -B], 4
[viž :: c1, -B, -D], 5
[kuz’ :: c1, -B], 6
[seiččeme :: c1, -B, -D], 7
[kahesa :: c1, -B, -D], 8
[ühesa :: c1, -B, -D], 9
[kümne :: c2], 10
[toštkümne :: =c1, +A, c2], λx.'0X+11'(x)
[toštküme :: =c1, +B, c2], λx.'1X+10'(x)
[kuumeküme :: c2], 30
[kuumeküme  :: =c1, c2], λx.'1X+30'(x)
[nellküme :: c2], 40
[nellküme  :: =c1, c2], λx.'1X+40'(x)
[küme :: =c1, +D, c2], λx.'10X'(x)
[küme  :: =c1, =c2D, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[kuzküme :: c2], 60
[kuzküme  :: =c1, c2], λx.'1X+60'(x)
[sada :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x


Learning Arabic

Learned 999 words in Arabic and structured them in 39 functions.
It took 61 samples to learn those.
Those are:
wahid is 1
ithnan is 2
thalatha is 3
arba’a is 4
khamsa is 5
sitta is 6
sab’a is 7
thamaniya is 8
tis’a is 9
‘ashra is 10
ahada ‘ashar is 11
ithna ‘ashar is 12
Function _ ‘ashar maps {3,4,5,6,7,8,9} by x -> 1*x+10
‘ishrun is 20
wahed wa-‘ishrun is 21
Function _e wa-‘ishrun maps {2} by x -> 0*x+22
Function _ wa-‘ishrun maps {3,4,5,6,7,8,9} by x -> 1*x+20
thalathun is 30
Function _ wa-thalathun maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
arba’un is 40
Function _ wa-arba’un maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
khamsun is 50
Function _ wa-khamsun maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sittun is 60
Function _ wa-sittun maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sab’un is 70
Function _ wa-sab’un maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
thamanun is 80
Function _ wa-thamanun maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
tis’un is 90
Function _ wa-tis’un maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
mi’a is 100
Function mi’a _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ ‘ashar,20,30,40,50,60,70,80,90} by x -> 1*x+100
Function mi’a _ wa-_ maps {20}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 6*x0+1*x1
Function mi’a wa-_ maps {_ wa-thalathun,_ wa-arba’un,_ wa-khamsun,_ wa-sittun,_ wa-sab’un,_ wa-thamanun,_ wa-tis’un} by x -> 1*x+100
Function _ mi’a maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ mi’a _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_ ‘ashar,20,30,40,50,60,70,80,90} by (x0,x1) -> 100*x0+1*x1
Function _ mi’a _ wa-_ maps {2,3,4,5,6,7,8,9}x{20}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ mi’a wa-_ maps {2,3,4,5,6,7,8,9}x{_ wa-thalathun,_ wa-arba’un,_ wa-khamsun,_ wa-sittun,_ wa-sab’un,_ wa-thamanun,_ wa-tis’un} by (x0,x1) -> 100*x0+1*x1

MG:
[ithnan :: c1, -B, -G], 2
[‘ishrun :: c2, -E, -D, -S1], 20
[ :: =c3, cFin], λx.x
[wahid :: c1], 1
[thalatha :: c1, -G, -A], 3
[arba’a :: c1, -G, -A], 4
[khamsa :: c1, -G, -A], 5
[sitta :: c1, -G, -A], 6
[sab’a :: c1, -G, -A], 7
[thamaniya :: c1, -G, -A], 8
[tis’a :: c1, -G, -A], 9
[ wa-thalathun :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+30'(x,y)
[ :: cnix], 0
[ wa-arba’un :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+40'(x,y)
[ wa-khamsun :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+50'(x,y)
[ wa-sittun :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+60'(x,y)
[ wa-sab’un :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+70'(x,y)
[ wa-thamanun :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+80'(x,y)
[ wa-tis’un :: =cnix, =c1, c2, -F, -S1], λxλy.'1X+1Y+90'(x,y)
[‘ashra :: c2, -D, -S1], 10
[ahada ‘ashar :: c2, -D, -S1], 11
[ithna ‘ashar :: c2, -D, -S1], 12
[ ‘ashar :: =c1, +A, c2, -D, -S1], λx.'1X+10'(x)
[thalathun :: c2, -D, -S1], 30
[arba’un :: c2, -D, -S1], 40
[khamsun :: c2, -D, -S1], 50
[sittun :: c2, -D, -S1], 60
[sab’un :: c2, -D, -S1], 70
[thamanun :: c2, -D, -S1], 80
[tis’un :: c2, -D, -S1], 90
[ :: =c1, c2, -D], λx.x
[mi’a :: c3], 100
[mi’a  :: =c3D, c3], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[mi’a  :: =c3*, c3], λx.x
[ wa- :: =c1, =c3**E, c3*], λxλy.'1X+6Y'(x,y)
[mi’a wa- :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[ mi’a :: =c1, +G, c3], λx.'100X'(x)
[ mi’a  :: =c3D, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ mi’a  :: =c3**, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ wa- :: =c1, =c3**E, c3**], λxλy.'1X+1Y'(x,y)
[ :: =c2, +E, c3**E], λx.x
[ mi’a wa- :: =c3F, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[wahed wa-‘ishrun :: c2, -S1], 21
[e wa-‘ishrun :: =c1, +B, c2, -S1], λx.'0X+22'(x)
[ wa-‘ishrun :: =c1, +A, c2, -S1], λx.'1X+20'(x)
[ :: =c2, +E, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c2, +E, +D, +S1, c2, -E], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Lushootseed
Learned 999 words in Lushootseed and structured them in 17 functions.
It took 27 samples to learn those.
Those are:
dəč’uʔ is 1
saliʔ is 2
łixʷ is 3
buus is 4
cəlac is 5
dᶻəlačiʔ is 6
c’ukʷs is 7
təqačiʔ is 8
x̌ʷəl is 9
padac is 10
Function padac yəxʷ kʷi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function s_ačiʔ maps {3,4} by x -> 10*x+0
Function s_ačiʔ yəxʷ kʷi _ maps {3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ačiʔ maps {2,5,6,7,8,9} by x -> 10*x+0
Function _ačiʔ yəxʷ kʷi _ maps {2,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ sbək’ʷačiʔ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ sbək’ʷačiʔ yəxʷ kʷi _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,padac yəxʷ kʷi _,s_ačiʔ,s_ačiʔ yəxʷ kʷi _,_ačiʔ,_ačiʔ yəxʷ kʷi _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[saliʔ :: c1, -C], 2
[cəlac :: c1, -C], 5
[dᶻəlačiʔ :: c1, -C], 6
[c’ukʷs :: c1, -C], 7
[təqačiʔ :: c1, -C], 8
[x̌ʷəl :: c1, -C], 9
[łixʷ :: c1, -B], 3
[buus :: c1, -B], 4
[dəč’uʔ :: c1], 1
[padac :: c2, -S1], 10
[padac yəxʷ kʷi  :: =c1, c2, -S1], λx.'1X+10'(x)
[s :: =c2*, c2, -S1, -S1], λx.x
[ačiʔ :: =c1, +B, c2*], λx.'10X'(x)
[ačiʔ yəxʷ kʷi  :: =c1, =c2****B, c2**], λxλy.'1X+10Y'(x,y)
[ačiʔ :: =c1, +C, c2, -S1], λx.'10X'(x)
[ačiʔ yəxʷ kʷi  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[ sbək’ʷačiʔ :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ sbək’ʷačiʔ yəxʷ kʷi  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ačiʔ :: =c1, +B, c2***], λx.'10X'(x)
[ačiʔ yəxʷ kʷi  :: =c1, =c2****B, c2****], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2****B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x


Learning Paici
Learned 100 words in Paici and structured them in 15 functions.
It took 26 samples to learn those.
Those are:
caapwi is 1
êrêilû is 2
êrêcié is 3
êrêpëpé is 4
caa kârâ î-jè is 5
Function caa kârâ î-jè görö _ maps {1,2,3,4} by x -> 1*x+5
du î-jè is 10
Function du î-jè görö _ maps {1,2,3,4} by x -> 1*x+10
du î-jè â jè â-jè is 15
Function du î-jè â jè â-jè görö _ maps {1,2,3,4} by x -> 1*x+15
Function _ âboro maps {1,2,3,4,5} by x -> 20*x+0
Function _ âboro görö _ maps {1,2,3,4}x{1,2,3,4} by (x0,x1) -> 20*x0+1*x1
Function _ âboro â jè î-jè maps {1,2,3,4} by x -> 20*x+5
Function _ âboro â jè î-jè görö _ maps {1,2,3,4}x{1,2,3,4} by (x0,x1) -> 20*x0+1*x1+5
Function _ âboro â _ maps {1,2,3,4}x{10,du î-jè görö _,15,du î-jè â jè â-jè görö _} by (x0,x1) -> 20*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[du î-jè :: c2, -C, -S1], 10
[du î-jè görö  :: =c1, c2, -C, -S1], λx.'1X+10'(x)
[du î-jè â jè â-jè :: c2, -C, -S1], 15
[du î-jè â jè â-jè görö  :: =c1, c2, -C, -S1], λx.'1X+15'(x)
[caa kârâ î-jè :: c2, -B, -S1], 5
[ :: =c1, c2, -B], λx.x
[caapwi :: c1], 1
[êrêilû :: c1], 2
[êrêcié :: c1], 3
[êrêpëpé :: c1], 4
[ âboro :: =c2, +B, c3], λx.'20X'(x)
[ âboro görö  :: =c1, =c1, c3], λxλy.'1X+20Y'(x,y)
[ âboro â jè î-jè :: =cnix, =c1, c3], λxλy.'1X+20Y+5'(x,y)
[ :: cnix], 0
[ âboro â jè î-jè görö  :: =c1, =c1, c3], λxλy.'1X+20Y+5'(x,y)
[ âboro â  :: =c3C, =c1, c3], λxλy.'1X+20Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[caa kârâ î-jè görö  :: =c1, c2, -S1], λx.'1X+5'(x)
[ :: =c2, +B, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +B, +S1, c2, -B], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x




Learning Hupa
Learned 999 words in Hupa and structured them in 29 functions.
It took 117 samples to learn those.
Those are:
ła’ is 1
nahx is 2
ta:q’ is 3
dink’ is 4
chwola’ is 5
xosta:n is 6
xohk’it is 7
ke:nim is 8
miq’os-t’aw is 9
minłung is 10
Function minłung-miwah-na:_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
nahdiminłung is 20
Function nahdiminłung-miwah-na:_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _idiminłung maps {3,4} by x -> 10*x+0
Function _idiminłung-miwah-na:_ maps {3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _diminłung maps {5,6,8} by x -> 10*x+0
Function _diminłung-miwah-na:_ maps {5,6,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
xohk’e:diminłung is 70
Function xohk’e:diminłung-miwah-na:_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
miq’ost’ahdiminłung is 90
Function miq’ost’ahdiminłung-miwah-na:_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
Function _-dikin maps {1,2,5,6,8} by x -> 100*x+0
Function _ -dikin-miwah-na:nahdi_ maps {1,2,3}x{10,minłung-miwah-na:_} by (x0,x1) -> 100*x0+1*x1+10
Function _ -dikin-miwah-na:xohk’e:di_ maps {1,2,3,4,5,6,7,8,9}x{10,minłung-miwah-na:_} by (x0,x1) -> 100*x0+1*x1+60
Function _ -dikin-miwah-na:miq’ost’ahdi_ maps {1,2,3,4,5,6,7,8,9}x{10,minłung-miwah-na:_} by (x0,x1) -> 100*x0+1*x1+80
Function _i-dikin maps {3,4} by x -> 100*x+0
Function _ -dikin-miwah-na:_ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,minłung-miwah-na:_,_idiminłung,_idiminłung-miwah-na:_,_diminłung,_diminłung-miwah-na:_,20,nahdiminłung-miwah-na:_} by (x0,x1) -> 100*x0+1*x1
xohk’e-dikin is 700
miq’ost’ah-dikin is 900

MG:
[ :: =c3, cFin], λx.x
[ła’ :: c1, -E, -D], 1
[nahx :: c1, -E, -D], 2
[ta:q’ :: c1, -E, -B], 3
[chwola’ :: c1, -C, -D], 5
[xosta:n :: c1, -C, -D], 6
[ke:nim :: c1, -C, -D], 8
[minłung :: c2, -G, -F, -S1], 10
[minłung-miwah-na: :: =c1, c2, -G, -F, -S1], λx.'1X+10'(x)
[nahdiminłung :: c2, -G, -S1], 20
[nahdiminłung-miwah-na: :: =c1, c2, -G, -S1], λx.'1X+20'(x)
[idiminłung :: =c1, +B, c2, -G, -S1], λx.'10X'(x)
[idiminłung-miwah-na: :: =c1, =c2B, c2, -G, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[diminłung :: =c1, +C, c2, -G, -S1], λx.'10X'(x)
[diminłung-miwah-na: :: =c1, =c2C, c2, -G, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2, -G], λx.x
[dink’ :: c1, -B], 4
[xohk’it :: c1], 7
[miq’os-t’aw :: c1], 9
[miq’ost’ahdiminłung :: c3], 90
[miq’ost’ahdiminłung-miwah-na: :: =c1, c3], λx.'1X+90'(x)
[-dikin :: =c1, +D, c3], λx.'100X'(x)
[ -dikin-miwah-na:nahdi :: =c3F, =c3E, c3], λxλy.'1X+100Y+10'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c2, +F, c3F], λx.x
[ -dikin-miwah-na:xohk’e:di :: =c3F, =c1, c3], λxλy.'1X+100Y+60'(x,y)
[ -dikin-miwah-na:miq’ost’ahdi :: =c3F, =c1, c3], λxλy.'1X+100Y+80'(x,y)
[i-dikin :: =c1, +B, c3], λx.'100X'(x)
[ -dikin-miwah-na: :: =c3G, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c2, +G, c3G], λx.x
[xohk’e-dikin :: c3], 700
[miq’ost’ah-dikin :: c3], 900
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[xohk’e:diminłung :: c2, -S1], 70
[xohk’e:diminłung-miwah-na: :: =c1, c2, -S1], λx.'1X+70'(x)
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c1, +C, +D, c1, -C], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x
[ :: =c2, +G, +F, +S1, c2, -G], λx.x
[ :: =c1, +E, +D, c1, -E], λx.x


Learning Lakota

Learned 999 words in Lakota and structured them in 26 functions.
It took 34 samples to learn those.
Those are:
waŋží is 1
núŋpa is 2
yámni is 3
tópa is 4
záptaŋ is 5
šákpe is 6
šakówiŋ is 7
šaglógaŋ is 8
napčíyuŋka is 9
wikčémna is 10
akéwaŋži is 11
akénuŋpa is 12
akéyamni is 13
akétopa is 14
akézaptaŋ is 15
akéšakpe is 16
akéšakowiŋ is 17
akéšaglogaŋ is 18
akénapčiyuŋka is 19
Function wikčémna _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ _ aké waŋži maps {10}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 0*x0+10*x1+1
Function wikčémna _ aké _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
opáwiŋǧe is 100
Function opáwiŋǧe sáŋm _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,wikčémna _,_ _ aké waŋži,wikčémna _ aké _} by x -> 1*x+100
Function opáwiŋǧe _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function opáwiŋǧe _ sáŋm _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,wikčémna _,_ _ aké waŋži,wikčémna _ aké _} by (x0,x1) -> 100*x0+1*x1

MG:
[wikčémna :: c1, -B], 10
[ :: =c3, cFin], λx.x
[akéwaŋži :: c2, -S1], 11
[akénuŋpa :: c2, -S1], 12
[akéyamni :: c2, -S1], 13
[akétopa :: c2, -S1], 14
[akézaptaŋ :: c2, -S1], 15
[akéšakpe :: c2, -S1], 16
[akéšakowiŋ :: c2, -S1], 17
[akéšaglogaŋ :: c2, -S1], 18
[akénapčiyuŋka :: c2, -S1], 19
[wikčémna  :: =c2****A, c2, -S1], λx.'10X'(x)
[  :: =c2*, =c2B, c2, -S1], λxλy.'1X+0Y+1'(x,y)
[ :: =c1, +B, c2B], λx.x
[ aké waŋži :: =c1, +A, c2*], λx.'10X'(x)
[wikčémna  :: =c2**, c2, -S1], λx.x
[ aké  :: =c2****A, =c2****A, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[waŋží :: c1], 1
[núŋpa :: c1, -A], 2
[yámni :: c1, -A], 3
[tópa :: c1, -A], 4
[záptaŋ :: c1, -A], 5
[šákpe :: c1, -A], 6
[šakówiŋ :: c1, -A], 7
[šaglógaŋ :: c1, -A], 8
[napčíyuŋka :: c1, -A], 9
[opáwiŋǧe :: c3], 100
[opáwiŋǧe sáŋm  :: =c2, c3], λx.'1X+100'(x)
[opáwiŋǧe  :: =c2****A, c3], λx.'100X'(x)
[opáwiŋǧe  :: =c3*, c3], λx.x
[ sáŋm  :: =c2, =c2****A, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ aké waŋži :: =c1, +A, c2***], λx.'10X'(x)
[ aké  :: =c2****A, =c2****A, c2****], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2****A], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Afrikaans
Learned 999 words in Afrikaans and structured them in 32 functions.
It took 46 samples to learn those.
Those are:
een is 1
twee is 2
drie is 3
vier is 4
vyf is 5
ses is 6
sewe is 7
ag is 8
nege is 9
tien is 10
elf is 11
twaalf is 12
dertien is 13
veertien is 14
Function _tien maps {5,6,8} by x -> 1*x+10
Function _ntien maps {7,9} by x -> 1*x+10
twintig is 20
Function _-en-twintig maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
dertig is 30
Function _-en-dertig maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
veertig is 40
Function _-en-veertig maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _tig maps {5,6} by x -> 10*x+0
Function _-en-_tig maps {1,2,3,4,5,6,7,8,9}x{5,6} by (x0,x1) -> 1*x0+10*x1
Function _ntig maps {7} by x -> 0*x+70
Function _-en-_ntig maps {1,2,3,4,5,6,7,8,9}x{7} by (x0,x1) -> 1*x0+10*x1
Function t_tig maps {8} by x -> 0*x+80
Function _-en-t_tig maps {1,2,3,4,5,6,7,8,9}x{8} by (x0,x1) -> 1*x0+10*x1
neëntig is 90
Function _-en-neëntig maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
Function _honderd maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _honderd _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tien,_ntien,20,_-en-twintig,30,_-en-dertig,40,_-en-veertig,_tig,_-en-_tig,_ntig,_-en-_ntig,t_tig,_-en-t_tig,90,_-en-neëntig} by (x0,x1) -> 100*x0+1*x1

MG:
[sewe :: c1, -E, -B], 7
[ag :: c1, -F, -A], 8
[ :: =c3, cFin], λx.x
[een :: c1], 1
[twee :: c1], 2
[drie :: c1], 3
[vier :: c1], 4
[vyf :: c1, -A, -D], 5
[ses :: c1, -A, -D], 6
[nege :: c1, -B], 9
[tien :: c2, -S1], 10
[elf :: c2, -S1], 11
[twaalf :: c2, -S1], 12
[dertien :: c2, -S1], 13
[veertien :: c2, -S1], 14
[tien :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[ntien :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[twintig :: c2, -S1], 20
[-en-twintig :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[dertig :: c2, -S1], 30
[-en-dertig :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[veertig :: c2, -S1], 40
[-en-veertig :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[tig :: =c1, +D, c2, -S1], λx.'10X'(x)
[-en- :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[tig :: =c1, +D, c2*], λx.'10X'(x)
[ntig :: =c1, +E, c2, -S1], λx.'0X+70'(x)
[-en- :: =c2**, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[ntig :: =c1, +E, c2**], λx.'10X'(x)
[t :: =c2***, c2, -S1], λx.'1X+80'(x)
[tig :: =c1, +F, c2***], λx.'0X'(x)
[-en-t :: =c2****, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[tig :: =c1, +F, c2****], λx.'10X'(x)
[neëntig :: c2, -S1], 90
[-en-neëntig :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+90'(x,y)
[ :: =c1, c2], λx.x
[honderd :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[honderd  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x


Learning Manx-Gaelic
Learned 999 words in Manx-Gaelic and structured them in 30 functions.
It took 58 samples to learn those.
Those are:
nane is 1
jees is 2
tree is 3
kiare is 4
queig is 5
shey is 6
shiaght is 7
hoght is 8
nuy is 9
deich is 10
daa-yeig is 12
Function _-jeig maps {1,3,4,5,6,7,8,9} by x -> 1*x+10
feed is 20
Function _ as feed maps {1,2,3,4,5,6,7,8,9,12,_-jeig} by x -> 1*x+20
jeih as feed is 30
daeed is 40
Function _ as daeed maps {1,2,3,4,5,6,7,8,9,12,_-jeig} by x -> 1*x+40
jeih as daeed is 50
Function _ feed maps {3,4} by x -> 20*x+0
Function _ feed as _ maps {3,4}x{1,2,3,4,5,6,7,8,9,12,_-jeig} by (x0,x1) -> 20*x0+1*x1
Function _ feed as jeih maps {3,4} by x -> 20*x+10
keead is 100
Function keead _ maps {1,2,3,4,5,6,7,8,9,10,12,_-jeig,20,30,40,50,_ feed,_ feed as _,_ feed as jeih} by x -> 1*x+100
Function keead _ as _ maps {20,30,40,50,_ feed as jeih}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 1*x0+1*x1+100
daa-cheed is 200
Function daa-cheed _ maps {1,2,3,4,5,6,7,8,9,10,12,_-jeig,20,30,40,50,_ feed,_ feed as _,_ feed as jeih} by x -> 1*x+200
Function daa-cheed _ as _ maps {20,30,40,50,_ feed as jeih}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 1*x0+1*x1+200
Function _-cheed maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _-cheed _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,12,_-jeig,20,30,40,50,_ feed,_ feed as _,_ feed as jeih} by (x0,x1) -> 100*x0+1*x1
Function _-cheed _ as _ maps {3,4,5,6,7,8,9}x{20,30,40,50,_ feed as jeih}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[ :: =c4, cFin], λx.x
[feed :: c3, -E, -D, -S1], 20
[jeih as feed :: c3, -E, -D, -S1], 30
[daeed :: c3, -E, -D, -S1], 40
[jeih as daeed :: c3, -E, -D, -S1], 50
[ feed as jeih :: =c1, +C, c3, -E, -D, -S1], λx.'20X+10'(x)
[tree :: c1, -C, -G, -A], 3
[kiare :: c1, -C, -G, -A], 4
[daa-yeig :: c2, -B, -D1, -S2], 12
[-jeig :: =c1, +A, c2, -B, -D1, -S2], λx.'1X+10'(x)
[ :: =c1, c2, -B], λx.x
[nane :: c1, -A], 1
[jees :: c1], 2
[queig :: c1, -G, -A], 5
[shey :: c1, -G, -A], 6
[shiaght :: c1, -G, -A], 7
[hoght :: c1, -G, -A], 8
[nuy :: c1, -G, -A], 9
[ feed :: =c1, +C, c3, -D, -S1], λx.'20X'(x)
[ feed as  :: =c3B, =c3C, c3, -D, -S1], λxλy.'1X+20Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c2, +B, c3B], λx.x
[ :: =c1, c3, -D], λx.x
[ :: =c2, +D1, c3, -D], λx.x
[deich :: c2, -D1, -S2], 10
[keead :: c4], 100
[keead  :: =c4D, c4], λx.'1X+100'(x)
[ :: =c3, +D, c4D], λx.x
[keead  :: =c4*, c4], λx.'1X+100'(x)
[ as  :: =c1, =c4***E, c4*], λxλy.'1X+1Y'(x,y)
[daa-cheed :: c4], 200
[daa-cheed  :: =c4D, c4], λx.'1X+200'(x)
[daa-cheed  :: =c4**, c4], λx.'1X+200'(x)
[ as  :: =c1, =c4***E, c4**], λxλy.'1X+1Y'(x,y)
[-cheed :: =c1, +G, c4], λx.'100X'(x)
[-cheed  :: =c4D, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[-cheed  :: =c4***, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ as  :: =c1, =c4***E, c4***], λxλy.'1X+1Y'(x,y)
[ :: =c3, +E, c4***E], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ as feed :: =c2, +B, c3, -S1], λx.'1X+20'(x)
[ as daeed :: =c2, +B, c3, -S1], λx.'1X+40'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c2, +B, +D1, +S2, c2, -B], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x
[ :: =c3, +E, +D, +S1, c3, -E], λx.x
[ :: =c1, +C, +G, +A, c1, -C], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Assiniboine

Learned 999 words in Assiniboine and structured them in 21 functions.
It took 42 samples to learn those.
Those are:
wąží is 1
nųpa is 2
yámni is 3
tópa is 4
záptą is 5
šákpe is 6
iyušna is 7
šáknóğą is 8
nąpcúwąka is 9
wikcémna is 10
Function aké_ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
akézáptą is 15
Function _ nųm sąm _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 2*x0+1*x1
Function wikcémna _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ tóm sąm šáknóğą maps {10} by x -> 0*x+48
Function _ tóm sąm _ maps {10}x{1,2,3,4,5,6,7,9} by (x0,x1) -> 4*x0+1*x1
Function wikcémna _ sąm _ maps {3,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
opáwįğe is 100
Function opáwįğe sąm _ maps {1,2,3,4,5,6,7,8,9,10,aké_,15,_ nųm sąm _,wikcémna _,_ tóm sąm šáknóğą,_ tóm sąm _,wikcémna _ sąm _} by x -> 1*x+100
Function opáwįğe _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function opáwįğe _ sąm _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,aké_,15,_ nųm sąm _,wikcémna _,_ tóm sąm šáknóğą,_ tóm sąm _,wikcémna _ sąm _} by (x0,x1) -> 100*x0+1*x1

MG:
[wikcémna :: c1, -B], 10
[ :: =c3, cFin], λx.x
[wąží :: c1, -E, -C, -A], 1
[nųpa :: c1, -E, -C, -A, -D], 2
[yámni :: c1, -E, -C, -F, -A, -D], 3
[tópa :: c1, -E, -C, -A, -D], 4
[záptą :: c1, -E, -C, -F, -D], 5
[šákpe :: c1, -E, -C, -F, -A, -D], 6
[iyušna :: c1, -E, -C, -F, -A, -D], 7
[nąpcúwąka :: c1, -E, -C, -F, -A, -D], 9
[šáknóğą :: c1, -C, -F, -A, -D], 8
[aké :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[akézáptą :: c2, -S1], 15
[ nųm sąm  :: =c2**C, =c2B, c2, -S1], λxλy.'1X+2Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[wikcémna  :: =c2D, c2, -S1], λx.'10X'(x)
[ :: =c1, +D, c2D], λx.x
[ tóm sąm šáknóğą :: =c1, +B, c2, -S1], λx.'0X+48'(x)
[ tóm sąm  :: =c2E, =c2B, c2, -S1], λxλy.'1X+4Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[wikcémna  :: =c2*, c2, -S1], λx.x
[ sąm  :: =c2**C, =c2**F, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[opáwįğe :: c3], 100
[opáwįğe sąm  :: =c2, c3], λx.'1X+100'(x)
[opáwįğe  :: =c2D, c3], λx.'100X'(x)
[opáwįğe  :: =c3*, c3], λx.x
[ sąm  :: =c2, =c2D, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ sąm  :: =c2**C, =c2**F, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2**F], λx.x
[ :: =c1, +C, c2**C], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, +A, +D, c1, -E], λx.x
[ :: =c1, +C, +F, +D, c1, -C], λx.x
[ :: =c1, +E, +C, +F, +D, c1, -E], λx.x
[ :: =c1, +C, +A, +D, c1, -C], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +E, +C, +F, +A, +D, c1, -E], λx.x
[ :: =c1, +C, +F, +A, +D, c1, -C], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +F, +D, c1, -F], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +F, +A, +D, c1, -F], λx.x


Learning Soninke
Learned 999 words in Soninke and structured them in 45 functions.
It took 63 samples to learn those.
Those are:
baane is 1
fillo is 2
sikko is 3
naxato is 4
karago is 5
tumu is 6
ñeru is 7
segu is 8
kabu is 9
tanmu is 10
Function tanmu do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
tanfille is 20
Function tanfille do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tanjikke is 30
Function tanjikke do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
tannaxate is 40
Function tannaxate do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
tankarage is 50
Function tankarage do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
tandume is 60
Function tandume do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
tanñere is 70
Function tanñere do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tansege is 80
Function tansege do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
tankabe is 90
Function tankabe do _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
kame is 100
Function kame do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+100
kamo filli is 200
Function kamo filli do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+200
kamo sikki is 300
Function kamo sikki do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+300
kamo naxati is 400
Function kamo naxati do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+400
kamo karagi is 500
Function kamo karagi do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+500
kamo tumi is 600
Function kamo tumi do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+600
kamo ñeri is 700
Function kamo ñeri do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+700
kamo segi is 800
Function kamo segi do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+800
kamo kabi is 900
Function kamo kabi do _ maps {1,2,3,4,5,6,7,8,9,10,tanmu do _,20,tanfille do _,30,tanjikke do _,40,tannaxate do _,50,tankarage do _,60,tandume do _,70,tanñere do _,80,tansege do _,90,tankabe do _} by x -> 1*x+900

MG:
[ :: =c3, cFin], λx.x
[baane :: c1], 1
[fillo :: c1], 2
[sikko :: c1], 3
[naxato :: c1], 4
[karago :: c1], 5
[tumu :: c1], 6
[ñeru :: c1], 7
[segu :: c1], 8
[kabu :: c1], 9
[kame :: c3], 100
[kame do  :: =c2, c3], λx.'1X+100'(x)
[kamo filli :: c3], 200
[kamo filli do  :: =c2, c3], λx.'1X+200'(x)
[kamo sikki :: c3], 300
[kamo sikki do  :: =c2, c3], λx.'1X+300'(x)
[kamo naxati :: c3], 400
[kamo naxati do  :: =c2, c3], λx.'1X+400'(x)
[kamo karagi :: c3], 500
[kamo karagi do  :: =c2, c3], λx.'1X+500'(x)
[kamo tumi :: c3], 600
[kamo tumi do  :: =c2, c3], λx.'1X+600'(x)
[kamo ñeri :: c3], 700
[kamo ñeri do  :: =c2, c3], λx.'1X+700'(x)
[kamo segi :: c3], 800
[kamo segi do  :: =c2, c3], λx.'1X+800'(x)
[kamo kabi :: c3], 900
[kamo kabi do  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[tanmu :: c2, -S1], 10
[tanmu do  :: =c1, c2, -S1], λx.'1X+10'(x)
[tanfille :: c2, -S1], 20
[tanfille do  :: =c1, c2, -S1], λx.'1X+20'(x)
[tanjikke :: c2, -S1], 30
[tanjikke do  :: =c1, c2, -S1], λx.'1X+30'(x)
[tannaxate :: c2, -S1], 40
[tannaxate do  :: =c1, c2, -S1], λx.'1X+40'(x)
[tankarage :: c2, -S1], 50
[tankarage do  :: =c1, c2, -S1], λx.'1X+50'(x)
[tandume :: c2, -S1], 60
[tandume do  :: =c1, c2, -S1], λx.'1X+60'(x)
[tanñere :: c2, -S1], 70
[tanñere do  :: =c1, c2, -S1], λx.'1X+70'(x)
[tansege :: c2, -S1], 80
[tansege do  :: =c1, c2, -S1], λx.'1X+80'(x)
[tankabe :: c2, -S1], 90
[tankabe do  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Bulgarian
Learned 999 words in Bulgarian and structured them in 26 functions.
It took 43 samples to learn those.
Those are:
едно is 1
две is 2
три is 3
четири is 4
пет is 5
шест is 6
седем is 7
осем is 8
девет is 9
десет is 10
единадесет is 11
дванадесет is 12
Function _надесет maps {3,4,5,6,7,8,9} by x -> 1*x+10
двадесет is 20
Function двадесет и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _десет maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _десет и _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
сто is 100
Function сто и _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+100
Function сто _ maps {10,11,12,_надесет,20,двадесет и _,_десет,_десет и _} by x -> 1*x+100
Function _ста maps {2,3} by x -> 100*x+0
Function _ста и _ maps {2,3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ста _ maps {2,3}x{10,11,12,_надесет,20,двадесет и _,_десет,_десет и _} by (x0,x1) -> 100*x0+1*x1
Function _стотин maps {4,5,6,7,8,9} by x -> 100*x+0
Function _стотин и _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _стотин _ maps {4,5,6,7,8,9}x{10,11,12,_надесет,20,двадесет и _,_десет,_десет и _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[четири :: c1, -E, -A], 4
[пет :: c1, -E, -A], 5
[шест :: c1, -E, -A], 6
[седем :: c1, -E, -A], 7
[осем :: c1, -E, -A], 8
[девет :: c1, -E, -A], 9
[десет :: c2], 10
[единадесет :: c2], 11
[дванадесет :: c2], 12
[надесет :: =c1, +A, c2], λx.'1X+10'(x)
[двадесет :: c2], 20
[двадесет и  :: =c1, c2], λx.'1X+20'(x)
[десет :: =c1, +A, c2], λx.'10X'(x)
[десет и  :: =c1, =c2A, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[едно :: c1], 1
[две :: c1, -D], 2
[три :: c1, -A, -D], 3
[сто :: c3], 100
[сто и  :: =c1, c3], λx.'1X+100'(x)
[сто  :: =c2, c3], λx.'1X+100'(x)
[ста :: =c1, +D, c3], λx.'100X'(x)
[ста и  :: =c1, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ста  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[стотин :: =c1, +E, c3], λx.'100X'(x)
[стотин и  :: =c1, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[стотин  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x


Learning Kabiye

Learned 100 words in Kabiye and structured them in 20 functions.
It took 25 samples to learn those.
Those are:
kʋɖʋm is 1
naalɛ is 2
naadozo is 3
naanaza is 4
kagbanzɩ is 5
loɖo is 6
lʋbɛ is 7
lutozo is 8
nakʋ is 9
hiu is 10
Function hiu nɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
nɛɛlɛ is 20
Function nɛɛlɛ nɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
niidozo is 30
Function niidozo nɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
nɩɩnaza is 40
Function nɩɩnaza nɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
nɩɩnʋwa is 50
Function nɩɩnʋwa nɛ _ maps {1,2,3,4,5,6,7,8,9,10,hiu nɛ _,20,nɛɛlɛ nɛ _,30,niidozo nɛ _,40,nɩɩnaza nɛ _} by x -> 1*x+50
mɩnʋʋ is 100

MG:
[ :: =c3, cFin], λx.x
[kʋɖʋm :: c1], 1
[naalɛ :: c1], 2
[naadozo :: c1], 3
[naanaza :: c1], 4
[kagbanzɩ :: c1], 5
[loɖo :: c1], 6
[lʋbɛ :: c1], 7
[lutozo :: c1], 8
[nakʋ :: c1], 9
[nɩɩnʋwa :: c3], 50
[nɩɩnʋwa nɛ  :: =c2, c3], λx.'1X+50'(x)
[mɩnʋʋ :: c3], 100
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[hiu :: c2, -S1], 10
[hiu nɛ  :: =c1, c2, -S1], λx.'1X+10'(x)
[nɛɛlɛ :: c2, -S1], 20
[nɛɛlɛ nɛ  :: =c1, c2, -S1], λx.'1X+20'(x)
[niidozo :: c2, -S1], 30
[niidozo nɛ  :: =c1, c2, -S1], λx.'1X+30'(x)
[nɩɩnaza :: c2, -S1], 40
[nɩɩnaza nɛ  :: =c1, c2, -S1], λx.'1X+40'(x)
[ :: =c1, c2], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Bezhta
Learned 999 words in Bezhta and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
hõs is 1
q’ona is 2
łana is 3
ṏq’önä is 4
łina is 5
iłna is 6
aƛna is 7
beƛna is 8
äč’ena is 9
ac’ona is 10
Function ac’ona _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
qona is 20
Function qona _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _yig maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _yig _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _č’it’ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _č’it’ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,ac’ona _,20,qona _,_yig,_yig _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[ac’ona :: c2, -S1], 10
[ac’ona  :: =c1, c2, -S1], λx.'1X+10'(x)
[qona :: c2, -S1], 20
[qona  :: =c1, c2, -S1], λx.'1X+20'(x)
[yig :: =c1, +B, c2, -S1], λx.'10X'(x)
[yig  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[hõs :: c1], 1
[q’ona :: c1], 2
[łana :: c1, -B], 3
[ṏq’önä :: c1, -B], 4
[łina :: c1, -B], 5
[iłna :: c1, -B], 6
[aƛna :: c1, -B], 7
[beƛna :: c1, -B], 8
[äč’ena :: c1, -B], 9
[č’it’ :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[č’it’  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Nume
Not related to muweldul _
Not related to muweldul _
Learned 999 words in Nume and structured them in 35 functions.
It took 64 samples to learn those.
Those are:
tuwal is 1
i-ru is 2
i-tol is 3
i-βet is 4
tiβi-lim is 5
leβe-te is 6
leβe-ru is 7
leβe-tol is 8
leβe-βet is 9
sanuβul ru is 20
Function sanuβul ru ndi win t_ maps {2,3,4} by x -> 1*x+20
Function sanuβul ru ndi win _ maps {1,5} by x -> 1*x+20
Function sanuβul ru ndi win ti-_ maps {6,7,8,9} by x -> 1*x+20
sanuβul tol is 30
Function sanuβul tol ndi win t_ maps {2,3,4} by x -> 1*x+30
Function sanuβul tol ndi win _ maps {1,5} by x -> 1*x+30
Function sanuβul tol ndi win ti-_ maps {6,7,8,9} by x -> 1*x+30
sanuβul βet is 40
Function sanuβul βet ndi win t_ maps {2,3,4} by x -> 1*x+40
Function sanuβul βet ndi win _ maps {1,5} by x -> 1*x+40
Function sanuβul βet ndi win ti-_ maps {6,7,8,9} by x -> 1*x+40
Function sanuβul _ maps {1,5,6,7,8,9} by x -> 10*x+0
Function sanuβul _ ndi win _ maps {1,5,6,7,8,9}x{1,5} by (x0,x1) -> 10*x0+1*x1
Function sanuβul _ ndi win t_ maps {1,5,6,7,8,9}x{2,3,4} by (x0,x1) -> 10*x0+1*x1
Function sanuβul _ ndi win ti-_ maps {1,5,6,7,8,9}x{6,7,8,9} by (x0,x1) -> 10*x0+1*x1
muweldul is 100
Function muweldul ndi win t_ maps {2,3,4} by x -> 1*x+100
Function muweldul ndi win _ maps {1,5} by x -> 1*x+100
Function muweldul ndi win ti-_ maps {6,7,8,9} by x -> 1*x+100
Function muweldul _ maps {sanuβul _,sanuβul _ ndi win _,20,sanuβul ru ndi win t_,sanuβul ru ndi win _,sanuβul ru ndi win ti-_,30,sanuβul tol ndi win t_,sanuβul tol ndi win _,sanuβul tol ndi win ti-_,40,sanuβul βet ndi win t_,sanuβul βet ndi win _,sanuβul βet ndi win ti-_,sanuβul _ ndi win t_,sanuβul _ ndi win ti-_} by x -> 1*x+100
Function muweldul _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function muweldul _ ndi win _ maps {2,3,4,5,6,7,8,9}x{1,5} by (x0,x1) -> 100*x0+1*x1
Function muweldul _ ndi win t_ maps {2,3,4,5,6,7,8,9}x{2,3,4} by (x0,x1) -> 100*x0+1*x1
Function muweldul _ ndi win ti-_ maps {2,3,4,5,6,7,8,9}x{6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function muweldul _ _ maps {2,3,4,5,6,7,8,9}x{sanuβul _,sanuβul _ ndi win _,20,sanuβul ru ndi win t_,sanuβul ru ndi win _,sanuβul ru ndi win ti-_,30,sanuβul tol ndi win t_,sanuβul tol ndi win _,sanuβul tol ndi win ti-_,40,sanuβul βet ndi win t_,sanuβul βet ndi win _,sanuβul βet ndi win ti-_,sanuβul _ ndi win t_,sanuβul _ ndi win ti-_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[sanuβul ru :: c2], 20
[sanuβul ru ndi win t :: =c2*****A, c2], λx.'1X+20'(x)
[sanuβul ru ndi win  :: =c2****B, c2], λx.'1X+20'(x)
[sanuβul ru ndi win ti- :: =c2******C, c2], λx.'1X+20'(x)
[sanuβul tol :: c2], 30
[sanuβul tol ndi win t :: =c2*****A, c2], λx.'1X+30'(x)
[sanuβul tol ndi win  :: =c2****B, c2], λx.'1X+30'(x)
[sanuβul tol ndi win ti- :: =c2******C, c2], λx.'1X+30'(x)
[sanuβul βet :: c2], 40
[sanuβul βet ndi win t :: =c2*****A, c2], λx.'1X+40'(x)
[sanuβul βet ndi win  :: =c2****B, c2], λx.'1X+40'(x)
[sanuβul βet ndi win ti- :: =c2******C, c2], λx.'1X+40'(x)
[sanuβul  :: =c2******D, c2], λx.'10X'(x)
[sanuβul  :: =c2*, c2], λx.x
[ ndi win  :: =c2****B, =c2******D, c2*], λxλy.'1X+10Y'(x,y)
[ ndi win t :: =c2*****A, =c2******D, c2**], λxλy.'1X+10Y'(x,y)
[ ndi win ti- :: =c2******C, =c2******D, c2***], λxλy.'1X+10Y'(x,y)
[leβe-te :: c1, -C, -D, -F], 6
[leβe-ru :: c1, -C, -D, -F], 7
[leβe-tol :: c1, -C, -D, -F], 8
[leβe-βet :: c1, -C, -D, -F], 9
[tuwal :: c1, -B, -D], 1
[tiβi-lim :: c1, -B, -D, -F], 5
[i-ru :: c1, -A, -F], 2
[i-tol :: c1, -A, -F], 3
[i-βet :: c1, -A, -F], 4
[muweldul :: c3], 100
[muweldul ndi win t :: =c2*****A, c3], λx.'1X+100'(x)
[muweldul ndi win  :: =c2****B, c3], λx.'1X+100'(x)
[muweldul ndi win ti- :: =c2******C, c3], λx.'1X+100'(x)
[muweldul  :: =c2, c3], λx.'1X+100'(x)
[muweldul  :: =c3****F, c3], λx.'100X'(x)
[muweldul  :: =c3*, c3], λx.x
[ ndi win  :: =c2****B, =c3****F, c3*], λxλy.'1X+100Y'(x,y)
[ ndi win t :: =c2*****A, =c3****F, c3**], λxλy.'1X+100Y'(x,y)
[ ndi win ti- :: =c2******C, =c3****F, c3***], λxλy.'1X+100Y'(x,y)
[  :: =c2, =c3****F, c3****], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3****F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ ndi win  :: =c2****B, =c2******D, c2****], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2****B], λx.x
[ ndi win t :: =c2*****A, =c2******D, c2*****], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2*****A], λx.x
[ ndi win ti- :: =c2******C, =c2******D, c2******], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2******D], λx.x
[ :: =c1, +C, c2******C], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +D, +F, c1, -B], λx.x
[ :: =c1, +C, +D, +F, c1, -C], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +A, +F, c1, -A], λx.x
[ :: =c1, +D, +F, c1, -D], λx.x


Learning Dogrib
Learned 999 words in Dogrib and structured them in 26 functions.
It took 39 samples to learn those.
Those are:
ı̨łè is 1
nàke is 2
taı is 3
dı̨ is 4
sı̨làı is 5
ek’ètaı is 6
łǫ̀hdı̨ is 7
ek’èdı̨ is 8
łǫǫ̀tǫ is 9
hoònǫ is 10
Function hoònǫ daatsʼq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
naènǫ is 20
Function naènǫ daatsʼq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
taènǫ is 30
Function taènǫ daatsʼq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
sı̨làènǫ is 50
Function sı̨làènǫ daatsʼq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
ek’ètaènǫ is 60
Function ek’ètaènǫ daatsʼq _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ènǫ maps {4,7,8} by x -> 10*x+0
Function _ènǫ daatsʼq _ maps {4,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ daatsʼq _ maps {9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _lakw’eènǫ maps {1} by x -> 0*x+100
Function _lakw’eènǫ _ maps {1}x{1,2,3,4,5,6,7,8,9,10,hoònǫ daatsʼq _,20,naènǫ daatsʼq _,30,taènǫ daatsʼq _,50,sı̨làènǫ daatsʼq _,60,ek’ètaènǫ daatsʼq _,_ènǫ,_ènǫ daatsʼq _,_ daatsʼq _} by (x0,x1) -> 50*x0+1*x1+50
Function _ lakw’eènǫ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ lakw’eènǫ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,hoònǫ daatsʼq _,20,naènǫ daatsʼq _,30,taènǫ daatsʼq _,50,sı̨làènǫ daatsʼq _,60,ek’ètaènǫ daatsʼq _,_ènǫ,_ènǫ daatsʼq _,_ daatsʼq _} by (x0,x1) -> 100*x0+1*x1

MG:
[ı̨łè :: c1, -D], 1
[łǫǫ̀tǫ :: c1, -C, -F], 9
[ :: =c3, cFin], λx.x
[hoònǫ :: c2, -S1], 10
[hoònǫ daatsʼq  :: =c1, c2, -S1], λx.'1X+10'(x)
[naènǫ :: c2, -S1], 20
[naènǫ daatsʼq  :: =c1, c2, -S1], λx.'1X+20'(x)
[taènǫ :: c2, -S1], 30
[taènǫ daatsʼq  :: =c1, c2, -S1], λx.'1X+30'(x)
[sı̨làènǫ :: c2, -S1], 50
[sı̨làènǫ daatsʼq  :: =c1, c2, -S1], λx.'1X+50'(x)
[ek’ètaènǫ :: c2, -S1], 60
[ek’ètaènǫ daatsʼq  :: =c1, c2, -S1], λx.'1X+60'(x)
[ènǫ :: =c1, +B, c2, -S1], λx.'10X'(x)
[ènǫ daatsʼq  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ daatsʼq  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[nàke :: c1, -F], 2
[taı :: c1, -F], 3
[dı̨ :: c1, -B, -F], 4
[sı̨làı :: c1, -F], 5
[ek’ètaı :: c1, -F], 6
[łǫ̀hdı̨ :: c1, -B, -F], 7
[ek’èdı̨ :: c1, -B, -F], 8
[lakw’eènǫ :: =c1, +D, c3], λx.'0X+100'(x)
[lakw’eènǫ  :: =c2, =c3D, c3], λxλy.'1X+50Y+50'(x,y)
[ :: =c1, +D, c3D], λx.x
[ lakw’eènǫ :: =c1, +F, c3], λx.'100X'(x)
[ lakw’eènǫ  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x


Learning Awa-Pit

Learned 999 words in Awa-Pit and structured them in 17 functions.
It took 24 samples to learn those.
Those are:
maza is 1
paz is 2
kutña is 3
ampara is 4
chish is 5
wak is 6
pikamta is 7
ita is 8
toil is 9
Function _chish maps {2} by x -> 0*x+10
Function _ chish maps {1} by x -> 0*x+15
Function _ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,6,7,8,9,5} by (x0,x1) -> 10*x0+1*x1
Function _ chalkuil maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
pik: is 100
Function pik: _ maps {1,2,3,4,5,6,7,8,9,_chish,_ chish,_ _,_ chalkuil} by x -> 1*x+100
Function _ pik: maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ pik: _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,_chish,_ chish,_ _,_ chalkuil} by (x0,x1) -> 100*x0+1*x1

MG:
[maza :: c1, -B], 1
[paz :: c1, -A, -E], 2
[ :: =c3, cFin], λx.x
[kutña :: c1, -E], 3
[ampara :: c1, -E], 4
[chish :: c1, -E], 5
[wak :: c1, -E], 6
[pikamta :: c1, -E], 7
[ita :: c1, -E], 8
[toil :: c1, -E], 9
[pik: :: c3], 100
[pik:  :: =c2, c3], λx.'1X+100'(x)
[ pik: :: =c1, +E, c3], λx.'100X'(x)
[ pik:  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[chish :: =c1, +A, c2, -S1], λx.'0X+10'(x)
[ chish :: =c1, +B, c2, -S1], λx.'0X+15'(x)
[  :: =c1, =c1, c2, -S1], λxλy.'1X+10Y'(x,y)
[ chalkuil :: =c1, +E, c2, -S1], λx.'10X'(x)
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +E, c1, -A], λx.x


Learning Menominee
Learned 699 words in Menominee and structured them in 27 functions.
It took 40 samples to learn those.
Those are:
nekot is 1
nīs is 2
naeqniw is 3
nīw is 4
nianan is 5
nekūtuasetah is 6
nōhekan is 7
suasek is 8
sāka͞ew is 9
metātah is 10
Function metātah _-enēh maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _inoh metātah maps {2} by x -> 0*x+20
Function _inoh metātah _-enēh maps {2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 8*x0+1*x1+4
Function _ enoh metātah maps {4} by x -> 0*x+40
Function _ enoh metātah _-enēh maps {4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+4
Function _ metātah maps {3,5,6,7,8,9} by x -> 10*x+0
Function _ metātah _-enēh maps {3,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nekūtuak is 100
Function nekūtuak _ maps {1,2,3,4,5,6,7,8,9,10,metātah _-enēh,_inoh metātah,_inoh metātah _-enēh,_ enoh metātah,_ enoh metātah _-enēh,_ metātah,_ metātah _-enēh} by x -> 1*x+100
naeqnwak is 300
Function naeqnwak _ maps {1,2,3,4,5,6,7,8,9,10,metātah _-enēh,_inoh metātah,_inoh metātah _-enēh,_ enoh metātah,_ enoh metātah _-enēh,_ metātah,_ metātah _-enēh} by x -> 1*x+300
Function _uak maps {2,4} by x -> 100*x+0
Function _uak _ maps {2,4}x{1,2,3,4,5,6,7,8,9,10,metātah _-enēh,_inoh metātah,_inoh metātah _-enēh,_ enoh metātah,_ enoh metātah _-enēh,_ metātah,_ metātah _-enēh} by (x0,x1) -> 100*x0+1*x1
Function _wak maps {5} by x -> 0*x+500
Function _wak _ maps {5}x{1,2,3,4,5,6,7,8,9,10,metātah _-enēh,_inoh metātah,_inoh metātah _-enēh,_ enoh metātah,_ enoh metātah _-enēh,_ metātah,_ metātah _-enēh} by (x0,x1) -> 96*x0+1*x1+20
nekūtuasetāhnwak is 600
Function nekūtuasetāhnwak _ maps {1,2,3,4,5,6,7,8,9,10,metātah _-enēh,_inoh metātah,_inoh metātah _-enēh,_ enoh metātah,_ enoh metātah _-enēh,_ metātah,_ metātah _-enēh} by x -> 1*x+600

MG:
[nīs :: c1, -B, -F], 2
[nīw :: c1, -C, -F], 4
[nianan :: c1, -G, -D], 5
[ :: =c3, cFin], λx.x
[metātah :: c2, -S1], 10
[metātah  :: =c2*, c2, -S1], λx.'1X+10'(x)
[-enēh :: =cnix, =c1, c2*], λxλy.'1X+1Y'(x,y)
[ :: cnix], 0
[inoh metātah :: =c1, +B, c2, -S1], λx.'0X+20'(x)
[inoh metātah  :: =c2**, =c2B, c2, -S1], λxλy.'1X+8Y+4'(x,y)
[ :: =c1, +B, c2B], λx.x
[-enēh :: =cnix, =c1, c2**], λxλy.'1X+1Y'(x,y)
[ enoh metātah :: =c1, +C, c2, -S1], λx.'0X+40'(x)
[ enoh metātah  :: =c2***, =c2C, c2, -S1], λxλy.'1X+9Y+4'(x,y)
[ :: =c1, +C, c2C], λx.x
[-enēh :: =cnix, =c1, c2***], λxλy.'1X+1Y'(x,y)
[ metātah :: =c1, +D, c2, -S1], λx.'10X'(x)
[ metātah  :: =c2****, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[-enēh :: =cnix, =c1, c2****], λxλy.'1X+1Y'(x,y)
[ :: =c1, c2], λx.x
[nekot :: c1], 1
[naeqniw :: c1, -D], 3
[nekūtuasetah :: c1, -D], 6
[nōhekan :: c1, -D], 7
[suasek :: c1, -D], 8
[sāka͞ew :: c1, -D], 9
[nekūtuak :: c3], 100
[nekūtuak  :: =c2, c3], λx.'1X+100'(x)
[naeqnwak :: c3], 300
[naeqnwak  :: =c2, c3], λx.'1X+300'(x)
[uak :: =c1, +F, c3], λx.'100X'(x)
[uak  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[wak :: =c1, +G, c3], λx.'0X+500'(x)
[wak  :: =c2, =c3G, c3], λxλy.'1X+96Y+20'(x,y)
[ :: =c1, +G, c3G], λx.x
[nekūtuasetāhnwak :: c3], 600
[nekūtuasetāhnwak  :: =c2, c3], λx.'1X+600'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x


Learning Minangkabau
Learned 100 words in Minangkabau and structured them in 15 functions.
It took 19 samples to learn those.
Those are:
ciek is 1
duo is 2
tigo is 3
ampek is 4
limo is 5
anam is 6
tujuah is 7
salapan is 8
sambilan is 9
sapuluah is 10
sabaleh is 11
Function _ baleh maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ puluah maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ puluah _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
saratuih is 100

MG:
[ :: =c2, cFin], λx.x
[duo :: c1, -A], 2
[tigo :: c1, -A], 3
[ampek :: c1, -A], 4
[limo :: c1, -A], 5
[anam :: c1, -A], 6
[tujuah :: c1, -A], 7
[salapan :: c1, -A], 8
[sambilan :: c1, -A], 9
[ciek :: c1], 1
[sapuluah :: c2], 10
[sabaleh :: c2], 11
[ baleh :: =c1, +A, c2], λx.'1X+10'(x)
[ puluah :: =c1, +A, c2], λx.'10X'(x)
[ puluah  :: =c1, =c2A, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[saratuih :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x




Learning Igbo
Learned 999 words in Igbo and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
otu is 1
abụọ is 2
atọ is 3
anọ is 4
ise is 5
isii is 6
asaa is 7
asato is 8
eteghiete is 9
iri is 10
Function iri na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function iri _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function iri _ na _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nnari is 100
Function nnari na _ maps {1,2,3,4,5,6,7,8,9,10,iri na _,iri _,iri _ na _} by x -> 1*x+100
Function nnari _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function nnari _ na _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,iri na _,iri _,iri _ na _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[iri :: c2, -S1], 10
[iri na  :: =c1, c2, -S1], λx.'1X+10'(x)
[iri  :: =c2**B, c2, -S1], λx.'10X'(x)
[iri  :: =c2*, c2, -S1], λx.x
[ na  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[otu :: c1], 1
[abụọ :: c1, -B], 2
[atọ :: c1, -B], 3
[anọ :: c1, -B], 4
[ise :: c1, -B], 5
[isii :: c1, -B], 6
[asaa :: c1, -B], 7
[asato :: c1, -B], 8
[eteghiete :: c1, -B], 9
[nnari :: c3], 100
[nnari na  :: =c2, c3], λx.'1X+100'(x)
[nnari  :: =c2**B, c3], λx.'100X'(x)
[nnari  :: =c3*, c3], λx.x
[ na  :: =c2, =c2**B, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ na  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Haitian-Creole
Learned 999 words in Haitian-Creole and structured them in 58 functions.
It took 81 samples to learn those.
Those are:
youn is 1
de is 2
twa is 3
kat is 4
senk is 5
sis is 6
sèt is 7
uit is 8
nèf is 9
dis is 10
onz is 11
douz is 12
trèz is 13
Function _òz maps {4} by x -> 0*x+14
kenz is 15
sèz is 16
disèt is 17
Function diz_ maps {8,9} by x -> 1*x+10
ven is 20
venteyen is 21
Function venn_ maps {2,3,4,5,6,7} by x -> 1*x+20
Function vent_ maps {8,9} by x -> 1*x+20
trant is 30
tranteyen is 31
Function trann_ maps {2,3,4,5,6,7} by x -> 1*x+30
Function trant_ maps {8,9} by x -> 1*x+30
karant is 40
karanteyen is 41
Function karann_ maps {2,3,4,5,6,7} by x -> 1*x+40
Function karant_ maps {8,9} by x -> 1*x+40
Function _ant maps {5} by x -> 0*x+50
Function _anteyen maps {5} by x -> 0*x+51
Function _ann_ maps {5}x{2,3,4,5,6,7} by (x0,x1) -> 10*x0+1*x1
Function _ant_ maps {5}x{8,9} by (x0,x1) -> 10*x0+1*x1
swasann is 60
Function swasann_ maps {1,2,3,4,5,6,7,8,9,10,11,13,_òz,15,16,diz_} by x -> 1*x+60
Function swasann__ maps {10}x{2,7} by (x0,x1) -> 7*x0+1*x1
Function _reven maps {4} by x -> 0*x+80
Function _reventeyen maps {4} by x -> 0*x+81
Function _revenn_ maps {4}x{2,3,4,5,6,7} by (x0,x1) -> 19*x0+1*x1+4
Function _revent_ maps {4}x{8,9} by (x0,x1) -> 19*x0+1*x1+4
Function _reven_ maps {4}x{10,11,13,_òz,15,16,diz_} by (x0,x1) -> 19*x0+1*x1+4
Function _reven__ maps {4}x{10}x{2,7} by (x0,x1,x2) -> 2*x0+8*x1+1*x2+2
san is 100
san en is 101
Function san _ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,vent_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_anteyen,_ann_,_ant_,60,swasann_,swasann__,_reven,_reventeyen,_revenn_,_revent_,_reven_,_reven__} by x -> 1*x+100
Function _ san maps {2,3,4,7,9} by x -> 100*x+0
Function _ san en maps {2,3,4,7,9} by x -> 100*x+1
Function _ san _ maps {2,3,4,7,9}x{2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,vent_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_anteyen,_ann_,_ant_,60,swasann_,swasann__,_reven,_reventeyen,_revenn_,_revent_,_reven_,_reven__} by (x0,x1) -> 100*x0+1*x1
sen san is 500
sen san en is 501
Function sen san _ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,vent_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_anteyen,_ann_,_ant_,60,swasann_,swasann__,_reven,_reventeyen,_revenn_,_revent_,_reven_,_reven__} by x -> 1*x+500
si san is 600
si san en is 601
Function si san _ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,vent_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_anteyen,_ann_,_ant_,60,swasann_,swasann__,_reven,_reventeyen,_revenn_,_revent_,_reven_,_reven__} by x -> 1*x+600
ui san is 800
ui san en is 801
Function ui san _ maps {2,3,4,5,6,7,8,9,10,11,12,13,_òz,15,16,17,diz_,20,21,venn_,vent_,30,31,trann_,trant_,40,41,karann_,karant_,_ant,_anteyen,_ann_,_ant_,60,swasann_,swasann__,_reven,_reventeyen,_revenn_,_revent_,_reven_,_reven__} by x -> 1*x+800

MG:
[kat :: c1, -A, -C, -J, -I0], 4
[senk :: c1, -D, -C, -I0], 5
[dis :: c2, -F, -E, -H, -I1, -S2], 10
[ :: =c4, cFin], λx.x
[onz :: c2, -E, -H, -I1, -S2], 11
[trèz :: c2, -E, -H, -I1, -S2], 13
[òz :: =c1, +A, c2, -E, -H, -I1, -S2], λx.'0X+14'(x)
[kenz :: c2, -E, -H, -I1, -S2], 15
[sèz :: c2, -E, -H, -I1, -S2], 16
[diz :: =c2B, c2, -E, -H, -I1, -S2], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2, -E], λx.x
[youn :: c1], 1
[de :: c1, -C, -J, -G, -I0], 2
[twa :: c1, -C, -J, -I0], 3
[sis :: c1, -C, -I0], 6
[sèt :: c1, -C, -J, -G, -I0], 7
[uit :: c1, -B, -I0], 8
[nèf :: c1, -J, -B, -I0], 9
[ven :: c3, -S1], 20
[venteyen :: c3, -S1], 21
[venn :: =c3C, c3, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[vent :: =c2B, c3, -S1], λx.'1X+20'(x)
[trant :: c3, -S1], 30
[tranteyen :: c3, -S1], 31
[trann :: =c3C, c3, -S1], λx.'1X+30'(x)
[trant :: =c2B, c3, -S1], λx.'1X+30'(x)
[karant :: c3, -S1], 40
[karanteyen :: c3, -S1], 41
[karann :: =c3C, c3, -S1], λx.'1X+40'(x)
[karant :: =c2B, c3, -S1], λx.'1X+40'(x)
[ant :: =c1, +D, c3, -S1], λx.'0X+50'(x)
[anteyen :: =c1, +D, c3, -S1], λx.'0X+51'(x)
[ann :: =c3C, =c3D, c3, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ant :: =c2B, =c3D, c3, -S1], λxλy.'1X+10Y'(x,y)
[swasann :: c3, -S1], 60
[swasann :: =c3E, c3, -S1], λx.'1X+60'(x)
[ :: =c2, +E, c3E], λx.x
[swasann :: =c3*, c3, -S1], λx.x
[ :: =c3****G, =c3****F, c3*], λxλy.'1X+7Y'(x,y)
[reven :: =c1, +A, c3, -S1], λx.'0X+80'(x)
[reventeyen :: =c1, +A, c3, -S1], λx.'0X+81'(x)
[revenn :: =c3C, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +A, c3A], λx.x
[revent :: =c2B, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[reven :: =c3H, =c3A, c3, -S1], λxλy.'1X+19Y+4'(x,y)
[ :: =c2, +H, c3H], λx.x
[reven :: =c3**, =c3A, c3, -S1], λxλy.'1X+2Y+2'(x,y)
[ :: =c3****G, =c3****F, c3**], λxλy.'1X+8Y'(x,y)
[ :: =c1, +I0, c3], λx.x
[ :: =c2, +I1, c3], λx.x
[douz :: c2, -I1, -S2], 12
[disèt :: c2, -I1, -S2], 17
[san :: c4], 100
[san en :: c4], 101
[san  :: =c3, c4], λx.'1X+100'(x)
[ san :: =c1, +J, c4], λx.'100X'(x)
[ san en :: =c1, +J, c4], λx.'100X+1'(x)
[ san  :: =c3, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[sen san :: c4], 500
[sen san en :: c4], 501
[sen san  :: =c3, c4], λx.'1X+500'(x)
[si san :: c4], 600
[si san en :: c4], 601
[si san  :: =c3, c4], λx.'1X+600'(x)
[ui san :: c4], 800
[ui san en :: c4], 801
[ui san  :: =c3, c4], λx.'1X+800'(x)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c3****G, =c3****F, c3***], λxλy.'1X+7Y'(x,y)
[ :: =c3****G, =c3****F, c3****], λxλy.'1X+8Y'(x,y)
[ :: =c2, +F, c3****F], λx.x
[ :: =c1, +G, c3****G], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +J, +I0, c1, -J], λx.x
[ :: =c1, +J, +B, +I0, c1, -J], λx.x
[ :: =c1, +C, +J, +I0, c1, -C], λx.x
[ :: =c1, +B, +I0, c1, -B], λx.x
[ :: =c1, +C, +I0, c1, -C], λx.x
[ :: =c1, +D, +C, +I0, c1, -D], λx.x
[ :: =c1, +J, +G, +I0, c1, -J], λx.x
[ :: =c2, +E, +H, +I1, +S2, c2, -E], λx.x
[ :: =c1, +A, +C, +J, +I0, c1, -A], λx.x
[ :: =c1, +C, +J, +G, +I0, c1, -C], λx.x
[ :: =c2, +F, +E, +H, +I1, +S2, c2, -F], λx.x
[ :: =c2, +I1, +S2, c2, -I1], λx.x
[ :: =c2, +H, +I1, +S2, c2, -H], λx.x
[ :: =c1, +G, +I0, c1, -G], λx.x


Learning Jerriais

Learned 999 words in Jerriais and structured them in 48 functions.
It took 251 samples to learn those.
Those are:
ieune is 1
deux is 2
trais is 3
quat’ is 4
chîn is 5
six is 6
sept is 7
huit is 8
neuf is 9
dgix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
Function t_ze maps {5} by x -> 0*x+15
seize is 16
Function dgiêx-_ maps {7,8,9} by x -> 1*x+10
vîngt is 20
Function vîngt’tch’_ maps {1} by x -> 0*x+21
Function vîngt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente’tch’_ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante’tch’_ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _quante maps {5} by x -> 0*x+50
Function _quante tch’_ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _quante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
souaixante is 60
Function souaixante tch’_ maps {1} by x -> 0*x+61
Function souaixante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ante maps {7} by x -> 0*x+70
Function _ante tch’_ maps {7}x{1} by (x0,x1) -> 0*x0+0*x1+71
Function _ante-_ maps {7}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function quatre-_s maps {20} by x -> 0*x+80
Function quatre-_-_ maps {20}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 4*x0+1*x1
nénante is 90
Function nénante tch’_ maps {1} by x -> 0*x+91
Function nénante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
chent is 100
Function chent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,t_ze,16,dgiêx-_,20,vîngt’tch’_,vîngt-_,30,trente’tch’_,trente-_,40,quarante’tch’_,quarante-_,_quante,_quante tch’_,_quante-_,60,souaixante tch’_,souaixante-_,_ante,_ante tch’_,_ante-_,quatre-_s,quatre-_-_,90,nénante tch’_,nénante-_} by x -> 1*x+100
Function _ chents maps {2,3,4,5,7,8} by x -> 100*x+0
Function _ chents _ maps {2,3,4,5,7,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,t_ze,16,dgiêx-_,20,vîngt’tch’_,vîngt-_,30,trente’tch’_,trente-_,40,quarante’tch’_,quarante-_,_quante,_quante tch’_,_quante-_,60,souaixante tch’_,souaixante-_,_ante,_ante tch’_,_ante-_,quatre-_s,quatre-_-_,90,nénante tch’_,nénante-_} by (x0,x1) -> 100*x0+1*x1
Function siêx _s maps {100} by x -> 0*x+600
Function siêx _s _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,t_ze,16,dgiêx-_,20,vîngt’tch’_,vîngt-_,30,trente’tch’_,trente-_,40,quarante’tch’_,quarante-_,_quante,_quante tch’_,_quante-_,60,souaixante tch’_,souaixante-_,_ante,_ante tch’_,_ante-_,quatre-_s,quatre-_-_,90,nénante tch’_,nénante-_} by (x0,x1) -> 6*x0+1*x1
Function neu _s maps {100} by x -> 0*x+900
Function neu _s _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,t_ze,16,dgiêx-_,20,vîngt’tch’_,vîngt-_,30,trente’tch’_,trente-_,40,quarante’tch’_,quarante-_,_quante,_quante tch’_,_quante-_,60,souaixante tch’_,souaixante-_,_ante,_ante tch’_,_ante-_,quatre-_s,quatre-_-_,90,nénante tch’_,nénante-_} by (x0,x1) -> 9*x0+1*x1

MG:
[ieune :: c1, -C], 1
[chîn :: c1, -A, -I, -D], 5
[sept :: c1, -E, -B, -I, -D], 7
[vîngt :: c2, -F], 20
[chent :: c3, -J, -S1], 100
[ :: =c4, cFin], λx.x
[vîngt’tch’ :: =c3C, c3, -H, -S1], λx.'0X+21'(x)
[ :: =c1, +C, c3C], λx.x
[vîngt- :: =c3D, c3, -H, -S1], λx.'1X+20'(x)
[ :: =c1, +D, c3D], λx.x
[trente :: c3, -H, -S1], 30
[trente’tch’ :: =c3C, c3, -H, -S1], λx.'0X+31'(x)
[trente- :: =c3D, c3, -H, -S1], λx.'1X+30'(x)
[quarante :: c3, -H, -S1], 40
[quarante’tch’ :: =c3C, c3, -H, -S1], λx.'0X+41'(x)
[quarante- :: =c3D, c3, -H, -S1], λx.'1X+40'(x)
[quante :: =c1, +A, c3, -H, -S1], λx.'0X+50'(x)
[quante tch’ :: =c3C, =c3A, c3, -H, -S1], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +A, c3A], λx.x
[quante- :: =c3D, =c3A, c3, -H, -S1], λxλy.'1X+10Y'(x,y)
[souaixante :: c3, -H, -S1], 60
[souaixante tch’ :: =c3C, c3, -H, -S1], λx.'0X+61'(x)
[souaixante- :: =c3D, c3, -H, -S1], λx.'1X+60'(x)
[ante :: =c1, +E, c3, -H, -S1], λx.'0X+70'(x)
[ante tch’ :: =c3C, =c3E, c3, -H, -S1], λxλy.'0X+0Y+71'(x,y)
[ :: =c1, +E, c3E], λx.x
[ante- :: =c3D, =c3E, c3, -H, -S1], λxλy.'1X+10Y'(x,y)
[quatre- :: =c3*, c3, -H, -H, -S1, -S1], λx.'1X+80'(x)
[s :: =c2, +F, c3*], λx.'0X'(x)
[- :: =c1, =c3****F, c3**], λxλy.'1X+4Y'(x,y)
[nénante :: c3, -H, -S1], 90
[nénante tch’ :: =c3C, c3, -H, -S1], λx.'0X+91'(x)
[nénante- :: =c3D, c3, -H, -S1], λx.'1X+90'(x)
[ :: =c1, c3, -H], λx.x
[deux :: c1, -I, -D], 2
[trais :: c1, -I, -D], 3
[quat’ :: c1, -I, -D], 4
[six :: c1, -D], 6
[huit :: c1, -B, -I, -D], 8
[neuf :: c1, -B, -D], 9
[ :: =c2, c3, -H], λx.x
[dgix :: c2], 10
[onze :: c2], 11
[douze :: c2], 12
[treize :: c2], 13
[quatorze :: c2], 14
[t :: =c2*, c2], λx.'1X+15'(x)
[ze :: =c1, +A, c2*], λx.'0X'(x)
[seize :: c2], 16
[dgiêx- :: =c2B, c2], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[chent  :: =c4****H, c4], λx.'1X+100'(x)
[ chents :: =c1, +I, c4], λx.'100X'(x)
[ chents  :: =c4****H, =c4I, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c4I], λx.x
[siêx  :: =c4*, c4], λx.'1X+600'(x)
[s :: =c3, +J, c4*], λx.'0X'(x)
[s  :: =c4****H, =c4****J, c4**], λxλy.'1X+6Y'(x,y)
[neu  :: =c4***, c4], λx.'1X+900'(x)
[s :: =c3, +J, c4***], λx.'0X'(x)
[s  :: =c4****H, =c4****J, c4****], λxλy.'1X+9Y'(x,y)
[ :: =c3, +J, c4****J], λx.x
[ :: =c3, +H, c4****H], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[s :: =c2, +F, c3***], λx.'0X'(x)
[- :: =c1, =c3****F, c3****], λxλy.'1X+4Y'(x,y)
[ :: =c2, +F, c3****F], λx.x
[ :: =c2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c1, +I, +D, c1, -I], λx.x
[ :: =c1, +E, +B, +I, +D, c1, -E], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +B, +I, +D, c1, -B], λx.x
[ :: =c3, +J, +S1, c3, -J], λx.x
[ :: =c1, +A, +I, +D, c1, -A], λx.x
[ :: =c3, +H, +H, +S1, +S1, c3, -H], λx.x
[ :: =c3, +H, +S1, +S1, c3, -H], λx.x


Learning Lango
Learned 999 words in Lango and structured them in 17 functions.
It took 28 samples to learn those.
Those are:
acɛl is 1
aryɔɔ is 2
adek is 3
aŋwɛn is 4
abic is 5
abicɛl is 6
abiro is 7
aboro is 8
abongwɛn is 9
apar is 10
Function apar wiɛ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function pyer _ wiɛ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function pyer _ maps {2,3,4,5,7,8,9,6} by x -> 10*x+0
mia is 100
Function mia _ wiɛ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function mia _ ì _ maps {1,2,3,4,5,6,7,8,9}x{10,apar wiɛ _,pyer _ wiɛ _,pyer _} by (x0,x1) -> 100*x0+1*x1
Function mia _ maps {2,3,4,5,7,8,9,6} by x -> 100*x+0

MG:
[ :: =c3, cFin], λx.x
[aryɔɔ :: c1, -C, -B], 2
[adek :: c1, -C, -B], 3
[aŋwɛn :: c1, -C, -B], 4
[abic :: c1, -C, -B], 5
[abicɛl :: c1, -C, -B], 6
[abiro :: c1, -C, -B], 7
[aboro :: c1, -C, -B], 8
[abongwɛn :: c1, -C, -B], 9
[acɛl :: c1], 1
[apar :: c2], 10
[apar wiɛ  :: =c1, c2], λx.'1X+10'(x)
[pyer  :: =c2*, c2], λx.x
[ wiɛ  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[pyer  :: =c2C, c2], λx.'10X'(x)
[ :: =c1, +C, c2C], λx.x
[mia :: c3], 100
[mia  :: =c3*, c3], λx.x
[ wiɛ  :: =c1, =c1, c3*], λxλy.'1X+100Y'(x,y)
[mia  :: =c2C, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ wiɛ  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Navajo
Learned 999 words in Navajo and structured them in 53 functions.
It took 71 samples to learn those.
Those are:
tʼááłáʼí is 1
naaki is 2
tááʼ is 3
dį́į́ʼ is 4
ashdlaʼ is 5
hastą́ą́ is 6
tsostsʼid is 7
tseebíí is 8
náhástʼéí is 9
neeznáá is 10
łáʼtsʼáadah is 11
Function _tsʼáadah maps {2,3,4,7,8,9} by x -> 1*x+10
Function _áadah maps {5} by x -> 0*x+15
hastą́ʼáadah is 16
naadiin is 20
naadįįłaʼ is 21
Function naadįį_ maps {2,3,4,6,7,8,9} by x -> 1*x+20
Function naadįįʼ_ maps {5} by x -> 0*x+25
tádiin is 30
Function tádiin dóó baʼąą _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
dízdiin is 40
dízdįįłaʼ is 41
Function dízdįį_ maps {2,3,4,6,7,9} by x -> 1*x+40
Function dízdįįʼ_ maps {5} by x -> 0*x+45
dízdįįtseebíí is 48
ashdladiin is 50
Function ashdladiin dóó baʼąą _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
hastą́diin is 60
Function hastą́diin dóó baʼąą _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _iin maps {7} by x -> 0*x+70
Function _iin dóó baʼąą _ maps {7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
tseebídiin is 80
Function tseebídiin dóó baʼąą _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
náhástʼédiin is 90
Function náhástʼédiin dóó baʼąą _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
tʼááłáhádí neeznádiin is 100
Function tʼááłáhádí neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+100
Function _di neeznádiin maps {2} by x -> 0*x+200
Function _di neeznádiin _ maps {2}x{1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by (x0,x1) -> 80*x0+1*x1+40
táadi neeznádiin is 300
Function táadi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+300
dį́įʼdi neeznádiin is 400
Function dį́įʼdi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+400
ashdladi neeznádiin is 500
Function ashdladi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+500
hastą́ądi neeznádiin is 600
Function hastą́ądi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+600
Function _i neeznádiin maps {7} by x -> 0*x+700
Function _i neeznádiin _ maps {7}x{1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by (x0,x1) -> 98*x0+1*x1+14
tseebíidi neeznádiin is 800
Function tseebíidi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+800
náhástʼéidi neeznádiin is 900
Function náhástʼéidi neeznádiin _ maps {1,2,3,4,5,6,7,8,9,10,11,_tsʼáadah,_áadah,16,20,21,naadįį_,naadįįʼ_,30,tádiin dóó baʼąą _,40,41,dízdįį_,dízdįįʼ_,48,50,ashdladiin dóó baʼąą _,60,hastą́diin dóó baʼąą _,_iin,_iin dóó baʼąą _,80,tseebídiin dóó baʼąą _,90,náhástʼédiin dóó baʼąą _} by x -> 1*x+900

MG:
[naaki :: c1, -H, -E, -C, -A], 2
[ashdlaʼ :: c1, -B], 5
[tsostsʼid :: c1, -F, -E, -C, -A], 7
[ :: =c3, cFin], λx.x
[tááʼ :: c1, -E, -C, -A], 3
[dį́į́ʼ :: c1, -E, -C, -A], 4
[hastą́ą́ :: c1, -E, -C], 6
[náhástʼéí :: c1, -E, -C, -A], 9
[tseebíí :: c1, -C, -A], 8
[neeznáá :: c2, -S1], 10
[łáʼtsʼáadah :: c2, -S1], 11
[tsʼáadah :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[áadah :: =c1, +B, c2, -S1], λx.'0X+15'(x)
[hastą́ʼáadah :: c2, -S1], 16
[naadiin :: c2, -S1], 20
[naadįįłaʼ :: c2, -S1], 21
[naadįį :: =c2C, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[naadįįʼ :: =c2B, c2, -S1], λx.'0X+25'(x)
[ :: =c1, +B, c2B], λx.x
[tádiin :: c2, -S1], 30
[tádiin dóó baʼąą  :: =c1, c2, -S1], λx.'1X+30'(x)
[dízdiin :: c2, -S1], 40
[dízdįįłaʼ :: c2, -S1], 41
[dízdįį :: =c2E, c2, -S1], λx.'1X+40'(x)
[ :: =c1, +E, c2E], λx.x
[dízdįįʼ :: =c2B, c2, -S1], λx.'0X+45'(x)
[dízdįįtseebíí :: c2, -S1], 48
[ashdladiin :: c2, -S1], 50
[ashdladiin dóó baʼąą  :: =c1, c2, -S1], λx.'1X+50'(x)
[hastą́diin :: c2, -S1], 60
[hastą́diin dóó baʼąą  :: =c1, c2, -S1], λx.'1X+60'(x)
[iin :: =c1, +F, c2, -S1], λx.'0X+70'(x)
[iin dóó baʼąą  :: =c1, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[tseebídiin :: c2, -S1], 80
[tseebídiin dóó baʼąą  :: =c1, c2, -S1], λx.'1X+80'(x)
[náhástʼédiin :: c2, -S1], 90
[náhástʼédiin dóó baʼąą  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[tʼááłáʼí :: c1], 1
[tʼááłáhádí neeznádiin :: c3], 100
[tʼááłáhádí neeznádiin  :: =c2, c3], λx.'1X+100'(x)
[di neeznádiin :: =c1, +H, c3], λx.'0X+200'(x)
[di neeznádiin  :: =c2, =c3H, c3], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +H, c3H], λx.x
[táadi neeznádiin :: c3], 300
[táadi neeznádiin  :: =c2, c3], λx.'1X+300'(x)
[dį́įʼdi neeznádiin :: c3], 400
[dį́įʼdi neeznádiin  :: =c2, c3], λx.'1X+400'(x)
[ashdladi neeznádiin :: c3], 500
[ashdladi neeznádiin  :: =c2, c3], λx.'1X+500'(x)
[hastą́ądi neeznádiin :: c3], 600
[hastą́ądi neeznádiin  :: =c2, c3], λx.'1X+600'(x)
[i neeznádiin :: =c1, +F, c3], λx.'0X+700'(x)
[i neeznádiin  :: =c2, =c2F, c3], λxλy.'1X+98Y+14'(x,y)
[tseebíidi neeznádiin :: c3], 800
[tseebíidi neeznádiin  :: =c2, c3], λx.'1X+800'(x)
[náhástʼéidi neeznádiin :: c3], 900
[náhástʼéidi neeznádiin  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +F, +E, +C, +A, c1, -F], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +H, +E, +C, +A, c1, -H], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x


Learning Turkish

Learned 999 words in Turkish and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
bir is 1
iki is 2
üç is 3
dört is 4
beş is 5
altı is 6
yedi is 7
sekiz is 8
dokuz is 9
on is 10
Function on _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
yirmi is 20
Function yirmi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
otuz is 30
Function otuz _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
kırk is 40
Function kırk _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
elli is 50
Function elli _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
altmış is 60
Function altmış _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
yetmiş is 70
Function yetmiş _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
seksen is 80
Function seksen _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
doksan is 90
Function doksan _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
yüz is 100
Function yüz _ maps {1,2,3,4,5,6,7,8,9,10,on _,20,yirmi _,30,otuz _,40,kırk _,50,elli _,60,altmış _,70,yetmiş _,80,seksen _,90,doksan _} by x -> 1*x+100
Function _ yüz maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ yüz _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,on _,20,yirmi _,30,otuz _,40,kırk _,50,elli _,60,altmış _,70,yetmiş _,80,seksen _,90,doksan _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[iki :: c1, -C], 2
[üç :: c1, -C], 3
[dört :: c1, -C], 4
[beş :: c1, -C], 5
[altı :: c1, -C], 6
[yedi :: c1, -C], 7
[sekiz :: c1, -C], 8
[dokuz :: c1, -C], 9
[on :: c2, -S1], 10
[on  :: =c1, c2, -S1], λx.'1X+10'(x)
[yirmi :: c2, -S1], 20
[yirmi  :: =c1, c2, -S1], λx.'1X+20'(x)
[otuz :: c2, -S1], 30
[otuz  :: =c1, c2, -S1], λx.'1X+30'(x)
[kırk :: c2, -S1], 40
[kırk  :: =c1, c2, -S1], λx.'1X+40'(x)
[elli :: c2, -S1], 50
[elli  :: =c1, c2, -S1], λx.'1X+50'(x)
[altmış :: c2, -S1], 60
[altmış  :: =c1, c2, -S1], λx.'1X+60'(x)
[yetmiş :: c2, -S1], 70
[yetmiş  :: =c1, c2, -S1], λx.'1X+70'(x)
[seksen :: c2, -S1], 80
[seksen  :: =c1, c2, -S1], λx.'1X+80'(x)
[doksan :: c2, -S1], 90
[doksan  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[bir :: c1], 1
[yüz :: c3], 100
[yüz  :: =c2, c3], λx.'1X+100'(x)
[ yüz :: =c1, +C, c3], λx.'100X'(x)
[ yüz  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Armenian
Learned 999 words in Armenian and structured them in 36 functions.
It took 53 samples to learn those.
Those are:
մեկ is 1
երկու is 2
 is 3
չորս is 4
հինգ is 5
ինը is 9
տաս is 10
Function տասն_ maps {1,2,4,5,9} by x -> 1*x+10
քսան is 20
Function քսան _ maps {1,2,4,5,9} by x -> 1*x+20
երեսուն is 30
Function երեսուն _ maps {1,2,4,5,9} by x -> 1*x+30
քառասուն is 40
Function քառասուն _ maps {1,2,4,5,9} by x -> 1*x+40
հիսուն is 50
Function հիսուն _ maps {1,2,4,5,9} by x -> 1*x+50
վաթսուն is 60
Function վաթսուն _ maps {1,2,4,5,9} by x -> 1*x+60
յոթանասուն is 70
Function յոթանասուն _ maps {1,2,4,5,9} by x -> 1*x+70
ութսուն is 80
Function ութսուն _ maps {1,2,4,5,9} by x -> 1*x+80
իննսուն is 90
Function իննսուն _ maps {1,2,4,5,9} by x -> 1*x+90
հարյուր is 100
Function հարյուր _ maps {1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by x -> 1*x+100
երեք հարյուր is 300
Function երեք հարյուր _ maps {1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by x -> 1*x+300
Function _ հարյուր maps {2,4,5,9} by x -> 100*x+0
Function _ հարյուր _ maps {2,4,5,9}x{1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by (x0,x1) -> 100*x0+1*x1
վեց հարյուր is 600
Function վեց հարյուր _ maps {1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by x -> 1*x+600
յոթ հարյուր is 700
Function յոթ հարյուր _ maps {1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by x -> 1*x+700
ութ հարյուր is 800
Function ութ հարյուր _ maps {1,2,4,5,9,10,տասն_,20,քսան _,30,երեսուն _,40,քառասուն _,50,հիսուն _,60,վաթսուն _,70,յոթանասուն _,80,ութսուն _,90,իննսուն _} by x -> 1*x+800

MG:
[ :: =c3, cFin], λx.x
[երկու :: c1, -C, -B0, -A], 2
[չորս :: c1, -C, -B0, -A], 4
[հինգ :: c1, -C, -B0, -A], 5
[ինը :: c1, -C, -B0, -A], 9
[տաս :: c2, -S1], 10
[տասն :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[քսան :: c2, -S1], 20
[քսան  :: =c2A, c2, -S1], λx.'1X+20'(x)
[երեսուն :: c2, -S1], 30
[երեսուն  :: =c2A, c2, -S1], λx.'1X+30'(x)
[քառասուն :: c2, -S1], 40
[քառասուն  :: =c2A, c2, -S1], λx.'1X+40'(x)
[հիսուն :: c2, -S1], 50
[հիսուն  :: =c2A, c2, -S1], λx.'1X+50'(x)
[վաթսուն :: c2, -S1], 60
[վաթսուն  :: =c2A, c2, -S1], λx.'1X+60'(x)
[յոթանասուն :: c2, -S1], 70
[յոթանասուն  :: =c2A, c2, -S1], λx.'1X+70'(x)
[ութսուն :: c2, -S1], 80
[ութսուն  :: =c2A, c2, -S1], λx.'1X+80'(x)
[իննսուն :: c2, -S1], 90
[իննսուն  :: =c2A, c2, -S1], λx.'1X+90'(x)
[ :: =c1, +B0, c2], λx.x
[մեկ :: c1, -B0, -A], 1
[հարյուր :: c3], 100
[հարյուր  :: =c2, c3], λx.'1X+100'(x)
[երեք հարյուր :: c3], 300
[երեք հարյուր  :: =c2, c3], λx.'1X+300'(x)
[ հարյուր :: =c1, +C, c3], λx.'100X'(x)
[ հարյուր  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[վեց հարյուր :: c3], 600
[վեց հարյուր  :: =c2, c3], λx.'1X+600'(x)
[յոթ հարյուր :: c3], 700
[յոթ հարյուր  :: =c2, c3], λx.'1X+700'(x)
[ութ հարյուր :: c3], 800
[ութ հարյուր  :: =c2, c3], λx.'1X+800'(x)
[ :: =c1, c3], λx.x
[ :: c1], 3
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +B0, +A, c1, -C], λx.x
[ :: =c1, +B0, +A, c1, -B0], λx.x


Learning Northern-Yi
Learned 999 words in Northern-Yi and structured them in 29 functions.
It took 44 samples to learn those.
Those are:
cyp is 1
nyip is 2
suo is 3
ly is 4
nge is 5
fut is 6
shyp is 7
hxit is 8
ggu is 9
ci is 10
cix zy is 11
ci nyix is 12
Function ci _ maps {3,4,5,6,8} by x -> 1*x+10
ci shy is 17
Function cix _ maps {9} by x -> 0*x+19
Function _ zi maps {2} by x -> 0*x+20
Function _ _ cyx maps {2}x{10} by (x0,x1) -> 0*x0+0*x1+21
Function _ _ nyix maps {2}x{10} by (x0,x1) -> 0*x0+0*x1+22
Function _ _ shyp maps {2}x{10} by (x0,x1) -> 0*x0+0*x1+27
Function _ ci _ maps {2,3,4,5,6,7,8,9}x{3,4,5,6,8,9,7} by (x0,x1) -> 10*x0+1*x1
Function _ ci maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _ ci cyx maps {3,4,5,6,7,8,9} by x -> 10*x+1
Function _ ci nyix maps {3,4,5,6,7,8,9} by x -> 10*x+2
Function _ hxa maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hxa nip _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ hxa _ maps {1,2,3,4,5,6,7,8,9}x{10,11,12,ci _,_ zi,_ _ cyx,_ _ nyix,_ _ shyp,_ ci _,_ ci,_ ci nyix} by (x0,x1) -> 100*x0+1*x1
Function _ hxa _p maps {1,2,3,4,5,6,7,8,9}x{17} by (x0,x1) -> 100*x0+1*x1
Function _ hxa _ _ maps {1,2,3,4,5,6,7,8,9}x{10}x{9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ hxa _x zy maps {1,2,3,4,5,6,7,8,9}x{_ ci} by (x0,x1) -> 100*x0+1*x1+1

MG:
[nyip :: c1, -C, -E, -H], 2
[ggu :: c1, -B, -E, -H, -G, -F], 9
[ci :: c1, -D, -I0], 10
[ci shy :: c2, -J, -S1], 17
[ ci :: =c1, +G, c2, -K, -I, -S1], λx.'10X'(x)
[ :: =c3, cFin], λx.x
[suo :: c1, -E, -H, -G, -F, -A], 3
[ly :: c1, -E, -H, -G, -F, -A], 4
[nge :: c1, -E, -H, -G, -F, -A], 5
[fut :: c1, -E, -H, -G, -F, -A], 6
[shyp :: c1, -E, -H, -G, -F], 7
[hxit :: c1, -E, -H, -G, -F, -A], 8
[cyp :: c1, -H], 1
[cix zy :: c2, -I, -S1], 11
[ci nyix :: c2, -I, -S1], 12
[ci  :: =c2A, c2, -I, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ zi :: =c1, +C, c2, -I, -S1], λx.'0X+20'(x)
[  :: =c2*, =c2C, c2, -I, -I, -I, -S1, -S1, -S1], λxλy.'1X+0Y+21'(x,y)
[ :: =c1, +C, c2C], λx.x
[ cyx :: =c1, +D, c2*], λx.'0X'(x)
[ ci  :: =c2F, =c2E, c2, -I, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, +F, c2F], λx.x
[ ci nyix :: =c1, +G, c2, -I, -S1], λx.'10X+2'(x)
[ :: =c1, +I0, c2, -I], λx.x
[ hxa :: =c1, +H, c3], λx.'100X'(x)
[ hxa nip  :: =c3H, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ hxa  :: =c3I, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c2, +I, c3I], λx.x
[ hxa  :: =c3*, =c3H, c3], λxλy.'1X+100Y'(x,y)
[p :: =c2, +J, c3*], λx.x
[ hxa  :: =c3**, =c3H, c3], λxλy.'1X+100Y'(x,y)
[  :: =c2B, =c3**D, c3**], λxλy.'1X+1Y'(x,y)
[ :: =c1, +D, c3**D], λx.x
[ hxa  :: =c3***, =c3H, c3], λxλy.'1X+100Y+1'(x,y)
[x zy :: =c2, +K, c3***], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[cix  :: =c2B, c2, -S1], λx.'0X+19'(x)
[ :: =c1, +B, c2B], λx.x
[ ci cyx :: =c1, +G, c2, -S1], λx.'10X+1'(x)
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +H, c1, -E], λx.x
[ :: =c2, +I, +S1, +S1, +S1, c2, -I], λx.x
[ :: =c2, +I, +I, +S1, +S1, +S1, c2, -I], λx.x
[ :: =c1, +E, +H, +G, +F, +A, c1, -E], λx.x
[ :: =c2, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +H, +G, +F, c1, -H], λx.x
[ :: =c1, +D, +I0, c1, -D], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +G, +F, +A, c1, -G], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +E, +H, +G, +F, c1, -E], λx.x
[ :: =c1, +H, +G, +F, +A, c1, -H], λx.x
[ :: =c1, +B, +E, +H, +G, +F, c1, -B], λx.x
[ :: =c2, +K, +I, +S1, c2, -K], λx.x
[ :: =c1, +C, +E, +H, c1, -C], λx.x
[ :: =c2, +I, +I, +I, +S1, +S1, +S1, c2, -I], λx.x
[ :: =c1, +G, +F, c1, -G], λx.x
[ :: =c2, +J, +S1, c2, -J], λx.x


Learning Burushaski

Learned 999 words in Burushaski and structured them in 48 functions.
It took 57 samples to learn those.
Those are:
hik is 1
altó is 2
iskí is 3
wálti is 4
číndi is 5
mishíndi is 6
thalé is 7
altámbi is 8
huntí is 9
tóorimi is 10
turma-alto is 12
turma-iski is 13
Function turma-_ maps {1,4,6,8} by x -> 1*x+10
turma-číndi is 15
turma-thale is 17
turma-hunti is 19
altar is 20
altar-alto is 22
altar-iski is 23
Function altar-_ maps {1,4,5,6,8,12,13,turma-_,15,17,19} by x -> 1*x+20
altar-thale is 27
altar-hunti is 29
altar-toorimi is 30
alto-altar is 40
alto-altar-alto is 42
alto-altar-iski is 43
Function alto-altar-_ maps {1,4,5,6,8,12,13,turma-_,15,17,19} by x -> 1*x+40
alto-altar-thale is 47
alto-altar-hunti is 49
alto-altar-toorimi is 50
iski-altar is 60
iski-altar-alto is 62
iski-altar-iski is 63
Function iski-altar-_ maps {1,4,5,6,8,12,13,turma-_,15,17,19} by x -> 1*x+60
iski-altar-thale is 67
iski-altar-hunti is 69
iski-altar-toorimi is 70
walti-altar is 80
walti-altar-alto is 82
walti-altar-iski is 83
Function walti-altar-_ maps {1,4,5,6,8,12,13,turma-_,15,17,19} by x -> 1*x+80
walti-altar-thale is 87
walti-altar-hunti is 89
walti-altar-toorimi is 90
tha is 100
Function tha _ maps {1,2,3,4,5,6,7,8,9,10,12,13,turma-_,15,17,19,20,22,23,altar-_,27,29,30,40,42,43,alto-altar-_,47,49,50,60,62,63,iski-altar-_,67,69,70,80,82,83,walti-altar-_,87,89,90} by x -> 1*x+100
Function _ tha maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ tha _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,12,13,turma-_,15,17,19,20,22,23,altar-_,27,29,30,40,42,43,alto-altar-_,47,49,50,60,62,63,iski-altar-_,67,69,70,80,82,83,walti-altar-_,87,89,90} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[altar :: c3, -S1], 20
[altar-alto :: c3, -S1], 22
[altar-iski :: c3, -S1], 23
[altar- :: =c3B, c3, -S1], λx.'1X+20'(x)
[ :: =c2, +B, c3B], λx.x
[altar-thale :: c3, -S1], 27
[altar-hunti :: c3, -S1], 29
[altar-toorimi :: c3, -S1], 30
[alto-altar :: c3, -S1], 40
[alto-altar-alto :: c3, -S1], 42
[alto-altar-iski :: c3, -S1], 43
[alto-altar- :: =c3B, c3, -S1], λx.'1X+40'(x)
[alto-altar-thale :: c3, -S1], 47
[alto-altar-hunti :: c3, -S1], 49
[alto-altar-toorimi :: c3, -S1], 50
[iski-altar :: c3, -S1], 60
[iski-altar-alto :: c3, -S1], 62
[iski-altar-iski :: c3, -S1], 63
[iski-altar- :: =c3B, c3, -S1], λx.'1X+60'(x)
[iski-altar-thale :: c3, -S1], 67
[iski-altar-hunti :: c3, -S1], 69
[iski-altar-toorimi :: c3, -S1], 70
[walti-altar :: c3, -S1], 80
[walti-altar-alto :: c3, -S1], 82
[walti-altar-iski :: c3, -S1], 83
[walti-altar- :: =c3B, c3, -S1], λx.'1X+80'(x)
[walti-altar-thale :: c3, -S1], 87
[walti-altar-hunti :: c3, -S1], 89
[walti-altar-toorimi :: c3, -S1], 90
[ :: =c1, c3], λx.x
[hik :: c1, -B0, -A], 1
[altó :: c1, -D0], 2
[iskí :: c1, -D0], 3
[wálti :: c1, -B0, -A, -D0], 4
[číndi :: c1, -B0, -D0], 5
[mishíndi :: c1, -B0, -A, -D0], 6
[thalé :: c1, -D0], 7
[altámbi :: c1, -B0, -A, -D0], 8
[ :: =c2, +C1, c3], λx.x
[huntí :: c2, -C1, -D, -S2], 9
[tóorimi :: c2, -C1, -S2], 10
[turma-alto :: c2, -C1, -B, -S2], 12
[turma-iski :: c2, -C1, -B, -S2], 13
[turma- :: =c2A, c2, -C1, -B, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[turma-číndi :: c2, -C1, -B, -S2], 15
[turma-thale :: c2, -C1, -B, -S2], 17
[turma-hunti :: c2, -C1, -B, -S2], 19
[ :: =c1, +B0, c2, -B], λx.x
[ :: =c1, +D0, c2, -D], λx.x
[tha :: c4], 100
[tha  :: =c3, c4], λx.'1X+100'(x)
[ tha :: =c2, +D, c4], λx.'100X'(x)
[ tha  :: =c3, =c4D, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +D, c4D], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +C1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +B, +S2, c2, -B], λx.x
[ :: =c2, +C1, +D, +S2, c2, -C1], λx.x
[ :: =c1, +A, +D0, c1, -A], λx.x
[ :: =c1, +B0, +A, +D0, c1, -B0], λx.x
[ :: =c1, +B0, +D0, c1, -B0], λx.x
[ :: =c1, +B0, +A, c1, -B0], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c2, +C1, +B, +S2, c2, -C1], λx.x
[ :: =c2, +C1, +S2, c2, -C1], λx.x


Learning Uyghur
Learned 999 words in Uyghur and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
bir is 1
ikki is 2
üch is 3
töt is 4
besh is 5
alte is 6
yette is 7
sekkiz is 8
tokkuz is 9
on is 10
Function on _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
yigirme is 20
Function yigirme _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
ottooz is 30
Function ottooz _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
kirik is 40
Function kirik _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ellik is 50
Function ellik _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
atmish is 60
Function atmish _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
yetmish is 70
Function yetmish _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
seksen is 80
Function seksen _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
toksan is 90
Function toksan _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
yüz is 100
Function yüz _ maps {1,2,3,4,5,6,7,8,9,10,on _,20,yigirme _,30,ottooz _,40,kirik _,50,ellik _,60,atmish _,70,yetmish _,80,seksen _,90,toksan _} by x -> 1*x+100
Function _ yüz maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ yüz _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,on _,20,yigirme _,30,ottooz _,40,kirik _,50,ellik _,60,atmish _,70,yetmish _,80,seksen _,90,toksan _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[ikki :: c1, -C], 2
[üch :: c1, -C], 3
[töt :: c1, -C], 4
[besh :: c1, -C], 5
[alte :: c1, -C], 6
[yette :: c1, -C], 7
[sekkiz :: c1, -C], 8
[tokkuz :: c1, -C], 9
[on :: c2, -S1], 10
[on  :: =c1, c2, -S1], λx.'1X+10'(x)
[yigirme :: c2, -S1], 20
[yigirme  :: =c1, c2, -S1], λx.'1X+20'(x)
[ottooz :: c2, -S1], 30
[ottooz  :: =c1, c2, -S1], λx.'1X+30'(x)
[kirik :: c2, -S1], 40
[kirik  :: =c1, c2, -S1], λx.'1X+40'(x)
[ellik :: c2, -S1], 50
[ellik  :: =c1, c2, -S1], λx.'1X+50'(x)
[atmish :: c2, -S1], 60
[atmish  :: =c1, c2, -S1], λx.'1X+60'(x)
[yetmish :: c2, -S1], 70
[yetmish  :: =c1, c2, -S1], λx.'1X+70'(x)
[seksen :: c2, -S1], 80
[seksen  :: =c1, c2, -S1], λx.'1X+80'(x)
[toksan :: c2, -S1], 90
[toksan  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[bir :: c1], 1
[yüz :: c3], 100
[yüz  :: =c2, c3], λx.'1X+100'(x)
[ yüz :: =c1, +C, c3], λx.'100X'(x)
[ yüz  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Kven
Learned 999 words in Kven and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
yksi is 1
kaksi is 2
kolme is 3
nelje is 4
viisi is 5
kuusi is 6
seittemen is 7
kahđeksen is 8
yhđeksen is 9
kymmenen is 10
Function _toista maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kymmentä maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kymmentä_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sata is 100
Function sata_ maps {1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by x -> 1*x+100
Function _sata maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sata_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kymmenen :: c2, -S1], 10
[toista :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[kymmentä :: =c1, +B, c2, -S1], λx.'10X'(x)
[kymmentä :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[yksi :: c1], 1
[kaksi :: c1, -B], 2
[kolme :: c1, -B], 3
[nelje :: c1, -B], 4
[viisi :: c1, -B], 5
[kuusi :: c1, -B], 6
[seittemen :: c1, -B], 7
[kahđeksen :: c1, -B], 8
[yhđeksen :: c1, -B], 9
[sata :: c3], 100
[sata :: =c2, c3], λx.'1X+100'(x)
[sata :: =c1, +B, c3], λx.'100X'(x)
[sata :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Aloapam-Zapotec
Learned 999 words in Aloapam-Zapotec and structured them in 50 functions.
It took 187 samples to learn those.
Those are:
ttubi is 1
chupa is 2
tsunna is 3
ttapa is 4
gayu is 5
xxupa is 6
gasi is 7
xxunu is 8
jaa is 9
tsii is 10
sinia is 11
tsi’inu is 12
tsi’intsagüi is 13
sitá is 14
tsinu is 15
sixupa is 16
tsini is 17
sixunu is 18
chennia is 19
galhia is 20
ttuerua is 21
chuperua is 22
tsunerua is 23
ttaperua is 24
xxuperua is 26
Function _erua maps {5,7,8} by x -> 1*x+20
jaerua is 29
rerua is 30
rerua yu’u ttu is 31
Function rerua yu’u _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
chua is 40
chua yu’u ttu is 41
Function chua yu’u _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function medi _a maps {5} by x -> 0*x+50
Function medi _a yu’u ttu maps {5} by x -> 0*x+51
Function medi _a yu’u _ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _na maps {5} by x -> 0*x+60
Function _na yu’u ttu maps {5} by x -> 0*x+61
Function _na yu’u si’intse maps {5} by x -> 0*x+73
Function _na yu’u tsinu maps {5} by x -> 0*x+75
Function _na yu’u _ maps {5}x{2,3,4,5,6,7,8,9,10,11,12,14,16,17,18,19} by (x0,x1) -> 12*x0+1*x1
ta is 80
ta yu’u ttu is 81
Function ta yu’u _ maps {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19} by x -> 1*x+80
ta yu’u si’intse is 93
Function ttu _a maps {5} by x -> 0*x+100
Function ttu _a gayuerua maps {5} by x -> 0*x+125
Function ttu _a _ maps {5}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,_erua,29,30,31,rerua yu’u _,40,41,chua yu’u _,medi _a,medi _a yu’u ttu,medi _a yu’u _,_na,_na yu’u ttu,_na yu’u _,_na yu’u si’intse,_na yu’u tsinu,80,81,ta yu’u _,93} by (x0,x1) -> 19*x0+1*x1+5
Function _ _a maps {2,3,4,5,6,7,8,9}x{5} by (x0,x1) -> 100*x0+0*x1
Function _ _a _ maps {2,3,4,5,6,7,8,9}x{5}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,_erua,29,30,31,rerua yu’u _,40,41,chua yu’u _,medi _a,medi _a yu’u ttu,medi _a yu’u _,_na,_na yu’u ttu,_na yu’u _,_na yu’u si’intse,_na yu’u tsinu,80,81,ta yu’u _,93} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[gayu :: c1, -C, -E, -B, -A, -D], 5
[ :: =c3, cFin], λx.x
[chupa :: c1, -E, -B, -D], 2
[tsunna :: c1, -E, -B, -D], 3
[ttapa :: c1, -E, -B, -D], 4
[xxupa :: c1, -E, -B, -D], 6
[gasi :: c1, -E, -B, -A, -D], 7
[xxunu :: c1, -E, -B, -A, -D], 8
[jaa :: c1, -E, -B, -D], 9
[tsii :: c1, -E, -D], 10
[sinia :: c1, -E, -D], 11
[tsi’inu :: c1, -E, -D], 12
[sitá :: c1, -E, -D], 14
[tsinu :: c1, -E], 15
[sixupa :: c1, -E, -D], 16
[tsini :: c1, -E, -D], 17
[sixunu :: c1, -E, -D], 18
[chennia :: c1, -E, -D], 19
[ttu  :: =c3*, c3], λx.'1X+100'(x)
[a :: =c1, +C, c3*], λx.'0X'(x)
[a gayuerua :: =c1, +C, c3**], λx.'0X'(x)
[a  :: =c2, =c2C, c3***], λxλy.'1X+19Y'(x,y)
[  :: =c3****, =c2******B, c3], λxλy.'1X+100Y'(x,y)
[a :: =c1, +C, c3****], λx.'0X'(x)
[ :: =c1, c3], λx.x
[ttubi :: c1], 1
[tsi’intsagüi :: c1], 13
[ :: =c2, +S1, c3], λx.x
[galhia :: c2, -S1], 20
[ttuerua :: c2, -S1], 21
[chuperua :: c2, -S1], 22
[tsunerua :: c2, -S1], 23
[ttaperua :: c2, -S1], 24
[xxuperua :: c2, -S1], 26
[erua :: =c1, +A, c2, -S1], λx.'1X+20'(x)
[jaerua :: c2, -S1], 29
[rerua :: c2, -S1], 30
[rerua yu’u ttu :: c2, -S1], 31
[rerua yu’u  :: =c2******B, c2, -S1], λx.'1X+30'(x)
[chua :: c2, -S1], 40
[chua yu’u ttu :: c2, -S1], 41
[chua yu’u  :: =c2******B, c2, -S1], λx.'1X+40'(x)
[medi  :: =c2*, c2, -S1, -S1, -S1], λx.'1X+50'(x)
[a :: =c1, +C, c2*], λx.'0X'(x)
[a yu’u ttu :: =c1, +C, c2**], λx.'0X'(x)
[a yu’u  :: =c2******B, =c2C, c2***], λxλy.'1X+10Y'(x,y)
[na :: =c1, +C, c2, -S1], λx.'0X+60'(x)
[na yu’u ttu :: =c1, +C, c2, -S1], λx.'0X+61'(x)
[na yu’u si’intse :: =c1, +C, c2, -S1], λx.'0X+73'(x)
[na yu’u tsinu :: =c1, +C, c2, -S1], λx.'0X+75'(x)
[na yu’u  :: =c2D, =c2C, c2, -S1], λxλy.'1X+12Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, +D, c2D], λx.x
[ta :: c2, -S1], 80
[ta yu’u ttu :: c2, -S1], 81
[ta yu’u  :: =c2E, c2, -S1], λx.'1X+80'(x)
[ :: =c1, +E, c2E], λx.x
[ta yu’u si’intse :: c2, -S1], 93
[a :: =c1, +C, c2****], λx.'0X'(x)
[a yu’u ttu :: =c1, +C, c2*****], λx.'0X'(x)
[a yu’u  :: =c2******B, =c2C, c2******], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2******B], λx.x
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c2, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +E, +B, +A, +D, c1, -E], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +C, +E, +B, +A, +D, c1, -C], λx.x
[ :: =c1, +E, +B, +D, c1, -E], λx.x
[ :: =c1, +E, +D, c1, -E], λx.x


Learning Czech

Learned 999 words in Czech and structured them in 33 functions.
It took 51 samples to learn those.
Those are:
jedna is 1
dva is 2
tři is 3
čtyři is 4
pět is 5
šest is 6
sedm is 7
osm is 8
devět is 9
deset is 10
jedenáct is 11
Function _náct maps {2,3,6,7,8} by x -> 1*x+10
čtrnáct is 14
patnáct is 15
devatenáct is 19
Function _cet maps {2,3,4} by x -> 10*x+0
Function _cet _ maps {2,3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
padesát is 50
Function padesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
šedesát is 60
Function šedesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _desát maps {7,8} by x -> 10*x+0
Function _desát _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
devadesát is 90
Function devadesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by x -> 1*x+100
dvě stě is 200
Function dvě stě _ maps {1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by x -> 1*x+200
Function _ sta maps {3,4} by x -> 100*x+0
Function _ sta _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by (x0,x1) -> 100*x0+1*x1
Function _ set maps {5,6,7,8,9} by x -> 100*x+0
Function _ set _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[deset :: c2, -S1], 10
[jedenáct :: c2, -S1], 11
[náct :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[čtrnáct :: c2, -S1], 14
[patnáct :: c2, -S1], 15
[devatenáct :: c2, -S1], 19
[cet :: =c1, +B, c2, -S1], λx.'10X'(x)
[cet  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[padesát :: c2, -S1], 50
[padesát  :: =c1, c2, -S1], λx.'1X+50'(x)
[šedesát :: c2, -S1], 60
[šedesát  :: =c1, c2, -S1], λx.'1X+60'(x)
[desát :: =c1, +D, c2, -S1], λx.'10X'(x)
[desát  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[devadesát :: c2, -S1], 90
[devadesát  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[jedna :: c1], 1
[dva :: c1, -B, -A], 2
[tři :: c1, -B, -F, -A], 3
[čtyři :: c1, -B, -F], 4
[pět :: c1, -G], 5
[šest :: c1, -G, -A], 6
[sedm :: c1, -G, -A, -D], 7
[osm :: c1, -G, -A, -D], 8
[devět :: c1, -G], 9
[sto :: c3], 100
[sto  :: =c2, c3], λx.'1X+100'(x)
[dvě stě :: c3], 200
[dvě stě  :: =c2, c3], λx.'1X+200'(x)
[ sta :: =c1, +F, c3], λx.'100X'(x)
[ sta  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ set :: =c1, +G, c3], λx.'100X'(x)
[ set  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x


Learning Ndom
Learned 100 words in Ndom and structured them in 15 functions.
It took 20 samples to learn those.
Those are:
sas is 1
thef is 2
ithin is 3
thonith is 4
meregh is 5
mer is 6
Function mer abo _ maps {1,2,3,4,5} by x -> 1*x+6
Function mer an _ maps {2} by x -> 0*x+12
Function mer an _ abo _ maps {2}x{1,2,3,4,5} by (x0,x1) -> 5*x0+1*x1+2
tondor is 18
Function tondor abo _ maps {1,2,3,4,5,6,mer abo _,mer an _,mer an _ abo _} by x -> 1*x+18
nif is 36
Function nif abo _ maps {1,2,3,4,5,6,mer abo _,mer an _,mer an _ abo _,18,tondor abo _} by x -> 1*x+36
Function nif _ maps {2} by x -> 0*x+72
Function nif _ abo _ maps {2}x{1,2,3,4,5,6,mer abo _,mer an _,mer an _ abo _,18,tondor abo _} by (x0,x1) -> 29*x0+1*x1+14

MG:
[thef :: c1, -B], 2
[ :: =c4, cFin], λx.x
[mer :: c2, -D1, -S2], 6
[mer abo  :: =c1, c2, -D1, -S2], λx.'1X+6'(x)
[mer an  :: =c2***B, c2, -D1, -S2], λx.'0X+12'(x)
[mer an  :: =c2*, c2, -D1, -S2], λx.'1X+2'(x)
[ abo  :: =c1, =c2***B, c2*], λxλy.'1X+5Y'(x,y)
[ :: =c1, c2], λx.x
[sas :: c1], 1
[ithin :: c1], 3
[thonith :: c1], 4
[meregh :: c1], 5
[tondor :: c3, -S1], 18
[tondor abo  :: =c2, c3, -S1], λx.'1X+18'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +D1, c3], λx.x
[ abo  :: =c1, =c2***B, c2**], λxλy.'1X+5Y'(x,y)
[nif :: c4], 36
[nif abo  :: =c3, c4], λx.'1X+36'(x)
[nif  :: =c2***B, c4], λx.'0X+72'(x)
[nif  :: =c4*, c4], λx.'1X+14'(x)
[ abo  :: =c3, =c2***B, c4*], λxλy.'1X+29Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ abo  :: =c1, =c2***B, c2***], λxλy.'1X+5Y'(x,y)
[ :: =c1, +B, c2***B], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x


Learning Wayuu
Learned 999 words in Wayuu and structured them in 64 functions.
It took 422 samples to learn those.
Those are:
waneeshia is 1
piama is 2
apünüin is 3
pienchi is 4
ja’rai is 5
aipirua is 6
akaraishi is 7
mekiisalü is 8
mekie’etasalü is 9
po’loo is 10
po’loo waneeshimüin is 11
Function po’loo _müin maps {2,3,4,6,7,8,9} by x -> 1*x+10
po’loo ja’ralimüin is 15
Function _ shikii waneeshimüin maps {2,3,4,5,6,7,8,9,10} by x -> 10*x+1
Function _ shikii _müin maps {2,3,4,5,6,7,8,9,10}x{2,3,4,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ shikii ja’ralimüin maps {2,3,4,5,6,7,8,9,10} by x -> 10*x+5
Function _ shikii maps {2,3,4,5,6,7,8,9,10} by x -> 10*x+0
Function _ shikii, _müin maps {10}x{10} by (x0,x1) -> 0*x0+0*x1+110
Function _ shikii, _müin shikii maps {10}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+10*x1
Function _ shikii ja’ralimüin shikii waneeshimüin maps {10} by x -> 0*x+151
Function _ shikii ja’ralimüin shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 15*x0+1*x1
Function _ shikii ja’ralimüin shikii ja’ralimüin maps {10} by x -> 0*x+155
Function _ shikii, _ maps {10}x{11,po’loo _müin,15,_ shikii waneeshimüin,_ shikii _müin,_ shikii ja’ralimüin} by (x0,x1) -> 10*x0+1*x1
Function piantua _in shikii maps {10} by x -> 0*x+200
Function piantua _in shikii waneeshimüin maps {10} by x -> 0*x+201
Function piantua _in shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 20*x0+1*x1
Function piantua _in shikii ja’ralimüin maps {10} by x -> 0*x+205
Function piantua _in shikii, _müin maps {10}x{10} by (x0,x1) -> 0*x0+0*x1+210
Function piantua _in shikii, _müin shikii maps {10}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 20*x0+10*x1
Function piantua _in shikii ja’ralimüin shikii waneeshimüin maps {10} by x -> 0*x+251
Function piantua _in shikii ja’ralimüin shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 25*x0+1*x1
Function piantua _in shikii ja’ralimüin shikii ja’ralimüin maps {10} by x -> 0*x+255
Function piantua _in shikii, _ maps {10}x{11,po’loo _müin,15,_ shikii waneeshimüin,_ shikii _müin,_ shikii ja’ralimüin} by (x0,x1) -> 20*x0+1*x1
Function _tua _in shikii, apünüin shikii apünüinmüin maps {3}x{10} by (x0,x1) -> 0*x0+0*x1+333
Function _tua _in shikii maps {3,4,5,6,7}x{10} by (x0,x1) -> 100*x0+0*x1
Function _tua _in shikii waneeshimüin maps {3,4,5,6,7}x{10} by (x0,x1) -> 100*x0+0*x1+1
Function _tua _in shikii _müin maps {3,4,5,6,7}x{10}x{2,3,4,6,7,8,9} by (x0,x1,x2) -> 100*x0+0*x1+1*x2
Function _tua _in shikii ja’ralimüin maps {3,4,5,6,7}x{10} by (x0,x1) -> 100*x0+0*x1+5
Function _tua _in shikii, _müin maps {3,4,5,6,7}x{10}x{10} by (x0,x1,x2) -> 100*x0+0*x1+1*x2
Function _tua _in shikii, _müin shikii maps {3,4,5,6,7}x{10}x{2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+0*x1+10*x2
Function _tua _in shikii, _ maps {3,4,5,6,7}x{10}x{11,po’loo _müin,15,_ shikii waneeshimüin,_ shikii _müin,_ shikii ja’ralimüin} by (x0,x1,x2) -> 100*x0+0*x1+1*x2
Function _tua _in shikii ja’ralimüin shikii waneeshimüin maps {3,4,5,6,7}x{10} by (x0,x1) -> 100*x0+5*x1+1
Function _tua _in shikii ja’ralimüin shikii _müin maps {3,4,5,6,7}x{10}x{2,3,4,6,7,8,9} by (x0,x1,x2) -> 100*x0+5*x1+1*x2
Function _tua _in shikii ja’ralimüin shikii ja’ralimüin maps {3,4,5,6,7}x{10} by (x0,x1) -> 100*x0+5*x1+5
Function mekiisattua _in shikii maps {10} by x -> 0*x+800
Function mekiisattua _in shikii waneeshimüin maps {10} by x -> 0*x+801
Function mekiisattua _in shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 79*x0+1*x1+10
Function mekiisattua _in shikii ja’ralimüin maps {10} by x -> 0*x+805
Function mekiisattua _in shikii, _müin maps {10}x{10} by (x0,x1) -> 0*x0+0*x1+810
Function mekiisattua _in shikii, _müin shikii maps {10}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 79*x0+10*x1+10
Function mekiisattua _in shikii ja’ralimüin shikii waneeshimüin maps {10} by x -> 0*x+851
Function mekiisattua _in shikii ja’ralimüin shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 84*x0+1*x1+10
Function mekiisattua _in shikii ja’ralimüin shikii ja’ralimüin maps {10} by x -> 0*x+855
Function mekiisattua _in shikii, _ maps {10}x{11,po’loo _müin,15,_ shikii waneeshimüin,_ shikii _müin,_ shikii ja’ralimüin} by (x0,x1) -> 79*x0+1*x1+10
Function mekie’etasattua _in shikii maps {10} by x -> 0*x+900
Function mekie’etasattua _in shikii waneeshimüin maps {10} by x -> 0*x+901
Function mekie’etasattua _in shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 89*x0+1*x1+10
Function mekie’etasattua _in shikii ja’ralimüin maps {10} by x -> 0*x+905
Function mekie’etasattua _in shikii, _müin maps {10}x{10} by (x0,x1) -> 0*x0+0*x1+910
Function mekie’etasattua _in shikii, _müin shikii maps {10}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 89*x0+10*x1+10
Function mekie’etasattua _in shikii ja’ralimüin shikii waneeshimüin maps {10} by x -> 0*x+951
Function mekie’etasattua _in shikii ja’ralimüin shikii _müin maps {10}x{2,3,4,6,7,8,9} by (x0,x1) -> 94*x0+1*x1+10
Function mekie’etasattua _in shikii ja’ralimüin shikii ja’ralimüin maps {10} by x -> 0*x+955
Function mekie’etasattua _in shikii, _ maps {10}x{11,po’loo _müin,15,_ shikii waneeshimüin,_ shikii _müin,_ shikii ja’ralimüin} by (x0,x1) -> 89*x0+1*x1+10

MG:
[apünüin :: c1, -F, -B, -G, -A, -D], 3
[po’loo :: c1, -C, -B], 10
[ :: =c3, cFin], λx.x
[po’loo waneeshimüin :: c2, -E], 11
[po’loo  :: =c2*, c2, -E], λx.'1X+10'(x)
[müin :: =c1, +A, c2*], λx.x
[po’loo ja’ralimüin :: c2, -E], 15
[ shikii waneeshimüin :: =c1, +B, c2, -E], λx.'10X+1'(x)
[ shikii  :: =c2**, =c2B, c2, -E], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[müin :: =c1, +A, c2**], λx.x
[ shikii ja’ralimüin :: =c1, +B, c2, -E], λx.'10X+5'(x)
[piama :: c1, -B, -A, -D], 2
[pienchi :: c1, -B, -G, -A, -D], 4
[ja’rai :: c1, -B, -G, -D], 5
[aipirua :: c1, -B, -G, -A, -D], 6
[akaraishi :: c1, -B, -G, -A, -D], 7
[mekiisalü :: c1, -B, -A, -D], 8
[mekie’etasalü :: c1, -B, -A, -D], 9
[ shikii,  :: =c3*, =c3************************************************************C, c3], λxλy.'1X+0Y+110'(x,y)
[müin :: =c1, +C, c3*], λx.'0X'(x)
[ shikii,  :: =c3**, =c3************************************************************C, c3], λxλy.'1X+10Y'(x,y)
[müin shikii :: =c1, +D, c3**], λx.'10X'(x)
[ shikii ja’ralimüin shikii waneeshimüin :: =c1, +C, c3], λx.'0X+151'(x)
[ shikii ja’ralimüin shikii  :: =c3***, =c3************************************************************C, c3], λxλy.'1X+15Y'(x,y)
[müin :: =c1, +A, c3***], λx.x
[ shikii ja’ralimüin shikii ja’ralimüin :: =c1, +C, c3], λx.'0X+155'(x)
[ shikii,  :: =c3************************************************************E, =c3************************************************************C, c3], λxλy.'1X+10Y'(x,y)
[piantua  :: =c3****, c3], λx.'1X+200'(x)
[in shikii :: =c1, +C, c3****], λx.'0X'(x)
[in shikii waneeshimüin :: =c1, +C, c3*****], λx.'0X'(x)
[in shikii  :: =c3*******, =c3************************************************************C, c3******], λxλy.'1X+20Y'(x,y)
[müin :: =c1, +A, c3*******], λx.x
[in shikii ja’ralimüin :: =c1, +C, c3********], λx.'0X'(x)
[in shikii,  :: =c3**********, =c3************************************************************C, c3*********], λxλy.'1X+0Y'(x,y)
[müin :: =c1, +C, c3**********], λx.'0X'(x)
[in shikii,  :: =c3************, =c3************************************************************C, c3***********], λxλy.'1X+20Y'(x,y)
[müin shikii :: =c1, +D, c3************], λx.'10X'(x)
[in shikii ja’ralimüin shikii waneeshimüin :: =c1, +C, c3*************], λx.'0X'(x)
[in shikii ja’ralimüin shikii  :: =c3***************, =c3************************************************************C, c3**************], λxλy.'1X+25Y'(x,y)
[müin :: =c1, +A, c3***************], λx.x
[in shikii ja’ralimüin shikii ja’ralimüin :: =c1, +C, c3****************], λx.'0X'(x)
[in shikii,  :: =c3************************************************************E, =c3************************************************************C, c3*****************], λxλy.'1X+20Y'(x,y)
[tua  :: =c3******************, =c3F, c3], λxλy.'1X+0Y+333'(x,y)
[ :: =c1, +F, c3F], λx.x
[in shikii, apünüin shikii apünüinmüin :: =c1, +C, c3******************], λx.'0X'(x)
[tua  :: =c3*******************, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[in shikii :: =c1, +C, c3*******************], λx.'0X'(x)
[in shikii waneeshimüin :: =c1, +C, c3********************], λx.'0X'(x)
[in shikii  :: =c3**********************, =c3************************************************************C, c3*********************], λxλy.'1X+0Y'(x,y)
[müin :: =c1, +A, c3**********************], λx.x
[in shikii ja’ralimüin :: =c1, +C, c3***********************], λx.'0X'(x)
[in shikii,  :: =c3*************************, =c3************************************************************C, c3************************], λxλy.'1X+0Y'(x,y)
[müin :: =c1, +C, c3*************************], λx.x
[in shikii,  :: =c3***************************, =c3************************************************************C, c3**************************], λxλy.'1X+0Y'(x,y)
[müin shikii :: =c1, +D, c3***************************], λx.'10X'(x)
[in shikii,  :: =c3************************************************************E, =c3************************************************************C, c3****************************], λxλy.'1X+0Y'(x,y)
[in shikii ja’ralimüin shikii waneeshimüin :: =c1, +C, c3*****************************], λx.'5X'(x)
[in shikii ja’ralimüin shikii  :: =c3*******************************, =c3************************************************************C, c3******************************], λxλy.'1X+5Y'(x,y)
[müin :: =c1, +A, c3*******************************], λx.x
[in shikii ja’ralimüin shikii ja’ralimüin :: =c1, +C, c3********************************], λx.'5X'(x)
[mekiisattua  :: =c3*********************************, c3], λx.'1X+800'(x)
[in shikii :: =c1, +C, c3*********************************], λx.'0X'(x)
[in shikii waneeshimüin :: =c1, +C, c3**********************************], λx.'0X'(x)
[in shikii  :: =c3************************************, =c3************************************************************C, c3***********************************], λxλy.'1X+79Y'(x,y)
[müin :: =c1, +A, c3************************************], λx.x
[in shikii ja’ralimüin :: =c1, +C, c3*************************************], λx.'0X'(x)
[in shikii,  :: =c3***************************************, =c3************************************************************C, c3**************************************], λxλy.'1X+0Y'(x,y)
[müin :: =c1, +C, c3***************************************], λx.'0X'(x)
[in shikii,  :: =c3*****************************************, =c3************************************************************C, c3****************************************], λxλy.'1X+79Y'(x,y)
[müin shikii :: =c1, +D, c3*****************************************], λx.'10X'(x)
[in shikii ja’ralimüin shikii waneeshimüin :: =c1, +C, c3******************************************], λx.'0X'(x)
[in shikii ja’ralimüin shikii  :: =c3********************************************, =c3************************************************************C, c3*******************************************], λxλy.'1X+84Y'(x,y)
[müin :: =c1, +A, c3********************************************], λx.x
[in shikii ja’ralimüin shikii ja’ralimüin :: =c1, +C, c3*********************************************], λx.'0X'(x)
[in shikii,  :: =c3************************************************************E, =c3************************************************************C, c3**********************************************], λxλy.'1X+79Y'(x,y)
[mekie’etasattua  :: =c3***********************************************, c3], λx.'1X+900'(x)
[in shikii :: =c1, +C, c3***********************************************], λx.'0X'(x)
[in shikii waneeshimüin :: =c1, +C, c3************************************************], λx.'0X'(x)
[in shikii  :: =c3**************************************************, =c3************************************************************C, c3*************************************************], λxλy.'1X+89Y'(x,y)
[müin :: =c1, +A, c3**************************************************], λx.x
[in shikii ja’ralimüin :: =c1, +C, c3***************************************************], λx.'0X'(x)
[in shikii,  :: =c3*****************************************************, =c3************************************************************C, c3****************************************************], λxλy.'1X+0Y'(x,y)
[müin :: =c1, +C, c3*****************************************************], λx.'0X'(x)
[in shikii,  :: =c3*******************************************************, =c3************************************************************C, c3******************************************************], λxλy.'1X+89Y'(x,y)
[müin shikii :: =c1, +D, c3*******************************************************], λx.'10X'(x)
[in shikii ja’ralimüin shikii waneeshimüin :: =c1, +C, c3********************************************************], λx.'0X'(x)
[in shikii ja’ralimüin shikii  :: =c3**********************************************************, =c3************************************************************C, c3*********************************************************], λxλy.'1X+94Y'(x,y)
[müin :: =c1, +A, c3**********************************************************], λx.x
[in shikii ja’ralimüin shikii ja’ralimüin :: =c1, +C, c3***********************************************************], λx.'0X'(x)
[in shikii,  :: =c3************************************************************E, =c3************************************************************C, c3************************************************************], λxλy.'1X+89Y'(x,y)
[ :: =c1, +C, c3************************************************************C], λx.x
[ :: =c2, +E, c3************************************************************E], λx.x
[ :: =c1, c3], λx.x
[waneeshia :: c1], 1
[ :: =c2, c3], λx.x
[ shikii :: =c1, +B, c2], λx.'10X'(x)
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +F, +B, +G, +A, +D, c1, -F], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x
[ :: =c1, +B, +G, +D, c1, -B], λx.x
[ :: =c1, +B, +G, +A, +D, c1, -B], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Kristang

Learned 999 words in Kristang and structured them in 43 functions.
It took 68 samples to learn those.
Those are:
ngua is 1
dos is 2
tres is 3
kuatu is 4
singku is 5
sez is 6
seti is 7
oitu is 8
novi is 9
des is 10
onzi is 11
dozi is 12
trezi is 13
katorzi is 14
kinzi is 15
dises is 16
Function di_ maps {7} by x -> 0*x+17
Function dis_ maps {8,9} by x -> 1*x+10
binti is 20
Function binti _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
korenta is 40
Function korenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _enta maps {5} by x -> 0*x+50
Function _enta _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sesenta is 60
Function sesenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
satenta is 70
Function satenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
oitenta is 80
Function oitenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sentu is 100
Function nsentu _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,di_,dis_,20,binti _,30,trinta _,40,korenta _,_enta,_enta _,60,sesenta _,70,satenta _,80,oitenta _,90,noventa _} by x -> 1*x+100
Function _ n_ di_ maps {2}x{100}x{7} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+217
Function _ n_ dis_ maps {2}x{100}x{8,9} by (x0,x1,x2) -> 4*x0+2*x1+1*x2+2
Function _ n_ binti maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+220
Function _ n_ binti _ maps {2}x{100}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 8*x0+2*x1+1*x2+4
Function _ n_ korenta maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+240
Function _ sentu maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ nsentu _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,30,trinta _,korenta _,60,sesenta _,70,satenta _,80,oitenta _,90,noventa _,_enta,_enta _,di_,40,dis_,20,binti _} by (x0,x1) -> 100*x0+1*x1

MG:
[dos :: c1, -F, -H], 2
[singku :: c1, -D, -H], 5
[seti :: c1, -A, -H], 7
[sentu :: c2, -G, -S1], 100
[ :: =c3, cFin], λx.x
[des :: c2, -E, -I, -S1], 10
[onzi :: c2, -E, -I, -S1], 11
[dozi :: c2, -E, -I, -S1], 12
[trezi :: c2, -E, -I, -S1], 13
[katorzi :: c2, -E, -I, -S1], 14
[kinzi :: c2, -E, -I, -S1], 15
[dises :: c2, -E, -I, -S1], 16
[di :: =c2A, c2, -E, -I, -S1], λx.'0X+17'(x)
[ :: =c1, +A, c2A], λx.x
[dis :: =c2B, c2, -E, -I, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[binti :: c2, -E, -I, -S1], 20
[binti  :: =c1, c2, -E, -I, -S1], λx.'1X+20'(x)
[trinta :: c2, -E, -I, -S1], 30
[trinta  :: =c1, c2, -E, -I, -S1], λx.'1X+30'(x)
[korenta :: c2, -E, -I, -S1], 40
[korenta  :: =c1, c2, -E, -I, -S1], λx.'1X+40'(x)
[enta :: =c1, +D, c2, -E, -I, -S1], λx.'0X+50'(x)
[enta  :: =c1, =c2D, c2, -E, -I, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[sesenta :: c2, -E, -I, -S1], 60
[sesenta  :: =c1, c2, -E, -I, -S1], λx.'1X+60'(x)
[satenta :: c2, -E, -I, -S1], 70
[satenta  :: =c1, c2, -E, -I, -S1], λx.'1X+70'(x)
[oitenta :: c2, -E, -I, -S1], 80
[oitenta  :: =c1, c2, -E, -I, -S1], λx.'1X+80'(x)
[noventa :: c2, -E, -I, -S1], 90
[noventa  :: =c1, c2, -E, -I, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -E], λx.x
[ngua :: c1], 1
[tres :: c1, -H], 3
[kuatu :: c1, -H], 4
[sez :: c1, -H], 6
[oitu :: c1, -H, -B], 8
[novi :: c1, -H, -B], 9
[ :: =c1, c2, -I], λx.x
[nsentu  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[ n :: =c3*, =c3F, c3], λxλy.'1X+0Y+217'(x,y)
[ :: =c1, +F, c3F], λx.x
[ di :: =c2A, =c3****G, c3*], λxλy.'0X+0Y'(x,y)
[ dis :: =c2B, =c3****G, c3**], λxλy.'1X+2Y'(x,y)
[ binti :: =c2, +G, c3***], λx.'0X'(x)
[ binti  :: =c1, =c3****G, c3****], λxλy.'1X+2Y'(x,y)
[ :: =c2, +G, c3****G], λx.x
[ sentu :: =c1, +H, c3], λx.'100X'(x)
[ nsentu  :: =c3I, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c2, +I, c3I], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c2, +E, +I, +S1, c2, -E], λx.x
[ :: =c1, +F, +H, c1, -F], λx.x
[ :: =c1, +A, +H, c1, -A], λx.x
[ :: =c1, +D, +H, c1, -D], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x


Learning Scots
Learned 999 words in Scots and structured them in 28 functions.
It took 39 samples to learn those.
Those are:
ane is 1
twa is 2
three is 3
fower is 4
five is 5
sax is 6
seiven is 7
aicht is 8
nine is 9
ten is 10
eleiven is 11
Function _l maps {2} by x -> 0*x+12
thirteen is 13
fifteen is 15
Function _teen maps {4,6,7,9} by x -> 1*x+10
Function _een maps {8} by x -> 0*x+18
twinty is 20
Function twinty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
thirty is 30
Function thirty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
fifty is 50
Function fifty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ty maps {4,6,7,9} by x -> 10*x+0
Function _ty-_ maps {4,6,7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _y maps {8} by x -> 0*x+80
Function _y-_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hunder maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hunder _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_l,13,15,_teen,_een,20,twinty-_,30,thirty-_,50,fifty-_,_ty,_ty-_,_y,_y-_} by (x0,x1) -> 100*x0+1*x1

MG:
[twa :: c1, -A], 2
[aicht :: c1, -C], 8
[ :: =c3, cFin], λx.x
[ten :: c2, -S1], 10
[eleiven :: c2, -S1], 11
[l :: =c1, +A, c2, -S1], λx.'0X+12'(x)
[thirteen :: c2, -S1], 13
[fifteen :: c2, -S1], 15
[teen :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[een :: =c1, +C, c2, -S1], λx.'0X+18'(x)
[twinty :: c2, -S1], 20
[twinty- :: =c1, c2, -S1], λx.'1X+20'(x)
[thirty :: c2, -S1], 30
[thirty- :: =c1, c2, -S1], λx.'1X+30'(x)
[fifty :: c2, -S1], 50
[fifty- :: =c1, c2, -S1], λx.'1X+50'(x)
[ty :: =c1, +B, c2, -S1], λx.'10X'(x)
[ty- :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[y :: =c1, +C, c2, -S1], λx.'0X+80'(x)
[y- :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[ane :: c1], 1
[three :: c1], 3
[fower :: c1, -B], 4
[five :: c1], 5
[sax :: c1, -B], 6
[seiven :: c1, -B], 7
[nine :: c1, -B], 9
[ hunder :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hunder  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Shona
Learned 999 words in Shona and structured them in 45 functions.
It took 254 samples to learn those.
Those are:
motsi is 1
piri is 2
tatu is 3
china is 4
shanu is 5
tanhatu is 6
nomwe is 7
sere is 8
pfumbamwe is 9
gumi is 10
gumi neimwe is 11
gumi nembiri is 12
gumi nenhatu is 13
gumi neina is 14
gumi nenhanhatu is 16
Function gumi ne_ maps {5,7,8,9} by x -> 1*x+10
makumi maviri is 20
makumi maviri neimwe is 21
makumi maviri nembiri is 22
makumi maviri nenhatu is 23
makumi maviri nena is 24
makumi maviri nenhanhatu is 26
Function makumi maviri ne_ maps {5,7,8,9} by x -> 1*x+20
makumi mana is 40
makumi mana neimwe is 41
makumi mana nembiri is 42
makumi mana nenhatu is 43
makumi mana nena is 44
makumi mana nenhanhatu is 46
Function makumi mana ne_ maps {5,7,8,9} by x -> 1*x+40
Function makumi ma_ maps {3,5,6,7,8,9} by x -> 10*x+0
Function makumi ma_ neimwe maps {3,5,6,7,8,9} by x -> 10*x+1
Function makumi ma_ nembiri maps {3,5,6,7,8,9} by x -> 10*x+2
Function makumi ma_ nenhatu maps {3,5,6,7,8,9} by x -> 10*x+3
Function makumi ma_ nena maps {3,5,6,7,8,9} by x -> 10*x+4
Function makumi ma_ ne_ maps {3,5,6,7,8,9}x{5,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function makumi ma_ nenhanhatu maps {3,5,6,7,8,9} by x -> 10*x+6
zana is 100
Function zana ne_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,gumi ne_,20,21,22,23,24,26,makumi maviri ne_,40,41,42,43,44,46,makumi mana ne_,makumi ma_,makumi ma_ neimwe,makumi ma_ nembiri,makumi ma_ nenhatu,makumi ma_ nena,makumi ma_ ne_,makumi ma_ nenhanhatu} by x -> 1*x+100
mazana maviri is 200
Function ma_ maviri ne_ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,gumi ne_,16,20,21,22,23,24,makumi maviri ne_,26,makumi ma_,makumi ma_ neimwe,makumi ma_ nembiri,makumi ma_ nenhatu,makumi ma_ nena,makumi ma_ ne_,makumi ma_ nenhanhatu,40,41,42,43,44,makumi mana ne_,46} by (x0,x1) -> 2*x0+1*x1
Function ma_ mana maps {100} by x -> 0*x+400
Function ma_ mana ne_ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,gumi ne_,16,20,21,22,23,24,makumi maviri ne_,26,makumi ma_,makumi ma_ neimwe,makumi ma_ nembiri,makumi ma_ nenhatu,makumi ma_ nena,makumi ma_ ne_,makumi ma_ nenhanhatu,40,41,42,43,44,makumi mana ne_,46} by (x0,x1) -> 4*x0+1*x1
Function mazana ma_ maps {3,5,6,7,8,9} by x -> 100*x+0
Function mazana ma_ ne_ maps {3,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,gumi ne_,20,21,22,23,24,26,makumi maviri ne_,40,41,42,43,44,46,makumi mana ne_,makumi ma_,makumi ma_ neimwe,makumi ma_ nembiri,makumi ma_ nenhatu,makumi ma_ nena,makumi ma_ ne_,makumi ma_ nenhanhatu} by (x0,x1) -> 100*x0+1*x1

MG:
[zana :: c2, -D, -S1], 100
[ :: =c3, cFin], λx.x
[gumi :: c2, -E, -C, -S1], 10
[gumi neimwe :: c2, -E, -C, -S1], 11
[gumi nembiri :: c2, -E, -C, -S1], 12
[gumi nenhatu :: c2, -E, -C, -S1], 13
[gumi neina :: c2, -E, -C, -S1], 14
[gumi nenhanhatu :: c2, -E, -C, -S1], 16
[gumi ne :: =c2*****************A, c2, -E, -C, -S1], λx.'1X+10'(x)
[makumi maviri :: c2, -E, -C, -S1], 20
[makumi maviri neimwe :: c2, -E, -C, -S1], 21
[makumi maviri nembiri :: c2, -E, -C, -S1], 22
[makumi maviri nenhatu :: c2, -E, -C, -S1], 23
[makumi maviri nena :: c2, -E, -C, -S1], 24
[makumi maviri nenhanhatu :: c2, -E, -C, -S1], 26
[makumi maviri ne :: =c2*****************A, c2, -E, -C, -S1], λx.'1X+20'(x)
[makumi mana :: c2, -E, -C, -S1], 40
[makumi mana neimwe :: c2, -E, -C, -S1], 41
[makumi mana nembiri :: c2, -E, -C, -S1], 42
[makumi mana nenhatu :: c2, -E, -C, -S1], 43
[makumi mana nena :: c2, -E, -C, -S1], 44
[makumi mana nenhanhatu :: c2, -E, -C, -S1], 46
[makumi mana ne :: =c2*****************A, c2, -E, -C, -S1], λx.'1X+40'(x)
[makumi ma :: =c2*****************B, c2, -E, -C, -S1], λx.'10X'(x)
[makumi ma :: =c2*, c2, -E, -E, -E, -E, -E, -E, -C, -C, -C, -C, -C, -C, -S1, -S1, -S1, -S1, -S1, -S1], λx.'1X+1'(x)
[ neimwe :: =c1, +B, c2*], λx.'10X'(x)
[ nembiri :: =c1, +B, c2**], λx.'10X'(x)
[ nenhatu :: =c1, +B, c2***], λx.'10X'(x)
[ nena :: =c1, +B, c2****], λx.'10X'(x)
[ ne :: =c2*****************A, =c2*****************B, c2*****], λxλy.'1X+10Y'(x,y)
[ nenhanhatu :: =c1, +B, c2******], λx.'10X'(x)
[ :: =c1, c2, -E], λx.x
[motsi :: c1], 1
[piri :: c1], 2
[tatu :: c1, -B], 3
[china :: c1], 4
[shanu :: c1, -B, -A], 5
[tanhatu :: c1, -B], 6
[nomwe :: c1, -B, -A], 7
[sere :: c1, -B, -A], 8
[pfumbamwe :: c1, -B, -A], 9
[ neimwe :: =c1, +B, c2*******], λx.'10X'(x)
[ nembiri :: =c1, +B, c2********], λx.'10X'(x)
[ nenhatu :: =c1, +B, c2*********], λx.'10X'(x)
[ nena :: =c1, +B, c2**********], λx.'10X'(x)
[ ne :: =c2*****************A, =c2*****************B, c2***********], λxλy.'1X+10Y'(x,y)
[ nenhanhatu :: =c1, +B, c2************], λx.'10X'(x)
[ :: =c1, c2, -C], λx.x
[zana ne :: =c3****C, c3], λx.'1X+100'(x)
[mazana maviri :: c3], 200
[ma :: =c3*, c3], λx.x
[ maviri ne :: =c3***E, =c3***D, c3*], λxλy.'1X+2Y'(x,y)
[ mana :: =c2, +D, c3**], λx.'0X'(x)
[ mana ne :: =c3***E, =c3***D, c3***], λxλy.'1X+4Y'(x,y)
[ :: =c2, +D, c3***D], λx.x
[ :: =c2, +E, c3***E], λx.x
[mazana ma :: =c2*****************B, c3], λx.'100X'(x)
[mazana ma :: =c3****, c3], λx.x
[ ne :: =c3****C, =c2*****************B, c3****], λxλy.'1X+100Y'(x,y)
[ :: =c2, +C, c3****C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ neimwe :: =c1, +B, c2*************], λx.'10X'(x)
[ nembiri :: =c1, +B, c2**************], λx.'10X'(x)
[ nenhatu :: =c1, +B, c2***************], λx.'10X'(x)
[ nena :: =c1, +B, c2****************], λx.'10X'(x)
[ ne :: =c2*****************A, =c2*****************B, c2*****************], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2*****************B], λx.x
[ :: =c1, +A, c2*****************A], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x
[ :: =c2, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x
[ :: =c2, +E, +C, +S1, c2, -E], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c2, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +E, +E, +E, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +E, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x
[ :: =c2, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +E, +E, +E, +E, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +E, +E, +E, +E, +E, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +E, +E, +E, +C, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -E], λx.x
[ :: =c2, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x
[ :: =c2, +C, +C, +C, +C, +C, +S1, +S1, +S1, +S1, +S1, +S1, c2, -C], λx.x


Learning Tok-Pisin

Learned 999 words in Tok-Pisin and structured them in 18 functions.
It took 115 samples to learn those.
Those are:
wan is 1
tu is 2
tri is 3
foa is 4
faiv is 5
sikis is 6
seven is 7
et is 8
nain is 9
ten is 10
Function _pela ten _ maps {1,2,3,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _pela ten maps {2,3,6,7,8,9} by x -> 10*x+0
fopela ten is 40
Function fopela ten _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
faipela ten is 50
Function faipela ten _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ hand_ maps {1,2,3,4,5,6,7,8,9}x{8} by (x0,x1) -> 100*x0+0*x1
Function _ hand_ _ maps {1,2,3,4,5,6,7,8,9}x{8}x{1,2,3,4,5,6,7,8,9,10,_pela ten _,_pela ten,40,fopela ten _,50,faipela ten _} by (x0,x1,x2) -> 100*x0+0*x1+1*x2

MG:
[et :: c1, -D, -C, -A], 8
[ :: =c3, cFin], λx.x
[ten :: c2, -S1], 10
[pela ten  :: =c1, =c2A, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[pela ten :: =c1, +C, c2, -S1], λx.'10X'(x)
[fopela ten :: c2, -S1], 40
[fopela ten  :: =c1, c2, -S1], λx.'1X+40'(x)
[faipela ten :: c2, -S1], 50
[faipela ten  :: =c1, c2, -S1], λx.'1X+50'(x)
[ :: =c1, c2], λx.x
[wan :: c1, -A], 1
[tu :: c1, -C, -A], 2
[tri :: c1, -C, -A], 3
[foa :: c1], 4
[faiv :: c1], 5
[sikis :: c1, -C, -A], 6
[seven :: c1, -C, -A], 7
[nain :: c1, -C, -A], 9
[ hand :: =c3*D, =c1, c3], λxλy.'0X+100Y'(x,y)
[ hand :: =c3*, =c1, c3], λxλy.'1X+100Y'(x,y)
[  :: =c2, =c3*D, c3*], λxλy.'1X+0Y'(x,y)
[ :: =c1, +D, c3*D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +D, +C, +A, c1, -D], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Southern-Sami
Learned 999 words in Southern-Sami and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
akte is 1
göökte is 2
golme is 3
njieljie is 4
vïjhte is 5
govhte is 6
tjïjhtje is 7
gaektsie is 8
uktsie is 9
luhkie is 10
Function luhkie_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _luhkie maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _luhkie_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
tjuetie is 100
Function tjuetie_ maps {1,2,3,4,5,6,7,8,9,10,luhkie_,_luhkie,_luhkie_} by x -> 1*x+100
Function _tjuetie maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _tjuetie_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,luhkie_,_luhkie,_luhkie_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[luhkie :: c2, -S1], 10
[luhkie :: =c1, c2, -S1], λx.'1X+10'(x)
[luhkie :: =c1, +B, c2, -S1], λx.'10X'(x)
[luhkie :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[akte :: c1], 1
[göökte :: c1, -B], 2
[golme :: c1, -B], 3
[njieljie :: c1, -B], 4
[vïjhte :: c1, -B], 5
[govhte :: c1, -B], 6
[tjïjhtje :: c1, -B], 7
[gaektsie :: c1, -B], 8
[uktsie :: c1, -B], 9
[tjuetie :: c3], 100
[tjuetie :: =c2, c3], λx.'1X+100'(x)
[tjuetie :: =c1, +B, c3], λx.'100X'(x)
[tjuetie :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Slovene
Learned 999 words in Slovene and structured them in 23 functions.
It took 33 samples to learn those.
Those are:
ena is 1
dve is 2
tri is 3
štiri is 4
pet is 5
šest is 6
sedem is 7
osem is 8
devet is 9
deset is 10
Function _jst maps {1} by x -> 0*x+11
dvanajst is 12
Function _najst maps {3,4,5,6,7,8,9} by x -> 1*x+10
dvajset is 20
dvaindvajset is 22
Function _indvajset maps {1,3,4,5,6,7,8,9} by x -> 1*x+20
Function _deset in _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
Function _deset maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _in_deset maps {1,2,3,4,5,6,7,8,9}x{4,5,6,7,8,9} by (x0,x1) -> 1*x0+10*x1
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,_jst,12,_najst,20,22,_indvajset,_deset in _,_deset,_in_deset} by x -> 1*x+100
Function _sto maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sto _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_jst,12,_najst,20,22,_indvajset,_deset in _,_deset,_in_deset} by (x0,x1) -> 100*x0+1*x1

MG:
[ena :: c1, -A, -C], 1
[tri :: c1, -D, -C, -H, -B], 3
[ :: =c3, cFin], λx.x
[dve :: c1, -H], 2
[štiri :: c1, -C, -H, -B, -F], 4
[pet :: c1, -C, -H, -B, -F], 5
[šest :: c1, -C, -H, -B, -F], 6
[sedem :: c1, -C, -H, -B, -F], 7
[osem :: c1, -C, -H, -B, -F], 8
[devet :: c1, -C, -H, -B, -F], 9
[deset :: c2, -S1], 10
[jst :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[dvanajst :: c2, -S1], 12
[najst :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[dvajset :: c2, -S1], 20
[dvaindvajset :: c2, -S1], 22
[indvajset :: =c1, +C, c2, -S1], λx.'1X+20'(x)
[deset in  :: =c1, =c2D, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +D, c2D], λx.x
[deset :: =c1, +B, c2, -S1], λx.'10X'(x)
[in :: =c2*, =c1, c2, -S1], λxλy.'1X+1Y'(x,y)
[deset :: =c1, +F, c2*], λx.'10X'(x)
[ :: =c1, c2], λx.x
[sto :: c3], 100
[sto  :: =c2, c3], λx.'1X+100'(x)
[sto :: =c1, +H, c3], λx.'100X'(x)
[sto  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c1, +C, +H, +B, +F, c1, -C], λx.x
[ :: =c1, +A, +C, c1, -A], λx.x
[ :: =c1, +C, +H, +B, c1, -C], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +D, +C, +H, +B, c1, -D], λx.x
[ :: =c1, +H, +B, +F, c1, -H], λx.x


Learning Icelandic
Learned 999 words in Icelandic and structured them in 41 functions.
It took 61 samples to learn those.
Those are:
einn is 1
tveir is 2
þrír is 3
fjórir is 4
fimm is 5
sex is 6
sjö is 7
átta is 8
níu is 9
tiu is 10
ellefu is 11
tólf is 12
þréttán is 13
fjórtán is 14
Function _tán maps {5,6} by x -> 1*x+10
sautján is 17
átján is 18
nitján is 19
tuttugu is 20
Function tuttugu og _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
þrjátíu is 30
Function þrjátíu og _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
fjórutíu is 40
Function fjórutíu og _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _tíu maps {5,6,7,8,9} by x -> 10*x+0
Function _tíu og _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
hundrað is 100
Function hundrað og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tán,17,18,19,20,30,40,_tíu} by x -> 1*x+100
Function hundrað _ maps {tuttugu og _,þrjátíu og _,fjórutíu og _,_tíu og _} by x -> 1*x+100
tvö hundruð is 200
Function tvö hundruð og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tán,17,18,19,20,30,40,_tíu} by x -> 1*x+200
Function tvö hundruð _ maps {tuttugu og _,þrjátíu og _,fjórutíu og _,_tíu og _} by x -> 1*x+200
þrjú hundruð is 300
Function þrjú hundruð og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tán,17,18,19,20,30,40,_tíu} by x -> 1*x+300
Function þrjú hundruð _ maps {tuttugu og _,þrjátíu og _,fjórutíu og _,_tíu og _} by x -> 1*x+300
fjögur hundruð is 400
Function fjögur hundruð og _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tán,17,18,19,20,30,40,_tíu} by x -> 1*x+400
Function fjögur hundruð _ maps {tuttugu og _,þrjátíu og _,fjórutíu og _,_tíu og _} by x -> 1*x+400
Function _ hundruð maps {5,6,7,8,9} by x -> 100*x+0
Function _ hundruð og _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tán,17,18,19,20,30,40,_tíu} by (x0,x1) -> 100*x0+1*x1
Function _ hundruð _ maps {5,6,7,8,9}x{tuttugu og _,þrjátíu og _,fjórutíu og _,_tíu og _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[tuttugu og  :: =c1, c2, -E, -S1], λx.'1X+20'(x)
[þrjátíu og  :: =c1, c2, -E, -S1], λx.'1X+30'(x)
[fjórutíu og  :: =c1, c2, -E, -S1], λx.'1X+40'(x)
[tíu og  :: =c1, =c2C, c2, -E, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[fimm :: c1, -C, -A], 5
[sex :: c1, -C, -A], 6
[sjö :: c1, -C], 7
[átta :: c1, -C], 8
[níu :: c1, -C], 9
[einn :: c1], 1
[tveir :: c1], 2
[þrír :: c1], 3
[fjórir :: c1], 4
[tiu :: c2, -D, -S1], 10
[ellefu :: c2, -D, -S1], 11
[tólf :: c2, -D, -S1], 12
[þréttán :: c2, -D, -S1], 13
[fjórtán :: c2, -D, -S1], 14
[tán :: =c1, +A, c2, -D, -S1], λx.'1X+10'(x)
[sautján :: c2, -D, -S1], 17
[átján :: c2, -D, -S1], 18
[nitján :: c2, -D, -S1], 19
[tuttugu :: c2, -D, -S1], 20
[þrjátíu :: c2, -D, -S1], 30
[fjórutíu :: c2, -D, -S1], 40
[tíu :: =c1, +C, c2, -D, -S1], λx.'10X'(x)
[ :: =c1, c2, -D], λx.x
[hundrað :: c3], 100
[hundrað og  :: =c3D, c3], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[hundrað  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[tvö hundruð :: c3], 200
[tvö hundruð og  :: =c3D, c3], λx.'1X+200'(x)
[tvö hundruð  :: =c3E, c3], λx.'1X+200'(x)
[þrjú hundruð :: c3], 300
[þrjú hundruð og  :: =c3D, c3], λx.'1X+300'(x)
[þrjú hundruð  :: =c3E, c3], λx.'1X+300'(x)
[fjögur hundruð :: c3], 400
[fjögur hundruð og  :: =c3D, c3], λx.'1X+400'(x)
[fjögur hundruð  :: =c3E, c3], λx.'1X+400'(x)
[ hundruð :: =c1, +C, c3], λx.'100X'(x)
[ hundruð og  :: =c3D, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ hundruð  :: =c3E, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Xhosa

Learned 999 words in Xhosa and structured them in 103 functions.
It took 107 samples to learn those.
Those are:
inye is 1
zimbini is 2
zintathu is 3
zine is 4
zintlanu is 5
zintandathu is 6
isixhenxe is 7
sisibhozo is 8
lithoba is 9
lishumi is 10
lishumi elinanye is 11
lishumi elinesbini is 12
lishumi elinesithathu is 13
lishumi elinesine is 14
lishumi elinesihlanu is 15
lishumi elinesithandathu is 16
lishumi elinesixhenxe is 17
lishumi elinesibhozo is 18
lishumi elinethoba is 19
amashumi amabini is 20
amashumi amabini ananye is 21
amashumi amabine anesibini is 22
amashumi amabine anesithathu is 23
amashumi amabine anesine is 24
amashumi amabine anesihlanu is 25
amashumi amabine anesithandathu is 26
amashumi amabine anesixhenxe is 27
amashumi amabine anesibhozo is 28
amashumi amabine anethoba is 29
amashumi amathathu is 30
amashumi amathathu ananye is 31
amashumi amathathu anesibini is 32
amashumi amathathu anesithathu is 33
amashumi amathathu anesine is 34
amashumi amathathu anesihlanu is 35
amashumi amathathu anesithandathu is 36
amashumi amathathu anesixhenxe is 37
amashumi amathathu anesibhozo is 38
amashumi amathathu anethoba is 39
amashumi amane is 40
amashumi amane ananye is 41
amashumi amane anesibini is 42
amashumi amane anesithathu is 43
amashumi amane anesine is 44
amashumi amane anesihlanu is 45
amashumi amane anesithandathu is 46
amashumi amane anesixhenxe is 47
amashumi amane anesibhozo is 48
amashumi amane anethoba is 49
amashumi amahlanu is 50
amashumi amahlanu ananye is 51
amashumi amahlanu anesibini is 52
amashumi amahlanu anesithathu is 53
amashumi amahlanu anesine is 54
amashumi amahlanu anesihlanu is 55
amashumi amahlanu anesithandathu is 56
amashumi amahlanu anesixhenxe is 57
amashumi amahlanu anesibhozo is 58
amashumi amahlanu anethoba is 59
amashumi amathandathu is 60
amashumi amathandathu ananye is 61
amashumi amathandathu anesibini is 62
amashumi amathandathu anesithathu is 63
amashumi amathandathu anesine is 64
amashumi amathandathu anesihlanu is 65
amashumi amathandathu anesithandathu is 66
amashumi amathandathu anesixhenxe is 67
amashumi amathandathu anesibhozo is 68
amashumi amathandathu anethoba is 69
amashumi asixhenxe is 70
amashumi asixhenxe ananye is 71
amashumi asixhenxe anesibini is 72
amashumi asixhenxe anesithathu is 73
amashumi asixhenxe anesine is 74
amashumi asixhenxe anesihlanu is 75
amashumi asixhenxe anesithandathu is 76
amashumi asixhenxe anesixhenxe is 77
amashumi asixhenxe anesibhozo is 78
amashumi asixhenxe anethoba is 79
amashumi asibhozo is 80
amashumi asibhozo ananye is 81
amashumi asibhozo anesibini is 82
amashumi asibhozo anesithathu is 83
amashumi asibhozo anesine is 84
amashumi asibhozo anesihlanu is 85
amashumi asibhozo anesithandathu is 86
amashumi asibhozo anesixhenxe is 87
amashumi asibhozo anesibhozo is 88
amashumi asibhozo anethoba is 89
Function amashumi a_ maps {9} by x -> 0*x+90
Function amashumi a_ ananye maps {9} by x -> 0*x+91
Function amashumi a_ anesibini maps {9} by x -> 0*x+92
Function amashumi a_ anesithathu maps {9} by x -> 0*x+93
Function amashumi a_ anesine maps {9} by x -> 0*x+94
Function amashumi a_ anesihlanu maps {9} by x -> 0*x+95
Function amashumi a_ anesithandathu maps {9} by x -> 0*x+96
Function amashumi a_ anesixhenxe maps {9} by x -> 0*x+97
Function amashumi a_ anesibhozo maps {9} by x -> 0*x+98
Function amashumi a_ anethoba maps {9} by x -> 0*x+99
likhulu is 100
Function likhulu _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,amashumi a_,amashumi a_ ananye,amashumi a_ anesibini,amashumi a_ anesithathu,amashumi a_ anesine,amashumi a_ anesihlanu,amashumi a_ anesithandathu,amashumi a_ anesixhenxe,amashumi a_ anesibhozo,amashumi a_ anethoba} by x -> 1*x+100
Function _ likhulu maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ likhulu _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,amashumi a_,amashumi a_ ananye,amashumi a_ anesibini,amashumi a_ anesithathu,amashumi a_ anesine,amashumi a_ anesihlanu,amashumi a_ anesithandathu,amashumi a_ anesixhenxe,amashumi a_ anesibhozo,amashumi a_ anethoba} by (x0,x1) -> 100*x0+1*x1

MG:
[lithoba :: c1, -A, -C], 9
[ :: =c3, cFin], λx.x
[zimbini :: c1, -C], 2
[zintathu :: c1, -C], 3
[zine :: c1, -C], 4
[zintlanu :: c1, -C], 5
[zintandathu :: c1, -C], 6
[isixhenxe :: c1, -C], 7
[sisibhozo :: c1, -C], 8
[lishumi :: c2, -S1], 10
[lishumi elinanye :: c2, -S1], 11
[lishumi elinesbini :: c2, -S1], 12
[lishumi elinesithathu :: c2, -S1], 13
[lishumi elinesine :: c2, -S1], 14
[lishumi elinesihlanu :: c2, -S1], 15
[lishumi elinesithandathu :: c2, -S1], 16
[lishumi elinesixhenxe :: c2, -S1], 17
[lishumi elinesibhozo :: c2, -S1], 18
[lishumi elinethoba :: c2, -S1], 19
[amashumi amabini :: c2, -S1], 20
[amashumi amabini ananye :: c2, -S1], 21
[amashumi amabine anesibini :: c2, -S1], 22
[amashumi amabine anesithathu :: c2, -S1], 23
[amashumi amabine anesine :: c2, -S1], 24
[amashumi amabine anesihlanu :: c2, -S1], 25
[amashumi amabine anesithandathu :: c2, -S1], 26
[amashumi amabine anesixhenxe :: c2, -S1], 27
[amashumi amabine anesibhozo :: c2, -S1], 28
[amashumi amabine anethoba :: c2, -S1], 29
[amashumi amathathu :: c2, -S1], 30
[amashumi amathathu ananye :: c2, -S1], 31
[amashumi amathathu anesibini :: c2, -S1], 32
[amashumi amathathu anesithathu :: c2, -S1], 33
[amashumi amathathu anesine :: c2, -S1], 34
[amashumi amathathu anesihlanu :: c2, -S1], 35
[amashumi amathathu anesithandathu :: c2, -S1], 36
[amashumi amathathu anesixhenxe :: c2, -S1], 37
[amashumi amathathu anesibhozo :: c2, -S1], 38
[amashumi amathathu anethoba :: c2, -S1], 39
[amashumi amane :: c2, -S1], 40
[amashumi amane ananye :: c2, -S1], 41
[amashumi amane anesibini :: c2, -S1], 42
[amashumi amane anesithathu :: c2, -S1], 43
[amashumi amane anesine :: c2, -S1], 44
[amashumi amane anesihlanu :: c2, -S1], 45
[amashumi amane anesithandathu :: c2, -S1], 46
[amashumi amane anesixhenxe :: c2, -S1], 47
[amashumi amane anesibhozo :: c2, -S1], 48
[amashumi amane anethoba :: c2, -S1], 49
[amashumi amahlanu :: c2, -S1], 50
[amashumi amahlanu ananye :: c2, -S1], 51
[amashumi amahlanu anesibini :: c2, -S1], 52
[amashumi amahlanu anesithathu :: c2, -S1], 53
[amashumi amahlanu anesine :: c2, -S1], 54
[amashumi amahlanu anesihlanu :: c2, -S1], 55
[amashumi amahlanu anesithandathu :: c2, -S1], 56
[amashumi amahlanu anesixhenxe :: c2, -S1], 57
[amashumi amahlanu anesibhozo :: c2, -S1], 58
[amashumi amahlanu anethoba :: c2, -S1], 59
[amashumi amathandathu :: c2, -S1], 60
[amashumi amathandathu ananye :: c2, -S1], 61
[amashumi amathandathu anesibini :: c2, -S1], 62
[amashumi amathandathu anesithathu :: c2, -S1], 63
[amashumi amathandathu anesine :: c2, -S1], 64
[amashumi amathandathu anesihlanu :: c2, -S1], 65
[amashumi amathandathu anesithandathu :: c2, -S1], 66
[amashumi amathandathu anesixhenxe :: c2, -S1], 67
[amashumi amathandathu anesibhozo :: c2, -S1], 68
[amashumi amathandathu anethoba :: c2, -S1], 69
[amashumi asixhenxe :: c2, -S1], 70
[amashumi asixhenxe ananye :: c2, -S1], 71
[amashumi asixhenxe anesibini :: c2, -S1], 72
[amashumi asixhenxe anesithathu :: c2, -S1], 73
[amashumi asixhenxe anesine :: c2, -S1], 74
[amashumi asixhenxe anesihlanu :: c2, -S1], 75
[amashumi asixhenxe anesithandathu :: c2, -S1], 76
[amashumi asixhenxe anesixhenxe :: c2, -S1], 77
[amashumi asixhenxe anesibhozo :: c2, -S1], 78
[amashumi asixhenxe anethoba :: c2, -S1], 79
[amashumi asibhozo :: c2, -S1], 80
[amashumi asibhozo ananye :: c2, -S1], 81
[amashumi asibhozo anesibini :: c2, -S1], 82
[amashumi asibhozo anesithathu :: c2, -S1], 83
[amashumi asibhozo anesine :: c2, -S1], 84
[amashumi asibhozo anesihlanu :: c2, -S1], 85
[amashumi asibhozo anesithandathu :: c2, -S1], 86
[amashumi asibhozo anesixhenxe :: c2, -S1], 87
[amashumi asibhozo anesibhozo :: c2, -S1], 88
[amashumi asibhozo anethoba :: c2, -S1], 89
[amashumi a :: =c2A, c2, -S1], λx.'0X+90'(x)
[ :: =c1, +A, c2A], λx.x
[amashumi a :: =c2*, c2, -S1, -S1, -S1, -S1, -S1, -S1, -S1, -S1, -S1], λx.'1X+91'(x)
[ ananye :: =c1, +A, c2*], λx.'0X'(x)
[ :: =c1, c2], λx.x
[inye :: c1], 1
[likhulu :: c3], 100
[likhulu  :: =c2, c3], λx.'1X+100'(x)
[ likhulu :: =c1, +C, c3], λx.'100X'(x)
[ likhulu  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c1, +A, +C, c1, -A], λx.x
[ :: =c2, +S1, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x
[ :: =c2, +S1, +S1, +S1, +S1, +S1, +S1, +S1, +S1, c2, -S1], λx.x


Learning Romani

Learned 999 words in Romani and structured them in 25 functions.
It took 40 samples to learn those.
Those are:
yek is 1
duy is 2
trin is 3
shtar is 4
panj is 5
shov is 6
efta is 7
oxto is 8
en’a is 9
desh is 10
Function desh-u-_ maps {1,2,3,4,5,6} by x -> 1*x+10
Function desh-_ maps {7,8,9} by x -> 1*x+10
bish is 20
Function bish-te-_ maps {1,2,3,4,5,6} by x -> 1*x+20
Function bish-t-_ maps {7,8,9} by x -> 1*x+20
triyanda is 30
Function triyanda-_ maps {1,2,3,4,5,6} by x -> 1*x+30
Function triyanda-t-_ maps {7,8,9} by x -> 1*x+30
Function _-var-desh maps {4,5,6,7,8,9} by x -> 10*x+0
Function _-var-desh-u-_ maps {4,5,6,7,8,9}x{1,2,3,4,5,6} by (x0,x1) -> 10*x0+1*x1
Function _-var-desh-_ maps {4,5,6,7,8,9}x{7,8,9} by (x0,x1) -> 10*x0+1*x1
shel is 100
Function shel _ maps {1,2,3,4,5,6,7,8,9,10,desh-u-_,desh-_,20,bish-te-_,bish-t-_,30,triyanda-_,triyanda-t-_,_-var-desh,_-var-desh-u-_,_-var-desh-_} by x -> 1*x+100
Function _ shel maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ shel _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,desh-u-_,desh-_,20,bish-te-_,bish-t-_,30,triyanda-_,triyanda-t-_,_-var-desh,_-var-desh-u-_,_-var-desh-_} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[duy :: c1, -E, -A], 2
[trin :: c1, -E, -A], 3
[shtar :: c1, -E, -C, -A], 4
[panj :: c1, -E, -C, -A], 5
[shov :: c1, -E, -C, -A], 6
[efta :: c1, -E, -C, -B], 7
[oxto :: c1, -E, -C, -B], 8
[en’a :: c1, -E, -C, -B], 9
[yek :: c1, -A], 1
[desh :: c2, -S1], 10
[desh-u- :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[desh- :: =c2B, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[bish :: c2, -S1], 20
[bish-te- :: =c2A, c2, -S1], λx.'1X+20'(x)
[bish-t- :: =c2B, c2, -S1], λx.'1X+20'(x)
[triyanda :: c2, -S1], 30
[triyanda- :: =c2A, c2, -S1], λx.'1X+30'(x)
[triyanda-t- :: =c2B, c2, -S1], λx.'1X+30'(x)
[-var-desh :: =c1, +C, c2, -S1], λx.'10X'(x)
[-var-desh-u- :: =c2A, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[-var-desh- :: =c2B, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[shel :: c3], 100
[shel  :: =c2, c3], λx.'1X+100'(x)
[ shel :: =c1, +E, c3], λx.'100X'(x)
[ shel  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +E, +C, +B, c1, -E], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Eonavian
Learned 999 words in Eonavian and structured them in 34 functions.
It took 48 samples to learn those.
Those are:
un is 1
dous is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
Function daza_ maps {6,7,8,9} by x -> 1*x+10
vinte is 20
Function vinte _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
corenta is 40
Function corenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cen is 100
Function cen _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,daza_,20,vinte _,30,trinta _,40,corenta _,50,cincuenta _,60,sesenta _,80,oitenta _,_nta,_nta _} by x -> 1*x+100
Function _centos maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _centos _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,daza_,20,vinte _,30,trinta _,40,corenta _,50,cincuenta _,60,sesenta _,80,oitenta _,_nta,_nta _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[dous :: c1, -E], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E], 4
[cinco :: c1, -E], 5
[seis :: c1, -E, -A], 6
[sete :: c1, -E, -C, -A], 7
[oito :: c1, -E, -A], 8
[nove :: c1, -E, -C, -A], 9
[un :: c1], 1
[dez :: c2, -S1], 10
[once :: c2, -S1], 11
[doce :: c2, -S1], 12
[trece :: c2, -S1], 13
[catorce :: c2, -S1], 14
[quince :: c2, -S1], 15
[daza :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vinte :: c2, -S1], 20
[vinte  :: =c1, c2, -S1], λx.'1X+20'(x)
[trinta :: c2, -S1], 30
[trinta  :: =c1, c2, -S1], λx.'1X+30'(x)
[corenta :: c2, -S1], 40
[corenta  :: =c1, c2, -S1], λx.'1X+40'(x)
[cincuenta :: c2, -S1], 50
[cincuenta  :: =c1, c2, -S1], λx.'1X+50'(x)
[sesenta :: c2, -S1], 60
[sesenta  :: =c1, c2, -S1], λx.'1X+60'(x)
[oitenta :: c2, -S1], 80
[oitenta  :: =c1, c2, -S1], λx.'1X+80'(x)
[nta :: =c1, +C, c2, -S1], λx.'10X'(x)
[nta  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[cen :: c3], 100
[cen  :: =c2, c3], λx.'1X+100'(x)
[centos :: =c1, +E, c3], λx.'100X'(x)
[centos  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x


Learning Polish
Learned 999 words in Polish and structured them in 32 functions.
It took 47 samples to learn those.
Those are:
jeden is 1
dwa is 2
trzy is 3
cztery is 4
pięć is 5
sześć is 6
siedem is 7
osiem is 8
dziewięć is 9
dziesięć is 10
Function _aście maps {1} by x -> 0*x+11
Function _naście maps {2,3,7,8} by x -> 1*x+10
czternaście is 14
piętnaście is 15
szesnaście is 16
dziewiętnaście is 19
Function _dzieścia maps {2} by x -> 0*x+20
Function _dzieścia _ maps {2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 8*x0+1*x1+4
Function _dzieści maps {3} by x -> 0*x+30
Function _dzieści _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
czterdzieści is 40
Function czterdzieści _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _dziesiąt maps {5,6,7,8,9} by x -> 10*x+0
Function _dziesiąt _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sto is 100
Function _ sto _ maps {1}x{1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _} by (x0,x1) -> 50*x0+1*x1+50
dwieście is 200
Function dwieście _ maps {1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _} by x -> 1*x+200
Function _sta maps {3,4} by x -> 100*x+0
Function _sta _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _} by (x0,x1) -> 100*x0+1*x1
Function _set maps {5,6,7,8,9} by x -> 100*x+0
Function _set _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _} by (x0,x1) -> 100*x0+1*x1

MG:
[jeden :: c1, -A], 1
[dwa :: c1, -C, -B], 2
[trzy :: c1, -E, -H, -B], 3
[ :: =c3, cFin], λx.x
[cztery :: c1, -H], 4
[dziesięć :: c2, -S1], 10
[aście :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[naście :: =c1, +B, c2, -S1], λx.'1X+10'(x)
[czternaście :: c2, -S1], 14
[piętnaście :: c2, -S1], 15
[szesnaście :: c2, -S1], 16
[dziewiętnaście :: c2, -S1], 19
[dzieścia :: =c1, +C, c2, -S1], λx.'0X+20'(x)
[dzieścia  :: =c1, =c2C, c2, -S1], λxλy.'1X+8Y+4'(x,y)
[ :: =c1, +C, c2C], λx.x
[dzieści :: =c1, +E, c2, -S1], λx.'0X+30'(x)
[dzieści  :: =c1, =c2E, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +E, c2E], λx.x
[czterdzieści :: c2, -S1], 40
[czterdzieści  :: =c1, c2, -S1], λx.'1X+40'(x)
[dziesiąt :: =c1, +F, c2, -S1], λx.'10X'(x)
[dziesiąt  :: =c1, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[ :: =c1, c2], λx.x
[pięć :: c1, -F], 5
[sześć :: c1, -F], 6
[siedem :: c1, -B, -F], 7
[osiem :: c1, -B, -F], 8
[dziewięć :: c1, -F], 9
[sto :: c3], 100
[ sto  :: =c2, =c3A, c3], λxλy.'1X+50Y+50'(x,y)
[ :: =c1, +A, c3A], λx.x
[dwieście :: c3], 200
[dwieście  :: =c2, c3], λx.'1X+200'(x)
[sta :: =c1, +H, c3], λx.'100X'(x)
[sta  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[set :: =c1, +F, c3], λx.'100X'(x)
[set  :: =c2, =c2F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +H, +B, c1, -E], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x


Learning Tlingit

Learned 999 words in Tlingit and structured them in 20 functions.
It took 31 samples to learn those.
Those are:
tléix’ is 1
déix̱ is 2
násʼk is 3
daaxʼoon is 4
keijín is 5
tleidooshú is 6
dax̱adooshú is 7
nasʼgadooshú is 8
gooshúḵ is 9
jinkaat is 10
Function jinkaat ḵa _ maps {2,3,4,6,8} by x -> 1*x+10
jinkaak ḵa keijín is 15
Function jinkaak ḵa _ maps {1,7,9} by x -> 1*x+10
tleiḵáa is 20
Function tleiḵáa ḵa _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ jinkaat maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _ jinkaat ḵa _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hándid maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hándid  ḵa _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,jinkaat ḵa _,20,tleiḵáa ḵa _,_ jinkaat,_ jinkaat ḵa _} by (x0,x1) -> 100*x0+1*x1
Function _ hándid  ḵa _ ḵa _ maps {1,2,3,4,5,6,7,8,9}x{10}x{1,5,7,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[jinkaat :: c2, -F, -E, -S1], 10
[ :: =c3, cFin], λx.x
[jinkaat ḵa  :: =c2A, c2, -E, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[tleiḵáa :: c2, -E, -S1], 20
[tleiḵáa ḵa  :: =c1, c2, -E, -S1], λx.'1X+20'(x)
[ jinkaat :: =c1, +D, c2, -E, -S1], λx.'10X'(x)
[ jinkaat ḵa  :: =c1, =c2D, c2, -E, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[ :: =c1, c2, -E], λx.x
[tléix’ :: c1, -B, -G], 1
[déix̱ :: c1, -A], 2
[násʼk :: c1, -A, -D], 3
[daaxʼoon :: c1, -A, -D], 4
[keijín :: c1, -G, -D], 5
[tleidooshú :: c1, -A, -D], 6
[dax̱adooshú :: c1, -B, -G, -D], 7
[nasʼgadooshú :: c1, -A, -D], 8
[gooshúḵ :: c1, -B, -G, -D], 9
[ hándid :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hándid  ḵa  :: =c3E, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c2, +E, c3E], λx.x
[ hándid  ḵa  :: =c3*, =c1, c3], λxλy.'1X+100Y'(x,y)
[ ḵa  :: =c3*G, =c3*F, c3*], λxλy.'1X+1Y'(x,y)
[ :: =c2, +F, c3*F], λx.x
[ :: =c1, +G, c3*G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[jinkaak ḵa keijín :: c2, -S1], 15
[jinkaak ḵa  :: =c2B, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +F, +E, +S1, c2, -F], λx.x
[ :: =c1, +B, +G, +D, c1, -B], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x


Learning Northern-Kurdish
Learned 999 words in Northern-Kurdish and structured them in 37 functions.
It took 50 samples to learn those.
Those are:
yek is 1
du is 2
sê is 3
çar is 4
pênc is 5
şeş is 6
heft is 7
heşt is 8
neh is 9
deh is 10
yanzdeh is 11
dwanzdeh is 12
Function _zdeh maps {3} by x -> 0*x+13
Function _deh maps {4} by x -> 0*x+14
panzdeh is 15
şanzdeh is 16
hivdeh is 17
hijdeh is 18
nozdeh is 19
bîst is 20
Function bîst û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
sî is 30
Function sî û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
çil is 40
Function çil û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _î maps {5} by x -> 0*x+50
Function _î û _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
şêst is 60
Function şêst û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ê maps {7,8} by x -> 10*x+0
Function _ê û _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nod is 90
Function nod û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sed is 100
Function sed û _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zdeh,_deh,15,16,17,18,19,20,bîst û _,30,sî û _,40,çil û _,_î,_î û _,60,şêst û _,_ê,_ê û _,90,nod û _} by x -> 1*x+100
Function _sed maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sed û _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_zdeh,_deh,15,16,17,18,19,20,bîst û _,30,sî û _,40,çil û _,_î,_î û _,60,şêst û _,_ê,_ê û _,90,nod û _} by (x0,x1) -> 100*x0+1*x1

MG:
[sê :: c1, -A, -G], 3
[çar :: c1, -B, -G], 4
[pênc :: c1, -D, -G], 5
[ :: =c3, cFin], λx.x
[heft :: c1, -E, -G], 7
[heşt :: c1, -E, -G], 8
[yek :: c1], 1
[du :: c1, -G], 2
[şeş :: c1, -G], 6
[neh :: c1, -G], 9
[sed :: c3], 100
[sed û  :: =c2, c3], λx.'1X+100'(x)
[sed :: =c1, +G, c3], λx.'100X'(x)
[sed û  :: =c2, =c3G, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[deh :: c2, -S1], 10
[yanzdeh :: c2, -S1], 11
[dwanzdeh :: c2, -S1], 12
[zdeh :: =c1, +A, c2, -S1], λx.'0X+13'(x)
[deh :: =c1, +B, c2, -S1], λx.'0X+14'(x)
[panzdeh :: c2, -S1], 15
[şanzdeh :: c2, -S1], 16
[hivdeh :: c2, -S1], 17
[hijdeh :: c2, -S1], 18
[nozdeh :: c2, -S1], 19
[bîst :: c2, -S1], 20
[bîst û  :: =c1, c2, -S1], λx.'1X+20'(x)
[sî :: c2, -S1], 30
[sî û  :: =c1, c2, -S1], λx.'1X+30'(x)
[çil :: c2, -S1], 40
[çil û  :: =c1, c2, -S1], λx.'1X+40'(x)
[î :: =c1, +D, c2, -S1], λx.'0X+50'(x)
[î û  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[şêst :: c2, -S1], 60
[şêst û  :: =c1, c2, -S1], λx.'1X+60'(x)
[ê :: =c1, +E, c2, -S1], λx.'10X'(x)
[ê û  :: =c1, =c2E, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[nod :: c2, -S1], 90
[nod û  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +G, c1, -A], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c1, +D, +G, c1, -D], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x


Learning Catalan
Learned 999 words in Catalan and structured them in 43 functions.
It took 58 samples to learn those.
Those are:
un is 1
dos is 2
tres is 3
quatre is 4
cinc is 5
sis is 6
set is 7
vuit is 8
nou is 9
deu is 10
onze is 11
dotze is 12
tretze is 13
catorze is 14
quinze is 15
Function _ze maps {7} by x -> 0*x+16
Function dis_ maps {7} by x -> 0*x+17
Function di_ maps {8,9} by x -> 1*x+10
vint is 20
vint-i-u is 21
Function vint-i-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trenta is 30
trenta-u is 31
Function trenta-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quaranta is 40
quaranta-u is 41
Function quaranta-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquanta is 50
cinquanta-u is 51
Function cinquanta-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
seixanta is 60
seixanta-u is 61
Function seixanta-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _anta maps {7,8} by x -> 10*x+0
Function _anta-u maps {7,8} by x -> 10*x+1
Function _anta-_ maps {7,8}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
noranta is 90
noranta-u is 91
Function noranta-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_ze,dis_,di_,20,21,vint-i-_,30,31,trenta-_,40,41,quaranta-_,50,51,cinquanta-_,60,61,seixanta-_,_anta,_anta-u,_anta-_,90,91,noranta-_} by x -> 1*x+100
Function _-cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _-cents _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_ze,dis_,di_,20,21,vint-i-_,30,31,trenta-_,40,41,quaranta-_,50,51,cinquanta-_,60,61,seixanta-_,_anta,_anta-u,_anta-_,90,91,noranta-_} by (x0,x1) -> 100*x0+1*x1

MG:
[set :: c1, -A, -C, -D], 7
[ :: =c3, cFin], λx.x
[deu :: c2, -S1], 10
[onze :: c2, -S1], 11
[dotze :: c2, -S1], 12
[tretze :: c2, -S1], 13
[catorze :: c2, -S1], 14
[quinze :: c2, -S1], 15
[ze :: =c1, +A, c2, -S1], λx.'0X+16'(x)
[dis :: =c2A, c2, -S1], λx.'0X+17'(x)
[ :: =c1, +A, c2A], λx.x
[di :: =c2B, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[vint :: c2, -S1], 20
[vint-i-u :: c2, -S1], 21
[vint-i- :: =c2C, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[trenta :: c2, -S1], 30
[trenta-u :: c2, -S1], 31
[trenta- :: =c2C, c2, -S1], λx.'1X+30'(x)
[quaranta :: c2, -S1], 40
[quaranta-u :: c2, -S1], 41
[quaranta- :: =c2C, c2, -S1], λx.'1X+40'(x)
[cinquanta :: c2, -S1], 50
[cinquanta-u :: c2, -S1], 51
[cinquanta- :: =c2C, c2, -S1], λx.'1X+50'(x)
[seixanta :: c2, -S1], 60
[seixanta-u :: c2, -S1], 61
[seixanta- :: =c2C, c2, -S1], λx.'1X+60'(x)
[anta :: =c1, +D, c2, -S1], λx.'10X'(x)
[anta-u :: =c1, +D, c2, -S1], λx.'10X+1'(x)
[anta- :: =c2C, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[noranta :: c2, -S1], 90
[noranta-u :: c2, -S1], 91
[noranta- :: =c2C, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[un :: c1], 1
[dos :: c1, -C], 2
[tres :: c1, -C], 3
[quatre :: c1, -C], 4
[cinc :: c1, -C], 5
[sis :: c1, -C], 6
[vuit :: c1, -C, -B, -D], 8
[nou :: c1, -C, -B], 9
[cent :: c3], 100
[cent  :: =c2, c3], λx.'1X+100'(x)
[-cents :: =c1, +C, c3], λx.'100X'(x)
[-cents  :: =c2, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, +B, +D, c1, -C], λx.x
[ :: =c1, +C, +D, c1, -C], λx.x
[ :: =c1, +A, +C, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x


Learning Latvian

Learned 999 words in Latvian and structured them in 67 functions.
It took 102 samples to learn those.
Those are:
viens is 1
divi is 2
trīs is 3
četri is 4
pieci is 5
seši is 6
septiņi is 7
astoņi is 8
deviņi is 9
desmit is 10
vienpadsmit is 11
divpadsmit is 12
Function _padsmit maps {3} by x -> 0*x+13
četrpadsmit is 14
piecpadsmit is 15
sešpadsmit is 16
septiņpadsmit is 17
astoņpadsmit is 18
deviņpadsmit is 19
divdesmit is 20
Function divdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _desmit maps {3} by x -> 0*x+30
Function _desmit _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
četrdesmit is 40
Function četrdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
piecdesmit is 50
Function piecdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sešdesmit is 60
Function sešdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
septiņdesmit is 70
Function septiņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
astoņdesmit is 80
Function astoņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
deviņdesmit is 90
Function deviņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
simts is 100
Function simt div_ maps {10} by x -> 0*x+120
Function simt div_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 12*x0+1*x1
Function simt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,_padsmit,_desmit,_desmit _} by x -> 1*x+100
Function simt četr_ maps {10} by x -> 0*x+140
Function simt četr_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 14*x0+1*x1
Function simt piec_ maps {10} by x -> 0*x+150
Function simt piec_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 15*x0+1*x1
Function simt seš_ maps {10} by x -> 0*x+160
Function simt seš_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 16*x0+1*x1
Function simt septiņ_ maps {10} by x -> 0*x+170
Function simt septiņ_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 17*x0+1*x1
Function simt astoņ_ maps {10} by x -> 0*x+180
Function simt astoņ_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 18*x0+1*x1
Function simt deviņ_ maps {10} by x -> 0*x+190
Function simt deviņ_ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 19*x0+1*x1
divsimt is 200
Function divsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+200
Function _simt maps {3} by x -> 0*x+300
Function _simt _ maps {3}x{1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by (x0,x1) -> 90*x0+1*x1+30
četrsimt is 400
Function četrsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+400
piecsimt is 500
Function piecsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+500
sešsimt is 600
Function sešsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+600
septiņsimt is 700
Function septiņsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+700
astoņsimt is 800
Function astoņsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+800
deviņsimt is 900
Function deviņsimt _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+900

MG:
[trīs :: c1, -A], 3
[desmit :: c2, -C, -D, -S1], 10
[ :: =c3, cFin], λx.x
[vienpadsmit :: c2, -D, -S1], 11
[divpadsmit :: c2, -D, -S1], 12
[padsmit :: =c1, +A, c2, -D, -S1], λx.'0X+13'(x)
[četrpadsmit :: c2, -D, -S1], 14
[piecpadsmit :: c2, -D, -S1], 15
[sešpadsmit :: c2, -D, -S1], 16
[septiņpadsmit :: c2, -D, -S1], 17
[astoņpadsmit :: c2, -D, -S1], 18
[deviņpadsmit :: c2, -D, -S1], 19
[divdesmit :: c2, -S1], 20
[divdesmit  :: =c1, c2, -S1], λx.'1X+20'(x)
[desmit :: =c1, +A, c2, -D, -S1], λx.'0X+30'(x)
[desmit  :: =c1, =c2A, c2, -D, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +A, c2A], λx.x
[četrdesmit :: c2, -S1], 40
[četrdesmit  :: =c1, c2, -S1], λx.'1X+40'(x)
[piecdesmit :: c2, -S1], 50
[piecdesmit  :: =c1, c2, -S1], λx.'1X+50'(x)
[sešdesmit :: c2, -S1], 60
[sešdesmit  :: =c1, c2, -S1], λx.'1X+60'(x)
[septiņdesmit :: c2, -S1], 70
[septiņdesmit  :: =c1, c2, -S1], λx.'1X+70'(x)
[astoņdesmit :: c2, -S1], 80
[astoņdesmit  :: =c1, c2, -S1], λx.'1X+80'(x)
[deviņdesmit :: c2, -S1], 90
[deviņdesmit  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[viens :: c1], 1
[divi :: c1], 2
[četri :: c1], 4
[pieci :: c1], 5
[seši :: c1], 6
[septiņi :: c1], 7
[astoņi :: c1], 8
[deviņi :: c1], 9
[ :: =c1, c2, -D], λx.x
[simts :: c3], 100
[simt div :: =c3*******C, c3], λx.'0X+120'(x)
[simt div :: =c3*, c3], λx.x
[  :: =c1, =c3*******C, c3*], λxλy.'1X+12Y'(x,y)
[simt  :: =c3D, c3], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[simt četr :: =c3*******C, c3], λx.'0X+140'(x)
[simt četr :: =c3**, c3], λx.x
[  :: =c1, =c3*******C, c3**], λxλy.'1X+14Y'(x,y)
[simt piec :: =c3*******C, c3], λx.'0X+150'(x)
[simt piec :: =c3***, c3], λx.x
[  :: =c1, =c3*******C, c3***], λxλy.'1X+15Y'(x,y)
[simt seš :: =c3*******C, c3], λx.'0X+160'(x)
[simt seš :: =c3****, c3], λx.x
[  :: =c1, =c3*******C, c3****], λxλy.'1X+16Y'(x,y)
[simt septiņ :: =c3*******C, c3], λx.'0X+170'(x)
[simt septiņ :: =c3*****, c3], λx.x
[  :: =c1, =c3*******C, c3*****], λxλy.'1X+17Y'(x,y)
[simt astoņ :: =c3*******C, c3], λx.'0X+180'(x)
[simt astoņ :: =c3******, c3], λx.x
[  :: =c1, =c3*******C, c3******], λxλy.'1X+18Y'(x,y)
[simt deviņ :: =c3*******C, c3], λx.'0X+190'(x)
[simt deviņ :: =c3*******, c3], λx.x
[  :: =c1, =c3*******C, c3*******], λxλy.'1X+19Y'(x,y)
[ :: =c2, +C, c3*******C], λx.x
[divsimt :: c3], 200
[divsimt  :: =c2, c3], λx.'1X+200'(x)
[simt :: =c1, +A, c3], λx.'0X+300'(x)
[simt  :: =c2, =c2A, c3], λxλy.'1X+90Y+30'(x,y)
[četrsimt :: c3], 400
[četrsimt  :: =c2, c3], λx.'1X+400'(x)
[piecsimt :: c3], 500
[piecsimt  :: =c2, c3], λx.'1X+500'(x)
[sešsimt :: c3], 600
[sešsimt  :: =c2, c3], λx.'1X+600'(x)
[septiņsimt :: c3], 700
[septiņsimt  :: =c2, c3], λx.'1X+700'(x)
[astoņsimt :: c3], 800
[astoņsimt  :: =c2, c3], λx.'1X+800'(x)
[deviņsimt :: c3], 900
[deviņsimt  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x
[ :: =c2, +C, +D, +S1, c2, -C], λx.x


Learning Carrier
Learned 100 words in Carrier and structured them in 28 functions.
It took 37 samples to learn those.
Those are:
ᘰᗿ is 1
ᘇᐣᗶᑋ is 2
ᗡᗿᑋ is 3
ᑔᐣᗿᑋ is 4
ᔆᐠᗒᐣᘧᐉ is 5
ᒡᗽᐪᗡᗿᑋ is 6
ᒡᗡᘀᑊᗦ is 7
ᒡᗽᐪᑔᐣᗿᑋ is 8
Function _ ᐯᘣᑋ maps {1} by x -> 0*x+9
ᘧᘅᙆᘒ is 10
Function ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+10
ᘇᐪ ᘧᘅᙆᘒ is 20
Function ᘇᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+20
ᗡᐪ ᘧᘅᙆᘒ is 30
Function ᗡᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+30
ᑔᐪ ᘧᘅᙆᘒ is 40
Function ᑔᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+40
ᔆᐠᗒᐣᘧᐪ ᘧᘅᙆᘒ is 50
Function ᔆᐠᗒᐣᘧᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+50
ᒡᗽᗡᐪ ᘧᘅᙆᘒ is 60
Function ᒡᗽᗡᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+60
Function _ᐪ ᘧᘅᙆᘒ maps {7} by x -> 0*x+70
Function _ᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {7}x{1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by (x0,x1) -> 10*x0+1*x1
ᒡᗽᑔᐪ ᘧᘅᙆᘒ is 80
Function ᒡᗽᑔᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by x -> 1*x+80
Function _ ᘧᘅᙆᘒ maps {_ ᐯᘣᑋ} by x -> 0*x+90
Function _ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ _ maps {_ ᐯᘣᑋ}x{1,2,3,4,5,6,7,8,_ ᐯᘣᑋ} by (x0,x1) -> 10*x0+1*x1
Function ᒡᗽᐪᐧ_ maps {10} by x -> 0*x+100

MG:
[ᘰᗿ :: c1], 1
[ᒡᗡᘀᑊᗦ :: c2, -C, -B, -S1], 7
[ ᐯᘣᑋ :: =cnix, =c1, c2, -D, -B, -S1], λxλy.'1X+0Y+9'(x,y)
[ :: cnix], 0
[ᘧᘅᙆᘒ :: c2, -E, -S1], 10
[ :: =c3, cFin], λx.x
[ᘇᐣᗶᑋ :: c2, -B, -S1], 2
[ᗡᗿᑋ :: c2, -B, -S1], 3
[ᑔᐣᗿᑋ :: c2, -B, -S1], 4
[ᔆᐠᗒᐣᘧᐉ :: c2, -B, -S1], 5
[ᒡᗽᐪᗡᗿᑋ :: c2, -B, -S1], 6
[ᒡᗽᐪᑔᐣᗿᑋ :: c2, -B, -S1], 8
[ :: =c1, c2, -B], λx.x
[ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+10'(x)
[ :: =c2, +B, c3B], λx.x
[ᘇᐪ ᘧᘅᙆᘒ :: c3], 20
[ᘇᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+20'(x)
[ᗡᐪ ᘧᘅᙆᘒ :: c3], 30
[ᗡᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+30'(x)
[ᑔᐪ ᘧᘅᙆᘒ :: c3], 40
[ᑔᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+40'(x)
[ᔆᐠᗒᐣᘧᐪ ᘧᘅᙆᘒ :: c3], 50
[ᔆᐠᗒᐣᘧᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+50'(x)
[ᒡᗽᗡᐪ ᘧᘅᙆᘒ :: c3], 60
[ᒡᗽᗡᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+60'(x)
[ᐪ ᘧᘅᙆᘒ :: =c2, +C, c3], λx.'0X+70'(x)
[ᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, =c3C, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[ᒡᗽᑔᐪ ᘧᘅᙆᘒ :: c3], 80
[ᒡᗽᑔᐪ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, c3], λx.'1X+80'(x)
[ ᘧᘅᙆᘒ :: =c2, +D, c3], λx.'0X+90'(x)
[ ᘧᘅᙆᘒ ᐧᐃᐧᐅᐣ  :: =c3B, =c3D, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3D], λx.x
[ᒡᗽᐪᐧ :: =c3E, c3], λx.'0X+100'(x)
[ :: =c2, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c2, +B, +S1, c2, -B], λx.x
[ :: =c2, +C, +B, +S1, c2, -C], λx.x
[ :: =c2, +D, +B, +S1, c2, -D], λx.x


Learning Miami-Illinois

Learned 999 words in Miami-Illinois and structured them in 47 functions.
It took 66 samples to learn those.
Those are:
nkoti is 1
niišwi is 2
nihswi is 3
niiwi is 4
yaalanwi is 5
kaakaathswi is 6
swaahteethswi is 7
palaani is 8
Function _meneehki maps {1} by x -> 0*x+9
mataathswi is 10
mataathswi nkotaasi is 11
mataathswi niišwaasi is 12
mataathswi nihswaasi is 13
mataathswi niiwaasi is 14
mataathswi yaalanwaasi is 15
mataathswi kaakaathswaasi is 16
mataathswi swaahteethswaasi is 17
mataathswi palaanaasi is 18
Function mataathswi _meneehkaasi maps {1} by x -> 0*x+19
Function _ mateeni maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+0
Function _ mateeni nkotaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+1
Function _ mateeni niišwaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+2
Function _ mateeni nihswaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+3
Function _ mateeni niiwaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+4
Function _ mateeni yaalanwaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+5
Function _ mateeni kaakaathswaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+6
Function _ mateeni swaahteethswaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+7
Function _ mateeni palaanaasi maps {2,3,4,5,6,7,8,_meneehki} by x -> 10*x+8
Function _ mateeni _meneehkaasi maps {2,3,4,5,6,7,8,_meneehki}x{1} by (x0,x1) -> 10*x0+4*x1+5
nkotwaahkwe is 100
Function nkotwaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+100
niišwaahkwe is 200
Function niišwaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+200
nihswaahkwe is 300
Function nihswaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+300
niiwaahkwe is 400
Function niiwaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+400
yaalanwaahkwe is 500
Function yaalanwaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+500
kaakaathswaahkwe is 600
Function kaakaathswaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+600
swaahteethswaahkwe is 700
Function swaahteethswaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+700
palaanwaahkwe is 800
Function palaanwaahkwe _ maps {1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by x -> 1*x+800
Function _meneehkwaahkwe maps {1} by x -> 0*x+900
Function _meneehkwaahkwe _ maps {1}x{1,2,3,4,5,6,7,8,_meneehki,10,11,12,13,14,15,16,17,18,mataathswi _meneehkaasi,_ mateeni,_ mateeni nkotaasi,_ mateeni niišwaasi,_ mateeni nihswaasi,_ mateeni niiwaasi,_ mateeni yaalanwaasi,_ mateeni kaakaathswaasi,_ mateeni swaahteethswaasi,_ mateeni palaanaasi,_ mateeni _meneehkaasi} by (x0,x1) -> 450*x0+1*x1+450

MG:
[nkoti :: c1], 1
[ :: =c4, cFin], λx.x
[mataathswi :: c3, -S1], 10
[mataathswi nkotaasi :: c3, -S1], 11
[mataathswi niišwaasi :: c3, -S1], 12
[mataathswi nihswaasi :: c3, -S1], 13
[mataathswi niiwaasi :: c3, -S1], 14
[mataathswi yaalanwaasi :: c3, -S1], 15
[mataathswi kaakaathswaasi :: c3, -S1], 16
[mataathswi swaahteethswaasi :: c3, -S1], 17
[mataathswi palaanaasi :: c3, -S1], 18
[mataathswi  :: =c3*, c3, -S1], λx.'1X+19'(x)
[meneehkaasi :: =cnix, =c1, c3*], λxλy.'1X+0Y'(x,y)
[ :: cnix], 0
[ mateeni :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y'(x,y)
[ mateeni nkotaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+1'(x,y)
[ mateeni niišwaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+2'(x,y)
[ mateeni nihswaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+3'(x,y)
[ mateeni niiwaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+4'(x,y)
[ mateeni yaalanwaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+5'(x,y)
[ mateeni kaakaathswaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+6'(x,y)
[ mateeni swaahteethswaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+7'(x,y)
[ mateeni palaanaasi :: =cnix, =c2, c3, -S1], λxλy.'1X+10Y+8'(x,y)
[ mateeni  :: =c3**, =c2, c3, -S1], λxλy.'1X+10Y+5'(x,y)
[meneehkaasi :: =cnix, =c1, c3**], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[niišwi :: c2], 2
[nihswi :: c2], 3
[niiwi :: c2], 4
[yaalanwi :: c2], 5
[kaakaathswi :: c2], 6
[swaahteethswi :: c2], 7
[palaani :: c2], 8
[meneehki :: =cnix, =c1, c2], λxλy.'1X+0Y+9'(x,y)
[nkotwaahkwe :: c4], 100
[nkotwaahkwe  :: =c3, c4], λx.'1X+100'(x)
[niišwaahkwe :: c4], 200
[niišwaahkwe  :: =c3, c4], λx.'1X+200'(x)
[nihswaahkwe :: c4], 300
[nihswaahkwe  :: =c3, c4], λx.'1X+300'(x)
[niiwaahkwe :: c4], 400
[niiwaahkwe  :: =c3, c4], λx.'1X+400'(x)
[yaalanwaahkwe :: c4], 500
[yaalanwaahkwe  :: =c3, c4], λx.'1X+500'(x)
[kaakaathswaahkwe :: c4], 600
[kaakaathswaahkwe  :: =c3, c4], λx.'1X+600'(x)
[swaahteethswaahkwe :: c4], 700
[swaahteethswaahkwe  :: =c3, c4], λx.'1X+700'(x)
[palaanwaahkwe :: c4], 800
[palaanwaahkwe  :: =c3, c4], λx.'1X+800'(x)
[meneehkwaahkwe :: =cnix, =c1, c4], λxλy.'1X+0Y+900'(x,y)
[meneehkwaahkwe  :: =c3, =c1, c4], λxλy.'1X+450Y+450'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, c4], λx.x
[ :: =c3, +S1, c3], λx.x


Learning Marshallese
Learned 999 words in Marshallese and structured them in 37 functions.
It took 53 samples to learn those.
Those are:
juon is 1
ruo is 2
jilu is 3
emän is 4
ļalem is 5
jiljino is 6
Function jim_ maps {1} by x -> 0*x+7
ralitök is 8
Function ratim_ maps {1} by x -> 0*x+9
joñoul is 10
Function joñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+10
roñoul is 20
Function roñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+20
jilñoul is 30
Function jilñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+30
eñoul is 40
Function eñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+40
lemñoul is 50
Function lemñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+50
Function _ñoul maps {6} by x -> 0*x+60
Function _ñoul _ maps {6}x{1,2,3,4,5,6,jim_,8,ratim_} by (x0,x1) -> 10*x0+1*x1
jimjuoñoul is 70
Function jimjuoñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+70
ralitoñoul is 80
Function ralitoñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+80
ratimjuoñoul is 90
Function ratimjuoñoul _ maps {1,2,3,4,5,6,jim_,8,ratim_} by x -> 1*x+90
jibukwi is 100
Function jibukwi _ maps {1,2,3,4,5,6,jim_,8,ratim_,10,joñoul _,20,roñoul _,30,jilñoul _,40,eñoul _,50,lemñoul _,_ñoul,_ñoul _,70,jimjuoñoul _,80,ralitoñoul _,90,ratimjuoñoul _} by x -> 1*x+100
rubukwi is 200
Function rubukwi _ maps {1,2,3,4,5,6,jim_,8,ratim_,10,joñoul _,20,roñoul _,30,jilñoul _,40,eñoul _,50,lemñoul _,_ñoul,_ñoul _,70,jimjuoñoul _,80,ralitoñoul _,90,ratimjuoñoul _} by x -> 1*x+200
eabukwi is 400
Function eabukwi _ maps {1,2,3,4,5,6,jim_,8,ratim_,10,joñoul _,20,roñoul _,30,jilñoul _,40,eñoul _,50,lemñoul _,_ñoul,_ñoul _,70,jimjuoñoul _,80,ralitoñoul _,90,ratimjuoñoul _} by x -> 1*x+400
limabukwi is 500
Function limabukwi _ maps {1,2,3,4,5,6,jim_,8,ratim_,10,joñoul _,20,roñoul _,30,jilñoul _,40,eñoul _,50,lemñoul _,_ñoul,_ñoul _,70,jimjuoñoul _,80,ralitoñoul _,90,ratimjuoñoul _} by x -> 1*x+500
Function _bukwi maps {3,6,jim_,8,ratim_} by x -> 100*x+0
Function _bukwi _ maps {3,6,jim_,8,ratim_}x{1,2,3,4,5,6,jim_,8,ratim_,10,joñoul _,20,roñoul _,30,jilñoul _,40,eñoul _,50,lemñoul _,_ñoul,_ñoul _,70,jimjuoñoul _,80,ralitoñoul _,90,ratimjuoñoul _} by (x0,x1) -> 100*x0+1*x1

MG:
[juon :: c1], 1
[jiljino :: c2, -C, -E, -D1, -S2], 6
[ :: =c4, cFin], λx.x
[jilu :: c2, -E, -D1, -S2], 3
[jim :: =c1, c2, -E, -D1, -S2], λx.'0X+7'(x)
[ralitök :: c2, -E, -D1, -S2], 8
[ratim :: =c1, c2, -E, -D1, -S2], λx.'0X+9'(x)
[ruo :: c2, -D1, -S2], 2
[emän :: c2, -D1, -S2], 4
[ļalem :: c2, -D1, -S2], 5
[ :: =c1, c2], λx.x
[joñoul :: c3, -S1], 10
[joñoul  :: =c2, c3, -S1], λx.'1X+10'(x)
[roñoul :: c3, -S1], 20
[roñoul  :: =c2, c3, -S1], λx.'1X+20'(x)
[jilñoul :: c3, -S1], 30
[jilñoul  :: =c2, c3, -S1], λx.'1X+30'(x)
[eñoul :: c3, -S1], 40
[eñoul  :: =c2, c3, -S1], λx.'1X+40'(x)
[lemñoul :: c3, -S1], 50
[lemñoul  :: =c2, c3, -S1], λx.'1X+50'(x)
[ñoul :: =c2, +C, c3, -S1], λx.'0X+60'(x)
[ñoul  :: =c2, =c3C, c3, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[jimjuoñoul :: c3, -S1], 70
[jimjuoñoul  :: =c2, c3, -S1], λx.'1X+70'(x)
[ralitoñoul :: c3, -S1], 80
[ralitoñoul  :: =c2, c3, -S1], λx.'1X+80'(x)
[ratimjuoñoul :: c3, -S1], 90
[ratimjuoñoul  :: =c2, c3, -S1], λx.'1X+90'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +D1, c3], λx.x
[jibukwi :: c4], 100
[jibukwi  :: =c3, c4], λx.'1X+100'(x)
[rubukwi :: c4], 200
[rubukwi  :: =c3, c4], λx.'1X+200'(x)
[eabukwi :: c4], 400
[eabukwi  :: =c3, c4], λx.'1X+400'(x)
[limabukwi :: c4], 500
[limabukwi  :: =c3, c4], λx.'1X+500'(x)
[bukwi :: =c2, +E, c4], λx.'100X'(x)
[bukwi  :: =c3, =c4E, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +E, c4E], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x
[ :: =c2, +E, +D1, +S2, c2, -E], λx.x
[ :: =c2, +C, +E, +D1, +S2, c2, -C], λx.x


Learning Gottscheerish

Learned 999 words in Gottscheerish and structured them in 52 functions.
It took 69 samples to learn those.
Those are:
uains is 1
tsboai is 2
drai is 3
viər is 4
vemf is 5
žekš is 6
žībm is 7
oχt is 8
nain is 9
tsēhŋ is 10
uaindlof is 11
tsbelf is 12
Function _ttsain maps {4} by x -> 0*x+14
vu̇ftsain is 15
žaχtsain is 16
žimtsain is 17
Function _sain maps {8} by x -> 0*x+18
Function _tsain maps {3,9} by x -> 1*x+10
tsbȯntsikh is 20
uian-in-tsbȯntsikh is 21
Function _-in-tsbȯntsikh maps {2,3,4,6,7,8,9} by x -> 1*x+20
vemv-in-tsbȯntsikh is 25
Function _ttsikh maps {4} by x -> 0*x+40
Function uian-in-_ttsikh maps {4} by x -> 0*x+41
Function _-in-_ttsikh maps {2,3,4,6,7,8,9}x{4} by (x0,x1) -> 1*x0+9*x1+4
Function vemv-in-_ttsikh maps {4} by x -> 0*x+45
vu̇ftsikh is 50
uian-in-vu̇ftsikh is 51
Function _-in-vu̇ftsikh maps {2,3,4,6,7,8,9} by x -> 1*x+50
vemv-in-vu̇ftsikh is 55
žaχtsikh is 60
uian-in-žaχtsikh is 61
Function _-in-žaχtsikh maps {2,3,4,6,7,8,9} by x -> 1*x+60
vemv-in-žaχtsikh is 65
žimtsikh is 70
uian-in-žimtsikh is 71
Function _-in-žimtsikh maps {2,3,4,6,7,8,9} by x -> 1*x+70
vemv-in-žimtsikh is 75
Function _sikh maps {3,8} by x -> 10*x+0
Function uian-in-_sikh maps {3,8} by x -> 10*x+1
Function _-in-_sikh maps {2,3,4,6,7,8,9}x{3,8} by (x0,x1) -> 1*x0+10*x1
Function vemv-in-_sikh maps {3,8} by x -> 10*x+5
Function _tsikh maps {9} by x -> 0*x+90
Function uian-in-_tsikh maps {9} by x -> 0*x+91
Function _-in-_tsikh maps {2,3,4,6,7,8,9}x{9} by (x0,x1) -> 1*x0+10*x1
Function vemv-in-_tsikh maps {9} by x -> 0*x+95
hu̇ndərt is 100
hu̇ndərt-uain is 101
Function hu̇ndərt-_ maps {2,3,4,5,6,7,8,9,10,11,12,_ttsain,15,16,17,_sain,_tsain,20,21,_-in-tsbȯntsikh,25,_ttsikh,uian-in-_ttsikh,_-in-_ttsikh,vemv-in-_ttsikh,50,51,_-in-vu̇ftsikh,55,60,61,_-in-žaχtsikh,65,70,71,_-in-žimtsikh,75,_sikh,uian-in-_sikh,_-in-_sikh,vemv-in-_sikh,_tsikh,uian-in-_tsikh,_-in-_tsikh,vemv-in-_tsikh} by x -> 1*x+100
Function _hu̇ndərt maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hu̇ndərt-uain maps {2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _hu̇ndərt-_ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,11,12,_ttsain,15,16,17,_sain,_tsain,20,21,_-in-tsbȯntsikh,25,_ttsikh,uian-in-_ttsikh,_-in-_ttsikh,vemv-in-_ttsikh,50,51,_-in-vu̇ftsikh,55,60,61,_-in-žaχtsikh,65,70,71,_-in-žimtsikh,75,_sikh,uian-in-_sikh,_-in-_sikh,vemv-in-_sikh,_tsikh,uian-in-_tsikh,_-in-_tsikh,vemv-in-_tsikh} by (x0,x1) -> 100*x0+1*x1

MG:
[viər :: c1, -A, -H, -G0, -D], 4
[oχt :: c1, -B, -E, -H, -G0, -D], 8
[nain :: c1, -F, -C, -H, -G0, -D], 9
[ :: =c3, cFin], λx.x
[drai :: c1, -E, -C, -H, -G0, -D], 3
[tsboai :: c1, -H, -G0, -D], 2
[vemf :: c1, -H, -G0], 5
[žekš :: c1, -H, -G0, -D], 6
[žībm :: c1, -H, -G0, -D], 7
[tsēhŋ :: c2, -S1], 10
[uaindlof :: c2, -S1], 11
[tsbelf :: c2, -S1], 12
[ttsain :: =c1, +A, c2, -S1], λx.'0X+14'(x)
[vu̇ftsain :: c2, -S1], 15
[žaχtsain :: c2, -S1], 16
[žimtsain :: c2, -S1], 17
[sain :: =c1, +B, c2, -S1], λx.'0X+18'(x)
[tsain :: =c1, +C, c2, -S1], λx.'1X+10'(x)
[tsbȯntsikh :: c2, -S1], 20
[uian-in-tsbȯntsikh :: c2, -S1], 21
[-in-tsbȯntsikh :: =c1, +D, c2, -S1], λx.'1X+20'(x)
[vemv-in-tsbȯntsikh :: c2, -S1], 25
[ttsikh :: =c1, +A, c2, -S1], λx.'0X+40'(x)
[uian-in- :: =c2*, c2, -S1], λx.'1X+41'(x)
[ttsikh :: =c1, +A, c2*], λx.'0X'(x)
[-in- :: =c2**, =c2D, c2, -S1], λxλy.'1X+1Y+4'(x,y)
[ :: =c1, +D, c2D], λx.x
[ttsikh :: =c1, +A, c2**], λx.'9X'(x)
[vemv-in- :: =c2***, c2, -S1], λx.'1X+45'(x)
[ttsikh :: =c1, +A, c2***], λx.'0X'(x)
[vu̇ftsikh :: c2, -S1], 50
[uian-in-vu̇ftsikh :: c2, -S1], 51
[-in-vu̇ftsikh :: =c1, +D, c2, -S1], λx.'1X+50'(x)
[vemv-in-vu̇ftsikh :: c2, -S1], 55
[žaχtsikh :: c2, -S1], 60
[uian-in-žaχtsikh :: c2, -S1], 61
[-in-žaχtsikh :: =c1, +D, c2, -S1], λx.'1X+60'(x)
[vemv-in-žaχtsikh :: c2, -S1], 65
[žimtsikh :: c2, -S1], 70
[uian-in-žimtsikh :: c2, -S1], 71
[-in-žimtsikh :: =c1, +D, c2, -S1], λx.'1X+70'(x)
[vemv-in-žimtsikh :: c2, -S1], 75
[sikh :: =c1, +E, c2, -S1], λx.'10X'(x)
[uian-in- :: =c2****, c2, -S1], λx.'1X+1'(x)
[sikh :: =c1, +E, c2****], λx.'10X'(x)
[-in- :: =c2*****, =c2D, c2, -S1], λxλy.'1X+1Y'(x,y)
[sikh :: =c1, +E, c2*****], λx.'10X'(x)
[vemv-in- :: =c2******, c2, -S1], λx.'1X+5'(x)
[sikh :: =c1, +E, c2******], λx.'10X'(x)
[tsikh :: =c1, +F, c2, -S1], λx.'0X+90'(x)
[uian-in- :: =c2*******, c2, -S1], λx.'1X+91'(x)
[tsikh :: =c1, +F, c2*******], λx.'0X'(x)
[-in- :: =c2********, =c2D, c2, -S1], λxλy.'1X+1Y'(x,y)
[tsikh :: =c1, +F, c2********], λx.'10X'(x)
[vemv-in- :: =c2*********, c2, -S1], λx.'1X+95'(x)
[tsikh :: =c1, +F, c2*********], λx.'0X'(x)
[ :: =c1, +G0, c2], λx.x
[hu̇ndərt :: c3], 100
[hu̇ndərt-uain :: c3], 101
[hu̇ndərt- :: =c2, c3], λx.'1X+100'(x)
[hu̇ndərt :: =c1, +H, c3], λx.'100X'(x)
[hu̇ndərt-uain :: =c1, +H, c3], λx.'100X+1'(x)
[hu̇ndərt- :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[ :: =c1, c3], λx.x
[uains :: c1], 1
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +A, +H, +G0, +D, c1, -A], λx.x
[ :: =c1, +H, +G0, c1, -H], λx.x
[ :: =c1, +E, +H, +G0, +D, c1, -E], λx.x
[ :: =c1, +C, +H, +G0, +D, c1, -C], λx.x
[ :: =c1, +F, +C, +H, +G0, +D, c1, -F], λx.x
[ :: =c1, +G0, +D, c1, -G0], λx.x
[ :: =c1, +E, +C, +H, +G0, +D, c1, -E], λx.x
[ :: =c1, +H, +G0, +D, c1, -H], λx.x
[ :: =c1, +B, +E, +H, +G0, +D, c1, -B], λx.x


Learning Livonian
Learned 999 words in Livonian and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
ikš is 1
kakš is 2
kuolm is 3
nēļa is 4
vīž is 5
kūž is 6
seis is 7
kōdõks is 8
īdõks is 9
kim is 10
Function _tuoistõn maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kimdõ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kimdõ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sadā is 100
Function sadā _ maps {1,2,3,4,5,6,7,8,9,10,_tuoistõn,_kimdõ,_kimdõ _} by x -> 1*x+100
Function _ saddõ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ saddõ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_tuoistõn,_kimdõ,_kimdõ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kim :: c2, -S1], 10
[tuoistõn :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[kimdõ :: =c1, +B, c2, -S1], λx.'10X'(x)
[kimdõ  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[ikš :: c1], 1
[kakš :: c1, -B], 2
[kuolm :: c1, -B], 3
[nēļa :: c1, -B], 4
[vīž :: c1, -B], 5
[kūž :: c1, -B], 6
[seis :: c1, -B], 7
[kōdõks :: c1, -B], 8
[īdõks :: c1, -B], 9
[sadā :: c3], 100
[sadā  :: =c2, c3], λx.'1X+100'(x)
[ saddõ :: =c1, +B, c3], λx.'100X'(x)
[ saddõ  :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning South-Efate
Learned 999 words in South-Efate and structured them in 14 functions.
It took 22 samples to learn those.
Those are:
i-skei is 1
i-nru is 2
i-tul is 3
i-fat is 4
i-lim is 5
i-ɪa-tes is 6
i-ɪa-ru is 7
i-ɪa-tul is 8
i-ɪ-fot is 9
Function ralim _ maps {1,2,3,4,5,6,7,8,9} by x -> 10*x+0
Function ralim _ atmat _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function tifli _ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function tifli _ atmat _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function tifli _ _ maps {1,2,3,4,5,6,7,8,9}x{ralim _,ralim _ atmat _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[i-skei :: c1], 1
[i-nru :: c1], 2
[i-tul :: c1], 3
[i-fat :: c1], 4
[i-lim :: c1], 5
[i-ɪa-tes :: c1], 6
[i-ɪa-ru :: c1], 7
[i-ɪa-tul :: c1], 8
[i-ɪ-fot :: c1], 9
[tifli  :: =c1, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[ralim  :: =c1, c2], λx.'10X'(x)


Learning Tetun-Dili
Learned 999 words in Tetun-Dili and structured them in 54 functions.
It took 84 samples to learn those.
Those are:
ún is 1
dois is 2
trés is 3
kuatru is 4
sinku is 5
seis is 6
seti is 7
oitu is 8
novi is 9
dés is 10
onzi is 11
dozi is 12
trezi is 13
katorzi is 14
kizi is 15
Function deza_ maps {6,7,9} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
vinti is 20
Function vinti i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trenta is 30
Function trenta i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
kuarenta is 40
Function kuarenta i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _enta maps {5} by x -> 0*x+50
Function _enta i _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sesenta is 60
Function sesenta i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
oitenta is 80
Function oitenta i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa i _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sein is 100
Function sentu i deza_ maps {6,7,9} by x -> 1*x+110
Function sentu i dez_ maps {8} by x -> 0*x+118
sentu i vinti is 120
Function sentu _ i _ maps {20,30,40,_enta,60,70,80,90}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 1*x0+1*x1+100
Function sentu i _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,70,80,90,_enta} by x -> 1*x+100
duzentus is 200
Function duzentus i _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,30,40,_enta,60,70,80,90} by x -> 1*x+200
Function duzentus _ maps {vinti i _,trenta i _,kuarenta i _,_enta i _,sesenta i _,setenta i _,oitenta i _,noventa i _} by x -> 1*x+200
trezentus is 300
Function trezentus i _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,30,40,_enta,60,70,80,90} by x -> 1*x+300
Function trezentus _ maps {vinti i _,trenta i _,kuarenta i _,_enta i _,sesenta i _,setenta i _,oitenta i _,noventa i _} by x -> 1*x+300
kinyentus is 500
Function kinyentus i _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,30,40,_enta,60,70,80,90} by x -> 1*x+500
Function kinyentus _ maps {vinti i _,trenta i _,kuarenta i _,_enta i _,sesenta i _,setenta i _,oitenta i _,noventa i _} by x -> 1*x+500
Function _entus maps {6} by x -> 0*x+600
Function _entus i _ maps {6}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,30,40,_enta,60,70,80,90} by (x0,x1) -> 97*x0+1*x1+18
Function _entus _ maps {6}x{vinti i _,trenta i _,kuarenta i _,_enta i _,sesenta i _,setenta i _,oitenta i _,noventa i _} by (x0,x1) -> 97*x0+1*x1+18
Function _sentus maps {4,7,8,9} by x -> 100*x+0
Function _sentus i _ maps {4,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,deza_,dez_,20,30,40,_enta,60,70,80,90} by (x0,x1) -> 100*x0+1*x1
Function _sentus _ maps {4,7,8,9}x{vinti i _,trenta i _,kuarenta i _,_enta i _,sesenta i _,setenta i _,oitenta i _,noventa i _} by (x0,x1) -> 100*x0+1*x1

MG:
[sinku :: c1, -D], 5
[seis :: c1, -I, -A], 6
[oitu :: c1, -B, -J], 8
[ :: =c3, cFin], λx.x
[vinti :: c2, -E, -G, -S1], 20
[trenta :: c2, -E, -G, -S1, -F], 30
[kuarenta :: c2, -E, -G, -S1, -F], 40
[enta :: =c1, +D, c2, -E, -G, -S1, -F], λx.'0X+50'(x)
[sesenta :: c2, -E, -G, -S1, -F], 60
[setenta :: c2, -E, -G, -S1, -F], 70
[oitenta :: c2, -E, -G, -S1, -F], 80
[noventa :: c2, -E, -G, -S1, -F], 90
[ún :: c1], 1
[dois :: c1], 2
[trés :: c1], 3
[kuatru :: c1, -J], 4
[seti :: c1, -J, -A], 7
[novi :: c1, -J, -A], 9
[vinti i  :: =c1, c2, -H, -S1], λx.'1X+20'(x)
[trenta i  :: =c1, c2, -H, -S1], λx.'1X+30'(x)
[kuarenta i  :: =c1, c2, -H, -S1], λx.'1X+40'(x)
[enta i  :: =c1, =c2D, c2, -H, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[sesenta i  :: =c1, c2, -H, -S1], λx.'1X+60'(x)
[setenta i  :: =c1, c2, -H, -S1], λx.'1X+70'(x)
[oitenta i  :: =c1, c2, -H, -S1], λx.'1X+80'(x)
[noventa i  :: =c1, c2, -H, -S1], λx.'1X+90'(x)
[dés :: c2, -G, -S1, -F], 10
[onzi :: c2, -G, -S1, -F], 11
[dozi :: c2, -G, -S1, -F], 12
[trezi :: c2, -G, -S1, -F], 13
[katorzi :: c2, -G, -S1, -F], 14
[kizi :: c2, -G, -S1, -F], 15
[deza :: =c2A, c2, -G, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -G, -S1], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2, -G], λx.x
[sein :: c3], 100
[sentu i deza :: =c2A, c3], λx.'1X+110'(x)
[sentu i dez :: =c2B, c3], λx.'0X+118'(x)
[sentu i vinti :: c3], 120
[sentu  :: =c3*, c3], λx.'1X+100'(x)
[ i  :: =c1, =c3*E, c3*], λxλy.'1X+1Y'(x,y)
[ :: =c2, +E, c3*E], λx.x
[sentu i  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[duzentus :: c3], 200
[duzentus i  :: =c3G, c3], λx.'1X+200'(x)
[ :: =c2, +G, c3G], λx.x
[duzentus  :: =c3H, c3], λx.'1X+200'(x)
[ :: =c2, +H, c3H], λx.x
[trezentus :: c3], 300
[trezentus i  :: =c3G, c3], λx.'1X+300'(x)
[trezentus  :: =c3H, c3], λx.'1X+300'(x)
[kinyentus :: c3], 500
[kinyentus i  :: =c3G, c3], λx.'1X+500'(x)
[kinyentus  :: =c3H, c3], λx.'1X+500'(x)
[entus :: =c1, +I, c3], λx.'0X+600'(x)
[entus i  :: =c3G, =c3I, c3], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, +I, c3I], λx.x
[entus  :: =c3H, =c3I, c3], λxλy.'1X+97Y+18'(x,y)
[sentus :: =c1, +J, c3], λx.'100X'(x)
[sentus i  :: =c3G, =c3J, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c3J], λx.x
[sentus  :: =c3H, =c3J, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +E, +G, +S1, +F, c2, -E], λx.x
[ :: =c1, +I, +A, c1, -I], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c2, +E, +G, +S1, c2, -E], λx.x
[ :: =c2, +G, +S1, +F, c2, -G], λx.x
[ :: =c2, +H, +S1, c2, -H], λx.x
[ :: =c1, +J, +A, c1, -J], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning Tolowa

Learned 100 words in Tolowa and structured them in 34 functions.
It took 44 samples to learn those.
Those are:
łla’ is 1
naaxe is 2
taaxe is 3
dʉnchi is 4
srweela is 5
k’weestąąni is 6
shch’eet’e is 7
laaniisrʉtnaatą is 8
Function _dui maps {1} by x -> 0*x+9
neesan is 10
Function neesan_chaata maps {1,2,3,4,6,8,_dui} by x -> 1*x+10
Function neesan_’chaata maps {5} by x -> 0*x+15
neesanshch’eete’chaata is 17
naatʉnneesan is 20
Function naatʉnneesan_chaata maps {1,2,3,4,6,8,_dui} by x -> 1*x+20
naatʉnneesanshweela’chaata is 25
naatʉnneesanshch’eete’chaata is 27
taatʉnneesan is 30
Function taatʉnneesan_chaata maps {1,2,3,4,6,8,_dui} by x -> 1*x+30
taatʉnneesanshweela’chaata is 35
taatʉnneesanshch’eete’chaata is 37
dinchtʉnneesan is 40
Function dinchtʉnneesan_chaata maps {1,2,3,4,6,8,_dui} by x -> 1*x+40
dinchtʉnneesanshweela’chaata is 45
dinchtʉnneesanshch’eete’chaata is 47
Function _’tʉnneesan maps {5} by x -> 0*x+50
Function _’tʉnneesan_chaata maps {5}x{1,2,3,4,6,8,_dui} by (x0,x1) -> 10*x0+1*x1
Function _’tʉnneesanshweela’chaata maps {5} by x -> 0*x+55
Function _’tʉnneesanshch’eete’chaata maps {5} by x -> 0*x+57
Function _tʉnneesan maps {6,7,8,_dui} by x -> 10*x+0
Function _tʉnneesan_chaata maps {6,7,8,_dui}x{1,2,3,4,6,8,_dui} by (x0,x1) -> 10*x0+1*x1
Function _tʉnneesanshweela’chaata maps {6,7,8,_dui} by x -> 10*x+5
Function _tʉnneesanshch’eete’chaata maps {6,7,8,_dui} by x -> 10*x+7
Function _chʉn maps {1} by x -> 0*x+100

MG:
[łla’ :: c1], 1
[srweela :: c2, -C, -S1], 5
[ :: =c3, cFin], λx.x
[naaxe :: c2, -B, -S1], 2
[taaxe :: c2, -B, -S1], 3
[dʉnchi :: c2, -B, -S1], 4
[k’weestąąni :: c2, -B, -D, -S1], 6
[laaniisrʉtnaatą :: c2, -B, -D, -S1], 8
[dui :: =cnix, =c1, c2, -B, -D, -S1], λxλy.'1X+0Y+9'(x,y)
[ :: cnix], 0
[ :: =c1, c2, -B], λx.x
[shch’eet’e :: c2, -D, -S1], 7
[neesan :: c3], 10
[neesan :: =c3*, c3], λx.'1X+10'(x)
[chaata :: =c2, +B, c3*], λx.x
[neesan :: =c3**, c3], λx.'1X+15'(x)
[’chaata :: =c2, +C, c3**], λx.'0X'(x)
[neesanshch’eete’chaata :: c3], 17
[naatʉnneesan :: c3], 20
[naatʉnneesan :: =c3***, c3], λx.'1X+20'(x)
[chaata :: =c2, +B, c3***], λx.x
[naatʉnneesanshweela’chaata :: c3], 25
[naatʉnneesanshch’eete’chaata :: c3], 27
[taatʉnneesan :: c3], 30
[taatʉnneesan :: =c3****, c3], λx.'1X+30'(x)
[chaata :: =c2, +B, c3****], λx.x
[taatʉnneesanshweela’chaata :: c3], 35
[taatʉnneesanshch’eete’chaata :: c3], 37
[dinchtʉnneesan :: c3], 40
[dinchtʉnneesan :: =c3*****, c3], λx.'1X+40'(x)
[chaata :: =c2, +B, c3*****], λx.x
[dinchtʉnneesanshweela’chaata :: c3], 45
[dinchtʉnneesanshch’eete’chaata :: c3], 47
[’tʉnneesan :: =c2, +C, c3], λx.'0X+50'(x)
[’tʉnneesan :: =c3******, =c3C, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[chaata :: =c2, +B, c3******], λx.x
[’tʉnneesanshweela’chaata :: =c2, +C, c3], λx.'0X+55'(x)
[’tʉnneesanshch’eete’chaata :: =c2, +C, c3], λx.'0X+57'(x)
[tʉnneesan :: =c2, +D, c3], λx.'10X'(x)
[tʉnneesan :: =c3*******, =c3D, c3], λxλy.'1X+10Y'(x,y)
[ :: =c2, +D, c3D], λx.x
[chaata :: =c2, +B, c3*******], λx.x
[tʉnneesanshweela’chaata :: =c2, +D, c3], λx.'10X+5'(x)
[tʉnneesanshch’eete’chaata :: =c2, +D, c3], λx.'10X+7'(x)
[chʉn :: =cnix, =c1, c3], λxλy.'1X+0Y+100'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +B, +S1, c2, -B], λx.x
[ :: =c2, +B, +D, +S1, c2, -B], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x
[ :: =c2, +D, +S1, c2, -D], λx.x


Learning Tswana
Learned 999 words in Tswana and structured them in 25 functions.
It took 37 samples to learn those.
Those are:
nngwe is 1
pedi is 2
tharo is 3
nne is 4
tlhano is 5
thataro is 6
supa is 7
robedi is 8
robongwe is 9
lesome is 10
Function lesome_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
masome a mabedi is 20
Function masome a mabedi _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
masome a mane is 40
Function masome a mane _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function masome a ma_ maps {5} by x -> 0*x+50
Function masome a ma_ _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function masome a _ maps {3,6,7,8,9} by x -> 10*x+0
Function masome a _ _ maps {3,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
lekgolo is 100
Function lekgolo _ maps {1,2,3,4,5,6,7,8,9,10,lesome_,20,masome a mabedi _,40,masome a mane _,masome a ma_,masome a ma_ _,masome a _,masome a _ _} by x -> 1*x+100
makgolo a mabedi is 200
Function makgolo a mabedi _ maps {1,2,3,4,5,6,7,8,9,10,lesome_,20,masome a mabedi _,40,masome a mane _,masome a ma_,masome a ma_ _,masome a _,masome a _ _} by x -> 1*x+200
Function makgolo a _ maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function makgolo a _ _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,lesome_,20,masome a mabedi _,40,masome a mane _,masome a ma_,masome a ma_ _,masome a _,masome a _ _} by (x0,x1) -> 100*x0+1*x1

MG:
[tlhano :: c1, -B, -E], 5
[ :: =c3, cFin], λx.x
[tharo :: c1, -E, -C], 3
[nne :: c1, -E], 4
[thataro :: c1, -E, -C], 6
[supa :: c1, -E, -C], 7
[robedi :: c1, -E, -C], 8
[robongwe :: c1, -E, -C], 9
[nngwe :: c1], 1
[pedi :: c1], 2
[lesome :: c2, -S1], 10
[lesome :: =c1, c2, -S1], λx.'1X+10'(x)
[masome a mabedi :: c2, -S1], 20
[masome a mabedi  :: =c1, c2, -S1], λx.'1X+20'(x)
[masome a mane :: c2, -S1], 40
[masome a mane  :: =c1, c2, -S1], λx.'1X+40'(x)
[masome a ma :: =c2***B, c2, -S1], λx.'0X+50'(x)
[masome a ma :: =c2*, c2, -S1], λx.x
[  :: =c1, =c2***B, c2*], λxλy.'1X+10Y'(x,y)
[masome a  :: =c2****C, c2, -S1], λx.'10X'(x)
[masome a  :: =c2**, c2, -S1], λx.x
[  :: =c1, =c2****C, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[lekgolo :: c3], 100
[lekgolo  :: =c2, c3], λx.'1X+100'(x)
[makgolo a mabedi :: c3], 200
[makgolo a mabedi  :: =c2, c3], λx.'1X+200'(x)
[makgolo a  :: =c3*E, c3], λx.'100X'(x)
[makgolo a  :: =c3*, c3], λx.x
[  :: =c2, =c3*E, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3*E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[  :: =c1, =c2***B, c2***], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2***B], λx.x
[  :: =c1, =c2****C, c2****], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2****C], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x
[ :: =c1, +B, +E, c1, -B], λx.x


Learning Jakaltek
Learned 380 words in Jakaltek and structured them in 56 functions.
It took 74 samples to learn those.
Those are:
hune’ is 1
kab’eb’ is 2
oxeb’ is 3
kanheb’ is 4
howeb’ is 5
wajeb’ is 6
hujeb’ is 7
waxajeb’ is 8
b’alunheb’ is 9
lahunheb’ is 10
hunlahunheb’ is 11
kab’lahunheb’ is 12
oxlahunheb’ is 13
kanhlahunheb’ is 14
holahunheb’ is 15
wajlahunheb’ is 16
hujlahunheb’ is 17
waxajlahunheb’ is 18
b’alunhlahunheb’ is 19
hunk’al is 20
Function _ skab’winaj maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+20
kab’winaj is 40
Function _ yoxk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+40
oxk’al is 60
Function _ skanhwinaj maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+60
kanhwinaj is 80
Function _ shok’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+80
hok’al is 100
Function _ swajk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+100
wajk’al is 120
Function _ shujk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+120
hujk’al is 140
Function _ swaxaj’k’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+140
waxajk’al is 160
Function _ sb’alunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+160
b’alunhk’al is 180
Function _ slahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+180
lahunhk’al is 200
Function _ shunlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+200
hunlahunhk’al is 220
Function _ skab’lahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+220
kab’lahunhk’al is 240
Function _ yoxlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+240
oxlahunhk’al is 260
Function _ skanhlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+260
kanhlahunhk’al is 280
Function _ sholahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+280
holahunhk’al is 300
Function _ swajlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+300
wajlahunhk’al is 320
Function _ shujlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+320
hujlahunhk’al is 340
Function _ swaxajlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+340
waxajlahunhk’al is 360
Function _ sb’alunhlahunhk’al maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19} by x -> 1*x+360
b’alunhlahunhk’al is 380

MG:
[ :: =c2, cFin], λx.x
[hune’ :: c1], 1
[kab’eb’ :: c1], 2
[oxeb’ :: c1], 3
[kanheb’ :: c1], 4
[howeb’ :: c1], 5
[wajeb’ :: c1], 6
[hujeb’ :: c1], 7
[waxajeb’ :: c1], 8
[b’alunheb’ :: c1], 9
[lahunheb’ :: c1], 10
[hunlahunheb’ :: c1], 11
[kab’lahunheb’ :: c1], 12
[oxlahunheb’ :: c1], 13
[kanhlahunheb’ :: c1], 14
[holahunheb’ :: c1], 15
[wajlahunheb’ :: c1], 16
[hujlahunheb’ :: c1], 17
[waxajlahunheb’ :: c1], 18
[b’alunhlahunheb’ :: c1], 19
[hunk’al :: c2], 20
[ skab’winaj :: =cnix, =c1, c2], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[kab’winaj :: c2], 40
[ yoxk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+40'(x,y)
[oxk’al :: c2], 60
[ skanhwinaj :: =cnix, =c1, c2], λxλy.'1X+1Y+60'(x,y)
[kanhwinaj :: c2], 80
[ shok’al :: =cnix, =c1, c2], λxλy.'1X+1Y+80'(x,y)
[hok’al :: c2], 100
[ swajk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+100'(x,y)
[wajk’al :: c2], 120
[ shujk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+120'(x,y)
[hujk’al :: c2], 140
[ swaxaj’k’al :: =cnix, =c1, c2], λxλy.'1X+1Y+140'(x,y)
[waxajk’al :: c2], 160
[ sb’alunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+160'(x,y)
[b’alunhk’al :: c2], 180
[ slahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+180'(x,y)
[lahunhk’al :: c2], 200
[ shunlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+200'(x,y)
[hunlahunhk’al :: c2], 220
[ skab’lahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+220'(x,y)
[kab’lahunhk’al :: c2], 240
[ yoxlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+240'(x,y)
[oxlahunhk’al :: c2], 260
[ skanhlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+260'(x,y)
[kanhlahunhk’al :: c2], 280
[ sholahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+280'(x,y)
[holahunhk’al :: c2], 300
[ swajlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+300'(x,y)
[wajlahunhk’al :: c2], 320
[ shujlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+320'(x,y)
[hujlahunhk’al :: c2], 340
[ swaxajlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+340'(x,y)
[waxajlahunhk’al :: c2], 360
[ sb’alunhlahunhk’al :: =cnix, =c1, c2], λxλy.'1X+1Y+360'(x,y)
[b’alunhlahunhk’al :: c2], 380
[ :: =c1, c2], λx.x


Learning Mandinka

Learned 999 words in Mandinka and structured them in 19 functions.
It took 28 samples to learn those.
Those are:
kiliŋ is 1
fula is 2
saba is 3
naani is 4
luulu is 5
wooro is 6
worowula is 7
sey is 8
kononto is 9
taŋ is 10
Function taŋ niŋ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
muwaŋ is 20
Function muwaŋ niŋ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function taŋ _ maps {3,4,5,6,7,8} by x -> 10*x+0
Function taŋ _ niŋ _ maps {3,4,5,6,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ konoto maps {10} by x -> 0*x+90
Function _ konoto niŋ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1
Function keme _ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function keme _ niŋ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,taŋ niŋ _,20,muwaŋ niŋ _,taŋ _,taŋ _ niŋ _,_ konoto,_ konoto niŋ _} by (x0,x1) -> 100*x0+1*x1

MG:
[taŋ :: c1, -C], 10
[ :: =c3, cFin], λx.x
[saba :: c1, -B, -A], 3
[naani :: c1, -B, -A], 4
[luulu :: c1, -B, -A], 5
[wooro :: c1, -B, -A], 6
[worowula :: c1, -B, -A], 7
[sey :: c1, -B, -A], 8
[kiliŋ :: c1, -A], 1
[fula :: c1, -A], 2
[kononto :: c1, -A], 9
[taŋ niŋ  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[muwaŋ :: c2, -S1], 20
[muwaŋ niŋ  :: =c2A, c2, -S1], λx.'1X+20'(x)
[taŋ  :: =c2**B, c2, -S1], λx.'10X'(x)
[taŋ  :: =c2*, c2, -S1], λx.x
[ niŋ  :: =c2A, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ konoto :: =c1, +C, c2, -S1], λx.'0X+90'(x)
[ konoto niŋ  :: =c2A, =c2C, c2, -S1], λxλy.'1X+9Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[keme  :: =c2A, c3], λx.'100X'(x)
[keme  :: =c3*, c3], λx.x
[ niŋ  :: =c2, =c2A, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ niŋ  :: =c2A, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Hausa
Learned 999 words in Hausa and structured them in 34 functions.
It took 50 samples to learn those.
Those are:
ɗaya is 1
biyu is 2
uku is 3
huɗu is 4
biyar is 5
shida is 6
bakwai is 7
takwas is 8
tara is 9
goma is 10
Function sha _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
sha biyar is 15
ashirin is 20
Function ashirin da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
talatin is 30
Function talatin da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
arba’in is 40
Function arba’in da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
hamsin is 50
Function hamsin da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sittin is 60
Function sittin da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
saba’in is 70
Function saba’in da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tamanin is 80
Function tamanin da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
tis’in is 90
Function tis’in da _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
ɗari is 100
Function ɗari_ maps {1,2,3,4,5,6,7,8,9,10,20,ashirin da _,30,talatin da _,40,arba’in da _,50,hamsin da _,60,sittin da _,70,saba’in da _,80,tamanin da _,90,tis’in da _} by x -> 1*x+100
Function ɗari_ da _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 11*x0+1*x1
Function ɗari _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function ɗari __ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,20,ashirin da _,30,talatin da _,40,arba’in da _,50,hamsin da _,60,sittin da _,70,saba’in da _,80,tamanin da _,90,tis’in da _} by (x0,x1) -> 100*x0+1*x1
Function ɗari __ da _ maps {2,3,4,5,6,7,8,9}x{10}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[goma :: c2, -D, -C, -S1], 10
[ :: =c3, cFin], λx.x
[biyu :: c1, -E, -A], 2
[uku :: c1, -E, -A], 3
[huɗu :: c1, -E, -A], 4
[biyar :: c1, -E], 5
[shida :: c1, -E, -A], 6
[bakwai :: c1, -E, -A], 7
[takwas :: c1, -E, -A], 8
[tara :: c1, -E, -A], 9
[ashirin :: c2, -C, -S1], 20
[ashirin da  :: =c1, c2, -C, -S1], λx.'1X+20'(x)
[talatin :: c2, -C, -S1], 30
[talatin da  :: =c1, c2, -C, -S1], λx.'1X+30'(x)
[arba’in :: c2, -C, -S1], 40
[arba’in da  :: =c1, c2, -C, -S1], λx.'1X+40'(x)
[hamsin :: c2, -C, -S1], 50
[hamsin da  :: =c1, c2, -C, -S1], λx.'1X+50'(x)
[sittin :: c2, -C, -S1], 60
[sittin da  :: =c1, c2, -C, -S1], λx.'1X+60'(x)
[saba’in :: c2, -C, -S1], 70
[saba’in da  :: =c1, c2, -C, -S1], λx.'1X+70'(x)
[tamanin :: c2, -C, -S1], 80
[tamanin da  :: =c1, c2, -C, -S1], λx.'1X+80'(x)
[tis’in :: c2, -C, -S1], 90
[tis’in da  :: =c1, c2, -C, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -C], λx.x
[ɗaya :: c1, -A], 1
[ɗari :: c3], 100
[ɗari :: =c3**C, c3], λx.'1X+100'(x)
[ɗari :: =c3*, c3], λx.x
[ da  :: =c1, =c3****D, c3*], λxλy.'1X+11Y'(x,y)
[ɗari  :: =c3***E, c3], λx.'100X'(x)
[ɗari  :: =c3**, c3], λx.x
[ :: =c3**C, =c3***E, c3**], λxλy.'1X+100Y'(x,y)
[ :: =c2, +C, c3**C], λx.x
[ :: =c3****, =c3***E, c3***], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3***E], λx.x
[ da  :: =c1, =c3****D, c3****], λxλy.'1X+1Y'(x,y)
[ :: =c2, +D, c3****D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[sha  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[sha biyar :: c2, -S1], 15
[ :: =c2, +D, c2], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c2, +D, +C, +S1, c2, -D], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x


Learning Belarusian
Learned 999 words in Belarusian and structured them in 46 functions.
It took 65 samples to learn those.
Those are:
адзі́н is 1
два is 2
тры is 3
чаты́ры is 4
пяць is 5
шэсць is 6
сем is 7
во́сем is 8
дзе́вяць is 9
дзе́сяць is 10
адзіна́ццаць is 11
Function _на́ццаць maps {2,3} by x -> 1*x+10
чатырна́ццаць is 14
пятна́ццаць is 15
шасна́ццаць is 16
сямна́ццаць is 17
васямна́ццаць is 18
дзевятна́ццаць is 19
Function _́ццаць maps {2,3} by x -> 10*x+0
Function _́ццаць _ maps {2,3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
со́рак is 40
Function со́рак _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _дзеся́т maps {5} by x -> 0*x+50
Function _дзеся́т _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
шэ́сцьдзесят is 60
Function шэ́сцьдзесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
се́мдзесят is 70
Function се́мдзесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
Function _дзесят maps {8} by x -> 0*x+80
Function _дзесят _ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
дзевяно́ста is 90
Function дзевяно́ста _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by x -> 1*x+100
дзве́сце is 200
Function дзве́сце _ maps {1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by x -> 1*x+200
Function _́ста maps {3} by x -> 0*x+300
Function _́ста _ maps {3}x{1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by (x0,x1) -> 90*x0+1*x1+30
Function _ста maps {4} by x -> 0*x+400
Function _ста _ maps {4}x{1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by (x0,x1) -> 94*x0+1*x1+24
Function _со́т maps {5,6,7} by x -> 100*x+0
Function _со́т _ maps {5,6,7}x{1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by (x0,x1) -> 100*x0+1*x1
Function во_со́т maps {7} by x -> 0*x+800
Function во_со́т _ maps {7}x{1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by (x0,x1) -> 112*x0+1*x1+16
дзевяцьсо́т is 900
Function дзевяцьсо́т _ maps {1,2,3,4,5,6,7,8,9,10,11,_на́ццаць,14,15,16,17,18,19,_́ццаць,_́ццаць _,40,со́рак _,_дзеся́т,_дзеся́т _,60,шэ́сцьдзесят _,70,се́мдзесят _,_дзесят,_дзесят _,90,дзевяно́ста _} by x -> 1*x+900

MG:
[тры :: c1, -F, -A], 3
[чаты́ры :: c1, -G], 4
[пяць :: c1, -C, -H], 5
[сем :: c1, -I, -H], 7
[во́сем :: c1, -D], 8
[ :: =c3, cFin], λx.x
[дзе́сяць :: c2, -S1], 10
[адзіна́ццаць :: c2, -S1], 11
[на́ццаць :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[чатырна́ццаць :: c2, -S1], 14
[пятна́ццаць :: c2, -S1], 15
[шасна́ццаць :: c2, -S1], 16
[сямна́ццаць :: c2, -S1], 17
[васямна́ццаць :: c2, -S1], 18
[дзевятна́ццаць :: c2, -S1], 19
[́ццаць :: =c1, +A, c2, -S1], λx.'10X'(x)
[́ццаць  :: =c1, =c2A, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[со́рак :: c2, -S1], 40
[со́рак  :: =c1, c2, -S1], λx.'1X+40'(x)
[дзеся́т :: =c1, +C, c2, -S1], λx.'0X+50'(x)
[дзеся́т  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[шэ́сцьдзесят :: c2, -S1], 60
[шэ́сцьдзесят  :: =c1, c2, -S1], λx.'1X+60'(x)
[се́мдзесят :: c2, -S1], 70
[се́мдзесят  :: =c1, c2, -S1], λx.'1X+70'(x)
[дзесят :: =c1, +D, c2, -S1], λx.'0X+80'(x)
[дзесят  :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[дзевяно́ста :: c2, -S1], 90
[дзевяно́ста  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[адзі́н :: c1], 1
[два :: c1, -A], 2
[шэсць :: c1, -H], 6
[дзе́вяць :: c1], 9
[сто :: c3], 100
[сто  :: =c2, c3], λx.'1X+100'(x)
[дзве́сце :: c3], 200
[дзве́сце  :: =c2, c3], λx.'1X+200'(x)
[́ста :: =c1, +F, c3], λx.'0X+300'(x)
[́ста  :: =c2, =c3F, c3], λxλy.'1X+90Y+30'(x,y)
[ :: =c1, +F, c3F], λx.x
[ста :: =c1, +G, c3], λx.'0X+400'(x)
[ста  :: =c2, =c3G, c3], λxλy.'1X+94Y+24'(x,y)
[ :: =c1, +G, c3G], λx.x
[со́т :: =c1, +H, c3], λx.'100X'(x)
[со́т  :: =c2, =c3H, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c3H], λx.x
[во :: =c3*, c3], λx.'1X+800'(x)
[со́т :: =c1, +I, c3*], λx.'0X'(x)
[со́т  :: =c2, =c3**I, c3**], λxλy.'1X+112Y'(x,y)
[ :: =c1, +I, c3**I], λx.x
[дзевяцьсо́т :: c3], 900
[дзевяцьсо́т  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +C, +H, c1, -C], λx.x
[ :: =c1, +I, +H, c1, -I], λx.x


Learning Alsatian

Learned 999 words in Alsatian and structured them in 43 functions.
It took 58 samples to learn those.
Those are:
eins is 1
zwei is 2
drèï is 3
viar is 4
femf is 5
sex is 6
sewwa is 7
ååcht is 8
nîn is 9
zeh is 10
elf is 11
zwelf is 12
drize is 13
fùffze is 15
sæchze is 16
sewweze is 17
åchtze is 18
Function _ze maps {4,9} by x -> 1*x+10
zwånzig is 20
einazwånzig is 21
Function _azwånzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
drissig is 30
einadrissig is 31
Function _adrissig maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
fùffzig is 50
einafùffzig is 51
Function _afùffzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
sæchzig is 60
einasæchzig is 61
Function _asæchzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
sewwezig is 70
einasewwezig is 71
Function _asewwezig maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
åchtzig is 80
einaåchtzig is 81
Function _aåchtzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _zig maps {4,9} by x -> 10*x+0
Function eina_zig maps {4,9} by x -> 10*x+1
Function _a_zig maps {2,3,4,5,6,7,8,9}x{4,9} by (x0,x1) -> 1*x0+10*x1
hùnd’rt is 100
Function hùnd’rt_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,_ze,20,21,_azwånzig,30,31,_adrissig,50,51,_afùffzig,60,61,_asæchzig,70,71,_asewwezig,80,81,_aåchtzig,_zig,eina_zig,_a_zig} by x -> 1*x+100
Function _hùnd’rt maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hùnd’rt_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,_ze,20,21,_azwånzig,30,31,_adrissig,50,51,_afùffzig,60,61,_asæchzig,70,71,_asewwezig,80,81,_aåchtzig,_zig,eina_zig,_a_zig} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[zeh :: c2, -S1], 10
[elf :: c2, -S1], 11
[zwelf :: c2, -S1], 12
[drize :: c2, -S1], 13
[fùffze :: c2, -S1], 15
[sæchze :: c2, -S1], 16
[sewweze :: c2, -S1], 17
[åchtze :: c2, -S1], 18
[ze :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[zwånzig :: c2, -S1], 20
[einazwånzig :: c2, -S1], 21
[azwånzig :: =c1, +B, c2, -S1], λx.'1X+20'(x)
[drissig :: c2, -S1], 30
[einadrissig :: c2, -S1], 31
[adrissig :: =c1, +B, c2, -S1], λx.'1X+30'(x)
[fùffzig :: c2, -S1], 50
[einafùffzig :: c2, -S1], 51
[afùffzig :: =c1, +B, c2, -S1], λx.'1X+50'(x)
[sæchzig :: c2, -S1], 60
[einasæchzig :: c2, -S1], 61
[asæchzig :: =c1, +B, c2, -S1], λx.'1X+60'(x)
[sewwezig :: c2, -S1], 70
[einasewwezig :: c2, -S1], 71
[asewwezig :: =c1, +B, c2, -S1], λx.'1X+70'(x)
[åchtzig :: c2, -S1], 80
[einaåchtzig :: c2, -S1], 81
[aåchtzig :: =c1, +B, c2, -S1], λx.'1X+80'(x)
[zig :: =c1, +A, c2, -S1], λx.'10X'(x)
[eina :: =c2*, c2, -S1], λx.'1X+1'(x)
[zig :: =c1, +A, c2*], λx.'10X'(x)
[a :: =c2**, =c2B, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[zig :: =c1, +A, c2**], λx.'10X'(x)
[ :: =c1, c2], λx.x
[eins :: c1], 1
[zwei :: c1, -B], 2
[drèï :: c1, -B], 3
[viar :: c1, -B, -A], 4
[femf :: c1, -B], 5
[sex :: c1, -B], 6
[sewwa :: c1, -B], 7
[ååcht :: c1, -B], 8
[nîn :: c1, -B, -A], 9
[hùnd’rt :: c3], 100
[hùnd’rt :: =c2, c3], λx.'1X+100'(x)
[hùnd’rt :: =c1, +B, c3], λx.'100X'(x)
[hùnd’rt :: =c2, =c2B, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Ingrian
Learned 100 words in Ingrian and structured them in 15 functions.
It took 19 samples to learn those.
Those are:
üks is 1
kaks is 2
kold is 3
neljä is 4
viis is 5
kuus is 6
seitsemän is 7
kaheksan is 8
üheksän is 9
kümmenän is 10
yksitoista is 11
Function _toist maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kümmend maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kümmend _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sada is 100

MG:
[ :: =c2, cFin], λx.x
[kaks :: c1, -A], 2
[kold :: c1, -A], 3
[neljä :: c1, -A], 4
[viis :: c1, -A], 5
[kuus :: c1, -A], 6
[seitsemän :: c1, -A], 7
[kaheksan :: c1, -A], 8
[üheksän :: c1, -A], 9
[üks :: c1], 1
[kümmenän :: c2], 10
[yksitoista :: c2], 11
[toist :: =c1, +A, c2], λx.'1X+10'(x)
[kümmend :: =c1, +A, c2], λx.'10X'(x)
[kümmend  :: =c1, =c2A, c2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[sada :: c2], 100
[ :: =c1, c2], λx.x
[ :: =c1, +A, c1], λx.x


Learning Kyrgyz
Learned 999 words in Kyrgyz and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
бир is 1
эки is 2
үч is 3
төрт is 4
беш is 5
алты is 6
жети is 7
сегиз is 8
тогуз is 9
он is 10
Function он _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
жыйырма is 20
Function жыйырма _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
отуз is 30
Function отуз _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
кырк is 40
Function кырк _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
элүү is 50
Function элүү _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _мыш maps {6} by x -> 0*x+60
Function _мыш _ maps {6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _миш maps {7} by x -> 0*x+70
Function _миш _ maps {7}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
сексен is 80
Function сексен _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
токсон is 90
Function токсон _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
жүз is 100
Function жүз _ maps {1,2,3,4,5,6,7,8,9,10,он _,20,жыйырма _,30,отуз _,40,кырк _,50,элүү _,_мыш,_мыш _,_миш,_миш _,80,сексен _,90,токсон _} by x -> 1*x+100
Function _ жүз maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ жүз _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,он _,20,жыйырма _,30,отуз _,40,кырк _,50,элүү _,_мыш,_мыш _,_миш,_миш _,80,сексен _,90,токсон _} by (x0,x1) -> 100*x0+1*x1

MG:
[алты :: c1, -B, -E], 6
[жети :: c1, -C, -E], 7
[ :: =c3, cFin], λx.x
[эки :: c1, -E], 2
[үч :: c1, -E], 3
[төрт :: c1, -E], 4
[беш :: c1, -E], 5
[сегиз :: c1, -E], 8
[тогуз :: c1, -E], 9
[бир :: c1], 1
[он :: c2, -S1], 10
[он  :: =c1, c2, -S1], λx.'1X+10'(x)
[жыйырма :: c2, -S1], 20
[жыйырма  :: =c1, c2, -S1], λx.'1X+20'(x)
[отуз :: c2, -S1], 30
[отуз  :: =c1, c2, -S1], λx.'1X+30'(x)
[кырк :: c2, -S1], 40
[кырк  :: =c1, c2, -S1], λx.'1X+40'(x)
[элүү :: c2, -S1], 50
[элүү  :: =c1, c2, -S1], λx.'1X+50'(x)
[мыш :: =c1, +B, c2, -S1], λx.'0X+60'(x)
[мыш  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[миш :: =c1, +C, c2, -S1], λx.'0X+70'(x)
[миш  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[сексен :: c2, -S1], 80
[сексен  :: =c1, c2, -S1], λx.'1X+80'(x)
[токсон :: c2, -S1], 90
[токсон  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[жүз :: c3], 100
[жүз  :: =c2, c3], λx.'1X+100'(x)
[ жүз :: =c1, +E, c3], λx.'100X'(x)
[ жүз  :: =c2, =c3E, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +E, c1, -C], λx.x
[ :: =c1, +B, +E, c1, -B], λx.x


Learning Mazahua
Learned 999 words in Mazahua and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
d’aja is 1
yeje is 2
jñii is 3
nziyo is 4
ts’ich’a is 5
ñanto is 6
yencho is 7
jñincho is 8
nzincho is 9
dyecha is 10
Function dyecha _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
dyote is 20
Function dyote _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
jñite is 30
Function jñite _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
nzite is 40
Function nzite _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ts’ite is 50
Function ts’ite _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
ñante is 60
Function ñante _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
yente is 70
Function yente _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
jñinte is 80
Function jñinte _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
nzinte is 90
Function nzinte _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
dyete is 100
Function dyete _ maps {1,2,3,4,5,6,7,8,9,10,dyecha _,20,dyote _,30,jñite _,40,nzite _,50,ts’ite _,60,ñante _,70,yente _,80,jñinte _,90,nzinte _} by x -> 1*x+100
Function _ dyete maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ dyete _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,dyecha _,20,dyote _,30,jñite _,40,nzite _,50,ts’ite _,60,ñante _,70,yente _,80,jñinte _,90,nzinte _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[yeje :: c1, -C], 2
[jñii :: c1, -C], 3
[nziyo :: c1, -C], 4
[ts’ich’a :: c1, -C], 5
[ñanto :: c1, -C], 6
[yencho :: c1, -C], 7
[jñincho :: c1, -C], 8
[nzincho :: c1, -C], 9
[dyecha :: c2, -S1], 10
[dyecha  :: =c1, c2, -S1], λx.'1X+10'(x)
[dyote :: c2, -S1], 20
[dyote  :: =c1, c2, -S1], λx.'1X+20'(x)
[jñite :: c2, -S1], 30
[jñite  :: =c1, c2, -S1], λx.'1X+30'(x)
[nzite :: c2, -S1], 40
[nzite  :: =c1, c2, -S1], λx.'1X+40'(x)
[ts’ite :: c2, -S1], 50
[ts’ite  :: =c1, c2, -S1], λx.'1X+50'(x)
[ñante :: c2, -S1], 60
[ñante  :: =c1, c2, -S1], λx.'1X+60'(x)
[yente :: c2, -S1], 70
[yente  :: =c1, c2, -S1], λx.'1X+70'(x)
[jñinte :: c2, -S1], 80
[jñinte  :: =c1, c2, -S1], λx.'1X+80'(x)
[nzinte :: c2, -S1], 90
[nzinte  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[d’aja :: c1], 1
[dyete :: c3], 100
[dyete  :: =c2, c3], λx.'1X+100'(x)
[ dyete :: =c1, +C, c3], λx.'100X'(x)
[ dyete  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Oneida

Learned 999 words in Oneida and structured them in 22 functions.
It took 32 samples to learn those.
Those are:
úskah is 1
téken is 2
áhsʌ is 3
kayé is 4
wisk is 5
yá·yahk is 6
tsya·ták is 7
tékluˀ is 8
wá·tlu is 9
oye·lí is 10
tékni yawʌ·lé is 12
Function _ yawʌ·lé maps {1,3,4,5,6,7,8,9} by x -> 1*x+10
tewáshʌ is 20
Function tewáshʌ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ niwáshʌ maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _ niwáshʌ _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
tewʌˀnyáwelu is 100
Function tewʌˀnyáwelu ok _ maps {1,2,3,4,5,6,7,8,9,10,12,_ yawʌ·lé,20,tewáshʌ _,_ niwáshʌ,_ niwáshʌ _} by x -> 1*x+100
tékni tewʌˀnyáwelu is 200
Function tékni tewʌˀnyáwelu ok _ maps {1,2,3,4,5,6,7,8,9,10,12,_ yawʌ·lé,20,tewáshʌ _,_ niwáshʌ,_ niwáshʌ _} by x -> 1*x+200
Function _ tewʌˀnyáwelu maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ tewʌˀnyáwelu ok _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,12,_ yawʌ·lé,20,tewáshʌ _,_ niwáshʌ,_ niwáshʌ _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[áhsʌ :: c1, -C, -A], 3
[kayé :: c1, -C, -A], 4
[wisk :: c1, -C, -A], 5
[yá·yahk :: c1, -C, -A], 6
[tsya·ták :: c1, -C, -A], 7
[tékluˀ :: c1, -C, -A], 8
[wá·tlu :: c1, -C, -A], 9
[úskah :: c1, -A], 1
[téken :: c1], 2
[oye·lí :: c2, -S1], 10
[tékni yawʌ·lé :: c2, -S1], 12
[ yawʌ·lé :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[tewáshʌ :: c2, -S1], 20
[tewáshʌ  :: =c1, c2, -S1], λx.'1X+20'(x)
[ niwáshʌ :: =c1, +C, c2, -S1], λx.'10X'(x)
[ niwáshʌ  :: =c1, =c2C, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, c2], λx.x
[tewʌˀnyáwelu :: c3], 100
[tewʌˀnyáwelu ok  :: =c2, c3], λx.'1X+100'(x)
[tékni tewʌˀnyáwelu :: c3], 200
[tékni tewʌˀnyáwelu ok  :: =c2, c3], λx.'1X+200'(x)
[ tewʌˀnyáwelu :: =c1, +C, c3], λx.'100X'(x)
[ tewʌˀnyáwelu ok  :: =c2, =c2C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x


Learning Rincon-Zapotec
Learned 999 words in Rincon-Zapotec and structured them in 30 functions.
It took 105 samples to learn those.
Those are:
tu is 1
chopa is 2
tsonna is 3
tapa is 4
gayu’ is 5
xopa is 6
gadxi is 7
xunu’ is 8
ga is 9
chi is 10
chinéaj is 11
chinnu is 12
chi’inu is 13
chidá’ is 14
chinu is 15
Function chiz_ maps {6} by x -> 0*x+16
chini is 17
Function chix_ maps {8} by x -> 0*x+18
chënnaj is 19
Function _l-laj maps {9} by x -> 0*x+20
Function _-urua’ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19} by x -> 1*x+20
choa’ is 40
Function _-un maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19} by x -> 1*x+40
tsónnalal-laj is 60
Function tsónnalal-laj-yu’-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19} by x -> 1*x+60
tápalal-laj is 80
Function tápalal-laj-yu’-_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19} by x -> 1*x+80
Function _ _yuá’ maps {1,2,3,4,5,6,7,8,9}x{9} by (x0,x1) -> 100*x0+0*x1
Function _ _yuá’ yu’ _ maps {1,2,3,4,5,6,7,8,9}x{9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19,_l-laj,_-urua’,40,_-un,60,80} by (x0,x1,x2) -> 100*x0+0*x1+1*x2
Function _ _yuá’ yu’ _ yu’ _ maps {1,2,3,4,5,6,7,8,9}x{9}x{60,80}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,chiz_,17,chix_,19} by (x0,x1,x2,x3) -> 100*x0+0*x1+1*x2+1*x3

MG:
[xopa :: c1, -A], 6
[xunu’ :: c1, -B], 8
[ga :: c2, -C, -E, -D, -S2, -F1], 9
[ :: =c4, cFin], λx.x
[ :: =c1, c2, -E], λx.x
[tu :: c1], 1
[chopa :: c1], 2
[tsonna :: c1], 3
[tapa :: c1], 4
[gayu’ :: c1], 5
[gadxi :: c1], 7
[tsónnalal-laj :: c3, -G, -S1, -F], 60
[tápalal-laj :: c3, -G, -S1, -F], 80
[chi :: c2, -D, -S2, -F1], 10
[chinéaj :: c2, -D, -S2, -F1], 11
[chinnu :: c2, -D, -S2, -F1], 12
[chi’inu :: c2, -D, -S2, -F1], 13
[chidá’ :: c2, -D, -S2, -F1], 14
[chinu :: c2, -D, -S2, -F1], 15
[chiz :: =c2A, c2, -D, -S2, -F1], λx.'0X+16'(x)
[ :: =c1, +A, c2A], λx.x
[chini :: c2, -D, -S2, -F1], 17
[chix :: =c2B, c2, -D, -S2, -F1], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[chënnaj :: c2, -D, -S2, -F1], 19
[ :: =c1, c2, -D], λx.x
[tápalal-laj-yu’- :: =c3D, c4], λx.'1X+80'(x)
[  :: =c4*, =c4E, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +E, c4E], λx.x
[yuá’ :: =c2, +C, c4*], λx.'0X'(x)
[yuá’ yu’  :: =c4**F, =c4***C, c4**], λxλy.'1X+0Y'(x,y)
[ :: =c3, +F, c4**F], λx.x
[yuá’ yu’  :: =c4****, =c4***C, c4***], λxλy.'1X+0Y'(x,y)
[ :: =c2, +C, c4***C], λx.x
[ yu’  :: =c3D, =c4****G, c4****], λxλy.'1X+1Y'(x,y)
[ :: =c3, +G, c4****G], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[l-laj :: =c2, +C, c3, -S1, -F], λx.'0X+20'(x)
[-urua’ :: =c2, +D, c3, -S1, -F], λx.'1X+20'(x)
[choa’ :: c3, -S1, -F], 40
[-un :: =c2, +D, c3, -S1, -F], λx.'1X+40'(x)
[tsónnalal-laj-yu’- :: =c3D, c3, -S1], λx.'1X+60'(x)
[ :: =c2, +D, c3D], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c3, -F], λx.x
[ :: =c2, +F1, c3, -F], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +G, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +F1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +E, +D, +S2, +F1, c2, -E], λx.x
[ :: =c3, +G, +S1, +F, c3, -G], λx.x
[ :: =c2, +S2, +F1, c2, -S2], λx.x
[ :: =c3, +S1, +F, c3, -S1], λx.x
[ :: =c2, +D, +S2, +F1, c2, -D], λx.x
[ :: =c2, +C, +E, +D, +S2, +F1, c2, -C], λx.x


Learning Comox
Learned 999 words in Comox and structured them in 29 functions.
It took 111 samples to learn those.
Those are:
paʔa is 1
saʔa is 2
čɛlas is 3
mos is 4
θiyɛčɩs is 5
t̓əxəm is 6
tᶿočɩs is 7
taʔačɩs is 8
tɩgiχʷ is 9
opən is 10
Function ʔopən hekʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
θamšɛ is 20
Function θamšɛ heykʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
čɩnuxʷ šɛ is 30
Function čɩnuxʷ šɛ heykʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _aɬšɛ maps {5} by x -> 0*x+50
Function _aɬšɛ heykʷ _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
t̓əχmaɬ šɛ is 60
Function t̓əχmaɬ šɛ heykʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _aɬ šɛ maps {4,7,8} by x -> 10*x+0
Function _aɬ šɛ heykʷ _ maps {4,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
tɩgixʷaɬ šɛ is 90
Function tɩgixʷaɬ šɛ heykʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
Function təsɛʔɛč hekʷ ʔ_ hekʷ _ maps {10}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 11*x0+1*x1
təsɛʔɛč hekʷ θamšɛ is 120
Function təsɛʔɛč hekʷ θamšɛ heykʷ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
Function təsɛʔɛč hekʷ _ maps {1,2,3,4,5,6,7,8,9,10,30,60,90,čɩnuxʷ šɛ heykʷ _,_aɬ šɛ,_aɬ šɛ heykʷ _,_aɬšɛ,_aɬšɛ heykʷ _,t̓əχmaɬ šɛ heykʷ _,tɩgixʷaɬ šɛ heykʷ _} by x -> 1*x+100
Function _ təsɛʔɛč maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ təsɛʔɛč heykʷ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,ʔopən hekʷ _,20,θamšɛ heykʷ _,30,čɩnuxʷ šɛ heykʷ _,_aɬšɛ,_aɬšɛ heykʷ _,60,t̓əχmaɬ šɛ heykʷ _,_aɬ šɛ,_aɬ šɛ heykʷ _,90,tɩgixʷaɬ šɛ heykʷ _} by (x0,x1) -> 100*x0+1*x1

MG:
[θiyɛčɩs :: c1, -B, -F], 5
[opən :: c2, -D, -E, -G, -S1], 10
[ :: =c3, cFin], λx.x
[čɩnuxʷ šɛ :: c2, -E, -G, -S1], 30
[čɩnuxʷ šɛ heykʷ  :: =c1, c2, -E, -G, -S1], λx.'1X+30'(x)
[aɬšɛ :: =c1, +B, c2, -E, -G, -S1], λx.'0X+50'(x)
[aɬšɛ heykʷ  :: =c1, =c2B, c2, -E, -G, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[t̓əχmaɬ šɛ :: c2, -E, -G, -S1], 60
[t̓əχmaɬ šɛ heykʷ  :: =c1, c2, -E, -G, -S1], λx.'1X+60'(x)
[aɬ šɛ :: =c1, +C, c2, -E, -G, -S1], λx.'10X'(x)
[aɬ šɛ heykʷ  :: =c1, =c2C, c2, -E, -G, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[tɩgixʷaɬ šɛ :: c2, -E, -G, -S1], 90
[tɩgixʷaɬ šɛ heykʷ  :: =c1, c2, -E, -G, -S1], λx.'1X+90'(x)
[ :: =c1, c2, -E], λx.x
[paʔa :: c1], 1
[saʔa :: c1, -F], 2
[čɛlas :: c1, -F], 3
[mos :: c1, -C, -F], 4
[t̓əxəm :: c1, -F], 6
[tᶿočɩs :: c1, -C, -F], 7
[taʔačɩs :: c1, -C, -F], 8
[tɩgiχʷ :: c1, -F], 9
[ʔopən hekʷ  :: =c1, c2, -G, -S1], λx.'1X+10'(x)
[θamšɛ :: c2, -G, -S1], 20
[θamšɛ heykʷ  :: =c1, c2, -G, -S1], λx.'1X+20'(x)
[ :: =c1, c2, -G], λx.x
[təsɛʔɛč hekʷ ʔ :: =c3*, c3], λx.x
[ hekʷ  :: =c1, =c3*D, c3*], λxλy.'1X+11Y'(x,y)
[ :: =c2, +D, c3*D], λx.x
[təsɛʔɛč hekʷ θamšɛ :: c3], 120
[təsɛʔɛč hekʷ θamšɛ heykʷ  :: =c1, c3], λx.'1X+120'(x)
[təsɛʔɛč hekʷ  :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[ təsɛʔɛč :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ təsɛʔɛč heykʷ  :: =c3G, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c2, +G, c3G], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +G, +S1, c2, -G], λx.x
[ :: =c2, +E, +G, +S1, c2, -E], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x
[ :: =c2, +D, +E, +G, +S1, c2, -D], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x


Learning Punu

Learned 999 words in Punu and structured them in 30 functions.
It took 42 samples to learn those.
Those are:
imossi is 1
bidédji is 2
birriéwou is 3
bine is 4
biranou is 5
bissiaamounou is 6
issambouali is 7
inane is 8
ifou is 9
diwouni is 10
Function diwouni na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
mawouma bédji is 20
Function mawouma bédji na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
mawouma riérwou is 30
Function mawouma riérwou na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
mawoumane is 40
Function mawoumane na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
mawoumaranou is 50
Function mawoumaranou na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
mawoumassiamounou is 60
Function mawoumassiamounou na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
doussambouali doumawoumi is 70
Function doussambouali doumawoumi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
innane imawoumi is 80
Function innane imawoumi na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _ mawoumi maps {9} by x -> 0*x+90
Function _ mawoumi na _ maps {9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
kame is 100
Function kame _ na _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,diwouni na _,20,mawouma bédji na _,30,mawouma riérwou na _,40,mawoumane na _,50,mawoumaranou na _,60,mawoumassiamounou na _,70,doussambouali doumawoumi na _,80,innane imawoumi na _,_ mawoumi,_ mawoumi na _} by (x0,x1) -> 100*x0+1*x1
Function kame _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0

MG:
[ifou :: c1, -B, -D], 9
[ :: =c3, cFin], λx.x
[diwouni :: c2, -S1], 10
[diwouni na  :: =c1, c2, -S1], λx.'1X+10'(x)
[mawouma bédji :: c2, -S1], 20
[mawouma bédji na  :: =c1, c2, -S1], λx.'1X+20'(x)
[mawouma riérwou :: c2, -S1], 30
[mawouma riérwou na  :: =c1, c2, -S1], λx.'1X+30'(x)
[mawoumane :: c2, -S1], 40
[mawoumane na  :: =c1, c2, -S1], λx.'1X+40'(x)
[mawoumaranou :: c2, -S1], 50
[mawoumaranou na  :: =c1, c2, -S1], λx.'1X+50'(x)
[mawoumassiamounou :: c2, -S1], 60
[mawoumassiamounou na  :: =c1, c2, -S1], λx.'1X+60'(x)
[doussambouali doumawoumi :: c2, -S1], 70
[doussambouali doumawoumi na  :: =c1, c2, -S1], λx.'1X+70'(x)
[innane imawoumi :: c2, -S1], 80
[innane imawoumi na  :: =c1, c2, -S1], λx.'1X+80'(x)
[ mawoumi :: =c1, +B, c2, -S1], λx.'0X+90'(x)
[ mawoumi na  :: =c1, =c2B, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[imossi :: c1], 1
[bidédji :: c1, -D], 2
[birriéwou :: c1, -D], 3
[bine :: c1, -D], 4
[biranou :: c1, -D], 5
[bissiaamounou :: c1, -D], 6
[issambouali :: c1, -D], 7
[inane :: c1, -D], 8
[kame :: c3], 100
[kame  :: =c3*, c3], λx.x
[ na  :: =c2, =c1, c3*], λxλy.'1X+100Y'(x,y)
[kame  :: =c3D, c3], λx.'100X'(x)
[ :: =c1, +D, c3D], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x


Learning Bashkir
Learned 999 words in Bashkir and structured them in 31 functions.
It took 44 samples to learn those.
Those are:
бер is 1
ике is 2
өс is 3
дүрт is 4
биш is 5
алты is 6
ете is 7
һигеҙ is 8
туғыҙ is 9
ун is 10
Function ун _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
егерме is 20
Function егерме _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
утыҙ is 30
Function утыҙ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
ҡырҡ is 40
Function ҡырҡ _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
илле is 50
Function илле _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
алтмыш is 60
Function алтмыш _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
етмеш is 70
Function етмеш _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
һикһән is 80
Function һикһән _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
туҡһан is 90
Function туҡһан _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
йөҙ is 100
Function йөҙ _ maps {1,2,3,4,5,6,7,8,9,10,ун _,20,егерме _,30,утыҙ _,40,ҡырҡ _,50,илле _,60,алтмыш _,70,етмеш _,80,һикһән _,90,туҡһан _} by x -> 1*x+100
Function _ йөҙ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ йөҙ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,ун _,20,егерме _,30,утыҙ _,40,ҡырҡ _,50,илле _,60,алтмыш _,70,етмеш _,80,һикһән _,90,туҡһан _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[ике :: c1, -C], 2
[өс :: c1, -C], 3
[дүрт :: c1, -C], 4
[биш :: c1, -C], 5
[алты :: c1, -C], 6
[ете :: c1, -C], 7
[һигеҙ :: c1, -C], 8
[туғыҙ :: c1, -C], 9
[ун :: c2, -S1], 10
[ун  :: =c1, c2, -S1], λx.'1X+10'(x)
[егерме :: c2, -S1], 20
[егерме  :: =c1, c2, -S1], λx.'1X+20'(x)
[утыҙ :: c2, -S1], 30
[утыҙ  :: =c1, c2, -S1], λx.'1X+30'(x)
[ҡырҡ :: c2, -S1], 40
[ҡырҡ  :: =c1, c2, -S1], λx.'1X+40'(x)
[илле :: c2, -S1], 50
[илле  :: =c1, c2, -S1], λx.'1X+50'(x)
[алтмыш :: c2, -S1], 60
[алтмыш  :: =c1, c2, -S1], λx.'1X+60'(x)
[етмеш :: c2, -S1], 70
[етмеш  :: =c1, c2, -S1], λx.'1X+70'(x)
[һикһән :: c2, -S1], 80
[һикһән  :: =c1, c2, -S1], λx.'1X+80'(x)
[туҡһан :: c2, -S1], 90
[туҡһан  :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[бер :: c1], 1
[йөҙ :: c3], 100
[йөҙ  :: =c2, c3], λx.'1X+100'(x)
[ йөҙ :: =c1, +C, c3], λx.'100X'(x)
[ йөҙ  :: =c2, =c3C, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +C, c1], λx.x


Learning Cornish
Learned 999 words in Cornish and structured them in 31 functions.
It took 54 samples to learn those.
Those are:
onan is 1
dew is 2
tri is 3
peswar is 4
pymp is 5
hwegh is 6
seyth is 7
eth is 8
naw is 9
deg is 10
unnek is 11
tredhek is 13
Function _dhek maps {2,4} by x -> 1*x+10
pymthek is 15
hwetek is 16
seytek is 17
etek is 18
nownsek is 19
ugens is 20
Function _ warn ugens maps {1,2,3,4,5,6,7,8,9,10,11,13,_dhek,15,16,17,18,19} by x -> 1*x+20
Function _-ugens maps {2,3,4} by x -> 20*x+0
Function _ ha _-ugens maps {1,2,3,4,5,6,7,8,9,10,11,13,_dhek,15,16,17,18,19}x{2,3,4} by (x0,x1) -> 1*x0+20*x1
kans is 100
Function kans _ maps {1,2,3,4,5,6,7,8,9,10,20,_-ugens,_ ha _-ugens,_ warn ugens} by x -> 1*x+100
Function kans _ warn _ maps {10,20,_ warn ugens}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 1*x0+1*x1+100
Function _ hans maps {3} by x -> 0*x+300
Function _ hans _ maps {3}x{1,2,3,4,5,6,7,8,9,10,20,_-ugens,_ ha _-ugens,_ warn ugens} by (x0,x1) -> 90*x0+1*x1+30
Function _ hans _ warn _ maps {3}x{10,20,_ warn ugens}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 90*x0+1*x1+1*x2+30
Function _ kans maps {2,4,5,6,7,8,9} by x -> 100*x+0
Function _ kans _ maps {2,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,20,_-ugens,_ ha _-ugens,_ warn ugens} by (x0,x1) -> 100*x0+1*x1
Function _ kans _ warn _ maps {2,4,5,6,7,8,9}x{10,20,_ warn ugens}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[tri :: c1, -G, -C], 3
[ :: =c4, cFin], λx.x
[ugens :: c3, -E, -D, -S1], 20
[ warn ugens :: =c2, +B, c3, -E, -D, -S1], λx.'1X+20'(x)
[ :: =c2, +E0, c3, -E], λx.x
[deg :: c2, -E0, -B, -D1, -S2], 10
[dew :: c1, -C, -H0, -A], 2
[peswar :: c1, -C, -H0, -A], 4
[pymp :: c2, -H, -B, -D1, -S2, -F], 5
[hwegh :: c2, -H, -B, -D1, -S2, -F], 6
[seyth :: c2, -H, -B, -D1, -S2, -F], 7
[eth :: c2, -H, -B, -D1, -S2, -F], 8
[naw :: c2, -H, -B, -D1, -S2, -F], 9
[ :: =c1, +H0, c2, -H], λx.x
[unnek :: c2, -B, -S2], 11
[tredhek :: c2, -B, -S2], 13
[dhek :: =c1, +A, c2, -B, -S2], λx.'1X+10'(x)
[pymthek :: c2, -B, -S2], 15
[hwetek :: c2, -B, -S2], 16
[seytek :: c2, -B, -S2], 17
[etek :: c2, -B, -S2], 18
[nownsek :: c2, -B, -S2], 19
[ :: =c1, c2, -B], λx.x
[onan :: c1], 1
[-ugens :: =c1, +C, c3, -D, -S1], λx.'20X'(x)
[ ha  :: =c3*, =c3B, c3, -D, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c2, +B, c3B], λx.x
[-ugens :: =c1, +C, c3*], λx.'20X'(x)
[ :: =c1, c3, -D], λx.x
[ :: =c2, +D1, c3, -D], λx.x
[kans :: c4], 100
[kans  :: =c4D, c4], λx.'1X+100'(x)
[ :: =c3, +D, c4D], λx.x
[kans  :: =c4*, c4], λx.'1X+100'(x)
[ warn  :: =c4***F, =c4***E, c4*], λxλy.'1X+1Y'(x,y)
[ hans :: =c1, +G, c4], λx.'0X+300'(x)
[ hans  :: =c4D, =c4G, c4], λxλy.'1X+90Y+30'(x,y)
[ :: =c1, +G, c4G], λx.x
[ hans  :: =c4**, =c4G, c4], λxλy.'1X+90Y+30'(x,y)
[ warn  :: =c4***F, =c4***E, c4**], λxλy.'1X+1Y'(x,y)
[ kans :: =c2, +H, c4], λx.'100X'(x)
[ kans  :: =c4D, =c4H, c4], λxλy.'1X+100Y'(x,y)
[ :: =c2, +H, c4H], λx.x
[ kans  :: =c4***, =c4H, c4], λxλy.'1X+100Y'(x,y)
[ warn  :: =c4***F, =c4***E, c4***], λxλy.'1X+1Y'(x,y)
[ :: =c3, +E, c4***E], λx.x
[ :: =c2, +F, c4***F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +E0, c2], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c3, +E, c3], λx.x
[ :: =c2, +D1, c2], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c2, +B, +S2, c2, -B], λx.x
[ :: =c1, +C, +H0, +A, c1, -C], λx.x
[ :: =c1, +G, +C, c1, -G], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +B, +D1, +S2, c2, -B], λx.x
[ :: =c2, +D1, +S2, c2, -D1], λx.x
[ :: =c2, +H, +B, +D1, +S2, +F, c2, -H], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c2, +D1, +S2, +F, c2, -D1], λx.x
[ :: =c3, +E, +D, +S1, c3, -E], λx.x
[ :: =c2, +E0, +B, +D1, +S2, c2, -E0], λx.x
[ :: =c2, +B, +D1, +S2, +F, c2, -B], λx.x


Learning Kirmanjki

Learned 999 words in Kirmanjki and structured them in 33 functions.
It took 47 samples to learn those.
Those are:
yew is 1
di is 2
hîrê is 3
çar is 4
panc is 5
şeş is 6
hewt is 7
heşt is 8
new is 9
des is 10
Function _endes maps {1} by x -> 0*x+11
Function _wês maps {2} by x -> 0*x+12
Function _s maps {3} by x -> 0*x+13
Function _ês maps {4,5,7,8,9} by x -> 1*x+10
şîyês is 16
vîst is 20
Function vîst û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
hîris is 30
Function hîris û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
çewres is 40
Function çewres û _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _as maps {5} by x -> 0*x+50
Function _as û _ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _tî maps {6} by x -> 0*x+60
Function _tî û _ maps {6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ay maps {7,8,9} by x -> 10*x+0
Function _ay û _ maps {7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
se is 100
Function se û _ maps {1,2,3,4,5,6,7,8,9,10,_endes,_wês,_s,_ês,16,20,vîst û _,30,hîris û _,40,çewres û _,_as,_as û _,_tî,_tî û _,_ay,_ay û _} by x -> 1*x+100
Function _ sey maps {2,3,4,5,6,8,9} by x -> 100*x+0
Function _ sey û _ maps {2,3,4,5,6,8,9}x{1,2,3,4,5,6,7,8,9,10,_endes,_wês,_s,_ês,16,20,vîst û _,30,hîris û _,40,çewres û _,_as,_as û _,_tî,_tî û _,_ay,_ay û _} by (x0,x1) -> 100*x0+1*x1
Function _  sey maps {7} by x -> 0*x+700
Function _  sey û _ maps {7}x{1,2,3,4,5,6,7,8,9,10,_endes,_wês,_s,_ês,16,20,vîst û _,30,hîris û _,40,çewres û _,_as,_as û _,_tî,_tî û _,_ay,_ay û _} by (x0,x1) -> 98*x0+1*x1+14

MG:
[yew :: c1, -A], 1
[di :: c1, -B, -J], 2
[hîrê :: c1, -C, -J], 3
[panc :: c1, -F, -J, -D], 5
[şeş :: c1, -G, -J], 6
[hewt :: c1, -K, -H, -D], 7
[ :: =c3, cFin], λx.x
[çar :: c1, -J, -D], 4
[heşt :: c1, -J, -H, -D], 8
[new :: c1, -J, -H, -D], 9
[des :: c2, -S1], 10
[endes :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[wês :: =c1, +B, c2, -S1], λx.'0X+12'(x)
[s :: =c1, +C, c2, -S1], λx.'0X+13'(x)
[ês :: =c1, +D, c2, -S1], λx.'1X+10'(x)
[şîyês :: c2, -S1], 16
[vîst :: c2, -S1], 20
[vîst û  :: =c1, c2, -S1], λx.'1X+20'(x)
[hîris :: c2, -S1], 30
[hîris û  :: =c1, c2, -S1], λx.'1X+30'(x)
[çewres :: c2, -S1], 40
[çewres û  :: =c1, c2, -S1], λx.'1X+40'(x)
[as :: =c1, +F, c2, -S1], λx.'0X+50'(x)
[as û  :: =c1, =c2F, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[tî :: =c1, +G, c2, -S1], λx.'0X+60'(x)
[tî û  :: =c1, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +G, c2G], λx.x
[ay :: =c1, +H, c2, -S1], λx.'10X'(x)
[ay û  :: =c1, =c2H, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +H, c2H], λx.x
[ :: =c1, c2], λx.x
[se :: c3], 100
[se û  :: =c2, c3], λx.'1X+100'(x)
[ sey :: =c1, +J, c3], λx.'100X'(x)
[ sey û  :: =c2, =c3J, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c3J], λx.x
[  sey :: =c1, +K, c3], λx.'0X+700'(x)
[  sey û  :: =c2, =c3K, c3], λxλy.'1X+98Y+14'(x,y)
[ :: =c1, +K, c3K], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +F, +J, +D, c1, -F], λx.x
[ :: =c1, +C, +J, c1, -C], λx.x
[ :: =c1, +H, +D, c1, -H], λx.x
[ :: =c1, +J, +H, +D, c1, -J], λx.x
[ :: =c1, +G, +J, c1, -G], λx.x
[ :: =c1, +J, +D, c1, -J], λx.x
[ :: =c1, +K, +H, +D, c1, -K], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning Moloko
Learned 999 words in Moloko and structured them in 17 functions.
It took 25 samples to learn those.
Those are:
bǝlen is 1
cew is 2
makar is 3
mǝfaɗ is 4
zlom is 5
mǝko is 6
sǝsǝre is 7
slalakar is 8
holombo is 9
kǝro is 10
Function kǝro hǝr _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function kokǝr _ maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function kokǝr _ hǝr _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sǝkat is 100
Function sǝkat nǝ _ maps {1,2,3,4,5,6,7,8,9,10,kǝro hǝr _,kokǝr _,kokǝr _ hǝr _} by x -> 1*x+100
Function sǝkat _ maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function sǝkat _ nǝ _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,kǝro hǝr _,kokǝr _,kokǝr _ hǝr _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[kǝro :: c2, -S1], 10
[kǝro hǝr  :: =c1, c2, -S1], λx.'1X+10'(x)
[kokǝr  :: =c2**B, c2, -S1], λx.'10X'(x)
[kokǝr  :: =c2*, c2, -S1], λx.x
[ hǝr  :: =c1, =c2**B, c2*], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[bǝlen :: c1], 1
[cew :: c1, -B], 2
[makar :: c1, -B], 3
[mǝfaɗ :: c1, -B], 4
[zlom :: c1, -B], 5
[mǝko :: c1, -B], 6
[sǝsǝre :: c1, -B], 7
[slalakar :: c1, -B], 8
[holombo :: c1, -B], 9
[sǝkat :: c3], 100
[sǝkat nǝ  :: =c2, c3], λx.'1X+100'(x)
[sǝkat  :: =c2**B, c3], λx.'100X'(x)
[sǝkat  :: =c3*, c3], λx.x
[ nǝ  :: =c2, =c2**B, c3*], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ hǝr  :: =c1, =c2**B, c2**], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2**B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Sango
Learned 999 words in Sango and structured them in 13 functions.
It took 19 samples to learn those.
Those are:
ôko is 1
ûse is 2
otâ is 3
usïö is 4
ukü is 5
omënë is 6
mbâsâmbâlâ is 7
miombe is 8
gümbâyä is 9
Function balë _ maps {1,2,3,4,5,6,7,8,9} by x -> 10*x+0
Function balë _ na _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function ngbangbo _ maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function ngbangbo _ na _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,balë _,balë _ na _} by (x0,x1) -> 100*x0+1*x1

MG:
[ :: =c3, cFin], λx.x
[ôko :: c1], 1
[ûse :: c1], 2
[otâ :: c1], 3
[usïö :: c1], 4
[ukü :: c1], 5
[omënë :: c1], 6
[mbâsâmbâlâ :: c1], 7
[miombe :: c1], 8
[gümbâyä :: c1], 9
[ngbangbo  :: =c1, c3], λx.'100X'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[balë  :: =c1, c2, -S1, -S1], λx.'10X'(x)
[ :: =c1, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +S1, +S1, c2, -S1], λx.x


Learning Maltese
Learned 999 words in Maltese and structured them in 53 functions.
It took 70 samples to learn those.
Those are:
wieħed is 1
tnejn is 2
tlieta is 3
erbgħa is 4
ħamsa is 5
sitta is 6
sebgħa is 7
tmienja is 8
disgħa is 9
għaxra is 10
ħdax is 11
tnax is 12
tlettax is 13
erbatax is 14
ħmistax is 15
Function _x maps {6} by x -> 0*x+16
sbatax is 17
tmintax is 18
dsatax is 19
għoxrin is 20
Function _ u għoxrin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
tletin is 30
Function _ u tletin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
erbgħin is 40
Function _ u erbgħin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
ħamsin is 50
Function _ u ħamsin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sittin is 60
Function _ u sittin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
sebgħin is 70
Function _ u sebgħin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
tmenin is 80
Function _ u tmenin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
disgħin is 90
Function _ u disgħin maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
mija is 100
Function mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+100
mitejn is 200
Function mitejn u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+200
tliet mija is 300
Function tliet mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+300
erba’ mija is 400
Function erba’ mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+400
hames mija is 500
Function hames mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+500
sitt mija is 600
Function sitt mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+600
seba’ mija is 700
Function seba’ mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+700
tminn mija is 800
Function tminn mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+800
disa’ mija is 900
Function disa’ mija u _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,_x,17,18,19,20,_ u għoxrin,30,_ u tletin,40,_ u erbgħin,50,_ u ħamsin,60,_ u sittin,70,_ u sebgħin,80,_ u tmenin,90,_ u disgħin} by x -> 1*x+900

MG:
[sitta :: c1, -A], 6
[ :: =c3, cFin], λx.x
[għaxra :: c2, -S1], 10
[ħdax :: c2, -S1], 11
[tnax :: c2, -S1], 12
[tlettax :: c2, -S1], 13
[erbatax :: c2, -S1], 14
[ħmistax :: c2, -S1], 15
[x :: =c1, +A, c2, -S1], λx.'0X+16'(x)
[sbatax :: c2, -S1], 17
[tmintax :: c2, -S1], 18
[dsatax :: c2, -S1], 19
[għoxrin :: c2, -S1], 20
[ u għoxrin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[tletin :: c2, -S1], 30
[ u tletin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+30'(x,y)
[erbgħin :: c2, -S1], 40
[ u erbgħin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+40'(x,y)
[ħamsin :: c2, -S1], 50
[ u ħamsin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+50'(x,y)
[sittin :: c2, -S1], 60
[ u sittin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+60'(x,y)
[sebgħin :: c2, -S1], 70
[ u sebgħin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+70'(x,y)
[tmenin :: c2, -S1], 80
[ u tmenin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+80'(x,y)
[disgħin :: c2, -S1], 90
[ u disgħin :: =cnix, =c1, c2, -S1], λxλy.'1X+1Y+90'(x,y)
[ :: =c1, c2], λx.x
[wieħed :: c1], 1
[tnejn :: c1], 2
[tlieta :: c1], 3
[erbgħa :: c1], 4
[ħamsa :: c1], 5
[sebgħa :: c1], 7
[tmienja :: c1], 8
[disgħa :: c1], 9
[mija :: c3], 100
[mija u  :: =c2, c3], λx.'1X+100'(x)
[mitejn :: c3], 200
[mitejn u  :: =c2, c3], λx.'1X+200'(x)
[tliet mija :: c3], 300
[tliet mija u  :: =c2, c3], λx.'1X+300'(x)
[erba’ mija :: c3], 400
[erba’ mija u  :: =c2, c3], λx.'1X+400'(x)
[hames mija :: c3], 500
[hames mija u  :: =c2, c3], λx.'1X+500'(x)
[sitt mija :: c3], 600
[sitt mija u  :: =c2, c3], λx.'1X+600'(x)
[seba’ mija :: c3], 700
[seba’ mija u  :: =c2, c3], λx.'1X+700'(x)
[tminn mija :: c3], 800
[tminn mija u  :: =c2, c3], λx.'1X+800'(x)
[disa’ mija :: c3], 900
[disa’ mija u  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S1, c2], λx.x


Learning Mohawk

Learned 999 words in Mohawk and structured them in 20 functions.
It took 32 samples to learn those.
Those are:
énska is 1
tékeni is 2
áhsen is 3
kaié:ri is 4
wisk is 5
ià:ia’k is 6
tsá:ta is 7
sha’té:kon is 8
tióhton is 9
oié:ri is 10
Function _ iawén:re maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function tew_ maps {3} by x -> 0*x+20
Function tew_ _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 6*x0+1*x1+2
Function _ niw_ maps {3,4,5,7,8,9}x{3} by (x0,x1) -> 10*x0+0*x1
Function _ niw_ _ maps {3,4,5,7,8,9}x{3}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 10*x0+0*x1+1*x2
Function iá:ia’k niw_ maps {3} by x -> 0*x+60
Function iá:ia’k niw_ _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 18*x0+1*x1+6
Function _ tewen’niáwe maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ tewen’niáwe tánon _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ tewen’niáwe _ maps {1,2,3,4,5,6,7,8,9}x{10,_ iawén:re,tew_,tew_ _,_ niw_,_ niw_ _,iá:ia’k niw_,iá:ia’k niw_ _} by (x0,x1) -> 100*x0+1*x1

MG:
[áhsen :: c1, -B, -C], 3
[ :: =c3, cFin], λx.x
[kaié:ri :: c1, -C], 4
[wisk :: c1, -C], 5
[tsá:ta :: c1, -C], 7
[sha’té:kon :: c1, -C], 8
[tióhton :: c1, -C], 9
[énska :: c1], 1
[tékeni :: c1], 2
[ià:ia’k :: c1], 6
[oié:ri :: c2], 10
[ iawén:re :: =cnix, =c1, c2], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[tew :: =c2******B, c2], λx.'0X+20'(x)
[tew :: =c2*, c2], λx.'1X+2'(x)
[  :: =c1, =c2******B, c2*], λxλy.'1X+6Y'(x,y)
[ niw :: =c2******B, =c2C, c2], λxλy.'0X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[ niw :: =c2**, =c2C, c2], λxλy.'1X+10Y'(x,y)
[  :: =c1, =c2******B, c2**], λxλy.'1X+0Y'(x,y)
[iá:ia’k niw :: =c2******B, c2], λx.'0X+60'(x)
[iá:ia’k niw :: =c2***, c2], λx.'1X+6'(x)
[  :: =c1, =c2******B, c2***], λxλy.'1X+18Y'(x,y)
[ tewen’niáwe :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ tewen’niáwe tánon  :: =c1, =c1, c3], λxλy.'1X+100Y'(x,y)
[ tewen’niáwe  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, c3], λx.x
[  :: =c1, =c2******B, c2****], λxλy.'1X+6Y'(x,y)
[  :: =c1, =c2******B, c2*****], λxλy.'1X+0Y'(x,y)
[  :: =c1, =c2******B, c2******], λxλy.'1X+18Y'(x,y)
[ :: =c1, +B, c2******B], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +B, +C, c1, -B], λx.x


Learning Timbisha
Learned 999 words in Timbisha and structured them in 198 functions.
It took 207 samples to learn those.
Those are:
sümüttün is 1
wahattün is 2
pahittün is 3
wattsüwitün is 4
manikitün is 5
naapaitün is 6
taattsüwitün is 7
woosüwitün is 8
wanikkitün is 9
süümootün is 10
süümooyüntü sümüttüm ma to’engkünna is 11
süümooyüntü wahattüm ma to’engkünna is 12
süümooyüntü pahittüm ma to’engkünna is 13
süümooyüntü wattsüwitüm ma to’engkünna is 14
süümooyüntü manikitüm ma to’engkünna is 15
süümooyüntü naapaitüm ma to’engkünna is 16
süümooyüntü taattsüwitüm ma to’engkünna is 17
süümooyüntü woosüwitüm ma to’engkünna is 18
süümooyüntü wanikkitüm ma to’engkünna is 19
wahamoono is 20
wahamooyüntü sümüttüm ma to’engkünna is 21
wahamooyüntü wahattüm ma to’engkünna is 22
wahamooyüntü pahittüm ma to’engkünna is 23
wahamooyüntü wattsüwitüm ma to’engkünna is 24
wahamooyüntü manikitüm ma to’engkünna is 25
wahamooyüntü naapaitüm ma to’engkünna is 26
wahamooyüntü taattsüwitüm ma to’engkünna is 27
wahamooyüntü woosüwitüm ma to’engkünna is 28
wahamooyüntü wanikkitüm ma to’engkünna is 29
pahimoono is 30
pahimooyüntü sümüttüm ma to’engkünna is 31
pahimooyüntü wahattüm ma to’engkünna is 32
pahimooyüntü pahittüm ma to’engkünna is 33
pahimooyüntü wattsüwitüm ma to’engkünna is 34
pahimooyüntü manikitüm ma to’engkünna is 35
pahimooyüntü naapaitüm ma to’engkünna is 36
pahimooyüntü taattsüwitüm ma to’engkünna is 37
pahimooyüntü woosüwitüm ma to’engkünna is 38
pahimooyüntü wanikkitüm ma to’engkünna is 39
watsümoono is 40
watsümooyüntü sümüttüm ma to’engkünna is 41
watsümooyüntü wahattüm ma to’engkünna is 42
watsümooyüntü pahittüm ma to’engkünna is 43
watsümooyüntü wattsüwitüm ma to’engkünna is 44
watsümooyüntü manikitüm ma to’engkünna is 45
watsümooyüntü naapaitüm ma to’engkünna is 46
watsümooyüntü taattsüwitüm ma to’engkünna is 47
watsümooyüntü woosüwitüm ma to’engkünna is 48
watsümooyüntü wanikkitüm ma to’engkünna is 49
manikimoono is 50
manikimooyüntü sümüttüm ma to’engkünna is 51
manikimooyüntü wahattüm ma to’engkünna is 52
manikimooyüntü pahittüm ma to’engkünna is 53
manikimooyüntü wattsüwitüm ma to’engkünna is 54
manikimooyüntü manikitüm ma to’engkünna is 55
manikimooyüntü naapaitüm ma to’engkünna is 56
manikimooyüntü taattsüwitüm ma to’engkünna is 57
manikimooyüntü woosüwitüm ma to’engkünna is 58
manikimooyüntü wanikkitüm ma to’engkünna is 59
naapaimoono is 60
naapaimooyüntü sümüttüm ma to’engkünna is 61
naapaimooyüntü wahattüm ma to’engkünna is 62
naapaimooyüntü pahittüm ma to’engkünna is 63
naapaimooyüntü wattsüwitüm ma to’engkünna is 64
naapaimooyüntü manikitüm ma to’engkünna is 65
naapaimooyüntü naapaitüm ma to’engkünna is 66
naapaimooyüntü taattsüwitüm ma to’engkünna is 67
naapaimooyüntü woosüwitüm ma to’engkünna is 68
naapaimooyüntü wanikkitüm ma to’engkünna is 69
taattsüwimoono is 70
taattsüwimooyüntü sümüttüm ma to’engkünna is 71
taattsüwimooyüntü wahattüm ma to’engkünna is 72
taattsüwimooyüntü pahittüm ma to’engkünna is 73
taattsüwimooyüntü wattsüwitüm ma to’engkünna is 74
taattsüwimooyüntü manikitüm ma to’engkünna is 75
taattsüwimooyüntü naapaitüm ma to’engkünna is 76
taattsüwimooyüntü taattsüwitüm ma to’engkünna is 77
taattsüwimooyüntü woosüwitüm ma to’engkünna is 78
taattsüwimooyüntü wanikkitüm ma to’engkünna is 79
woosüwimoono is 80
woosüwimooyüntü sümüttüm ma to’engkünna is 81
woosüwimooyüntü wahattüm ma to’engkünna is 82
woosüwimooyüntü pahittüm ma to’engkünna is 83
woosüwimooyüntü wattsüwitüm ma to’engkünna is 84
woosüwimooyüntü manikitüm ma to’engkünna is 85
woosüwimooyüntü naapaitüm ma to’engkünna is 86
woosüwimooyüntü taattsüwitüm ma to’engkünna is 87
woosüwimooyüntü woosüwitüm ma to’engkünna is 88
woosüwimooyüntü wanikkitüm ma to’engkünna is 89
wanikkimoono is 90
wanikkimooyüntü sümüttüm ma to’engkünna is 91
wanikkimooyüntü wahattüm ma to’engkünna is 92
wanikkimooyüntü pahittüm ma to’engkünna is 93
wanikkimooyüntü wattsüwitüm ma to’engkünna is 94
wanikkimooyüntü manikitüm ma to’engkünna is 95
wanikkimooyüntü naapaitüm ma to’engkünna is 96
wanikkimooyüntü taattsüwitüm ma to’engkünna is 97
wanikkimooyüntü woosüwitüm ma to’engkünna is 98
wanikkimooyüntü wanikkitüm ma to’engkünna is 99
sümüseentu naatu is 100
sümüseentu naatu sümüttüm ma to’engkünna is 101
sümüseentu naatu wahattüm ma to’engkünna is 102
sümüseentu naatu pahittüm ma to’engkünna is 103
sümüseentu naatu wattsüwitüm ma to’engkünna is 104
sümüseentu naatu manikitüm ma to’engkünna is 105
sümüseentu naatu naapaitüm ma to’engkünna is 106
sümüseentu naatu taattsüwitüm ma to’engkünna is 107
sümüseentu naatu woosüwitüm ma to’engkünna is 108
sümüseentu naatu wanikkitüm ma to’engkünna is 109
Function sümüseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+100
wahaseentu naatu is 200
wahaseentu naatu sümüttüm ma to’engkünna is 201
wahaseentu naatu wahattüm ma to’engkünna is 202
wahaseentu naatu pahittüm ma to’engkünna is 203
wahaseentu naatu wattsüwitüm ma to’engkünna is 204
wahaseentu naatu manikitüm ma to’engkünna is 205
wahaseentu naatu naapaitüm ma to’engkünna is 206
wahaseentu naatu taattsüwitüm ma to’engkünna is 207
wahaseentu naatu woosüwitüm ma to’engkünna is 208
wahaseentu naatu wanikkitüm ma to’engkünna is 209
Function wahaseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+200
pahiseentu naatu is 300
pahiseentu naatu sümüttüm ma to’engkünna is 301
pahiseentu naatu wahattüm ma to’engkünna is 302
pahiseentu naatu pahittüm ma to’engkünna is 303
pahiseentu naatu wattsüwitüm ma to’engkünna is 304
pahiseentu naatu manikitüm ma to’engkünna is 305
pahiseentu naatu naapaitüm ma to’engkünna is 306
pahiseentu naatu taattsüwitüm ma to’engkünna is 307
pahiseentu naatu woosüwitüm ma to’engkünna is 308
pahiseentu naatu wanikkitüm ma to’engkünna is 309
Function pahiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+300
wattsüwiseentu naatu is 400
wattsüwiseentu naatu sümüttüm ma to’engkünna is 401
wattsüwiseentu naatu wahattüm ma to’engkünna is 402
wattsüwiseentu naatu pahittüm ma to’engkünna is 403
wattsüwiseentu naatu wattsüwitüm ma to’engkünna is 404
wattsüwiseentu naatu manikitüm ma to’engkünna is 405
wattsüwiseentu naatu naapaitüm ma to’engkünna is 406
wattsüwiseentu naatu taattsüwitüm ma to’engkünna is 407
wattsüwiseentu naatu woosüwitüm ma to’engkünna is 408
wattsüwiseentu naatu wanikkitüm ma to’engkünna is 409
Function wattsüwiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+400
manikiseentu naatu is 500
manikiseentu naatu sümüttüm ma to’engkünna is 501
manikiseentu naatu wahattüm ma to’engkünna is 502
manikiseentu naatu pahittüm ma to’engkünna is 503
manikiseentu naatu wattsüwitüm ma to’engkünna is 504
manikiseentu naatu manikitüm ma to’engkünna is 505
manikiseentu naatu naapaitüm ma to’engkünna is 506
manikiseentu naatu taattsüwitüm ma to’engkünna is 507
manikiseentu naatu woosüwitüm ma to’engkünna is 508
manikiseentu naatu wanikkitüm ma to’engkünna is 509
Function manikiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+500
naapaiseentu naatu is 600
naapaiseentu naatu sümüttüm ma to’engkünna is 601
naapaiseentu naatu wahattüm ma to’engkünna is 602
naapaiseentu naatu pahittüm ma to’engkünna is 603
naapaiseentu naatu wattsüwitüm ma to’engkünna is 604
naapaiseentu naatu manikitüm ma to’engkünna is 605
naapaiseentu naatu naapaitüm ma to’engkünna is 606
naapaiseentu naatu taattsüwitüm ma to’engkünna is 607
naapaiseentu naatu woosüwitüm ma to’engkünna is 608
naapaiseentu naatu wanikkitüm ma to’engkünna is 609
Function naapaiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+600
taattsüwiseentu naatu is 700
taattsüwiseentu naatu sümüttüm ma to’engkünna is 701
taattsüwiseentu naatu wahattüm ma to’engkünna is 702
taattsüwiseentu naatu pahittüm ma to’engkünna is 703
taattsüwiseentu naatu wattsüwitüm ma to’engkünna is 704
taattsüwiseentu naatu manikitüm ma to’engkünna is 705
taattsüwiseentu naatu naapaitüm ma to’engkünna is 706
taattsüwiseentu naatu taattsüwitüm ma to’engkünna is 707
taattsüwiseentu naatu woosüwitüm ma to’engkünna is 708
taattsüwiseentu naatu wanikkitüm ma to’engkünna is 709
Function taattsüwiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+700
woosüwiseentu naatu is 800
woosüwiseentu naatu sümüttüm ma to’engkünna is 801
woosüwiseentu naatu wahattüm ma to’engkünna is 802
woosüwiseentu naatu pahittüm ma to’engkünna is 803
woosüwiseentu naatu wattsüwitüm ma to’engkünna is 804
woosüwiseentu naatu manikitüm ma to’engkünna is 805
woosüwiseentu naatu naapaitüm ma to’engkünna is 806
woosüwiseentu naatu taattsüwitüm ma to’engkünna is 807
woosüwiseentu naatu woosüwitüm ma to’engkünna is 808
woosüwiseentu naatu wanikkitüm ma to’engkünna is 809
Function woosüwiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+800
wanikkiseentu naatu is 900
wanikkiseentu naatu sümüttüm ma to’engkünna is 901
wanikkiseentu naatu wahattüm ma to’engkünna is 902
wanikkiseentu naatu pahittüm ma to’engkünna is 903
wanikkiseentu naatu wattsüwitüm ma to’engkünna is 904
wanikkiseentu naatu manikitüm ma to’engkünna is 905
wanikkiseentu naatu naapaitüm ma to’engkünna is 906
wanikkiseentu naatu taattsüwitüm ma to’engkünna is 907
wanikkiseentu naatu woosüwitüm ma to’engkünna is 908
wanikkiseentu naatu wanikkitüm ma to’engkünna is 909
Function wanikkiseentu naatu _ maps {10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99} by x -> 1*x+900

MG:
[ :: =c2, cFin], λx.x
[süümootün :: c1, -A], 10
[süümooyüntü sümüttüm ma to’engkünna :: c1, -A], 11
[süümooyüntü wahattüm ma to’engkünna :: c1, -A], 12
[süümooyüntü pahittüm ma to’engkünna :: c1, -A], 13
[süümooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 14
[süümooyüntü manikitüm ma to’engkünna :: c1, -A], 15
[süümooyüntü naapaitüm ma to’engkünna :: c1, -A], 16
[süümooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 17
[süümooyüntü woosüwitüm ma to’engkünna :: c1, -A], 18
[süümooyüntü wanikkitüm ma to’engkünna :: c1, -A], 19
[wahamoono :: c1, -A], 20
[wahamooyüntü sümüttüm ma to’engkünna :: c1, -A], 21
[wahamooyüntü wahattüm ma to’engkünna :: c1, -A], 22
[wahamooyüntü pahittüm ma to’engkünna :: c1, -A], 23
[wahamooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 24
[wahamooyüntü manikitüm ma to’engkünna :: c1, -A], 25
[wahamooyüntü naapaitüm ma to’engkünna :: c1, -A], 26
[wahamooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 27
[wahamooyüntü woosüwitüm ma to’engkünna :: c1, -A], 28
[wahamooyüntü wanikkitüm ma to’engkünna :: c1, -A], 29
[pahimoono :: c1, -A], 30
[pahimooyüntü sümüttüm ma to’engkünna :: c1, -A], 31
[pahimooyüntü wahattüm ma to’engkünna :: c1, -A], 32
[pahimooyüntü pahittüm ma to’engkünna :: c1, -A], 33
[pahimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 34
[pahimooyüntü manikitüm ma to’engkünna :: c1, -A], 35
[pahimooyüntü naapaitüm ma to’engkünna :: c1, -A], 36
[pahimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 37
[pahimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 38
[pahimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 39
[watsümoono :: c1, -A], 40
[watsümooyüntü sümüttüm ma to’engkünna :: c1, -A], 41
[watsümooyüntü wahattüm ma to’engkünna :: c1, -A], 42
[watsümooyüntü pahittüm ma to’engkünna :: c1, -A], 43
[watsümooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 44
[watsümooyüntü manikitüm ma to’engkünna :: c1, -A], 45
[watsümooyüntü naapaitüm ma to’engkünna :: c1, -A], 46
[watsümooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 47
[watsümooyüntü woosüwitüm ma to’engkünna :: c1, -A], 48
[watsümooyüntü wanikkitüm ma to’engkünna :: c1, -A], 49
[manikimoono :: c1, -A], 50
[manikimooyüntü sümüttüm ma to’engkünna :: c1, -A], 51
[manikimooyüntü wahattüm ma to’engkünna :: c1, -A], 52
[manikimooyüntü pahittüm ma to’engkünna :: c1, -A], 53
[manikimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 54
[manikimooyüntü manikitüm ma to’engkünna :: c1, -A], 55
[manikimooyüntü naapaitüm ma to’engkünna :: c1, -A], 56
[manikimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 57
[manikimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 58
[manikimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 59
[naapaimoono :: c1, -A], 60
[naapaimooyüntü sümüttüm ma to’engkünna :: c1, -A], 61
[naapaimooyüntü wahattüm ma to’engkünna :: c1, -A], 62
[naapaimooyüntü pahittüm ma to’engkünna :: c1, -A], 63
[naapaimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 64
[naapaimooyüntü manikitüm ma to’engkünna :: c1, -A], 65
[naapaimooyüntü naapaitüm ma to’engkünna :: c1, -A], 66
[naapaimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 67
[naapaimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 68
[naapaimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 69
[taattsüwimoono :: c1, -A], 70
[taattsüwimooyüntü sümüttüm ma to’engkünna :: c1, -A], 71
[taattsüwimooyüntü wahattüm ma to’engkünna :: c1, -A], 72
[taattsüwimooyüntü pahittüm ma to’engkünna :: c1, -A], 73
[taattsüwimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 74
[taattsüwimooyüntü manikitüm ma to’engkünna :: c1, -A], 75
[taattsüwimooyüntü naapaitüm ma to’engkünna :: c1, -A], 76
[taattsüwimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 77
[taattsüwimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 78
[taattsüwimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 79
[woosüwimoono :: c1, -A], 80
[woosüwimooyüntü sümüttüm ma to’engkünna :: c1, -A], 81
[woosüwimooyüntü wahattüm ma to’engkünna :: c1, -A], 82
[woosüwimooyüntü pahittüm ma to’engkünna :: c1, -A], 83
[woosüwimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 84
[woosüwimooyüntü manikitüm ma to’engkünna :: c1, -A], 85
[woosüwimooyüntü naapaitüm ma to’engkünna :: c1, -A], 86
[woosüwimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 87
[woosüwimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 88
[woosüwimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 89
[wanikkimoono :: c1, -A], 90
[wanikkimooyüntü sümüttüm ma to’engkünna :: c1, -A], 91
[wanikkimooyüntü wahattüm ma to’engkünna :: c1, -A], 92
[wanikkimooyüntü pahittüm ma to’engkünna :: c1, -A], 93
[wanikkimooyüntü wattsüwitüm ma to’engkünna :: c1, -A], 94
[wanikkimooyüntü manikitüm ma to’engkünna :: c1, -A], 95
[wanikkimooyüntü naapaitüm ma to’engkünna :: c1, -A], 96
[wanikkimooyüntü taattsüwitüm ma to’engkünna :: c1, -A], 97
[wanikkimooyüntü woosüwitüm ma to’engkünna :: c1, -A], 98
[wanikkimooyüntü wanikkitüm ma to’engkünna :: c1, -A], 99
[sümüseentu naatu :: c2], 100
[sümüseentu naatu sümüttüm ma to’engkünna :: c2], 101
[sümüseentu naatu wahattüm ma to’engkünna :: c2], 102
[sümüseentu naatu pahittüm ma to’engkünna :: c2], 103
[sümüseentu naatu wattsüwitüm ma to’engkünna :: c2], 104
[sümüseentu naatu manikitüm ma to’engkünna :: c2], 105
[sümüseentu naatu naapaitüm ma to’engkünna :: c2], 106
[sümüseentu naatu taattsüwitüm ma to’engkünna :: c2], 107
[sümüseentu naatu woosüwitüm ma to’engkünna :: c2], 108
[sümüseentu naatu wanikkitüm ma to’engkünna :: c2], 109
[sümüseentu naatu  :: =c2A, c2], λx.'1X+100'(x)
[ :: =c1, +A, c2A], λx.x
[wahaseentu naatu :: c2], 200
[wahaseentu naatu sümüttüm ma to’engkünna :: c2], 201
[wahaseentu naatu wahattüm ma to’engkünna :: c2], 202
[wahaseentu naatu pahittüm ma to’engkünna :: c2], 203
[wahaseentu naatu wattsüwitüm ma to’engkünna :: c2], 204
[wahaseentu naatu manikitüm ma to’engkünna :: c2], 205
[wahaseentu naatu naapaitüm ma to’engkünna :: c2], 206
[wahaseentu naatu taattsüwitüm ma to’engkünna :: c2], 207
[wahaseentu naatu woosüwitüm ma to’engkünna :: c2], 208
[wahaseentu naatu wanikkitüm ma to’engkünna :: c2], 209
[wahaseentu naatu  :: =c2A, c2], λx.'1X+200'(x)
[pahiseentu naatu :: c2], 300
[pahiseentu naatu sümüttüm ma to’engkünna :: c2], 301
[pahiseentu naatu wahattüm ma to’engkünna :: c2], 302
[pahiseentu naatu pahittüm ma to’engkünna :: c2], 303
[pahiseentu naatu wattsüwitüm ma to’engkünna :: c2], 304
[pahiseentu naatu manikitüm ma to’engkünna :: c2], 305
[pahiseentu naatu naapaitüm ma to’engkünna :: c2], 306
[pahiseentu naatu taattsüwitüm ma to’engkünna :: c2], 307
[pahiseentu naatu woosüwitüm ma to’engkünna :: c2], 308
[pahiseentu naatu wanikkitüm ma to’engkünna :: c2], 309
[pahiseentu naatu  :: =c2A, c2], λx.'1X+300'(x)
[wattsüwiseentu naatu :: c2], 400
[wattsüwiseentu naatu sümüttüm ma to’engkünna :: c2], 401
[wattsüwiseentu naatu wahattüm ma to’engkünna :: c2], 402
[wattsüwiseentu naatu pahittüm ma to’engkünna :: c2], 403
[wattsüwiseentu naatu wattsüwitüm ma to’engkünna :: c2], 404
[wattsüwiseentu naatu manikitüm ma to’engkünna :: c2], 405
[wattsüwiseentu naatu naapaitüm ma to’engkünna :: c2], 406
[wattsüwiseentu naatu taattsüwitüm ma to’engkünna :: c2], 407
[wattsüwiseentu naatu woosüwitüm ma to’engkünna :: c2], 408
[wattsüwiseentu naatu wanikkitüm ma to’engkünna :: c2], 409
[wattsüwiseentu naatu  :: =c2A, c2], λx.'1X+400'(x)
[manikiseentu naatu :: c2], 500
[manikiseentu naatu sümüttüm ma to’engkünna :: c2], 501
[manikiseentu naatu wahattüm ma to’engkünna :: c2], 502
[manikiseentu naatu pahittüm ma to’engkünna :: c2], 503
[manikiseentu naatu wattsüwitüm ma to’engkünna :: c2], 504
[manikiseentu naatu manikitüm ma to’engkünna :: c2], 505
[manikiseentu naatu naapaitüm ma to’engkünna :: c2], 506
[manikiseentu naatu taattsüwitüm ma to’engkünna :: c2], 507
[manikiseentu naatu woosüwitüm ma to’engkünna :: c2], 508
[manikiseentu naatu wanikkitüm ma to’engkünna :: c2], 509
[manikiseentu naatu  :: =c2A, c2], λx.'1X+500'(x)
[naapaiseentu naatu :: c2], 600
[naapaiseentu naatu sümüttüm ma to’engkünna :: c2], 601
[naapaiseentu naatu wahattüm ma to’engkünna :: c2], 602
[naapaiseentu naatu pahittüm ma to’engkünna :: c2], 603
[naapaiseentu naatu wattsüwitüm ma to’engkünna :: c2], 604
[naapaiseentu naatu manikitüm ma to’engkünna :: c2], 605
[naapaiseentu naatu naapaitüm ma to’engkünna :: c2], 606
[naapaiseentu naatu taattsüwitüm ma to’engkünna :: c2], 607
[naapaiseentu naatu woosüwitüm ma to’engkünna :: c2], 608
[naapaiseentu naatu wanikkitüm ma to’engkünna :: c2], 609
[naapaiseentu naatu  :: =c2A, c2], λx.'1X+600'(x)
[taattsüwiseentu naatu :: c2], 700
[taattsüwiseentu naatu sümüttüm ma to’engkünna :: c2], 701
[taattsüwiseentu naatu wahattüm ma to’engkünna :: c2], 702
[taattsüwiseentu naatu pahittüm ma to’engkünna :: c2], 703
[taattsüwiseentu naatu wattsüwitüm ma to’engkünna :: c2], 704
[taattsüwiseentu naatu manikitüm ma to’engkünna :: c2], 705
[taattsüwiseentu naatu naapaitüm ma to’engkünna :: c2], 706
[taattsüwiseentu naatu taattsüwitüm ma to’engkünna :: c2], 707
[taattsüwiseentu naatu woosüwitüm ma to’engkünna :: c2], 708
[taattsüwiseentu naatu wanikkitüm ma to’engkünna :: c2], 709
[taattsüwiseentu naatu  :: =c2A, c2], λx.'1X+700'(x)
[woosüwiseentu naatu :: c2], 800
[woosüwiseentu naatu sümüttüm ma to’engkünna :: c2], 801
[woosüwiseentu naatu wahattüm ma to’engkünna :: c2], 802
[woosüwiseentu naatu pahittüm ma to’engkünna :: c2], 803
[woosüwiseentu naatu wattsüwitüm ma to’engkünna :: c2], 804
[woosüwiseentu naatu manikitüm ma to’engkünna :: c2], 805
[woosüwiseentu naatu naapaitüm ma to’engkünna :: c2], 806
[woosüwiseentu naatu taattsüwitüm ma to’engkünna :: c2], 807
[woosüwiseentu naatu woosüwitüm ma to’engkünna :: c2], 808
[woosüwiseentu naatu wanikkitüm ma to’engkünna :: c2], 809
[woosüwiseentu naatu  :: =c2A, c2], λx.'1X+800'(x)
[wanikkiseentu naatu :: c2], 900
[wanikkiseentu naatu sümüttüm ma to’engkünna :: c2], 901
[wanikkiseentu naatu wahattüm ma to’engkünna :: c2], 902
[wanikkiseentu naatu pahittüm ma to’engkünna :: c2], 903
[wanikkiseentu naatu wattsüwitüm ma to’engkünna :: c2], 904
[wanikkiseentu naatu manikitüm ma to’engkünna :: c2], 905
[wanikkiseentu naatu naapaitüm ma to’engkünna :: c2], 906
[wanikkiseentu naatu taattsüwitüm ma to’engkünna :: c2], 907
[wanikkiseentu naatu woosüwitüm ma to’engkünna :: c2], 908
[wanikkiseentu naatu wanikkitüm ma to’engkünna :: c2], 909
[wanikkiseentu naatu  :: =c2A, c2], λx.'1X+900'(x)
[ :: =c1, c2], λx.x
[sümüttün :: c1], 1
[wahattün :: c1], 2
[pahittün :: c1], 3
[wattsüwitün :: c1], 4
[manikitün :: c1], 5
[naapaitün :: c1], 6
[taattsüwitün :: c1], 7
[woosüwitün :: c1], 8
[wanikkitün :: c1], 9
[ :: =c1, +A, c1], λx.x




Learning Indonesian

Learned 999 words in Indonesian and structured them in 20 functions.
It took 31 samples to learn those.
Those are:
satu is 1
dua is 2
tiga is 3
empat is 4
lima is 5
enam is 6
tujuh is 7
delapan is 8
sembilan is 9
sepuluh is 10
sebelas is 11
Function _ belas maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ puluh maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ puluh _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
seratus is 100
Function seratus _ maps {1,2,3,4,5,6,7,8,9,10,11,_ puluh,_ puluh _} by x -> 1*x+100
Function seratus belas _ maps {2,3,4,5,6,7,8,9} by x -> 1*x+110
Function _ ratus maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ratus _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_ puluh,_ puluh _} by (x0,x1) -> 100*x0+1*x1
Function _ ratus belas _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1+10

MG:
[ :: =c3, cFin], λx.x
[sepuluh :: c2, -C, -S1], 10
[sebelas :: c2, -C, -S1], 11
[ puluh :: =c1, +A, c2, -C, -S1], λx.'10X'(x)
[ puluh  :: =c1, =c2A, c2, -C, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, c2, -C], λx.x
[satu :: c1], 1
[dua :: c1, -A], 2
[tiga :: c1, -A], 3
[empat :: c1, -A], 4
[lima :: c1, -A], 5
[enam :: c1, -A], 6
[tujuh :: c1, -A], 7
[delapan :: c1, -A], 8
[sembilan :: c1, -A], 9
[seratus :: c3], 100
[seratus  :: =c3C, c3], λx.'1X+100'(x)
[ :: =c2, +C, c3C], λx.x
[seratus belas  :: =c2A, c3], λx.'1X+110'(x)
[ ratus :: =c1, +A, c3], λx.'100X'(x)
[ ratus  :: =c3C, =c2A, c3], λxλy.'1X+100Y'(x,y)
[ ratus belas  :: =c2A, =c2A, c3], λxλy.'1X+100Y+10'(x,y)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ belas :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +C, +S1, c2, -C], λx.x


Learning Friulian
Learned 999 words in Friulian and structured them in 41 functions.
It took 56 samples to learn those.
Those are:
un is 1
doi is 2
trê is 3
cuatri is 4
cinc is 5
sîs is 6
siet is 7
vot is 8
nûf is 9
dîs is 10
Function _dis maps {1} by x -> 0*x+11
dodis is 12
tredis is 13
cutuardis is 14
cuindis is 15
sedis is 16
Function dise_ maps {7,8,9} by x -> 1*x+10
vincj is 20
Function vincje_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarante is 40
Function cuarante_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante_ maps {5}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sessante is 60
Function sessante_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setante is 70
Function setante_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
otante is 80
Function otante_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
novante is 90
Function novante_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cent is 100
Function cent e _ maps {1,2,3,4,5,6,7,8,9,10,_dis,12,13,14,15,16,dise_,20,vincje_,30,trente_,40,cuarante_,_uante,_uante_,60,sessante_,70,setante_,80,otante_,90,novante_} by x -> 1*x+100
dusinte is 200
Function dusinte e _ maps {1,2,3,4,5,6,7,8,9,10,_dis,12,13,14,15,16,dise_,20,vincje_,30,trente_,40,cuarante_,_uante,_uante_,60,sessante_,70,setante_,80,otante_,90,novante_} by x -> 1*x+200
tresinte is 300
Function tresinte e _ maps {1,2,3,4,5,6,7,8,9,10,_dis,12,13,14,15,16,dise_,20,vincje_,30,trente_,40,cuarante_,_uante,_uante_,60,sessante_,70,setante_,80,otante_,90,novante_} by x -> 1*x+300
Function _cent maps {4,5,6,7,8,9} by x -> 100*x+0
Function _cent e _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_dis,12,13,14,15,16,dise_,20,vincje_,30,trente_,40,cuarante_,_uante,_uante_,60,sessante_,70,setante_,80,otante_,90,novante_} by (x0,x1) -> 100*x0+1*x1

MG:
[un :: c1, -A], 1
[cinc :: c1, -D, -F], 5
[ :: =c3, cFin], λx.x
[dîs :: c2, -S1], 10
[dis :: =c1, +A, c2, -S1], λx.'0X+11'(x)
[dodis :: c2, -S1], 12
[tredis :: c2, -S1], 13
[cutuardis :: c2, -S1], 14
[cuindis :: c2, -S1], 15
[sedis :: c2, -S1], 16
[dise :: =c2B, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +B, c2B], λx.x
[vincj :: c2, -S1], 20
[vincje :: =c1, c2, -S1], λx.'1X+20'(x)
[trente :: c2, -S1], 30
[trente :: =c1, c2, -S1], λx.'1X+30'(x)
[cuarante :: c2, -S1], 40
[cuarante :: =c1, c2, -S1], λx.'1X+40'(x)
[uante :: =c1, +D, c2, -S1], λx.'0X+50'(x)
[uante :: =c1, =c2D, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[sessante :: c2, -S1], 60
[sessante :: =c1, c2, -S1], λx.'1X+60'(x)
[setante :: c2, -S1], 70
[setante :: =c1, c2, -S1], λx.'1X+70'(x)
[otante :: c2, -S1], 80
[otante :: =c1, c2, -S1], λx.'1X+80'(x)
[novante :: c2, -S1], 90
[novante :: =c1, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[doi :: c1], 2
[trê :: c1], 3
[cuatri :: c1, -F], 4
[sîs :: c1, -F], 6
[siet :: c1, -B, -F], 7
[vot :: c1, -B, -F], 8
[nûf :: c1, -B, -F], 9
[cent :: c3], 100
[cent e  :: =c2, c3], λx.'1X+100'(x)
[dusinte :: c3], 200
[dusinte e  :: =c2, c3], λx.'1X+200'(x)
[tresinte :: c3], 300
[tresinte e  :: =c2, c3], λx.'1X+300'(x)
[cent :: =c1, +F, c3], λx.'100X'(x)
[cent e  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +D, +F, c1, -D], λx.x


Learning Portuguese-Brazil
Learned 999 words in Portuguese-Brazil and structured them in 47 functions.
It took 204 samples to learn those.
Those are:
um is 1
dois is 2
três is 3
quatro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
onze is 11
doze is 12
treze is 13
catorze is 14
quinze is 15
Function dezes_ maps {6,7} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
Function deze_ maps {9} by x -> 0*x+19
vinte is 20
Function vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
quarenta is 40
Function quarenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquenta is 50
Function cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sessenta is 60
Function sessenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta e _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cem is 100
cento e vinte is 120
Function cento e vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
cento e cinquenta is 150
Function cento e cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function cento e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,80,dezes_,dez_,deze_,trinta e _,quarenta e _,sessenta e _,_nta,_nta e _,oitenta e _} by x -> 1*x+100
duzentos is 200
Function duzentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+200
Function _ntos maps {13} by x -> 0*x+300
Function _ntos e vinte e cinco maps {13} by x -> 0*x+325
Function _ntos e _ maps {13}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,_nta,_nta e _,80,oitenta e _} by (x0,x1) -> 23*x0+1*x1+1
quinhentos is 500
Function quinhentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+500
Function _centos maps {4,6,7,8,9} by x -> 100*x+0
Function _centos e _ maps {4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by (x0,x1) -> 100*x0+1*x1

MG:
[oito :: c1, -B, -J], 8
[nove :: c1, -C, -E, -J], 9
[treze :: c2, -H, -I, -S1, -F], 13
[ :: =c3, cFin], λx.x
[sete :: c1, -E, -J, -A], 7
[quatro :: c1, -J], 4
[seis :: c1, -J, -A], 6
[dez :: c2, -I, -S1, -F], 10
[onze :: c2, -I, -S1, -F], 11
[doze :: c2, -I, -S1, -F], 12
[catorze :: c2, -I, -S1, -F], 14
[quinze :: c2, -I, -S1, -F], 15
[dezes :: =c2A, c2, -I, -S1, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -I, -S1, -F], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[deze :: =c2C, c2, -I, -S1, -F], λx.'0X+19'(x)
[ :: =c1, +C, c2C], λx.x
[vinte :: c2, -I, -S1], 20
[vinte e  :: =c1, c2, -I, -S1], λx.'1X+20'(x)
[trinta :: c2, -I, -S1, -F], 30
[trinta e  :: =c1, c2, -I, -S1, -F], λx.'1X+30'(x)
[quarenta :: c2, -I, -S1, -F], 40
[quarenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+40'(x)
[cinquenta :: c2, -I, -S1], 50
[cinquenta e  :: =c1, c2, -I, -S1], λx.'1X+50'(x)
[sessenta :: c2, -I, -S1, -F], 60
[sessenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+60'(x)
[oitenta :: c2, -I, -S1, -F], 80
[oitenta e  :: =c1, c2, -I, -S1, -F], λx.'1X+80'(x)
[nta :: =c1, +E, c2, -I, -S1, -F], λx.'10X'(x)
[nta e  :: =c1, =c2E, c2, -I, -S1, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2], λx.x
[um :: c1], 1
[dois :: c1], 2
[três :: c1], 3
[cinco :: c1], 5
[ :: =c1, c2, -I], λx.x
[cem :: c3], 100
[cento e vinte :: c3], 120
[cento e vinte e  :: =c1, c3], λx.'1X+120'(x)
[cento e cinquenta :: c3], 150
[cento e cinquenta e  :: =c1, c3], λx.'1X+150'(x)
[cento e  :: =c3F, c3], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[duzentos :: c3], 200
[duzentos e  :: =c2, c3], λx.'1X+200'(x)
[ntos :: =c2, +H, c3], λx.'0X+300'(x)
[ntos e vinte e cinco :: =c2, +H, c3], λx.'0X+325'(x)
[ntos e  :: =c3I, =c3H, c3], λxλy.'1X+23Y+1'(x,y)
[ :: =c2, +H, c3H], λx.x
[ :: =c2, +I, c3I], λx.x
[quinhentos :: c3], 500
[quinhentos e  :: =c2, c3], λx.'1X+500'(x)
[centos :: =c1, +J, c3], λx.'100X'(x)
[centos e  :: =c2, =c3J, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c3J], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +H, +I, +S1, +F, c2, -H], λx.x
[ :: =c1, +C, +E, +J, c1, -C], λx.x
[ :: =c1, +E, +J, +A, c1, -E], λx.x
[ :: =c1, +E, +J, c1, -E], λx.x
[ :: =c2, +I, +S1, +F, c2, -I], λx.x
[ :: =c2, +S1, +F, c2, -S1], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +J, +A, c1, -J], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning Somali

Learned 999 words in Somali and structured them in 73 functions.
It took 89 samples to learn those.
Those are:
ków is 1
lába is 2
sáddex is 3
áfar is 4
shán is 5
líx is 6
toddobá is 7
siddéed is 8
sagaal is 9
toban is 10
koób iyo toban is 11
labá iyo toban is 12
Function _ iyo toban maps {3,4,5,6,7} by x -> 1*x+10
siddeéd iyo toban is 18
sagaál iyo toban is 19
labaátan is 20
koób iyo labaátan is 21
labá iyo labaátan is 22
Function _ iyo labaátan maps {3,4,5,6,7} by x -> 1*x+20
siddeéd iyo labaátan is 28
sagaál iyo labaátan is 29
sóddon is 30
koób iyo sóddon is 31
labá iyo sóddon is 32
Function _ iyo sóddon maps {3,4,5,6,7} by x -> 1*x+30
siddeéd iyo sóddon is 38
sagaál iyo sóddon is 39
afártan is 40
koób iyo afártan is 41
labá iyo afártan is 42
Function _ iyo afártan maps {3,4,5,6,7} by x -> 1*x+40
siddeéd iyo afártan is 48
sagaál iyo afártan is 49
kónton is 50
koób iyo kónton is 51
labá iyo kónton is 52
Function _ iyo kónton maps {3,4,5,6,7} by x -> 1*x+50
siddeéd iyo kónton is 58
sagaál iyo kónton is 59
Function _dan maps {6} by x -> 0*x+60
Function koób iyo _dan maps {6} by x -> 0*x+61
Function labá iyo _dan maps {6} by x -> 0*x+62
Function _ iyo _dan maps {3,4,5,6,7}x{6} by (x0,x1) -> 1*x0+10*x1
Function siddeéd iyo _dan maps {6} by x -> 0*x+68
Function sagaál iyo _dan maps {6} by x -> 0*x+69
toddobaátan is 70
koób iyo toddobaátan is 71
labá iyo toddobaátan is 72
Function _ iyo toddobaátan maps {3,4,5,6,7} by x -> 1*x+70
siddeéd iyo toddobaátan is 78
sagaál iyo toddobaátan is 79
siddeétan is 80
koób iyo siddeétan is 81
labá iyo siddeétan is 82
Function _ iyo siddeétan maps {3,4,5,6,7} by x -> 1*x+80
siddeéd iyo siddeétan is 88
sagaál iyo siddeétan is 89
sagaáshan is 90
koób iyo sagaáshan is 91
labá iyo sagaáshan is 92
Function _ iyo sagaáshan maps {3,4,5,6,7} by x -> 1*x+90
siddeéd iyo sagaáshan is 98
sagaál iyo sagaáshan is 99
boqól is 100
Function boqól iyo _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ iyo toban,18,19,20,21,22,_ iyo labaátan,28,29,30,31,32,_ iyo sóddon,38,39,40,41,42,_ iyo afártan,48,49,50,51,52,_ iyo kónton,58,59,_dan,koób iyo _dan,labá iyo _dan,_ iyo _dan,siddeéd iyo _dan,sagaál iyo _dan,70,71,72,_ iyo toddobaátan,78,79,80,81,82,_ iyo siddeétan,88,89,90,91,92,_ iyo sagaáshan,98,99} by x -> 1*x+100
labá boqól is 200
Function labá boqól iyo _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ iyo toban,18,19,20,21,22,_ iyo labaátan,28,29,30,31,32,_ iyo sóddon,38,39,40,41,42,_ iyo afártan,48,49,50,51,52,_ iyo kónton,58,59,_dan,koób iyo _dan,labá iyo _dan,_ iyo _dan,siddeéd iyo _dan,sagaál iyo _dan,70,71,72,_ iyo toddobaátan,78,79,80,81,82,_ iyo siddeétan,88,89,90,91,92,_ iyo sagaáshan,98,99} by x -> 1*x+200
Function _ boqól maps {3,4,5,6,7} by x -> 100*x+0
Function _ boqól iyo _ maps {3,4,5,6,7}x{1,2,3,4,5,6,7,8,9,10,11,12,_ iyo toban,18,19,20,21,22,_ iyo labaátan,28,29,30,31,32,_ iyo sóddon,38,39,40,41,42,_ iyo afártan,48,49,50,51,52,_ iyo kónton,58,59,_dan,koób iyo _dan,labá iyo _dan,_ iyo _dan,siddeéd iyo _dan,sagaál iyo _dan,70,71,72,_ iyo toddobaátan,78,79,80,81,82,_ iyo siddeétan,88,89,90,91,92,_ iyo sagaáshan,98,99} by (x0,x1) -> 100*x0+1*x1
siddeéd boqól is 800
Function siddeéd boqól iyo _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ iyo toban,18,19,20,21,22,_ iyo labaátan,28,29,30,31,32,_ iyo sóddon,38,39,40,41,42,_ iyo afártan,48,49,50,51,52,_ iyo kónton,58,59,_dan,koób iyo _dan,labá iyo _dan,_ iyo _dan,siddeéd iyo _dan,sagaál iyo _dan,70,71,72,_ iyo toddobaátan,78,79,80,81,82,_ iyo siddeétan,88,89,90,91,92,_ iyo sagaáshan,98,99} by x -> 1*x+800
sagaál boqól is 900
Function sagaál boqól iyo _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ iyo toban,18,19,20,21,22,_ iyo labaátan,28,29,30,31,32,_ iyo sóddon,38,39,40,41,42,_ iyo afártan,48,49,50,51,52,_ iyo kónton,58,59,_dan,koób iyo _dan,labá iyo _dan,_ iyo _dan,siddeéd iyo _dan,sagaál iyo _dan,70,71,72,_ iyo toddobaátan,78,79,80,81,82,_ iyo siddeétan,88,89,90,91,92,_ iyo sagaáshan,98,99} by x -> 1*x+900

MG:
[líx :: c1, -B, -A], 6
[ :: =c3, cFin], λx.x
[siddéed :: c2, -S1], 8
[sagaal :: c2, -S1], 9
[toban :: c2, -S1], 10
[koób iyo toban :: c2, -S1], 11
[labá iyo toban :: c2, -S1], 12
[ iyo toban :: =c1, +A, c2, -S1], λx.'1X+10'(x)
[siddeéd iyo toban :: c2, -S1], 18
[sagaál iyo toban :: c2, -S1], 19
[labaátan :: c2, -S1], 20
[koób iyo labaátan :: c2, -S1], 21
[labá iyo labaátan :: c2, -S1], 22
[ iyo labaátan :: =c1, +A, c2, -S1], λx.'1X+20'(x)
[siddeéd iyo labaátan :: c2, -S1], 28
[sagaál iyo labaátan :: c2, -S1], 29
[sóddon :: c2, -S1], 30
[koób iyo sóddon :: c2, -S1], 31
[labá iyo sóddon :: c2, -S1], 32
[ iyo sóddon :: =c1, +A, c2, -S1], λx.'1X+30'(x)
[siddeéd iyo sóddon :: c2, -S1], 38
[sagaál iyo sóddon :: c2, -S1], 39
[afártan :: c2, -S1], 40
[koób iyo afártan :: c2, -S1], 41
[labá iyo afártan :: c2, -S1], 42
[ iyo afártan :: =c1, +A, c2, -S1], λx.'1X+40'(x)
[siddeéd iyo afártan :: c2, -S1], 48
[sagaál iyo afártan :: c2, -S1], 49
[kónton :: c2, -S1], 50
[koób iyo kónton :: c2, -S1], 51
[labá iyo kónton :: c2, -S1], 52
[ iyo kónton :: =c1, +A, c2, -S1], λx.'1X+50'(x)
[siddeéd iyo kónton :: c2, -S1], 58
[sagaál iyo kónton :: c2, -S1], 59
[dan :: =c1, +B, c2, -S1], λx.'0X+60'(x)
[koób iyo  :: =c2*, c2, -S1], λx.'1X+61'(x)
[dan :: =c1, +B, c2*], λx.'0X'(x)
[labá iyo  :: =c2**, c2, -S1], λx.'1X+62'(x)
[dan :: =c1, +B, c2**], λx.'0X'(x)
[ iyo  :: =c2***, =c2A, c2, -S1], λxλy.'1X+1Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[dan :: =c1, +B, c2***], λx.'10X'(x)
[siddeéd iyo  :: =c2****, c2, -S1], λx.'1X+68'(x)
[dan :: =c1, +B, c2****], λx.'0X'(x)
[sagaál iyo  :: =c2*****, c2, -S1], λx.'1X+69'(x)
[dan :: =c1, +B, c2*****], λx.'0X'(x)
[toddobaátan :: c2, -S1], 70
[koób iyo toddobaátan :: c2, -S1], 71
[labá iyo toddobaátan :: c2, -S1], 72
[ iyo toddobaátan :: =c1, +A, c2, -S1], λx.'1X+70'(x)
[siddeéd iyo toddobaátan :: c2, -S1], 78
[sagaál iyo toddobaátan :: c2, -S1], 79
[siddeétan :: c2, -S1], 80
[koób iyo siddeétan :: c2, -S1], 81
[labá iyo siddeétan :: c2, -S1], 82
[ iyo siddeétan :: =c1, +A, c2, -S1], λx.'1X+80'(x)
[siddeéd iyo siddeétan :: c2, -S1], 88
[sagaál iyo siddeétan :: c2, -S1], 89
[sagaáshan :: c2, -S1], 90
[koób iyo sagaáshan :: c2, -S1], 91
[labá iyo sagaáshan :: c2, -S1], 92
[ iyo sagaáshan :: =c1, +A, c2, -S1], λx.'1X+90'(x)
[siddeéd iyo sagaáshan :: c2, -S1], 98
[sagaál iyo sagaáshan :: c2, -S1], 99
[ :: =c1, c2], λx.x
[ków :: c1], 1
[lába :: c1], 2
[sáddex :: c1, -A], 3
[áfar :: c1, -A], 4
[shán :: c1, -A], 5
[toddobá :: c1, -A], 7
[boqól :: c3], 100
[boqól iyo  :: =c2, c3], λx.'1X+100'(x)
[labá boqól :: c3], 200
[labá boqól iyo  :: =c2, c3], λx.'1X+200'(x)
[ boqól :: =c1, +A, c3], λx.'100X'(x)
[ boqól iyo  :: =c2, =c2A, c3], λxλy.'1X+100Y'(x,y)
[siddeéd boqól :: c3], 800
[siddeéd boqól iyo  :: =c2, c3], λx.'1X+800'(x)
[sagaál boqól :: c3], 900
[sagaál boqól iyo  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x


Learning Hunsrik
Learned 999 words in Hunsrik and structured them in 46 functions.
It took 65 samples to learn those.
Those are:
enns is 1
zweu is 2
drei is 3
fier is 4
finnef is 5
sechs is 6
sieve is 7
acht is 8
nein is 9
zehn is 10
ellef is 11
zwellef is 12
ferzen is 14
fufzen is 15
sechzen is 16
sibzen is 17
Function _zen maps {3,8,9} by x -> 1*x+10
zwanzich is 20
enn-un-zwanzich is 21
Function _-un-zwanzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _sich maps {3} by x -> 0*x+30
Function enn-un-_sich maps {3} by x -> 0*x+31
Function _-un-_sich maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
ferzich is 40
enn-un-ferzich is 41
Function _-un-ferzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
fufzich is 50
enn-un-fufzich is 51
Function _-un-fufzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+50
sechzich is 60
enn-un-sechzich is 61
Function _-un-sechzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
sibzich is 70
enn-un-sibzich is 71
Function _-un-sibzich maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
Function _zich maps {8,9} by x -> 10*x+0
Function enn-un-_zich maps {8,9} by x -> 10*x+1
Function _-un-_zich maps {2,3,4,5,6,7,8,9}x{8,9} by (x0,x1) -> 1*x0+10*x1
hunnerd is 100
hunnerd-een is 101
Function hunnerd-_ maps {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,_zen,20,_-un-zwanzich,_sich,_-un-_sich,40,_-un-ferzich,50,_-un-fufzich,60,_-un-sechzich,70,_-un-sibzich,_zich,_-un-_zich} by x -> 1*x+100
Function hunnerd-een-un-_ maps {20,_sich,40,50,60,70,_zich} by x -> 1*x+101
Function _-hunnerd maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _-hunnerd-een maps {2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _-hunnerd-_ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,_zen,20,_-un-zwanzich,_sich,_-un-_sich,40,_-un-ferzich,50,_-un-fufzich,60,_-un-sechzich,70,_-un-sibzich,_zich,_-un-_zich} by (x0,x1) -> 100*x0+1*x1
Function _-hunnerd-een-un-_ maps {2,3,4,5,6,7,8,9}x{20,_sich,40,50,60,70,_zich} by (x0,x1) -> 100*x0+1*x1+1

MG:
[drei :: c1, -C, -E0, -B, -A], 3
[ :: =c3, cFin], λx.x
[zehn :: c2, -E, -S1], 10
[ellef :: c2, -E, -S1], 11
[zwellef :: c2, -E, -S1], 12
[ferzen :: c2, -E, -S1], 14
[fufzen :: c2, -E, -S1], 15
[sechzen :: c2, -E, -S1], 16
[sibzen :: c2, -E, -S1], 17
[zen :: =c1, +A, c2, -E, -S1], λx.'1X+10'(x)
[zwanzich :: c2, -E, -F, -S1], 20
[-un-zwanzich :: =c1, +B, c2, -E, -S1], λx.'1X+20'(x)
[sich :: =c1, +C, c2, -E, -F, -S1], λx.'0X+30'(x)
[-un- :: =c2*, =c2B, c2, -E, -S1], λxλy.'1X+1Y+3'(x,y)
[ :: =c1, +B, c2B], λx.x
[sich :: =c1, +C, c2*], λx.'9X'(x)
[ferzich :: c2, -E, -F, -S1], 40
[-un-ferzich :: =c1, +B, c2, -E, -S1], λx.'1X+40'(x)
[fufzich :: c2, -E, -F, -S1], 50
[-un-fufzich :: =c1, +B, c2, -E, -S1], λx.'1X+50'(x)
[sechzich :: c2, -E, -F, -S1], 60
[-un-sechzich :: =c1, +B, c2, -E, -S1], λx.'1X+60'(x)
[sibzich :: c2, -E, -F, -S1], 70
[-un-sibzich :: =c1, +B, c2, -E, -S1], λx.'1X+70'(x)
[zich :: =c1, +D, c2, -E, -F, -S1], λx.'10X'(x)
[-un- :: =c2**, =c2B, c2, -E, -S1], λxλy.'1X+1Y'(x,y)
[zich :: =c1, +D, c2**], λx.'10X'(x)
[ :: =c1, +E0, c2, -E], λx.x
[zweu :: c1, -E0, -B], 2
[fier :: c1, -E0, -B], 4
[finnef :: c1, -E0, -B], 5
[sechs :: c1, -E0, -B], 6
[sieve :: c1, -E0, -B], 7
[acht :: c1, -E0, -B, -A, -D], 8
[nein :: c1, -E0, -B, -A, -D], 9
[hunnerd :: c3], 100
[hunnerd-een :: c3], 101
[hunnerd- :: =c3E, c3], λx.'1X+100'(x)
[ :: =c2, +E, c3E], λx.x
[hunnerd-een-un- :: =c3F, c3], λx.'1X+101'(x)
[ :: =c2, +F, c3F], λx.x
[-hunnerd :: =c1, +B, c3], λx.'100X'(x)
[-hunnerd-een :: =c1, +B, c3], λx.'100X+1'(x)
[-hunnerd- :: =c3E, =c2B, c3], λxλy.'1X+100Y'(x,y)
[-hunnerd-een-un- :: =c3F, =c2B, c3], λxλy.'1X+100Y+1'(x,y)
[ :: =c1, c3], λx.x
[enns :: c1], 1
[ :: =c2, +S1, c3], λx.x
[enn-un-zwanzich :: c2, -S1], 21
[enn-un- :: =c2***, c2, -S1], λx.'1X+31'(x)
[sich :: =c1, +C, c2***], λx.'0X'(x)
[sich :: =c1, +C, c2****], λx.'9X'(x)
[enn-un-ferzich :: c2, -S1], 41
[enn-un-fufzich :: c2, -S1], 51
[enn-un-sechzich :: c2, -S1], 61
[enn-un-sibzich :: c2, -S1], 71
[enn-un- :: =c2*****, c2, -S1], λx.'1X+1'(x)
[zich :: =c1, +D, c2*****], λx.'10X'(x)
[ :: =c2, +E, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E0, +B, c1, -E0], λx.x
[ :: =c2, +E, +F, +S1, c2, -E], λx.x
[ :: =c2, +E, +S1, c2, -E], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +C, +E0, +B, +A, c1, -C], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +E0, +B, +A, +D, c1, -E0], λx.x
[ :: =c2, +F, +S1, c2, -F], λx.x
[ :: =c1, +E0, +B, +A, c1, -E0], λx.x


Learning Bavarian

Learned 999 words in Bavarian and structured them in 115 functions.
It took 125 samples to learn those.
Those are:
oas is 1
zwoa is 2
drei is 3
fiare is 4
fimfe is 5
sechse is 6
sieme is 7
åchte is 8
neine is 9
zene is 10
öife is 11
zwöife is 12
Function _zea maps {3} by x -> 0*x+13
fiazea is 14
fuchzea is 15
sechzea is 16
sibzea is 17
åchzea is 18
neizea is 19
zwånzge is 20
oanazwånzge is 21
Function _razwånzge maps {2} by x -> 0*x+22
Function _azwånzge maps {3} by x -> 0*x+23
fiarazwånzge is 24
fimfazwånzge is 25
sechsazwånzge is 26
simmazwånzge is 27
åchtazwånzge is 28
neinazwånzge is 29
Function _ßge maps {3} by x -> 0*x+30
Function oana_ßge maps {3} by x -> 0*x+31
Function _ra_ßge maps {2}x{3} by (x0,x1) -> 0*x0+0*x1+32
Function _a_ßge maps {3}x{3} by (x0,x1) -> 0*x0+0*x1+33
Function fiara_ßge maps {3} by x -> 0*x+34
Function fimfa_ßge maps {3} by x -> 0*x+35
Function sechsa_ßge maps {3} by x -> 0*x+36
Function simma_ßge maps {3} by x -> 0*x+37
Function åchta_ßge maps {3} by x -> 0*x+38
Function neina_ßge maps {3} by x -> 0*x+39
fiazge is 40
oanafiazge is 41
Function _rafiazge maps {2} by x -> 0*x+42
Function _afiazge maps {3} by x -> 0*x+43
fiarafiazge is 44
fimfafiazge is 45
sechsafiazge is 46
simmafiazge is 47
åchtafiazge is 48
neinafiazge is 49
fuchzge is 50
oanafuchzge is 51
Function _rafuchzge maps {2} by x -> 0*x+52
Function _afuchzge maps {3} by x -> 0*x+53
fiarafuchzge is 54
fimfafuchzge is 55
sechsafuchzge is 56
simmafuchzge is 57
åchtafuchzge is 58
neinafuchzge is 59
sechzge is 60
oanasechzge is 61
Function _rasechzge maps {2} by x -> 0*x+62
Function _asechzge maps {3} by x -> 0*x+63
fiarasechzge is 64
fimfasechzge is 65
sechsasechzge is 66
simmasechzge is 67
åchtasechzge is 68
neinasechzge is 69
sibzge is 70
oanasibzge is 71
Function _rasibzge maps {2} by x -> 0*x+72
Function _asibzge maps {3} by x -> 0*x+73
fiarasibzge is 74
fimfasibzge is 75
sechsasibzge is 76
simmasibzge is 77
åchtasibzge is 78
neinasibzge is 79
åchtzge is 80
oanaåchtzge is 81
Function _raåchtzge maps {2} by x -> 0*x+82
Function _aåchtzge maps {3} by x -> 0*x+83
fiaraåchtzge is 84
fimfaåchtzge is 85
sechsaåchtzge is 86
simmaåchtzge is 87
åchtaåchtzge is 88
neinaåchtzge is 89
neinzge is 90
oananeinzge is 91
Function _raneinzge maps {2} by x -> 0*x+92
Function _aneinzge maps {3} by x -> 0*x+93
fiaraneinzge is 94
fimfaneinzge is 95
sechsaneinzge is 96
simmaneinzge is 97
åchtaneinzge is 98
neinaneinzge is 99
hundad is 100
Function hundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+100
Function _hundad maps {2,3} by x -> 100*x+0
Function _hundad _ maps {2,3}x{1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by (x0,x1) -> 100*x0+1*x1
fiahundad is 400
Function fiahundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+400
fimfhundad is 500
Function fimfhundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+500
sechshundad is 600
Function sechshundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+600
simhundad is 700
Function simhundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+700
åchthundad is 800
Function åchthundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+800
neihundad is 900
Function neihundad _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zea,14,15,16,17,18,19,20,21,_razwånzge,_azwånzge,24,25,26,27,28,29,_ßge,oana_ßge,_ra_ßge,_a_ßge,fiara_ßge,fimfa_ßge,sechsa_ßge,simma_ßge,åchta_ßge,neina_ßge,40,41,_rafiazge,_afiazge,44,45,46,47,48,49,50,51,_rafuchzge,_afuchzge,54,55,56,57,58,59,60,61,_rasechzge,_asechzge,64,65,66,67,68,69,70,71,_rasibzge,_asibzge,74,75,76,77,78,79,80,81,_raåchtzge,_aåchtzge,84,85,86,87,88,89,90,91,_raneinzge,_aneinzge,94,95,96,97,98,99} by x -> 1*x+900

MG:
[zwoa :: c1, -B, -D], 2
[drei :: c1, -A, -D], 3
[ :: =c3, cFin], λx.x
[fiare :: c2, -S1], 4
[fimfe :: c2, -S1], 5
[sechse :: c2, -S1], 6
[sieme :: c2, -S1], 7
[åchte :: c2, -S1], 8
[neine :: c2, -S1], 9
[zene :: c2, -S1], 10
[öife :: c2, -S1], 11
[zwöife :: c2, -S1], 12
[zea :: =c1, +A, c2, -S1], λx.'0X+13'(x)
[fiazea :: c2, -S1], 14
[fuchzea :: c2, -S1], 15
[sechzea :: c2, -S1], 16
[sibzea :: c2, -S1], 17
[åchzea :: c2, -S1], 18
[neizea :: c2, -S1], 19
[zwånzge :: c2, -S1], 20
[oanazwånzge :: c2, -S1], 21
[razwånzge :: =c1, +B, c2, -S1], λx.'0X+22'(x)
[azwånzge :: =c1, +A, c2, -S1], λx.'0X+23'(x)
[fiarazwånzge :: c2, -S1], 24
[fimfazwånzge :: c2, -S1], 25
[sechsazwånzge :: c2, -S1], 26
[simmazwånzge :: c2, -S1], 27
[åchtazwånzge :: c2, -S1], 28
[neinazwånzge :: c2, -S1], 29
[ßge :: =c1, +A, c2, -S1], λx.'0X+30'(x)
[oana :: =c2*, c2, -S1], λx.'1X+31'(x)
[ßge :: =c1, +A, c2*], λx.'0X'(x)
[ra :: =c2**, =c2B, c2, -S1], λxλy.'1X+0Y+32'(x,y)
[ :: =c1, +B, c2B], λx.x
[ßge :: =c1, +A, c2**], λx.'0X'(x)
[a :: =c2***, =c2A, c2, -S1], λxλy.'1X+0Y+33'(x,y)
[ :: =c1, +A, c2A], λx.x
[ßge :: =c1, +A, c2***], λx.'0X'(x)
[fiara :: =c2****, c2, -S1], λx.'1X+34'(x)
[ßge :: =c1, +A, c2****], λx.'0X'(x)
[fimfa :: =c2*****, c2, -S1], λx.'1X+35'(x)
[ßge :: =c1, +A, c2*****], λx.'0X'(x)
[sechsa :: =c2******, c2, -S1], λx.'1X+36'(x)
[ßge :: =c1, +A, c2******], λx.'0X'(x)
[simma :: =c2*******, c2, -S1], λx.'1X+37'(x)
[ßge :: =c1, +A, c2*******], λx.'0X'(x)
[åchta :: =c2********, c2, -S1], λx.'1X+38'(x)
[ßge :: =c1, +A, c2********], λx.'0X'(x)
[neina :: =c2*********, c2, -S1], λx.'1X+39'(x)
[ßge :: =c1, +A, c2*********], λx.'0X'(x)
[fiazge :: c2, -S1], 40
[oanafiazge :: c2, -S1], 41
[rafiazge :: =c1, +B, c2, -S1], λx.'0X+42'(x)
[afiazge :: =c1, +A, c2, -S1], λx.'0X+43'(x)
[fiarafiazge :: c2, -S1], 44
[fimfafiazge :: c2, -S1], 45
[sechsafiazge :: c2, -S1], 46
[simmafiazge :: c2, -S1], 47
[åchtafiazge :: c2, -S1], 48
[neinafiazge :: c2, -S1], 49
[fuchzge :: c2, -S1], 50
[oanafuchzge :: c2, -S1], 51
[rafuchzge :: =c1, +B, c2, -S1], λx.'0X+52'(x)
[afuchzge :: =c1, +A, c2, -S1], λx.'0X+53'(x)
[fiarafuchzge :: c2, -S1], 54
[fimfafuchzge :: c2, -S1], 55
[sechsafuchzge :: c2, -S1], 56
[simmafuchzge :: c2, -S1], 57
[åchtafuchzge :: c2, -S1], 58
[neinafuchzge :: c2, -S1], 59
[sechzge :: c2, -S1], 60
[oanasechzge :: c2, -S1], 61
[rasechzge :: =c1, +B, c2, -S1], λx.'0X+62'(x)
[asechzge :: =c1, +A, c2, -S1], λx.'0X+63'(x)
[fiarasechzge :: c2, -S1], 64
[fimfasechzge :: c2, -S1], 65
[sechsasechzge :: c2, -S1], 66
[simmasechzge :: c2, -S1], 67
[åchtasechzge :: c2, -S1], 68
[neinasechzge :: c2, -S1], 69
[sibzge :: c2, -S1], 70
[oanasibzge :: c2, -S1], 71
[rasibzge :: =c1, +B, c2, -S1], λx.'0X+72'(x)
[asibzge :: =c1, +A, c2, -S1], λx.'0X+73'(x)
[fiarasibzge :: c2, -S1], 74
[fimfasibzge :: c2, -S1], 75
[sechsasibzge :: c2, -S1], 76
[simmasibzge :: c2, -S1], 77
[åchtasibzge :: c2, -S1], 78
[neinasibzge :: c2, -S1], 79
[åchtzge :: c2, -S1], 80
[oanaåchtzge :: c2, -S1], 81
[raåchtzge :: =c1, +B, c2, -S1], λx.'0X+82'(x)
[aåchtzge :: =c1, +A, c2, -S1], λx.'0X+83'(x)
[fiaraåchtzge :: c2, -S1], 84
[fimfaåchtzge :: c2, -S1], 85
[sechsaåchtzge :: c2, -S1], 86
[simmaåchtzge :: c2, -S1], 87
[åchtaåchtzge :: c2, -S1], 88
[neinaåchtzge :: c2, -S1], 89
[neinzge :: c2, -S1], 90
[oananeinzge :: c2, -S1], 91
[raneinzge :: =c1, +B, c2, -S1], λx.'0X+92'(x)
[aneinzge :: =c1, +A, c2, -S1], λx.'0X+93'(x)
[fiaraneinzge :: c2, -S1], 94
[fimfaneinzge :: c2, -S1], 95
[sechsaneinzge :: c2, -S1], 96
[simmaneinzge :: c2, -S1], 97
[åchtaneinzge :: c2, -S1], 98
[neinaneinzge :: c2, -S1], 99
[ :: =c1, c2], λx.x
[oas :: c1], 1
[hundad :: c3], 100
[hundad  :: =c2, c3], λx.'1X+100'(x)
[hundad :: =c1, +D, c3], λx.'100X'(x)
[hundad  :: =c2, =c3D, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[fiahundad :: c3], 400
[fiahundad  :: =c2, c3], λx.'1X+400'(x)
[fimfhundad :: c3], 500
[fimfhundad  :: =c2, c3], λx.'1X+500'(x)
[sechshundad :: c3], 600
[sechshundad  :: =c2, c3], λx.'1X+600'(x)
[simhundad :: c3], 700
[simhundad  :: =c2, c3], λx.'1X+700'(x)
[åchthundad :: c3], 800
[åchthundad  :: =c2, c3], λx.'1X+800'(x)
[neihundad :: c3], 900
[neihundad  :: =c2, c3], λx.'1X+900'(x)
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x




Learning Scottish-Gaelic

Learned 999 words in Scottish-Gaelic and structured them in 48 functions.
It took 115 samples to learn those.
Those are:
aon is 1
dhà is 2
trì is 3
ceithir is 4
còig is 5
sia is 6
seachd is 7
ochd is 8
naoi is 9
deich is 10
Function h-_ deug maps {1} by x -> 0*x+11
Function _ dheug maps {2} by x -> 0*x+12
Function _ deug maps {3,4,5,6,7,8,9} by x -> 1*x+10
fichead is 20
Function fichead ’s a _ maps {2,3,4,5,6,7,9} by x -> 1*x+20
Function fichead ’s a h-_ maps {1,8} by x -> 1*x+20
Function _thead maps {3} by x -> 0*x+30
Function _thead ’s a _ maps {3}x{2,3,4,5,6,7,9} by (x0,x1) -> 9*x0+1*x1+3
Function _thead ’s a h-_ maps {3}x{1,8} by (x0,x1) -> 9*x0+1*x1+3
ceathrad is 40
Function ceathrad ’s a _ maps {2,3,4,5,6,7,9} by x -> 1*x+40
Function ceathrad ’s a h-_ maps {1,8} by x -> 1*x+40
caogad is 50
Function caogad ’s a _ maps {2,3,4,5,6,7,9} by x -> 1*x+50
Function caogad ’s a h-_ maps {1,8} by x -> 1*x+50
seasgad is 60
Function seasgad ’s a _ maps {2,3,4,5,6,7,9} by x -> 1*x+60
Function seasgad ’s a h-_ maps {1,8} by x -> 1*x+60
Function _ad maps {7,8} by x -> 10*x+0
Function _ad ’s a h-_ maps {7,8}x{1,8} by (x0,x1) -> 10*x0+1*x1
Function _ad ’s a _ maps {7,8}x{2,3,4,5,6,7,9} by (x0,x1) -> 10*x0+1*x1
naochad is 90
Function naochad ’s a _ maps {2,3,4,5,6,7,9} by x -> 1*x+90
Function naochad ’s a h-_ maps {1,8} by x -> 1*x+90
ceud is 100
Function ceud ’s a _ maps {2,3,4,5,6,7,9,10,h-_ deug,_ dheug,_ deug,20,_thead,40,50,60,_ad,90} by x -> 1*x+100
Function ceud _ ’s a  h-_ maps {20,_thead,40,50,60,_ad,90}x{1,8} by (x0,x1) -> 1*x0+1*x1+100
Function ceud _ ’s a  _ maps {20,_thead,40,50,60,_ad,90}x{2,3,4,5,6,7,9} by (x0,x1) -> 1*x0+1*x1+100
Function ceud ’s a h-_ maps {1,8,_ad} by x -> 1*x+100
Function ceud h-_ ’s a  h-_ maps {_ad}x{1,8} by (x0,x1) -> 2*x0+1*x1+20
Function ceud h-_ ’s a  _ maps {_ad}x{2,3,4,5,6,7,9} by (x0,x1) -> 2*x0+1*x1+20
Function _ ceud maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ceud ’s a h-_ maps {2,3,4,5,6,7,8,9}x{1,8,_ad} by (x0,x1) -> 100*x0+1*x1
Function _ ceud ’s a _ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,9,10,h-_ deug,_ dheug,_ deug,20,_thead,40,50,60,_ad,90} by (x0,x1) -> 100*x0+1*x1
Function _ ceud _ ’s a  h-_ maps {2,3,4,5,6,7,8,9}x{20,_thead,40,50,60,_ad,90}x{1,8} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ ceud _ ’s a  _ maps {2,3,4,5,6,7,8,9}x{20,_thead,40,50,60,_ad,90}x{2,3,4,5,6,7,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ ceud h-_ ’s a  h-_ maps {2,3,4,5,6,7,8,9}x{_ad}x{1,8} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ ceud h-_ ’s a  _ maps {2,3,4,5,6,7,8,9}x{_ad}x{2,3,4,5,6,7,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2

MG:
[aon :: c1, -A, -E, -J0], 1
[dhà :: c1, -B, -H0, -L, -D], 2
[trì :: c1, -F, -C, -H0, -L, -D], 3
[ad :: =c1, +G, c2, -K, -J, -H, -I, -S1], λx.'10X'(x)
[ :: =c3, cFin], λx.x
[ochd :: c1, -E, -C, -J0, -G, -L], 8
[ceithir :: c1, -C, -H0, -L, -D], 4
[còig :: c1, -C, -H0, -L, -D], 5
[sia :: c1, -C, -H0, -L, -D], 6
[seachd :: c1, -C, -H0, -G, -L, -D], 7
[naoi :: c1, -C, -H0, -L, -D], 9
[ :: =c1, +J0, c2, -J], λx.x
[deich :: c2, -H, -S1], 10
[h- :: =c2*, c2, -H, -S1], λx.'1X+11'(x)
[ deug :: =c1, +A, c2*], λx.'0X'(x)
[ dheug :: =c1, +B, c2, -H, -S1], λx.'0X+12'(x)
[ deug :: =c1, +C, c2, -H, -S1], λx.'1X+10'(x)
[fichead :: c2, -H, -I, -S1], 20
[thead :: =c1, +F, c2, -H, -I, -S1], λx.'0X+30'(x)
[ceathrad :: c2, -H, -I, -S1], 40
[caogad :: c2, -H, -I, -S1], 50
[seasgad :: c2, -H, -I, -S1], 60
[naochad :: c2, -H, -I, -S1], 90
[ :: =c1, +H0, c2, -H], λx.x
[naochad ’s a  :: =c2D, c3], λx.'1X+90'(x)
[naochad ’s a h- :: =c2E, c3], λx.'1X+90'(x)
[ceud :: c3], 100
[ceud ’s a  :: =c3H, c3], λx.'1X+100'(x)
[ :: =c2, +H, c3H], λx.x
[ceud  :: =c3*, c3], λx.'1X+100'(x)
[ ’s a  h- :: =c2E, =c3******I, c3*], λxλy.'1X+1Y'(x,y)
[ ’s a   :: =c2D, =c3******I, c3**], λxλy.'1X+1Y'(x,y)
[ceud ’s a h- :: =c3J, c3], λx.'1X+100'(x)
[ :: =c2, +J, c3J], λx.x
[ceud h- :: =c3***, c3], λx.'1X+20'(x)
[ ’s a  h- :: =c2E, =c3********K, c3***], λxλy.'1X+2Y'(x,y)
[ ’s a   :: =c2D, =c3********K, c3****], λxλy.'1X+2Y'(x,y)
[ ceud :: =c1, +L, c3], λx.'100X'(x)
[ ceud ’s a h- :: =c3J, =c3L, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +L, c3L], λx.x
[ ceud ’s a  :: =c3H, =c3L, c3], λxλy.'1X+100Y'(x,y)
[ ceud  :: =c3*****, =c3L, c3], λxλy.'1X+100Y'(x,y)
[ ’s a  h- :: =c2E, =c3******I, c3*****], λxλy.'1X+1Y'(x,y)
[ ’s a   :: =c2D, =c3******I, c3******], λxλy.'1X+1Y'(x,y)
[ :: =c2, +I, c3******I], λx.x
[ ceud h- :: =c3*******, =c3L, c3], λxλy.'1X+100Y'(x,y)
[ ’s a  h- :: =c2E, =c3********K, c3*******], λxλy.'1X+1Y'(x,y)
[ ’s a   :: =c2D, =c3********K, c3********], λxλy.'1X+1Y'(x,y)
[ :: =c2, +K, c3********K], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[fichead ’s a  :: =c2D, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +D, c2D], λx.x
[fichead ’s a h- :: =c2E, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +E, c2E], λx.x
[thead ’s a  :: =c2D, =c2F, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +F, c2F], λx.x
[thead ’s a h- :: =c2E, =c2F, c2, -S1], λxλy.'1X+9Y+3'(x,y)
[ceathrad ’s a  :: =c2D, c2, -S1], λx.'1X+40'(x)
[ceathrad ’s a h- :: =c2E, c2, -S1], λx.'1X+40'(x)
[caogad ’s a  :: =c2D, c2, -S1], λx.'1X+50'(x)
[caogad ’s a h- :: =c2E, c2, -S1], λx.'1X+50'(x)
[seasgad ’s a  :: =c2D, c2, -S1], λx.'1X+60'(x)
[seasgad ’s a h- :: =c2E, c2, -S1], λx.'1X+60'(x)
[ad ’s a h- :: =c2E, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +G, c2G], λx.x
[ad ’s a  :: =c2D, =c2G, c2, -S1], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +L, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +C, +H0, +L, +D, c1, -C], λx.x
[ :: =c2, +J, +H, +I, +S1, c2, -J], λx.x
[ :: =c2, +H, +S1, c2, -H], λx.x
[ :: =c2, +I, +S1, c2, -I], λx.x
[ :: =c1, +J0, +G, +L, c1, -J0], λx.x
[ :: =c1, +B, +H0, +L, +D, c1, -B], λx.x
[ :: =c1, +C, +J0, +G, +L, c1, -C], λx.x
[ :: =c1, +G, +L, +D, c1, -G], λx.x
[ :: =c1, +L, +D, c1, -L], λx.x
[ :: =c1, +G, +L, c1, -G], λx.x
[ :: =c2, +K, +J, +H, +I, +S1, c2, -K], λx.x
[ :: =c1, +E, +C, +J0, +G, +L, c1, -E], λx.x
[ :: =c1, +F, +C, +H0, +L, +D, c1, -F], λx.x
[ :: =c1, +H0, +L, +D, c1, -H0], λx.x
[ :: =c1, +C, +H0, +G, +L, +D, c1, -C], λx.x
[ :: =c1, +H0, +G, +L, +D, c1, -H0], λx.x
[ :: =c1, +E, +J0, c1, -E], λx.x
[ :: =c2, +H, +I, +S1, c2, -H], λx.x
[ :: =c1, +A, +E, +J0, c1, -A], λx.x


Learning Arikara
Learned 999 words in Arikara and structured them in 39 functions.
It took 55 samples to learn those.
Those are:
áxkux is 1
pítkux is 2
táwit is 3
čiitíʾiš is 4
šíhux is 5
tšaápis is 6
tawišaapiswaána is 7
tawišaápis is 8
nooxiniiwaána is 9
nooxíniʾ is 10
Function nooxini na _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
nooxini na šíhux is 15
wiitáʾuʾ is 20
Function wiitáʾu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
nasaawíʾuʾ is 30
Function nasaawiʾu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
pitkuxunaánuʾ is 40
Function pitkuxunaanu na _ maps {1,2,3,4,5,6,7,9} by x -> 1*x+40
pitkuxunaanu na tawišaápis is 48
Function pitkuxunaánuʾ na _ maps {10} by x -> 0*x+50
Function pitkuxunaanu na nooxini na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
tawihkunaánuʾ is 60
Function tawihkunaanu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function tawihkunaánuʾ na _ maps {10} by x -> 0*x+70
Function tawihkunaánu nooxíni na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
čiitiʾištaánuʾ is 80
Function čiitiʾištaanu na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
čiitiʾištaanu na nooxíniʾ is 90
Function čiitiʾištaanu nooxíni na _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
šihuxtaánuʾ is 100
Function šihuxtaánuʾ na _ maps {1,2,3,4,5,6,7,8,9,10,nooxini na _,15,20,wiitáʾu na _,30,nasaawiʾu na _,40,pitkuxunaanu na _,48,pitkuxunaánuʾ na _,pitkuxunaanu na nooxini na _,60,tawihkunaanu na _,tawihkunaánuʾ na _,tawihkunaánu nooxíni na _,80,čiitiʾištaanu na _,90,čiitiʾištaanu nooxíni na _} by x -> 1*x+100
pitkux šihuxtaánuʾ is 200
Function pitkux šihuxtaánuʾ na _ maps {1,2,3,4,5,6,7,8,9,10,nooxini na _,15,20,wiitáʾu na _,30,nasaawiʾu na _,40,pitkuxunaanu na _,48,pitkuxunaánuʾ na _,pitkuxunaanu na nooxini na _,60,tawihkunaanu na _,tawihkunaánuʾ na _,tawihkunaánu nooxíni na _,80,čiitiʾištaanu na _,90,čiitiʾištaanu nooxíni na _} by x -> 1*x+200
tawit šihuxtaánuʾ is 300
Function tawit šihuxtaánuʾ na _ maps {1,2,3,4,5,6,7,8,9,10,nooxini na _,15,20,wiitáʾu na _,30,nasaawiʾu na _,40,pitkuxunaanu na _,48,pitkuxunaánuʾ na _,pitkuxunaanu na nooxini na _,60,tawihkunaanu na _,tawihkunaánuʾ na _,tawihkunaánu nooxíni na _,80,čiitiʾištaanu na _,90,čiitiʾištaanu nooxíni na _} by x -> 1*x+300
čiitiʾiš šihuxtaánuʾ is 400
Function čiitiʾiš šihuxtaánuʾ na _ maps {1,2,3,4,5,6,7,8,9,10,nooxini na _,15,20,wiitáʾu na _,30,nasaawiʾu na _,40,pitkuxunaanu na _,48,pitkuxunaánuʾ na _,pitkuxunaanu na nooxini na _,60,tawihkunaanu na _,tawihkunaánuʾ na _,tawihkunaánu nooxíni na _,80,čiitiʾištaanu na _,90,čiitiʾištaanu nooxíni na _} by x -> 1*x+400
Function _ šihuxtaánuʾ maps {5,6,7,8,9} by x -> 100*x+0
Function _ šihuxtaánuʾ na _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,nooxini na _,15,20,wiitáʾu na _,30,nasaawiʾu na _,40,pitkuxunaanu na _,48,pitkuxunaánuʾ na _,pitkuxunaanu na nooxini na _,60,tawihkunaanu na _,tawihkunaánuʾ na _,tawihkunaánu nooxíni na _,80,čiitiʾištaanu na _,90,čiitiʾištaanu nooxíni na _} by (x0,x1) -> 100*x0+1*x1

MG:
[nooxíniʾ :: c1, -D], 10
[ :: =c3, cFin], λx.x
[nooxini na  :: =c2A, c2, -S1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[nooxini na šíhux :: c2, -S1], 15
[wiitáʾuʾ :: c2, -S1], 20
[wiitáʾu na  :: =c2B, c2, -S1], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[nasaawíʾuʾ :: c2, -S1], 30
[nasaawiʾu na  :: =c2B, c2, -S1], λx.'1X+30'(x)
[pitkuxunaánuʾ :: c2, -S1], 40
[pitkuxunaanu na  :: =c2C, c2, -S1], λx.'1X+40'(x)
[ :: =c1, +C, c2C], λx.x
[pitkuxunaanu na tawišaápis :: c2, -S1], 48
[pitkuxunaánuʾ na  :: =c2D, c2, -S1], λx.'0X+50'(x)
[ :: =c1, +D, c2D], λx.x
[pitkuxunaanu na nooxini na  :: =c2B, c2, -S1], λx.'1X+50'(x)
[tawihkunaánuʾ :: c2, -S1], 60
[tawihkunaanu na  :: =c2B, c2, -S1], λx.'1X+60'(x)
[tawihkunaánuʾ na  :: =c2D, c2, -S1], λx.'0X+70'(x)
[tawihkunaánu nooxíni na  :: =c2B, c2, -S1], λx.'1X+70'(x)
[čiitiʾištaánuʾ :: c2, -S1], 80
[čiitiʾištaanu na  :: =c2B, c2, -S1], λx.'1X+80'(x)
[čiitiʾištaanu na nooxíniʾ :: c2, -S1], 90
[čiitiʾištaanu nooxíni na  :: =c2B, c2, -S1], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[áxkux :: c1, -C, -B, -A], 1
[pítkux :: c1, -C, -B, -A], 2
[táwit :: c1, -C, -B, -A], 3
[čiitíʾiš :: c1, -C, -B, -A], 4
[šíhux :: c1, -C, -B, -F], 5
[tšaápis :: c1, -C, -B, -F, -A], 6
[tawišaapiswaána :: c1, -C, -B, -F, -A], 7
[tawišaápis :: c1, -B, -F, -A], 8
[nooxiniiwaána :: c1, -C, -B, -F, -A], 9
[šihuxtaánuʾ :: c3], 100
[šihuxtaánuʾ na  :: =c2, c3], λx.'1X+100'(x)
[pitkux šihuxtaánuʾ :: c3], 200
[pitkux šihuxtaánuʾ na  :: =c2, c3], λx.'1X+200'(x)
[tawit šihuxtaánuʾ :: c3], 300
[tawit šihuxtaánuʾ na  :: =c2, c3], λx.'1X+300'(x)
[čiitiʾiš šihuxtaánuʾ :: c3], 400
[čiitiʾiš šihuxtaánuʾ na  :: =c2, c3], λx.'1X+400'(x)
[ šihuxtaánuʾ :: =c1, +F, c3], λx.'100X'(x)
[ šihuxtaánuʾ na  :: =c2, =c3F, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, c3], λx.x
[ :: =c2, +S1, c3], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S1, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +C, +B, +F, c1, -C], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c1, +C, +B, +F, +A, c1, -C], λx.x


Learning fr

Learned 1019 words in fr and structured them in 49 functions.
It took 101 samples to learn those.
Those are:
un is 1
deux is 2
trois is 3
quatre is 4
cinq is 5
six is 6
sept is 7
huit is 8
neuf is 9
dix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
quinze is 15
seize is 16
Function dix-_ maps {7,8,9} by x -> 1*x+10
vingt is 20
Function vingt et _ maps {1} by x -> 0*x+21
Function vingt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente et _ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante et _ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante et _ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _uante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
soixante is 60
Function soixante-_ maps {2,3,4,5,6,7,8,9,10,12,13,14,15,16,dix-_} by x -> 1*x+60
Function soixante et _ maps {1,11} by x -> 1*x+60
Function _-vingts maps {4} by x -> 0*x+80
Function _-vingt-_ maps {4}x{1,2,3,4,5,6,7,8,9,11,12,13,14,15} by (x0,x1) -> 19*x0+1*x1+4
Function _-_-dix maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+90
Function _-_-seize maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+96
Function _-_-dix-_ maps {4}x{20}x{7,8,9} by (x0,x1,x2) -> 2*x0+4*x1+1*x2+2
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante-_,soixante et _,_-vingts,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_} by x -> 1*x+100
Function _ _ vingt maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+220
Function _ _ vingt et _ maps {2}x{100}x{1} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+221
Function _ _ vingt-_ maps {2}x{100}x{2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 8*x0+2*x1+1*x2+4
Function _ _ quarante maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+240
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cent _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,30,trente et _,trente-_,quarante et _,quarante-_,60,soixante-_,soixante et _,_-vingts,_uante,_uante et _,_uante-_,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_,40,20,vingt et _,vingt-_} by (x0,x1) -> 100*x0+1*x1
mille is 1000
Function mille _ maps {2,6,100,_ cents,_ cent _} by x -> 1*x+1000
Function _ mille maps {7,10,dix-_,20,vingt-_} by x -> 1000*x+0
Function _ mille _ maps {7,dix-_,vingt-_}x{2,6,100,_ cents,_ cent _} by (x0,x1) -> 1000*x0+1*x1

MG:
[un :: c1, -B, -F0], 1
[deux :: c1, -K, -E0, -C, -N0], 2
[quatre :: c1, -G, -E0, -C], 4
[cinq :: c1, -D, -E0, -C], 5
[vingt :: c2, -I, -J1, -M1, -S3, -P1], 20
[cent :: c3, -L, -N1, -S2], 100
[ :: =c5, cFin], λx.x
[dix :: c2, -E, -J1, -M1, -S3, -P1], 10
[douze :: c2, -E, -J1, -H, -M1, -S3], 12
[treize :: c2, -E, -J1, -H, -M1, -S3], 13
[quatorze :: c2, -E, -J1, -H, -M1, -S3], 14
[quinze :: c2, -E, -J1, -H, -M1, -S3], 15
[seize :: c2, -E, -J1, -M1, -S3], 16
[dix- :: =c2A, c2, -E, -J1, -Q1, -M1, -S3, -P1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[trois :: c1, -E0, -C], 3
[six :: c1, -E0, -C, -N0], 6
[sept :: c1, -E0, -C, -Q0, -A, -P0], 7
[huit :: c1, -E0, -C, -A], 8
[neuf :: c1, -E0, -C, -A], 9
[ cents :: =c1, +C, c4, -N, -S0], λx.'100X'(x)
[ cent  :: =c4M, =c3C, c4, -N, -S0], λxλy.'1X+100Y'(x,y)
[ :: =c3, +M, c4M], λx.x
[ :: =c1, +N0, c4, -N], λx.x
[ :: =c3, +N1, c4, -N], λx.x
[vingt et  :: =c3B, c3, -J, -M, -S2], λx.'0X+21'(x)
[ :: =c1, +B, c3B], λx.x
[vingt- :: =c3C, c3, -J, -Q, -M, -S2, -P], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[trente :: c3, -J, -M, -S2], 30
[trente et  :: =c3B, c3, -J, -M, -S2], λx.'0X+31'(x)
[trente- :: =c3C, c3, -J, -M, -S2], λx.'1X+30'(x)
[quarante :: c3, -J, -M, -S2], 40
[quarante et  :: =c3B, c3, -J, -M, -S2], λx.'0X+41'(x)
[quarante- :: =c3C, c3, -J, -M, -S2], λx.'1X+40'(x)
[uante :: =c1, +D, c3, -J, -M, -S2], λx.'0X+50'(x)
[uante et  :: =c3B, =c3D, c3, -J, -M, -S2], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +D, c3D], λx.x
[uante- :: =c3C, =c3D, c3, -J, -M, -S2], λxλy.'1X+10Y'(x,y)
[soixante :: c3, -J, -M, -S2], 60
[soixante- :: =c3E, c3, -J, -M, -S2], λx.'1X+60'(x)
[ :: =c2, +E, c3E], λx.x
[soixante et  :: =c3F, c3, -J, -M, -S2], λx.'1X+60'(x)
[ :: =c2, +F, c3F], λx.x
[-vingts :: =c1, +G, c3, -J, -M, -S2], λx.'0X+80'(x)
[-vingt- :: =c3H, =c3G, c3, -J, -M, -S2], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c2, +H, c3H], λx.x
[- :: =c3*, =c3G, c3, -J, -J, -J, -M, -M, -M, -S2, -S2, -S2], λxλy.'1X+0Y+90'(x,y)
[-dix :: =c2, +I, c3*], λx.'0X'(x)
[-seize :: =c2, +I, c3**], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3***], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -J], λx.x
[ :: =c2, +J1, c3, -J], λx.x
[onze :: c2, -J1, -H, -M1, -S3, -F], 11
[ :: =c1, c2, -H], λx.x
[ :: =c1, +Q0, c3, -Q], λx.x
[ :: =c2, +Q1, c3, -Q], λx.x
[-dix :: =c2, +I, c3****], λx.'0X'(x)
[-seize :: =c2, +I, c3*****], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3******], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -M], λx.x
[ :: =c2, +M1, c3, -M], λx.x
[mille :: c5], 1000
[mille  :: =c5N, c5], λx.'1X+1000'(x)
[ :: =c4, +N, c5N], λx.x
[ mille :: =c3, +P, c5], λx.'1000X'(x)
[ mille  :: =c5N, =c5Q, c5], λxλy.'1X+1000Y'(x,y)
[ :: =c3, +Q, c5Q], λx.x
[ :: =c4, +S0, c5], λx.x
[cent  :: =c4J, c4, -S0], λx.'1X+100'(x)
[ :: =c3, +J, c4J], λx.x
[  :: =c4*, =c4K, c4, -S0, -S0, -S0, -S0], λxλy.'1X+0Y+220'(x,y)
[ :: =c1, +K, c4K], λx.x
[ vingt :: =c3, +L, c4*], λx.'0X'(x)
[ vingt et  :: =c3B, =c4***L, c4**], λxλy.'0X+0Y'(x,y)
[ vingt- :: =c3C, =c4***L, c4***], λxλy.'1X+2Y'(x,y)
[ :: =c3, +L, c4***L], λx.x
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[-dix :: =c2, +I, c3*******], λx.'0X'(x)
[-seize :: =c2, +I, c3********], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3*********], λxλy.'1X+4Y'(x,y)
[ :: =c2, +I, c3*********I], λx.x
[ :: =c2, +S3, c5], λx.x
[ :: =c1, +P0, c3, -P], λx.x
[ :: =c2, +P1, c3, -P], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c3, +L, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c4, +S0, c4], λx.x
[ :: =c2, +J1, c2], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c2, +Q1, c2], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +P, c3], λx.x
[ :: =c2, +M1, c2], λx.x
[ :: =c3, +Q, c3], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c3, +N1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c4, +N, c4], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c2, +P1, c2], λx.x
[ :: =c1, +Q0, c1], λx.x
[ :: =c1, +P0, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E0, +C, +A, c1, -E0], λx.x
[ :: =c2, +E, +J1, +Q1, +M1, +S3, +P1, c2, -E], λx.x
[ :: =c3, +M, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c3, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c2, +M1, +S3, +P1, c2, -M1], λx.x
[ :: =c2, +M1, +S3, +F, c2, -M1], λx.x
[ :: =c2, +S3, +P1, c2, -S3], λx.x
[ :: =c3, +N1, +S2, c3, -N1], λx.x
[ :: =c3, +S2, +P, c3, -S2], λx.x
[ :: =c2, +H, +M1, +S3, +F, c2, -H], λx.x
[ :: =c1, +G, +E0, +C, c1, -G], λx.x
[ :: =c3, +J, +J, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c1, +C, +N0, c1, -C], λx.x
[ :: =c4, +S0, +S0, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +J1, +H, +M1, +S3, c2, -J1], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c1, +Q0, +A, +P0, c1, -Q0], λx.x
[ :: =c2, +E, +J1, +M1, +S3, +P1, c2, -E], λx.x
[ :: =c1, +K, +E0, +C, +N0, c1, -K], λx.x
[ :: =c1, +A, +P0, c1, -A], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c3, +Q, +M, +S2, +P, c3, -Q], λx.x
[ :: =c2, +Q1, +M1, +S3, +P1, c2, -Q1], λx.x
[ :: =c1, +E0, +C, c1, -E0], λx.x
[ :: =c3, +S2, +S2, +S2, c3, -S2], λx.x
[ :: =c2, +E, +J1, +M1, +S3, c2, -E], λx.x
[ :: =c3, +J, +Q, +M, +S2, +P, c3, -J], λx.x
[ :: =c2, +S3, +F, c2, -S3], λx.x
[ :: =c2, +I, +J1, +M1, +S3, +P1, c2, -I], λx.x
[ :: =c3, +J, +M, +S2, c3, -J], λx.x
[ :: =c4, +S0, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +M1, +S3, c2, -M1], λx.x
[ :: =c1, +D, +E0, +C, c1, -D], λx.x
[ :: =c3, +M, +S2, c3, -M], λx.x
[ :: =c1, +E0, +C, +N0, c1, -E0], λx.x
[ :: =c3, +S2, +S2, c3, -S2], λx.x
[ :: =c4, +N, +S0, c4, -N], λx.x
[ :: =c1, +E0, +C, +Q0, +A, +P0, c1, -E0], λx.x
[ :: =c3, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c3, +M, +M, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c1, +C, +Q0, +A, +P0, c1, -C], λx.x
[ :: =c2, +E, +J1, +H, +M1, +S3, c2, -E], λx.x
[ :: =c2, +J1, +M1, +S3, c2, -J1], λx.x
[ :: =c2, +J1, +Q1, +M1, +S3, +P1, c2, -J1], λx.x
[ :: =c3, +J, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c2, +J1, +M1, +S3, +P1, c2, -J1], λx.x
[ :: =c3, +M, +S2, +P, c3, -M], λx.x
[ :: =c3, +L, +N1, +S2, c3, -L], λx.x
[ :: =c2, +H, +M1, +S3, c2, -H], λx.x
[ :: =c4, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +J1, +H, +M1, +S3, +F, c2, -J1], λx.x


Learning fi

Learned 1019 words in fi and structured them in 21 functions.
It took 38 samples to learn those.
Those are:
yksi is 1
kaksi is 2
kolme is 3
neljä is 4
viisi is 5
kuusi is 6
seitsemän is 7
kahdeksan is 8
yhdeksän is 9
kymmenen is 10
Function _toista maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _kymmentä maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _kymmentä_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sata is 100
Function sata_ maps {1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by x -> 1*x+100
Function _sataa maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sataa_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_toista,_kymmentä,_kymmentä_} by (x0,x1) -> 100*x0+1*x1
tuhat is 1000
Function tuhat _ maps {2,6,100,_sataa,_sataa_} by x -> 1*x+1000
Function _tuhatta maps {7,10,_kymmentä,_toista,_kymmentä_} by x -> 1000*x+0
Function _tuhatta _ maps {7,_toista,_kymmentä_}x{2,6,100,_sataa,_sataa_} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[kymmenen :: c2, -C, -S2], 10
[toista :: =cnix, =c1, c2, -C, -F, -S2], λxλy.'1X+1Y+10'(x,y)
[ :: cnix], 0
[kymmentä :: =c1, +B, c2, -C, -S2], λx.'10X'(x)
[kymmentä :: =c1, =c2B, c2, -C, -F, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +E0, c2], λx.x
[seitsemän :: c1, -E0, -B, -F0], 7
[ :: =c1, c2, -C], λx.x
[yksi :: c1], 1
[kaksi :: c1, -B, -D0], 2
[kolme :: c1, -B], 3
[neljä :: c1, -B], 4
[viisi :: c1, -B], 5
[kuusi :: c1, -B, -D0], 6
[kahdeksan :: c1, -B], 8
[yhdeksän :: c1, -B], 9
[ :: =c1, +F0, c2, -F], λx.x
[sata :: c3, -D, -S1], 100
[sataa :: =c1, +B, c3, -D, -S1], λx.'100X'(x)
[sataa :: =c3C, =c2B, c3, -D, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[ :: =c1, +D0, c3, -D], λx.x
[tuhat :: c4], 1000
[tuhat  :: =c4D, c4], λx.'1X+1000'(x)
[ :: =c3, +D, c4D], λx.x
[tuhatta :: =cnix, =c2, c4], λxλy.'1X+1000Y'(x,y)
[tuhatta  :: =c4D, =c4F, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +F, c4F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sata :: =c3C, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c1, +E0, +B, +F0, c1, -E0], λx.x
[ :: =c2, +C, +F, +S2, c2, -C], λx.x
[ :: =c2, +F, +S2, c2, -F], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c2, +C, +S2, c2, -C], λx.x


Learning fr_CH
Learned 1019 words in fr_CH and structured them in 46 functions.
It took 69 samples to learn those.
Those are:
un is 1
deux is 2
trois is 3
quatre is 4
cinq is 5
six is 6
sept is 7
huit is 8
neuf is 9
dix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
quinze is 15
seize is 16
Function dix-_ maps {7,8,9} by x -> 1*x+10
vingt is 20
Function vingt et _ maps {1} by x -> 0*x+21
Function vingt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente et _ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante et _ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante et _ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _uante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
soixante is 60
Function soixante et _ maps {1} by x -> 0*x+61
Function soixante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ante maps {7,8} by x -> 10*x+0
Function _ante et _ maps {7,8}x{1} by (x0,x1) -> 10*x0+0*x1+1
Function _ante-_ maps {7,8}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
nonante is 90
Function nonante et _ maps {1} by x -> 0*x+91
Function nonante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante et _,soixante-_,_ante,_ante et _,_ante-_,90,nonante et _,nonante-_} by x -> 1*x+100
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cents _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante et _,soixante-_,_ante,_ante et _,_ante-_,90,nonante et _,nonante-_} by (x0,x1) -> 100*x0+1*x1
mille is 1000
Function mille _ maps {2,6,100,_ cents,_ cents _} by x -> 1*x+1000
Function _ mille maps {7,10,dix-_,20,vingt-_} by x -> 1000*x+0
Function _ mille _ maps {7,dix-_,vingt-_}x{2,6,100,_ cents,_ cents _} by (x0,x1) -> 1000*x0+1*x1

MG:
[un :: c1, -B], 1
[cinq :: c1, -D, -C], 5
[ :: =c4, cFin], λx.x
[sept :: c1, -E, -C, -H0, -I0, -A], 7
[huit :: c1, -E, -C, -A], 8
[deux :: c1, -C, -G0], 2
[trois :: c1, -C], 3
[quatre :: c1, -C], 4
[six :: c1, -C, -G0], 6
[neuf :: c1, -C, -A], 9
[dix :: c2, -H, -S2, -F], 10
[dix- :: =c2A, c2, -H, -I, -S2, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vingt :: c2, -H, -S2, -F], 20
[vingt- :: =c2C, c2, -H, -I, -S2, -F], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, +H0, c2, -H], λx.x
[cent :: c3, -G, -S1], 100
[ cents :: =c1, +C, c3, -G, -S1], λx.'100X'(x)
[ cents  :: =c3F, =c2C, c3, -G, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2, +F, c3F], λx.x
[ :: =c1, +G0, c3, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[mille :: c4], 1000
[mille  :: =c4G, c4], λx.'1X+1000'(x)
[ :: =c3, +G, c4G], λx.x
[ mille :: =c2, +H, c4], λx.'1000X'(x)
[ mille  :: =c4G, =c4I, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[cent  :: =c3F, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[onze :: c2, -S2, -F], 11
[douze :: c2, -S2, -F], 12
[treize :: c2, -S2, -F], 13
[quatorze :: c2, -S2, -F], 14
[quinze :: c2, -S2, -F], 15
[seize :: c2, -S2, -F], 16
[vingt et  :: =c2B, c2, -S2, -F], λx.'0X+21'(x)
[ :: =c1, +B, c2B], λx.x
[trente :: c2, -S2, -F], 30
[trente et  :: =c2B, c2, -S2, -F], λx.'0X+31'(x)
[trente- :: =c2C, c2, -S2, -F], λx.'1X+30'(x)
[quarante :: c2, -S2, -F], 40
[quarante et  :: =c2B, c2, -S2, -F], λx.'0X+41'(x)
[quarante- :: =c2C, c2, -S2, -F], λx.'1X+40'(x)
[uante :: =c1, +D, c2, -S2, -F], λx.'0X+50'(x)
[uante et  :: =c2B, =c2D, c2, -S2, -F], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +D, c2D], λx.x
[uante- :: =c2C, =c2D, c2, -S2, -F], λxλy.'1X+10Y'(x,y)
[soixante :: c2, -S2, -F], 60
[soixante et  :: =c2B, c2, -S2, -F], λx.'0X+61'(x)
[soixante- :: =c2C, c2, -S2, -F], λx.'1X+60'(x)
[ante :: =c1, +E, c2, -S2, -F], λx.'10X'(x)
[ante et  :: =c2B, =c2E, c2, -S2, -F], λxλy.'0X+10Y+1'(x,y)
[ :: =c1, +E, c2E], λx.x
[ante- :: =c2C, =c2E, c2, -S2, -F], λxλy.'1X+10Y'(x,y)
[nonante :: c2, -S2, -F], 90
[nonante et  :: =c2B, c2, -S2, -F], λx.'0X+91'(x)
[nonante- :: =c2C, c2, -S2, -F], λx.'1X+90'(x)
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c3, +G, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +G, +S1, c3, -G], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c1, +H0, +I0, +A, c1, -H0], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +H, +I, +S2, +F, c2, -H], λx.x
[ :: =c1, +I0, +A, c1, -I0], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +D, +C, c1, -D], λx.x
[ :: =c1, +E, +C, +H0, +I0, +A, c1, -E], λx.x
[ :: =c1, +C, +G0, c1, -C], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +C, +H0, +I0, +A, c1, -C], λx.x
[ :: =c2, +H, +S2, +F, c2, -H], λx.x


Learning fr_BE
Learned 1019 words in fr_BE and structured them in 49 functions.
It took 70 samples to learn those.
Those are:
un is 1
deux is 2
trois is 3
quatre is 4
cinq is 5
six is 6
sept is 7
huit is 8
neuf is 9
dix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
quinze is 15
seize is 16
Function dix-_ maps {7,8,9} by x -> 1*x+10
vingt is 20
Function vingt et _ maps {1} by x -> 0*x+21
Function vingt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente et _ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante et _ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante et _ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _uante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
soixante is 60
Function soixante et _ maps {1} by x -> 0*x+61
Function soixante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _ante maps {7} by x -> 0*x+70
Function _ante et _ maps {7}x{1} by (x0,x1) -> 0*x0+0*x1+71
Function _ante-_ maps {7}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _-vingt maps {4} by x -> 0*x+80
Function _-vingt et _ maps {4}x{1} by (x0,x1) -> 0*x0+0*x1+81
Function _-vingt-_ maps {4}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 19*x0+1*x1+4
nonante is 90
Function nonante et _ maps {1} by x -> 0*x+91
Function nonante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+90
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante et _,soixante-_,_ante,_ante et _,_ante-_,_-vingt,_-vingt et _,_-vingt-_,90,nonante et _,nonante-_} by x -> 1*x+100
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cents _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante et _,soixante-_,_ante,_ante et _,_ante-_,_-vingt,_-vingt et _,_-vingt-_,90,nonante et _,nonante-_} by (x0,x1) -> 100*x0+1*x1
mille is 1000
Function mille _ maps {2,6,100,_ cents,_ cents _} by x -> 1*x+1000
Function _ mille maps {7,10,dix-_,20,vingt-_} by x -> 1000*x+0
Function _ mille _ maps {7,dix-_,vingt-_}x{2,6,100,_ cents,_ cents _} by (x0,x1) -> 1000*x0+1*x1

MG:
[un :: c1, -B], 1
[quatre :: c1, -F, -C], 4
[cinq :: c1, -D, -C], 5
[sept :: c1, -E, -C, -J0, -I0, -A], 7
[ :: =c4, cFin], λx.x
[deux :: c1, -C, -H0], 2
[trois :: c1, -C], 3
[six :: c1, -C, -H0], 6
[huit :: c1, -C, -A], 8
[neuf :: c1, -C, -A], 9
[dix- :: =c2A, c2, -J, -G, -I, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[vingt- :: =c2C, c2, -J, -G, -I, -S2], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, +J0, c2, -J], λx.x
[cent :: c3, -H, -S1], 100
[ cents :: =c1, +C, c3, -H, -S1], λx.'100X'(x)
[ cents  :: =c3G, =c2C, c3, -H, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2, +G, c3G], λx.x
[ :: =c1, +H0, c3, -H], λx.x
[dix :: c2, -G, -I, -S2], 10
[onze :: c2, -G, -S2], 11
[douze :: c2, -G, -S2], 12
[treize :: c2, -G, -S2], 13
[quatorze :: c2, -G, -S2], 14
[quinze :: c2, -G, -S2], 15
[seize :: c2, -G, -S2], 16
[vingt :: c2, -G, -I, -S2], 20
[vingt et  :: =c2B, c2, -G, -S2], λx.'0X+21'(x)
[ :: =c1, +B, c2B], λx.x
[trente :: c2, -G, -S2], 30
[trente et  :: =c2B, c2, -G, -S2], λx.'0X+31'(x)
[trente- :: =c2C, c2, -G, -S2], λx.'1X+30'(x)
[quarante :: c2, -G, -S2], 40
[quarante et  :: =c2B, c2, -G, -S2], λx.'0X+41'(x)
[quarante- :: =c2C, c2, -G, -S2], λx.'1X+40'(x)
[uante :: =c1, +D, c2, -G, -S2], λx.'0X+50'(x)
[uante et  :: =c2B, =c2D, c2, -G, -S2], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +D, c2D], λx.x
[uante- :: =c2C, =c2D, c2, -G, -S2], λxλy.'1X+10Y'(x,y)
[soixante :: c2, -G, -S2], 60
[soixante et  :: =c2B, c2, -G, -S2], λx.'0X+61'(x)
[soixante- :: =c2C, c2, -G, -S2], λx.'1X+60'(x)
[ante :: =c1, +E, c2, -G, -S2], λx.'0X+70'(x)
[ante et  :: =c2B, =c2E, c2, -G, -S2], λxλy.'0X+0Y+71'(x,y)
[ :: =c1, +E, c2E], λx.x
[ante- :: =c2C, =c2E, c2, -G, -S2], λxλy.'1X+10Y'(x,y)
[-vingt :: =c1, +F, c2, -G, -S2], λx.'0X+80'(x)
[-vingt et  :: =c2B, =c2F, c2, -G, -S2], λxλy.'0X+0Y+81'(x,y)
[ :: =c1, +F, c2F], λx.x
[-vingt- :: =c2C, =c2F, c2, -G, -S2], λxλy.'1X+19Y+4'(x,y)
[nonante :: c2, -G, -S2], 90
[nonante et  :: =c2B, c2, -G, -S2], λx.'0X+91'(x)
[nonante- :: =c2C, c2, -G, -S2], λx.'1X+90'(x)
[ :: =c1, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[mille :: c4], 1000
[mille  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ mille :: =c2, +I, c4], λx.'1000X'(x)
[ mille  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[cent  :: =c3G, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +J, +G, +I, +S2, c2, -J], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +I0, +A, c1, -I0], λx.x
[ :: =c1, +E, +C, +J0, +I0, +A, c1, -E], λx.x
[ :: =c1, +J0, +I0, +A, c1, -J0], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c1, +F, +C, c1, -F], λx.x
[ :: =c1, +D, +C, c1, -D], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c2, +G, +I, +S2, c2, -G], λx.x
[ :: =c1, +C, +H0, c1, -C], λx.x
[ :: =c1, +C, +J0, +I0, +A, c1, -C], λx.x


Learning fr_DZ
Learned 1019 words in fr_DZ and structured them in 49 functions.
It took 101 samples to learn those.
Those are:
un is 1
deux is 2
trois is 3
quatre is 4
cinq is 5
six is 6
sept is 7
huit is 8
neuf is 9
dix is 10
onze is 11
douze is 12
treize is 13
quatorze is 14
quinze is 15
seize is 16
Function dix-_ maps {7,8,9} by x -> 1*x+10
vingt is 20
Function vingt et _ maps {1} by x -> 0*x+21
Function vingt-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
trente is 30
Function trente et _ maps {1} by x -> 0*x+31
Function trente-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+30
quarante is 40
Function quarante et _ maps {1} by x -> 0*x+41
Function quarante-_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _uante maps {5} by x -> 0*x+50
Function _uante et _ maps {5}x{1} by (x0,x1) -> 0*x0+0*x1+51
Function _uante-_ maps {5}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
soixante is 60
Function soixante-_ maps {2,3,4,5,6,7,8,9,10,12,13,14,15,16,dix-_} by x -> 1*x+60
Function soixante et _ maps {1,11} by x -> 1*x+60
Function _-vingts maps {4} by x -> 0*x+80
Function _-vingt-_ maps {4}x{1,2,3,4,5,6,7,8,9,11,12,13,14,15} by (x0,x1) -> 19*x0+1*x1+4
Function _-_-dix maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+90
Function _-_-seize maps {4}x{20} by (x0,x1) -> 0*x0+0*x1+96
Function _-_-dix-_ maps {4}x{20}x{7,8,9} by (x0,x1,x2) -> 2*x0+4*x1+1*x2+2
cent is 100
Function cent _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,20,vingt et _,vingt-_,30,trente et _,trente-_,40,quarante et _,quarante-_,_uante,_uante et _,_uante-_,60,soixante-_,soixante et _,_-vingts,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_} by x -> 1*x+100
Function _ _ vingt maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+220
Function _ _ vingt et _ maps {2}x{100}x{1} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+221
Function _ _ vingt-_ maps {2}x{100}x{2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 8*x0+2*x1+1*x2+4
Function _ _ quarante maps {2}x{100} by (x0,x1) -> 0*x0+0*x1+240
Function _ cents maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ cent _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,dix-_,30,trente et _,trente-_,quarante et _,quarante-_,60,soixante-_,soixante et _,_-vingts,_uante,_uante et _,_uante-_,_-vingt-_,_-_-dix,_-_-seize,_-_-dix-_,40,20,vingt et _,vingt-_} by (x0,x1) -> 100*x0+1*x1
mille is 1000
Function mille _ maps {2,6,100,_ cents,_ cent _} by x -> 1*x+1000
Function _ mille maps {7,10,dix-_,20,vingt-_} by x -> 1000*x+0
Function _ mille _ maps {7,dix-_,vingt-_}x{2,6,100,_ cents,_ cent _} by (x0,x1) -> 1000*x0+1*x1

MG:
[un :: c1, -B, -F0], 1
[deux :: c1, -K, -E0, -C, -N0], 2
[quatre :: c1, -G, -E0, -C], 4
[cinq :: c1, -D, -E0, -C], 5
[vingt :: c2, -I, -J1, -M1, -S3, -P1], 20
[cent :: c3, -L, -N1, -S2], 100
[ :: =c5, cFin], λx.x
[dix :: c2, -E, -J1, -M1, -S3, -P1], 10
[douze :: c2, -E, -J1, -H, -M1, -S3], 12
[treize :: c2, -E, -J1, -H, -M1, -S3], 13
[quatorze :: c2, -E, -J1, -H, -M1, -S3], 14
[quinze :: c2, -E, -J1, -H, -M1, -S3], 15
[seize :: c2, -E, -J1, -M1, -S3], 16
[dix- :: =c2A, c2, -E, -J1, -Q1, -M1, -S3, -P1], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[trois :: c1, -E0, -C], 3
[six :: c1, -E0, -C, -N0], 6
[sept :: c1, -E0, -C, -Q0, -A, -P0], 7
[huit :: c1, -E0, -C, -A], 8
[neuf :: c1, -E0, -C, -A], 9
[ cents :: =c1, +C, c4, -N, -S0], λx.'100X'(x)
[ cent  :: =c4M, =c3C, c4, -N, -S0], λxλy.'1X+100Y'(x,y)
[ :: =c3, +M, c4M], λx.x
[ :: =c1, +N0, c4, -N], λx.x
[ :: =c3, +N1, c4, -N], λx.x
[vingt et  :: =c3B, c3, -J, -M, -S2], λx.'0X+21'(x)
[ :: =c1, +B, c3B], λx.x
[vingt- :: =c3C, c3, -J, -Q, -M, -S2, -P], λx.'1X+20'(x)
[ :: =c1, +C, c3C], λx.x
[trente :: c3, -J, -M, -S2], 30
[trente et  :: =c3B, c3, -J, -M, -S2], λx.'0X+31'(x)
[trente- :: =c3C, c3, -J, -M, -S2], λx.'1X+30'(x)
[quarante :: c3, -J, -M, -S2], 40
[quarante et  :: =c3B, c3, -J, -M, -S2], λx.'0X+41'(x)
[quarante- :: =c3C, c3, -J, -M, -S2], λx.'1X+40'(x)
[uante :: =c1, +D, c3, -J, -M, -S2], λx.'0X+50'(x)
[uante et  :: =c3B, =c3D, c3, -J, -M, -S2], λxλy.'0X+0Y+51'(x,y)
[ :: =c1, +D, c3D], λx.x
[uante- :: =c3C, =c3D, c3, -J, -M, -S2], λxλy.'1X+10Y'(x,y)
[soixante :: c3, -J, -M, -S2], 60
[soixante- :: =c3E, c3, -J, -M, -S2], λx.'1X+60'(x)
[ :: =c2, +E, c3E], λx.x
[soixante et  :: =c3F, c3, -J, -M, -S2], λx.'1X+60'(x)
[ :: =c2, +F, c3F], λx.x
[-vingts :: =c1, +G, c3, -J, -M, -S2], λx.'0X+80'(x)
[-vingt- :: =c3H, =c3G, c3, -J, -M, -S2], λxλy.'1X+19Y+4'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c2, +H, c3H], λx.x
[- :: =c3*, =c3G, c3, -J, -J, -J, -M, -M, -M, -S2, -S2, -S2], λxλy.'1X+0Y+90'(x,y)
[-dix :: =c2, +I, c3*], λx.'0X'(x)
[-seize :: =c2, +I, c3**], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3***], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -J], λx.x
[ :: =c2, +J1, c3, -J], λx.x
[onze :: c2, -J1, -H, -M1, -S3, -F], 11
[ :: =c1, c2, -H], λx.x
[ :: =c1, +Q0, c3, -Q], λx.x
[ :: =c2, +Q1, c3, -Q], λx.x
[-dix :: =c2, +I, c3****], λx.'0X'(x)
[-seize :: =c2, +I, c3*****], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3******], λxλy.'1X+4Y'(x,y)
[ :: =c1, c3, -M], λx.x
[ :: =c2, +M1, c3, -M], λx.x
[mille :: c5], 1000
[mille  :: =c5N, c5], λx.'1X+1000'(x)
[ :: =c4, +N, c5N], λx.x
[ mille :: =c3, +P, c5], λx.'1000X'(x)
[ mille  :: =c5N, =c5Q, c5], λxλy.'1X+1000Y'(x,y)
[ :: =c3, +Q, c5Q], λx.x
[ :: =c4, +S0, c5], λx.x
[cent  :: =c4J, c4, -S0], λx.'1X+100'(x)
[ :: =c3, +J, c4J], λx.x
[  :: =c4*, =c4K, c4, -S0, -S0, -S0, -S0], λxλy.'1X+0Y+220'(x,y)
[ :: =c1, +K, c4K], λx.x
[ vingt :: =c3, +L, c4*], λx.'0X'(x)
[ vingt et  :: =c3B, =c4***L, c4**], λxλy.'0X+0Y'(x,y)
[ vingt- :: =c3C, =c4***L, c4***], λxλy.'1X+2Y'(x,y)
[ :: =c3, +L, c4***L], λx.x
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[-dix :: =c2, +I, c3*******], λx.'0X'(x)
[-seize :: =c2, +I, c3********], λx.'0X'(x)
[-dix- :: =c2A, =c3*********I, c3*********], λxλy.'1X+4Y'(x,y)
[ :: =c2, +I, c3*********I], λx.x
[ :: =c2, +S3, c5], λx.x
[ :: =c1, +P0, c3, -P], λx.x
[ :: =c2, +P1, c3, -P], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c3, +L, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c4, +S0, c4], λx.x
[ :: =c2, +J1, c2], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c2, +Q1, c2], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +P, c3], λx.x
[ :: =c2, +M1, c2], λx.x
[ :: =c3, +Q, c3], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c3, +N1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c4, +N, c4], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c2, +P1, c2], λx.x
[ :: =c1, +Q0, c1], λx.x
[ :: =c1, +P0, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +E0, +C, +A, c1, -E0], λx.x
[ :: =c2, +E, +J1, +Q1, +M1, +S3, +P1, c2, -E], λx.x
[ :: =c3, +M, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c3, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c2, +M1, +S3, +P1, c2, -M1], λx.x
[ :: =c2, +M1, +S3, +F, c2, -M1], λx.x
[ :: =c2, +S3, +P1, c2, -S3], λx.x
[ :: =c3, +N1, +S2, c3, -N1], λx.x
[ :: =c3, +S2, +P, c3, -S2], λx.x
[ :: =c2, +H, +M1, +S3, +F, c2, -H], λx.x
[ :: =c1, +G, +E0, +C, c1, -G], λx.x
[ :: =c3, +J, +J, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c1, +C, +N0, c1, -C], λx.x
[ :: =c4, +S0, +S0, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +J1, +H, +M1, +S3, c2, -J1], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x
[ :: =c1, +Q0, +A, +P0, c1, -Q0], λx.x
[ :: =c2, +E, +J1, +M1, +S3, +P1, c2, -E], λx.x
[ :: =c1, +K, +E0, +C, +N0, c1, -K], λx.x
[ :: =c1, +A, +P0, c1, -A], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c3, +Q, +M, +S2, +P, c3, -Q], λx.x
[ :: =c2, +Q1, +M1, +S3, +P1, c2, -Q1], λx.x
[ :: =c1, +E0, +C, c1, -E0], λx.x
[ :: =c3, +S2, +S2, +S2, c3, -S2], λx.x
[ :: =c2, +E, +J1, +M1, +S3, c2, -E], λx.x
[ :: =c3, +J, +Q, +M, +S2, +P, c3, -J], λx.x
[ :: =c2, +S3, +F, c2, -S3], λx.x
[ :: =c2, +I, +J1, +M1, +S3, +P1, c2, -I], λx.x
[ :: =c3, +J, +M, +S2, c3, -J], λx.x
[ :: =c4, +S0, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +M1, +S3, c2, -M1], λx.x
[ :: =c1, +D, +E0, +C, c1, -D], λx.x
[ :: =c3, +M, +S2, c3, -M], λx.x
[ :: =c1, +E0, +C, +N0, c1, -E0], λx.x
[ :: =c3, +S2, +S2, c3, -S2], λx.x
[ :: =c4, +N, +S0, c4, -N], λx.x
[ :: =c1, +E0, +C, +Q0, +A, +P0, c1, -E0], λx.x
[ :: =c3, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c3, +M, +M, +M, +S2, +S2, +S2, c3, -M], λx.x
[ :: =c1, +C, +Q0, +A, +P0, c1, -C], λx.x
[ :: =c2, +E, +J1, +H, +M1, +S3, c2, -E], λx.x
[ :: =c2, +J1, +M1, +S3, c2, -J1], λx.x
[ :: =c2, +J1, +Q1, +M1, +S3, +P1, c2, -J1], λx.x
[ :: =c3, +J, +J, +M, +M, +M, +S2, +S2, +S2, c3, -J], λx.x
[ :: =c2, +J1, +M1, +S3, +P1, c2, -J1], λx.x
[ :: =c3, +M, +S2, +P, c3, -M], λx.x
[ :: =c3, +L, +N1, +S2, c3, -L], λx.x
[ :: =c2, +H, +M1, +S3, c2, -H], λx.x
[ :: =c4, +S0, +S0, c4, -S0], λx.x
[ :: =c2, +J1, +H, +M1, +S3, +F, c2, -J1], λx.x


Learning he
LEARNING ERROR: ארבעים ואחד is 41 but learner assumes 31
LEARNING ERROR: ששים ואחד is 61 but learner assumes 29
LEARNING ERROR: שבעים ואחד is 71 but learner assumes 28
LEARNING ERROR: תשעים ואחד is 91 but learner assumes 26

LEARNING ERROR: מאה חמישים ואחד is 151 but learner assumes 147
LEARNING ERROR: מאה שמנים ואחד is 181 but learner assumes 177
LEARNING ERROR: מאתיים חמישים ואחד is 251 but learner assumes 247
LEARNING ERROR: מאתיים שמנים ואחד is 281 but learner assumes 277
Learned 1011 words in he and structured them in 36 functions.
It took 77 samples to learn those.
Those are:
אחד is 1
שנים is 2
שלש is 3
ארבע is 4
חמש is 5
שש is 6
שבע is 7
שמנה is 8
תשע is 9
עשר is 10
Function _ עשרה maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
עשרים is 20
Function _ים ו_ maps {10,3,4,6,7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> -1*x0+1*x1+34
Function _ים maps {3,4,6,7,9} by x -> 10*x+0
חמישים is 50
Function חמישים ו_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
שמנים is 80
Function שמנים ו_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
מאה is 100
Function מאה ו_ maps {1,2,3,4,5,6,7,8,9,10,_ עשרה,20,_ים,50,80} by x -> 1*x+100
Function מאה _ maps {_ים ו_,חמישים ו_,שמנים ו_} by x -> 1*x+96
מאתיים is 200
Function מאתיים ו_ maps {1,2,3,4,5,6,7,8,9,10,_ עשרה,20,_ים,50,80} by x -> 1*x+200
Function מאתיים _ maps {_ים ו_,חמישים ו_,שמנים ו_} by x -> 1*x+196
Function _ ומאות maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ מאות ו_ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,80,_ עשרה,20,_ים} by (x0,x1) -> 100*x0+1*x1
Function _ מאות _ ו_ maps {3,4,5,6,7,8,9}x{20,_ים,50,80}x{1,2,3,4,5,6,7,8,9} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _ מאות וחמישים maps {3,4,5,6,7,8,9} by x -> 100*x+50
אלף is 1000
Function אלף ו_ maps {2,6,100,200} by x -> 1*x+1000
Function אלף _ maps {מאתיים ו_} by x -> 0*x+1206
Function _ ואלף maps {7} by x -> 0*x+7000
Function _ אלף ו_ maps {7}x{2,6} by (x0,x1) -> 980*x0+1*x1+140
Function _ _ ומאה maps {7}x{1000} by (x0,x1) -> 0*x0+0*x1+7100
Function _ _ ומאתיים maps {7}x{1000} by (x0,x1) -> 0*x0+0*x1+7200
Function _ אלף _ ו_ maps {7}x{200}x{6} by (x0,x1,x2) -> 0*x0+0*x1+0*x2+7206

MG:
[שש :: c1, -P, -C, -B, -I0, -F, -A, -L], 6
[שבע :: c1, -K, -C, -B, -F, -A], 7
[מאתיים :: c3, -N, -I, -S1], 200
[מאתיים ו :: =c3D, c3, -J, -S1], λx.'1X+200'(x)
[ :: =c2, +D, c3D], λx.x
[אלף :: c3, -M, -S1], 1000
[ :: =c4, cFin], λx.x
[ים ו :: =c2A, =c2B, c2, -E, -S2], λxλy.'1X+-1Y+34'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +A, c2A], λx.x
[חמישים ו :: =c2A, c2, -E, -S2], λx.'1X+50'(x)
[שמנים ו :: =c2A, c2, -E, -S2], λx.'1X+80'(x)
[שלש :: c1, -C, -B, -F, -A], 3
[ארבע :: c1, -C, -B, -F, -A], 4
[תשע :: c1, -C, -B, -F, -A], 9
[עשרים :: c2, -H, -G, -D, -S2], 20
[ים :: =c1, +C, c2, -H, -G, -D, -S2], λx.'10X'(x)
[חמישים :: c2, -H, -D, -S2], 50
[שמנים :: c2, -H, -G, -D, -S2], 80
[ עשרה :: =c1, +A, c2, -G, -D, -S2], λx.'1X+10'(x)
[ :: =c1, c2, -G], λx.x
[אחד :: c1, -A], 1
[שנים :: c1, -I0, -A, -L], 2
[חמש :: c1, -F, -A], 5
[שמנה :: c1, -F, -A], 8
[עשר :: c1, -B], 10
[מאה :: c3, -I, -S1], 100
[ :: =c1, +I0, c3, -I], λx.x
[ :: =c1, c2, -D], λx.x
[אלף ו :: =c4I, c4], λx.'1X+1000'(x)
[ :: =c3, +I, c4I], λx.x
[אלף  :: =c4J, c4], λx.'0X+1206'(x)
[ :: =c3, +J, c4J], λx.x
[ ואלף :: =c1, +K, c4], λx.'0X+7000'(x)
[ אלף ו :: =c4L, =c4K, c4], λxλy.'1X+980Y+140'(x,y)
[ :: =c1, +K, c4K], λx.x
[ :: =c1, +L, c4L], λx.x
[  :: =c4*, =c4K, c4], λxλy.'1X+0Y+7100'(x,y)
[ ומאה :: =c3, +M, c4*], λx.'0X'(x)
[ ומאתיים :: =c3, +M, c4**], λx.'0X'(x)
[ אלף  :: =c4***, =c4K, c4], λxλy.'1X+0Y+7206'(x,y)
[ ו :: =c4***P, =c4***N, c4***], λxλy.'0X+0Y'(x,y)
[ :: =c3, +N, c4***N], λx.x
[ :: =c1, +P, c4***P], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[מאה ו :: =c3D, c3, -S1], λx.'1X+100'(x)
[מאה  :: =c3E, c3, -S1], λx.'1X+96'(x)
[ :: =c2, +E, c3E], λx.x
[מאתיים  :: =c3E, c3, -S1], λx.'1X+196'(x)
[ ומאות :: =c1, +F, c3, -S1], λx.'100X'(x)
[ מאות ו :: =c3G, =c3F, c3, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c2, +G, c3G], λx.x
[ מאות  :: =c3*, =c3F, c3, -S1], λxλy.'1X+100Y'(x,y)
[ ו :: =c2A, =c3*H, c3*], λxλy.'1X+1Y'(x,y)
[ :: =c2, +H, c3*H], λx.x
[ מאות וחמישים :: =c1, +F, c3, -S1], λx.'100X+50'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +N, c3], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c1, +L, c1], λx.x
[ :: =c1, +K, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +P, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, +D, +S2, c2, -H], λx.x
[ :: =c1, +F, +A, +L, c1, -F], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c3, +N, +I, +S1, c3, -N], λx.x
[ :: =c3, +I, +S1, c3, -I], λx.x
[ :: =c2, +E, +S2, c2, -E], λx.x
[ :: =c1, +B, +I0, +F, +A, +L, c1, -B], λx.x
[ :: =c1, +I0, +F, +A, +L, c1, -I0], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c1, +I0, +A, +L, c1, -I0], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c3, +M, +S1, c3, -M], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x
[ :: =c2, +H, +G, +D, +S2, c2, -H], λx.x
[ :: =c1, +A, +L, c1, -A], λx.x
[ :: =c1, +P, +C, +B, +I0, +F, +A, +L, c1, -P], λx.x
[ :: =c1, +K, +C, +B, +F, +A, c1, -K], λx.x
[ :: =c1, +C, +B, +I0, +F, +A, +L, c1, -C], λx.x
[ :: =c3, +J, +S1, c3, -J], λx.x
[ :: =c1, +C, +B, +F, +A, c1, -C], λx.x


Learning id
Learned 1019 words in id and structured them in 22 functions.
It took 39 samples to learn those.
Those are:
satu is 1
dua is 2
tiga is 3
empat is 4
lima is 5
enam is 6
tujuh is 7
delapan is 8
sembilan is 9
sepuluh is 10
sebelas is 11
Function _ belas maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _ puluh maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ puluh _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
seratus is 100
Function seratus _ maps {1,2,3,4,5,6,7,8,9,10,11,_ belas,_ puluh,_ puluh _} by x -> 1*x+100
Function _ ratus maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ratus _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_ belas,_ puluh,_ puluh _} by (x0,x1) -> 100*x0+1*x1
seribu is 1000
Function seribu _ maps {2,6,100,_ ratus,_ ratus _} by x -> 1*x+1000
Function _ ribu maps {7,10,_ puluh,_ belas,_ puluh _} by x -> 1000*x+0
Function _ ribu _ maps {7,_ belas,_ puluh _}x{2,6,100,_ ratus,_ ratus _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[sepuluh :: c2, -E, -C, -S2], 10
[ belas :: =c1, +A, c2, -E, -C, -F, -S2], λx.'1X+10'(x)
[ puluh :: =c1, +A, c2, -E, -C, -S2], λx.'10X'(x)
[ puluh  :: =c1, =c2A, c2, -E, -C, -F, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +E0, c2, -E], λx.x
[tujuh :: c1, -E0, -F0, -A], 7
[sebelas :: c2, -C, -S2], 11
[ :: =c1, c2, -C], λx.x
[satu :: c1], 1
[dua :: c1, -A, -D0], 2
[tiga :: c1, -A], 3
[empat :: c1, -A], 4
[lima :: c1, -A], 5
[enam :: c1, -A, -D0], 6
[delapan :: c1, -A], 8
[sembilan :: c1, -A], 9
[ :: =c1, +F0, c2, -F], λx.x
[seratus :: c3, -D, -S1], 100
[ ratus :: =c1, +A, c3, -D, -S1], λx.'100X'(x)
[ ratus  :: =c3C, =c2A, c3, -D, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2, +C, c3C], λx.x
[ :: =c1, +D0, c3, -D], λx.x
[seribu :: c4], 1000
[seribu  :: =c4D, c4], λx.'1X+1000'(x)
[ :: =c3, +D, c4D], λx.x
[ ribu :: =c2, +E, c4], λx.'1000X'(x)
[ ribu  :: =c4D, =c4F, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +F, c4F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[seratus  :: =c3C, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c1, +F0, +A, c1, -F0], λx.x
[ :: =c1, +A, +D0, c1, -A], λx.x
[ :: =c2, +C, +F, +S2, c2, -C], λx.x
[ :: =c2, +E, +C, +F, +S2, c2, -E], λx.x
[ :: =c2, +E, +C, +S2, c2, -E], λx.x
[ :: =c1, +E0, +F0, +A, c1, -E0], λx.x
[ :: =c2, +F, +S2, c2, -F], λx.x
[ :: =c2, +C, +S2, c2, -C], λx.x


Learning it
Learned 1019 words in it and structured them in 74 functions.
It took 118 samples to learn those.
Those are:
uno is 1
due is 2
tre is 3
quattro is 4
cinque is 5
sei is 6
sette is 7
otto is 8
nove is 9
dieci is 10
undici is 11
dodici is 12
Function _dici maps {3} by x -> 0*x+13
quattordici is 14
quindici is 15
sedici is 16
Function dicias_ maps {7} by x -> 0*x+17
Function dici_ maps {8} by x -> 0*x+18
Function dician_ maps {9} by x -> 0*x+19
venti is 20
Function venti_ maps {1,2,4,5,6,7,9} by x -> 1*x+20
ventitré is 23
Function vent_ maps {8} by x -> 0*x+28
Function _nta maps {3} by x -> 0*x+30
Function _ntatré maps {3} by x -> 0*x+33
Function _nta_ maps {3}x{2,4,5,6,7,9} by (x0,x1) -> 9*x0+1*x1+3
Function _nt_ maps {3}x{1,8} by (x0,x1) -> 9*x0+1*x1+3
quaranta is 40
Function quarant_ maps {1} by x -> 0*x+41
quarantatré is 43
Function quaranta_ maps {2,4,5,6,7,9} by x -> 1*x+40
quarantotto is 48
cinquanta is 50
cinquantatré is 53
Function cinquanta_ maps {2,4,5,6,7,9} by x -> 1*x+50
Function cinquant_ maps {1,8} by x -> 1*x+50
sessanta is 60
sessantatré is 63
Function sessanta_ maps {2,4,5,6,7,9} by x -> 1*x+60
Function sessant_ maps {1,8} by x -> 1*x+60
settanta is 70
settantatré is 73
Function settanta_ maps {2,4,5,6,7,9} by x -> 1*x+70
Function settant_ maps {1,8} by x -> 1*x+70
ottanta is 80
ottantatré is 83
Function ottanta_ maps {2,4,5,6,7,9} by x -> 1*x+80
Function ottant_ maps {1,8} by x -> 1*x+80
novanta is 90
novantatré is 93
Function novanta_ maps {2,4,5,6,7,9} by x -> 1*x+90
Function novant_ maps {1,8} by x -> 1*x+90
cento is 100
Function cento_ maps {1,2,4,5,6,7,9,10,11,12,_dici,14,15,16,dicias_,dician_,20,venti_,vent_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,90,novanta_,novant_} by x -> 1*x+100
centotré is 103
centotto is 108
Function centodic_ maps {8} by x -> 0*x+118
centottanta is 180
Function centottanta_ maps {2,3,4,5,6,7,9} by x -> 1*x+180
Function centottant_ maps {1,8} by x -> 1*x+180
Function cento__ maps {20,_nta,40,50,60,70,90}x{3} by (x0,x1) -> 1*x0+31*x1+10
Function _cento maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _cento_ maps {2,3,4,5,6,7,8,9}x{1,2,4,5,6,7,9,10,11,12,_dici,14,15,16,dicias_,dician_,20,venti_,vent_,_nta,_nta_,_nt_,40,quarant_,quaranta_,48,50,cinquanta_,cinquant_,60,sessanta_,sessant_,70,settanta_,settant_,90,novanta_,novant_} by (x0,x1) -> 100*x0+1*x1
Function _centotré maps {2,3,4,5,6,7,8,9} by x -> 100*x+3
Function _centotto maps {2,3,4,5,6,7,8,9} by x -> 100*x+8
Function _centodic_ maps {2,3,4,5,6,7,8,9}x{8} by (x0,x1) -> 100*x0+2*x1+2
Function _cento__ maps {2,3,4,5,6,7,8,9}x{20,_nta,40,50,60,70,90}x{3} by (x0,x1,x2) -> 100*x0+1*x1+1*x2
Function _centottanta maps {2,3,4,5,6,7,8,9} by x -> 100*x+80
Function _centottant_ maps {2,3,4,5,6,7,8,9}x{1,8} by (x0,x1) -> 100*x0+1*x1+80
Function _centottanta_ maps {2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,9} by (x0,x1) -> 100*x0+1*x1+80
mille is 1000
Function mille_ maps {2,6,100,_cento,_cento_} by x -> 1*x+1000
Function _mila maps {7,10,dicias_,20,venti_} by x -> 1000*x+0
Function _mila_ maps {7,dicias_,venti_}x{2,6,100,_cento,_cento_} by (x0,x1) -> 1000*x0+1*x1

MG:
[uno :: c1, -H, -E, -G, -I0], 1
[tre :: c1, -A, -J, -L], 3
[sette :: c1, -B, -E, -N0, -J, -I0, -F, -L, -P0], 7
[otto :: c1, -C, -G, -L], 8
[nove :: c1, -D, -E, -J, -I0, -F, -L], 9
[ :: =c4, cFin], λx.x
[due :: c1, -E, -J, -I0, -F, -L, -M0], 2
[quattro :: c1, -E, -J, -I0, -F, -L], 4
[cinque :: c1, -E, -J, -I0, -F, -L], 5
[sei :: c1, -E, -J, -I0, -F, -L, -M0], 6
[dieci :: c2, -N, -I, -S2], 10
[dicias :: =c2B, c2, -N, -I, -P, -S2], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[venti :: c2, -N, -I, -K, -S2], 20
[venti :: =c2E, c2, -N, -I, -P, -S2], λx.'1X+20'(x)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, +N0, c2, -N], λx.x
[undici :: c2, -I, -S2], 11
[dodici :: c2, -I, -S2], 12
[dici :: =c1, +A, c2, -I, -S2], λx.'0X+13'(x)
[quattordici :: c2, -I, -S2], 14
[quindici :: c2, -I, -S2], 15
[sedici :: c2, -I, -S2], 16
[dician :: =c2D, c2, -I, -S2], λx.'0X+19'(x)
[ :: =c1, +D, c2D], λx.x
[vent :: =c2C, c2, -I, -S2], λx.'0X+28'(x)
[ :: =c1, +C, c2C], λx.x
[nta :: =c1, +A, c2, -I, -K, -S2], λx.'0X+30'(x)
[nta :: =c2F, =c2A, c2, -I, -S2], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, +F, c2F], λx.x
[nt :: =c2G, =c2A, c2, -I, -S2], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +G, c2G], λx.x
[quaranta :: c2, -I, -K, -S2], 40
[quarant :: =c2H, c2, -I, -S2], λx.'0X+41'(x)
[ :: =c1, +H, c2H], λx.x
[quaranta :: =c2F, c2, -I, -S2], λx.'1X+40'(x)
[quarantotto :: c2, -I, -S2], 48
[cinquanta :: c2, -I, -K, -S2], 50
[cinquanta :: =c2F, c2, -I, -S2], λx.'1X+50'(x)
[cinquant :: =c2G, c2, -I, -S2], λx.'1X+50'(x)
[sessanta :: c2, -I, -K, -S2], 60
[sessanta :: =c2F, c2, -I, -S2], λx.'1X+60'(x)
[sessant :: =c2G, c2, -I, -S2], λx.'1X+60'(x)
[settanta :: c2, -I, -K, -S2], 70
[settanta :: =c2F, c2, -I, -S2], λx.'1X+70'(x)
[settant :: =c2G, c2, -I, -S2], λx.'1X+70'(x)
[novanta :: c2, -I, -K, -S2], 90
[novanta :: =c2F, c2, -I, -S2], λx.'1X+90'(x)
[novant :: =c2G, c2, -I, -S2], λx.'1X+90'(x)
[ :: =c1, +I0, c2, -I], λx.x
[cento :: c3, -M, -S1], 100
[cento :: =c1, +L, c3, -M, -S1], λx.'100X'(x)
[cento :: =c3I, =c3L, c3, -M, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +L, c3L], λx.x
[ :: =c2, +I, c3I], λx.x
[ :: =c1, +M0, c3, -M], λx.x
[ :: =c1, +P0, c2, -P], λx.x
[mille :: c4], 1000
[mille :: =c4M, c4], λx.'1X+1000'(x)
[ :: =c3, +M, c4M], λx.x
[mila :: =c2, +N, c4], λx.'1000X'(x)
[mila :: =c4M, =c4P, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +P, c4P], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[cento :: =c3I, c3, -S1], λx.'1X+100'(x)
[centotré :: c3, -S1], 103
[centotto :: c3, -S1], 108
[centodic :: =c2C, c3, -S1], λx.'0X+118'(x)
[centottanta :: c3, -S1], 180
[centottanta :: =c3J, c3, -S1], λx.'1X+180'(x)
[ :: =c1, +J, c3J], λx.x
[centottant :: =c2G, c3, -S1], λx.'1X+180'(x)
[cento :: =c3*, c3, -S1], λx.'1X+10'(x)
[ :: =c2A, =c3**K, c3*], λxλy.'31X+1Y'(x,y)
[centotré :: =c1, +L, c3, -S1], λx.'100X+3'(x)
[centotto :: =c1, +L, c3, -S1], λx.'100X+8'(x)
[centodic :: =c2C, =c3L, c3, -S1], λxλy.'2X+100Y+2'(x,y)
[cento :: =c3**, =c3L, c3, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2A, =c3**K, c3**], λxλy.'1X+1Y'(x,y)
[ :: =c2, +K, c3**K], λx.x
[centottanta :: =c1, +L, c3, -S1], λx.'100X+80'(x)
[centottant :: =c2G, =c3L, c3, -S1], λxλy.'1X+100Y+80'(x,y)
[centottanta :: =c3J, =c3L, c3, -S1], λxλy.'1X+100Y+80'(x,y)
[ :: =c2, +S2, c4], λx.x
[dici :: =c2C, c2, -S2], λx.'0X+18'(x)
[ventitré :: c2, -S2], 23
[ntatré :: =c1, +A, c2, -S2], λx.'0X+33'(x)
[quarantatré :: c2, -S2], 43
[cinquantatré :: c2, -S2], 53
[sessantatré :: c2, -S2], 63
[settantatré :: c2, -S2], 73
[ottanta :: c2, -S2], 80
[ottantatré :: c2, -S2], 83
[ottanta :: =c2F, c2, -S2], λx.'1X+80'(x)
[ottant :: =c2G, c2, -S2], λx.'1X+80'(x)
[novantatré :: c2, -S2], 93
[ :: =c1, +D, c1], λx.x
[ :: =c3, +M, c3], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c1, +L, c1], λx.x
[ :: =c2, +N, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c2, +P, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c1, +P0, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +M0, c1], λx.x
[ :: =c1, +J, +I0, +F, +L, c1, -J], λx.x
[ :: =c1, +L, +P0, c1, -L], λx.x
[ :: =c2, +P, +S2, c2, -P], λx.x
[ :: =c1, +E, +G, +I0, c1, -E], λx.x
[ :: =c1, +I0, +F, +L, c1, -I0], λx.x
[ :: =c1, +J, +L, c1, -J], λx.x
[ :: =c2, +I, +K, +S2, c2, -I], λx.x
[ :: =c1, +J, +I0, +F, +L, +M0, c1, -J], λx.x
[ :: =c1, +F, +L, +P0, c1, -F], λx.x
[ :: =c3, +M, +S1, c3, -M], λx.x
[ :: =c1, +D, +E, +J, +I0, +F, +L, c1, -D], λx.x
[ :: =c1, +N0, +J, +I0, +F, +L, +P0, c1, -N0], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c1, +F, +L, c1, -F], λx.x
[ :: =c1, +G, +L, c1, -G], λx.x
[ :: =c2, +N, +I, +K, +S2, c2, -N], λx.x
[ :: =c1, +I0, +F, +L, +M0, c1, -I0], λx.x
[ :: =c1, +A, +J, +L, c1, -A], λx.x
[ :: =c2, +N, +I, +S2, c2, -N], λx.x
[ :: =c2, +I, +P, +S2, c2, -I], λx.x
[ :: =c1, +E, +J, +I0, +F, +L, +M0, c1, -E], λx.x
[ :: =c1, +H, +E, +G, +I0, c1, -H], λx.x
[ :: =c1, +G, +I0, c1, -G], λx.x
[ :: =c1, +E, +N0, +J, +I0, +F, +L, +P0, c1, -E], λx.x
[ :: =c1, +B, +E, +N0, +J, +I0, +F, +L, +P0, c1, -B], λx.x
[ :: =c1, +F, +L, +M0, c1, -F], λx.x
[ :: =c2, +N, +I, +P, +S2, c2, -N], λx.x
[ :: =c1, +J, +I0, +F, +L, +P0, c1, -J], λx.x
[ :: =c1, +L, +M0, c1, -L], λx.x
[ :: =c2, +K, +S2, c2, -K], λx.x
[ :: =c1, +E, +J, +I0, +F, +L, c1, -E], λx.x
[ :: =c1, +I0, +F, +L, +P0, c1, -I0], λx.x
[ :: =c1, +C, +G, +L, c1, -C], λx.x


Learning ja
Learned 1019 words in ja and structured them in 23 functions.
It took 40 samples to learn those.
Those are:
一 is 1
二 is 2
三 is 3
四 is 4
五 is 5
六 is 6
七 is 7
八 is 8
九 is 9
十 is 10
Function 十_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _十 maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _十_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
百 is 100
Function 百_ maps {1,2,3,4,5,6,7,8,9,10,十_,_十,_十_} by x -> 1*x+100
Function _百 maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _百_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,十_,_十,_十_} by (x0,x1) -> 100*x0+1*x1
千 is 1000
Function 千_ maps {2,6,100,_百,_百_} by x -> 1*x+1000
Function _千 maps {7} by x -> 0*x+7000
Function _千_ maps {7}x{2,6,100,_百,_百_} by (x0,x1) -> 980*x0+1*x1+140
Function _万 maps {1,2} by x -> 10000*x+0
Function _万_ maps {1,2}x{_千,_千_} by (x0,x1) -> 10000*x0+1*x1

MG:
[七七 :: c1, -E, -B], 7
[ :: =c5, cFin], λx.x
[十十 :: c2, -S3], 10
[十A十 :: =c1, c2, -S3], λx.'1X+10'(x)
[B十 :: c2, -S3], λx.'10X'(x)
[B十 :: =c1, c2, -S3], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2], λx.x
[一一 :: c1, -F], 1
[二二 :: c1, -B, -D0, -F], 2
[三三 :: c1, -B], 3
[四四 :: c1, -B], 4
[五五 :: c1, -B], 5
[六六 :: c1, -B, -D0], 6
[八八 :: c1, -B], 8
[九九 :: c1, -B], 9
[E千 :: c4, -G], λx.'0X+7000'(x)
[E千 :: =c4D, c4, -G], λxλy.'1X+980Y+140'(x,y)
[ :: =c3, +D, c4D], λx.x
[百百 :: c3, -D, -S2], 100
[B百 :: c3, -D, -S2], λx.'100X'(x)
[B百 :: =c2, c3, -D, -S2], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D0, c3, -D], λx.x
[F万 :: c5], λx.'10000X'(x)
[F万 :: =c5G, c5], λxλy.'1X+10000Y'(x,y)
[ :: =c4, +G, c5G], λx.x
[ :: =c4, c5], λx.x
[千千 :: c4], 1000
[千D千D+千D千 :: =c4D, c4], λx.'1X+1000'(x)
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[百C百 :: =c2, c3, -S2], λx.'1X+100'(x)
[ :: =c2, +S3, c5], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c4, +G, c4], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +D, +S2, c3, -D], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +B, +D0, +F, c1, -B], λx.x
[ :: =c1, +D0, +F, c1, -D0], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x


Learning kn
Learned 1019 words in kn and structured them in 99 functions.
It took 145 samples to learn those.
Those are:
ಒಂದು is 1
ಎರಡು is 2
ಮೂರು is 3
ನಾಲ್ಕು is 4
ಐದು is 5
ಆರು is 6
ಏಳು is 7
ಎಂಟು is 8
ಒಂಬತ್ತು is 9
ಹತ್ತು is 10
ಹನ್ನೊಂದು is 11
ಹನ್ನೆರಡು is 12
Function ಹದಿ_ maps {3,4} by x -> 1*x+10
ಹದಿನೈದು is 15
ಹದಿನಾರು is 16
ಹದಿನೇಳು is 17
ಹದಿನೆಂಟು is 18
ಹತ್ತೊಂಬತ್ತು is 19
ಇಪ್ಪತ್ತು is 20
Function ಇಪ್ಪತ್ತ್ _ maps {1,2,3,4,5} by x -> 1*x+20
Function ಇಪ್ಪತ್ತ್_ maps {6,7,8,9} by x -> 1*x+20
ಮೂವತ್ತು is 30
Function ಮೂವತ್ತ್_ maps {1,2} by x -> 1*x+30
Function ಮೂವತ್ತ್ _ maps {3,4,5,9} by x -> 1*x+30
Function ಮೂವತ್_ maps {6,7,8} by x -> 1*x+30
ನಲವತ್ತು is 40
ನಲವತ್ತೊಂದು is 41
Function ನಲವತ್ತ್ _ maps {2,3,4} by x -> 1*x+40
ನಲವತ್ತೈದು is 45
ನಲವತ್ತಾರು is 46
ನಲವತ್ತೇಳು is 47
ನಲವತ್ತೆಂಟು is 48
ನಲವತ್ತೊಂಬತ್ತು is 49
ಐವತ್ತು is 50
ಐವತ್ತೊಂದು is 51
ಐವತ್ತೆರಡು is 52
Function ಐವತ್ತ_ maps {3} by x -> 0*x+53
Function ಐವತ್ತ್_ maps {4} by x -> 0*x+54
ಐವತ್ತೈದು is 55
ಐವತ್ತಾರು is 56
ಐವತ್ತೇಳು is 57
ಐವತ್ತೆಂಟು is 58
ಐವತ್ತೊಂಬತ್ತು is 59
ಅರವತ್ತು is 60
ಅರವತ್ತೊಂದು is 61
ಅರವತ್ತೆರಡು is 62
Function ಅರವತ್ತ್ _ maps {3,4} by x -> 1*x+60
ಅರವತ್ತೈದು is 65
ಅರವತ್ತಾರು is 66
ಅರವತ್ತೇಳು is 67
ಅರವತ್ತೆಂಟು is 68
ಅರವತ್ತೊಂಬತ್ತು is 69
ಎಪ್ಪತ್ತು is 70
ಎಪ್ಪತ್ತೊಂದು is 71
ಎಪ್ಪತ್ತೆರಡು is 72
Function ಎಪ್ಪತ್ತ್ _ maps {3,4} by x -> 1*x+70
ಎಪ್ಪತ್ತೈದು is 75
ಎಪ್ಪತ್ತಾರು is 76
ಎಪ್ಪತ್ತೇಳು is 77
ಎಪ್ಪತ್ತೆಂಟು is 78
ಎಪ್ಪತ್ತೊಂಬತ್ತು is 79
ಎಂಬತ್ತು is 80
ಎಂಬತ್ತೊಂದು is 81
ಎಂಬತ್ತೆರಡು is 82
Function ಎಂಬತ್ತ್ _ maps {3,4} by x -> 1*x+80
ಎಂಬತ್ತೈದು is 85
ಎಂಬತ್ತಾರು is 86
ಎಂಬತ್ತೇಳು is 87
ಎಂಬತ್ತೆಂಟು is 88
ಎಂಬತ್ತೊಂಬತ್ತು is 89
ತೊಂಬತ್ತು is 90
ತೊಂಬತ್ತೊಂದು is 91
ತೊಂಬತ್ತೆರಡು is 92
Function ತೊಂಬತ್ತ _ maps {3,4} by x -> 1*x+90
ತೊಂಬತ್ತೈದು is 95
ತೊಂಬತ್ತಾರು is 96
ತೊಂಬತ್ತೇಳು is 97
ತೊಂಬತ್ತೆಂಟು is 98
ತೊಂಬತ್ತೊಂಬತ್ತು is 99
Function _ ನೂರ ಹದಿ_ maps {1}x{3,4} by (x0,x1) -> 55*x0+1*x1+55
Function _ ನೂರ ಇಪ್ಪತ್ತು maps {1} by x -> 0*x+120
Function _ ನೂರ ಇಪ್ಪತ್ತ್ _ maps {1}x{1,2,3,4,5} by (x0,x1) -> 60*x0+1*x1+60
Function _ ನೂರ ಇಪ್ಪತ್ತ್_ maps {1}x{6,7,8,9} by (x0,x1) -> 60*x0+1*x1+60
Function _ ನೂರು maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ ನೂರ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,30,40,41,45,46,47,48,49,51,52,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,95,96,97,98,99,ಹದಿ_,20,ಇಪ್ಪತ್ತ್ _,ಇಪ್ಪತ್ತ್_} by (x0,x1) -> 100*x0+1*x1
Function _ ನೂರ ಮೂವತ್ತ್_ maps {1,2,3,4,5,6,7,8,9}x{1,2} by (x0,x1) -> 100*x0+1*x1+30
Function _ ನೂರ ಮೂವತ್ತ್ _ maps {1,2,3,4,5,6,7,8,9}x{3,4,5,9} by (x0,x1) -> 100*x0+1*x1+30
Function _ ನೂರ ಮೂವತ್_ maps {1,2,3,4,5,6,7,8,9}x{6,7,8} by (x0,x1) -> 100*x0+1*x1+30
Function _ ನೂರ ನಲವತ್ತ್ _ maps {1,2,3,4,5,6,7,8,9}x{2,3,4} by (x0,x1) -> 100*x0+1*x1+40
Function _ ನೂರ ಐವತ್ತು maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+50
Function _ ನೂರ ಐವತ್ತ_ maps {1,2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 100*x0+16*x1+5
Function _ ನೂರ ಐವತ್ತ್_ maps {1,2,3,4,5,6,7,8,9}x{4} by (x0,x1) -> 100*x0+13*x1+2
Function _ ನೂರ ಅರವತ್ತ್ _ maps {1,2,3,4,5,6,7,8,9}x{3,4} by (x0,x1) -> 100*x0+1*x1+60
Function _ ನೂರ ಎಪ್ಪತ್ತ್ _ maps {1,2,3,4,5,6,7,8,9}x{3,4} by (x0,x1) -> 100*x0+1*x1+70
Function _ ನೂರ ಎಂಬತ್ತ್ _ maps {1,2,3,4,5,6,7,8,9}x{3,4} by (x0,x1) -> 100*x0+1*x1+80
Function _ ನೂರ ತೊಂಬತ್ತ _ maps {1,2,3,4,5,6,7,8,9}x{3,4} by (x0,x1) -> 100*x0+1*x1+90
Function _ ಸಾವಿರ maps {1,7,10,17,20,ಇಪ್ಪತ್ತ್_} by x -> 1000*x+0
Function _ ಸಾವಿರದ _ maps {1,7,ಇಪ್ಪತ್ತ್_}x{2,6} by (x0,x1) -> 1000*x0+1*x1
Function _ ಸಾವಿರ _ maps {1,7,17,ಇಪ್ಪತ್ತ್_}x{_ ನೂರು,_ ನೂರ _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ಒಂದು :: c1, -J, -Q0, -M0, -N0, -D, -B], 1
[ಮೂರು :: c1, -H, -E, -A, -B, -G], 3
[ನಾಲ್ಕು :: c1, -I, -E, -A, -B, -G], 4
[ :: =c4, cFin], λx.x
[ಆರು :: c1, -C, -P, -F], 6
[ಏಳು :: c1, -C, -Q0, -M0, -N0, -F], 7
[ಎಂಟು :: c1, -C, -F], 8
[ಒಂಬತ್ತು :: c1, -C, -E], 9
[ಹದಿನೇಳು :: c2, -Q, -L, -M, -S2], 17
[ಇಪ್ಪತ್ತ್ :: =c2C, c2, -Q, -L, -M, -N, -S2], λx.'1X+20'(x)
[ :: =c1, +C, c2C], λx.x
[ :: =c1, +Q0, c2, -Q], λx.x
[ಹತ್ತು :: c2, -L, -M, -S2], 10
[ಹನ್ನೊಂದು :: c2, -L, -S2], 11
[ಹನ್ನೆರಡು :: c2, -L, -S2], 12
[ಹದಿ :: =c2A, c2, -L, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ಹದಿನೈದು :: c2, -L, -S2], 15
[ಹದಿನಾರು :: c2, -L, -S2], 16
[ಹದಿನೆಂಟು :: c2, -L, -S2], 18
[ಹತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 19
[ಇಪ್ಪತ್ತು :: c2, -L, -M, -S2], 20
[ಇಪ್ಪತ್ತ್  :: =c2B, c2, -L, -S2], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[ಮೂವತ್ತು :: c2, -L, -S2], 30
[ನಲವತ್ತು :: c2, -L, -S2], 40
[ನಲವತ್ತೊಂದು :: c2, -L, -S2], 41
[ನಲವತ್ತೈದು :: c2, -L, -S2], 45
[ನಲವತ್ತಾರು :: c2, -L, -S2], 46
[ನಲವತ್ತೇಳು :: c2, -L, -S2], 47
[ನಲವತ್ತೆಂಟು :: c2, -L, -S2], 48
[ನಲವತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 49
[ಐವತ್ತೊಂದು :: c2, -L, -S2], 51
[ಐವತ್ತೆರಡು :: c2, -L, -S2], 52
[ಐವತ್ತೈದು :: c2, -L, -S2], 55
[ಐವತ್ತಾರು :: c2, -L, -S2], 56
[ಐವತ್ತೇಳು :: c2, -L, -S2], 57
[ಐವತ್ತೆಂಟು :: c2, -L, -S2], 58
[ಐವತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 59
[ಅರವತ್ತು :: c2, -L, -S2], 60
[ಅರವತ್ತೊಂದು :: c2, -L, -S2], 61
[ಅರವತ್ತೆರಡು :: c2, -L, -S2], 62
[ಅರವತ್ತೈದು :: c2, -L, -S2], 65
[ಅರವತ್ತಾರು :: c2, -L, -S2], 66
[ಅರವತ್ತೇಳು :: c2, -L, -S2], 67
[ಅರವತ್ತೆಂಟು :: c2, -L, -S2], 68
[ಅರವತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 69
[ಎಪ್ಪತ್ತು :: c2, -L, -S2], 70
[ಎಪ್ಪತ್ತೊಂದು :: c2, -L, -S2], 71
[ಎಪ್ಪತ್ತೆರಡು :: c2, -L, -S2], 72
[ಎಪ್ಪತ್ತೈದು :: c2, -L, -S2], 75
[ಎಪ್ಪತ್ತಾರು :: c2, -L, -S2], 76
[ಎಪ್ಪತ್ತೇಳು :: c2, -L, -S2], 77
[ಎಪ್ಪತ್ತೆಂಟು :: c2, -L, -S2], 78
[ಎಪ್ಪತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 79
[ಎಂಬತ್ತು :: c2, -L, -S2], 80
[ಎಂಬತ್ತೊಂದು :: c2, -L, -S2], 81
[ಎಂಬತ್ತೆರಡು :: c2, -L, -S2], 82
[ಎಂಬತ್ತೈದು :: c2, -L, -S2], 85
[ಎಂಬತ್ತಾರು :: c2, -L, -S2], 86
[ಎಂಬತ್ತೇಳು :: c2, -L, -S2], 87
[ಎಂಬತ್ತೆಂಟು :: c2, -L, -S2], 88
[ಎಂಬತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 89
[ತೊಂಬತ್ತು :: c2, -L, -S2], 90
[ತೊಂಬತ್ತೊಂದು :: c2, -L, -S2], 91
[ತೊಂಬತ್ತೆರಡು :: c2, -L, -S2], 92
[ತೊಂಬತ್ತೈದು :: c2, -L, -S2], 95
[ತೊಂಬತ್ತಾರು :: c2, -L, -S2], 96
[ತೊಂಬತ್ತೇಳು :: c2, -L, -S2], 97
[ತೊಂಬತ್ತೆಂಟು :: c2, -L, -S2], 98
[ತೊಂಬತ್ತೊಂಬತ್ತು :: c2, -L, -S2], 99
[ :: =c1, c2, -L], λx.x
[ಎರಡು :: c1, -D, -B, -G, -P], 2
[ಐದು :: c1, -E, -B], 5
[ :: =c1, +M0, c2, -M], λx.x
[ :: =c1, +N0, c2, -N], λx.x
[ ಸಾವಿರ :: =c2, +M, c4], λx.'1000X'(x)
[ ಸಾವಿರದ  :: =c4P, =c4N, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +N, c4N], λx.x
[ :: =c1, +P, c4P], λx.x
[ ಸಾವಿರ  :: =c4R, =c4Q, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +Q, c4Q], λx.x
[ :: =c3, +R, c4R], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[ ನೂರ ಹದಿ :: =c2A, =c3J, c3], λxλy.'1X+55Y+55'(x,y)
[ :: =c1, +J, c3J], λx.x
[ ನೂರ ಇಪ್ಪತ್ತು :: =c1, +J, c3], λx.'0X+120'(x)
[ ನೂರ ಇಪ್ಪತ್ತ್  :: =c2B, =c3J, c3], λxλy.'1X+60Y+60'(x,y)
[ ನೂರ ಇಪ್ಪತ್ತ್ :: =c2C, =c3J, c3], λxλy.'1X+60Y+60'(x,y)
[ ನೂರು :: =cnix, =c1, c3, -R], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ ನೂರ  :: =c3L, =c1, c3, -R], λxλy.'1X+100Y'(x,y)
[ :: =c2, +L, c3L], λx.x
[ ನೂರ ಮೂವತ್ತ್ :: =c2D, =c1, c3], λxλy.'1X+100Y+30'(x,y)
[ ನೂರ ಮೂವತ್ತ್  :: =c2E, =c1, c3], λxλy.'1X+100Y+30'(x,y)
[ ನೂರ ಮೂವತ್ :: =c2F, =c1, c3], λxλy.'1X+100Y+30'(x,y)
[ ನೂರ ನಲವತ್ತ್  :: =c2G, =c1, c3], λxλy.'1X+100Y+40'(x,y)
[ ನೂರ ಐವತ್ತು :: =cnix, =c1, c3], λxλy.'1X+100Y+50'(x,y)
[ ನೂರ ಐವತ್ತ :: =c2H, =c1, c3], λxλy.'16X+100Y+5'(x,y)
[ ನೂರ ಐವತ್ತ್ :: =c2I, =c1, c3], λxλy.'13X+100Y+2'(x,y)
[ ನೂರ ಅರವತ್ತ್  :: =c2A, =c1, c3], λxλy.'1X+100Y+60'(x,y)
[ ನೂರ ಎಪ್ಪತ್ತ್  :: =c2A, =c1, c3], λxλy.'1X+100Y+70'(x,y)
[ ನೂರ ಎಂಬತ್ತ್  :: =c2A, =c1, c3], λxλy.'1X+100Y+80'(x,y)
[ ನೂರ ತೊಂಬತ್ತ  :: =c2A, =c1, c3], λxλy.'1X+100Y+90'(x,y)
[ :: =c2, +S2, c4], λx.x
[ಮೂವತ್ತ್ :: =c2D, c2, -S2], λx.'1X+30'(x)
[ :: =c1, +D, c2D], λx.x
[ಮೂವತ್ತ್  :: =c2E, c2, -S2], λx.'1X+30'(x)
[ :: =c1, +E, c2E], λx.x
[ಮೂವತ್ :: =c2F, c2, -S2], λx.'1X+30'(x)
[ :: =c1, +F, c2F], λx.x
[ನಲವತ್ತ್  :: =c2G, c2, -S2], λx.'1X+40'(x)
[ :: =c1, +G, c2G], λx.x
[ಐವತ್ತು :: c2, -S2], 50
[ಐವತ್ತ :: =c2H, c2, -S2], λx.'0X+53'(x)
[ :: =c1, +H, c2H], λx.x
[ಐವತ್ತ್ :: =c2I, c2, -S2], λx.'0X+54'(x)
[ :: =c1, +I, c2I], λx.x
[ಅರವತ್ತ್  :: =c2A, c2, -S2], λx.'1X+60'(x)
[ಎಪ್ಪತ್ತ್  :: =c2A, c2, -S2], λx.'1X+70'(x)
[ಎಂಬತ್ತ್  :: =c2A, c2, -S2], λx.'1X+80'(x)
[ತೊಂಬತ್ತ  :: =c2A, c2, -S2], λx.'1X+90'(x)
[ :: =c1, +D, c1], λx.x
[ :: =c2, +L, c2], λx.x
[ :: =c2, +M, c2], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +R, c3], λx.x
[ :: =c2, +N, c2], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +Q, c2], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +Q0, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +P, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +M0, c1], λx.x
[ :: =c1, +Q0, +M0, +N0, +D, +B, c1, -Q0], λx.x
[ :: =c2, +Q, +L, +M, +S2, c2, -Q], λx.x
[ :: =c1, +H, +E, +A, +B, +G, c1, -H], λx.x
[ :: =c2, +Q, +L, +M, +N, +S2, c2, -Q], λx.x
[ :: =c2, +L, +M, +N, +S2, c2, -L], λx.x
[ :: =c1, +D, +B, +G, +P, c1, -D], λx.x
[ :: =c2, +L, +S2, c2, -L], λx.x
[ :: =c1, +G, +P, c1, -G], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +C, +F, c1, -C], λx.x
[ :: =c1, +N0, +F, c1, -N0], λx.x
[ :: =c1, +D, +B, c1, -D], λx.x
[ :: =c2, +N, +S2, c2, -N], λx.x
[ :: =c1, +A, +B, +G, c1, -A], λx.x
[ :: =c1, +I, +E, +A, +B, +G, c1, -I], λx.x
[ :: =c1, +Q0, +M0, +N0, +F, c1, -Q0], λx.x
[ :: =c1, +B, +G, +P, c1, -B], λx.x
[ :: =c1, +J, +Q0, +M0, +N0, +D, +B, c1, -J], λx.x
[ :: =c1, +C, +Q0, +M0, +N0, +F, c1, -C], λx.x
[ :: =c1, +C, +E, c1, -C], λx.x
[ :: =c1, +N0, +D, +B, c1, -N0], λx.x
[ :: =c1, +E, +A, +B, +G, c1, -E], λx.x
[ :: =c2, +L, +M, +S2, c2, -L], λx.x
[ :: =c1, +P, +F, c1, -P], λx.x
[ :: =c2, +M, +S2, c2, -M], λx.x
[ :: =c1, +M0, +N0, +D, +B, c1, -M0], λx.x
[ :: =c1, +B, +G, c1, -B], λx.x
[ :: =c2, +M, +N, +S2, c2, -M], λx.x
[ :: =c1, +M0, +N0, +F, c1, -M0], λx.x
[ :: =c1, +C, +P, +F, c1, -C], λx.x


Learning ko

Learned 1019 words in ko and structured them in 25 functions.
It took 41 samples to learn those.
Those are:
일 is 1
이 is 2
삼 is 3
사 is 4
오 is 5
육 is 6
칠 is 7
팔 is 8
구 is 9
십 is 10
Function 십_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
Function _십 maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _십_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
백 is 100
Function 백_ maps {1,2,3,4,5,6,7,8,9,10,십_,_십,_십_} by x -> 1*x+100
Function _백 maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _백_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,십_,_십,_십_} by (x0,x1) -> 100*x0+1*x1
천 is 1000
Function 천_ maps {2,6,100,_백,_백_} by x -> 1*x+1000
Function _천 maps {7} by x -> 0*x+7000
Function _천_ maps {7}x{2,6,100,_백,_백_} by (x0,x1) -> 980*x0+1*x1+140
만 is 10000
Function 만 _ maps {_천,_천_} by x -> 1*x+10000
Function _만 maps {2} by x -> 0*x+20000
Function _만 _ maps {2}x{_천,_천_} by (x0,x1) -> 8000*x0+1*x1+4000

MG:
[이 :: c1, -G, -B, -D0], 2
[칠 :: c1, -E, -B], 7
[ :: =c5, cFin], λx.x
[십 :: c2, -S3], 10
[십 :: =c1, c2, -S3], λx.'1X+10'(x)
[십 :: =c1, +B, c2, -S3], λx.'10X'(x)
[십 :: =c1, =c2B, c2, -S3], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[일 :: c1], 1
[삼 :: c1, -B], 3
[사 :: c1, -B], 4
[오 :: c1, -B], 5
[육 :: c1, -B, -D0], 6
[팔 :: c1, -B], 8
[구 :: c1, -B], 9
[천 :: =c1, +E, c4, -F], λx.'0X+7000'(x)
[천 :: =c4D, =c4E, c4, -F], λxλy.'1X+980Y+140'(x,y)
[ :: =c1, +E, c4E], λx.x
[ :: =c3, +D, c4D], λx.x
[백 :: c3, -D, -S2], 100
[백 :: =c1, +B, c3, -D, -S2], λx.'100X'(x)
[백 :: =c2, =c2B, c3, -D, -S2], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D0, c3, -D], λx.x
[만 :: c5], 10000
[만  :: =c5F, c5], λx.'1X+10000'(x)
[ :: =c4, +F, c5F], λx.x
[만 :: =c1, +G, c5], λx.'0X+20000'(x)
[만  :: =c5F, =c5G, c5], λxλy.'1X+8000Y+4000'(x,y)
[ :: =c1, +G, c5G], λx.x
[ :: =c4, c5], λx.x
[천 :: c4], 1000
[천 :: =c4D, c4], λx.'1X+1000'(x)
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[백 :: =c2, c3, -S2], λx.'1X+100'(x)
[ :: =c2, +S3, c5], λx.x
[ :: =c4, +F, c4], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +D, +S2, c3, -D], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +G, +B, +D0, c1, -G], λx.x
[ :: =c1, +B, +D0, c1, -B], λx.x


Learning lt
Learned 1019 words in lt and structured them in 30 functions.
It took 47 samples to learn those.
Those are:
vienas is 1
du is 2
trys is 3
keturi is 4
penki is 5
šeši is 6
septyni is 7
aštuoni is 8
devyni is 9
dešimt is 10
vienuolika is 11
dvylika is 12
trylika is 13
Function _olika maps {4,5,6,7,8,9} by x -> 1*x+10
dvidešimt is 20
Function dvidešimt _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trisdešimt is 30
Function trisdešimt _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
Function _asdešimt maps {4,5,6,7,8,9} by x -> 10*x+0
Function _asdešimt _ maps {4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ šimtas maps {1} by x -> 0*x+100
Function _ šimtas _ maps {1}x{1,2,3,4,5,6,7,8,9,10,11,12,13,_olika,20,dvidešimt _,30,trisdešimt _,_asdešimt,_asdešimt _} by (x0,x1) -> 50*x0+1*x1+50
Function _ šimtai maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ šimtai _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,_olika,20,dvidešimt _,30,trisdešimt _,_asdešimt,_asdešimt _} by (x0,x1) -> 100*x0+1*x1
Function _ tūkstantis maps {1} by x -> 0*x+1000
Function _ tūkstantis _ maps {1}x{2,6,_ šimtas,_ šimtai,_ šimtai _} by (x0,x1) -> 500*x0+1*x1+500
Function _ tūkstančių maps {10,_olika,20} by x -> 1000*x+0
Function _ tūkstančių _ maps {_olika}x{_ šimtai _} by (x0,x1) -> 0*x0+0*x1+17206
Function _ tūkstančiai maps {7,dvidešimt _} by x -> 1000*x+0
Function _ tūkstančiai _ maps {7,dvidešimt _}x{2,6,_ šimtas,_ šimtai,_ šimtai _} by (x0,x1) -> 1000*x0+1*x1

MG:
[vienas :: c1, -C], 1
[olika :: =c1, +A, c2, -H, -G, -D, -S2], λx.'1X+10'(x)
[ šimtai  :: =c3D, =c3E, c3, -I, -F, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c2, +D, c3D], λx.x
[ :: =c4, cFin], λx.x
[du :: c1, -E, -F0], 2
[trys :: c1, -E], 3
[keturi :: c1, -E, -A], 4
[penki :: c1, -E, -A], 5
[šeši :: c1, -E, -F0, -A], 6
[septyni :: c1, -E, -J0, -A], 7
[aštuoni :: c1, -E, -A], 8
[devyni :: c1, -E, -A], 9
[dvidešimt  :: =c1, c2, -J, -D, -S2], λx.'1X+20'(x)
[ :: =c1, +J0, c2, -J], λx.x
[dešimt :: c2, -G, -D, -S2], 10
[dvidešimt :: c2, -G, -D, -S2], 20
[ šimtas :: =c1, +C, c3, -F, -S1], λx.'0X+100'(x)
[ šimtai :: =c1, +E, c3, -F, -S1], λx.'100X'(x)
[ :: =c1, +F0, c3, -F], λx.x
[vienuolika :: c2, -D, -S2], 11
[dvylika :: c2, -D, -S2], 12
[trylika :: c2, -D, -S2], 13
[trisdešimt :: c2, -D, -S2], 30
[trisdešimt  :: =c1, c2, -D, -S2], λx.'1X+30'(x)
[asdešimt :: =c1, +A, c2, -D, -S2], λx.'10X'(x)
[asdešimt  :: =c1, =c2A, c2, -D, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +A, c2A], λx.x
[ :: =c1, c2, -D], λx.x
[ tūkstantis :: =c1, +C, c4], λx.'0X+1000'(x)
[ tūkstantis  :: =c4F, =c3C, c4], λxλy.'1X+500Y+500'(x,y)
[ :: =c3, +F, c4F], λx.x
[ tūkstančių :: =c2, +G, c4], λx.'1000X'(x)
[ tūkstančių  :: =c4I, =c4H, c4], λxλy.'0X+0Y+17206'(x,y)
[ :: =c2, +H, c4H], λx.x
[ :: =c3, +I, c4I], λx.x
[ tūkstančiai :: =c2, +J, c4], λx.'1000X'(x)
[ tūkstančiai  :: =c4F, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ šimtas  :: =c3D, =c3C, c3, -S1], λxλy.'1X+50Y+50'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +A, c1, -E], λx.x
[ :: =c1, +F0, +A, c1, -F0], λx.x
[ :: =c2, +H, +G, +D, +S2, c2, -H], λx.x
[ :: =c3, +F, +S1, c3, -F], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +E, +F0, +A, c1, -E], λx.x
[ :: =c1, +E, +F0, c1, -E], λx.x
[ :: =c1, +J0, +A, c1, -J0], λx.x
[ :: =c1, +E, +J0, +A, c1, -E], λx.x
[ :: =c3, +I, +F, +S1, c3, -I], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x
[ :: =c2, +J, +D, +S2, c2, -J], λx.x


Learning lv
Learned 1019 words in lv and structured them in 44 functions.
It took 65 samples to learn those.
Those are:
viens is 1
divi is 2
trīs is 3
četri is 4
pieci is 5
seši is 6
septiņi is 7
astoņi is 8
deviņi is 9
desmit is 10
vienpadsmit is 11
divpadsmit is 12
Function _padsmit maps {3} by x -> 0*x+13
četrpadsmit is 14
piecpadsmit is 15
sešpadsmit is 16
septiņpadsmit is 17
astoņpadsmit is 18
deviņpadsmit is 19
divdesmit is 20
Function divdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _desmit maps {3} by x -> 0*x+30
Function _desmit _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
četrdesmit is 40
Function četrdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
piecdesmit is 50
Function piecdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sešdesmit is 60
Function sešdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
septiņdesmit is 70
Function septiņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
astoņdesmit is 80
Function astoņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
deviņdesmit is 90
Function deviņdesmit _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
simts is 100
Function simtu _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+100
Function simts _ maps {10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by x -> 1*x+100
Function _ simti maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ simti _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_padsmit,14,15,16,17,18,19,20,divdesmit _,_desmit,_desmit _,40,četrdesmit _,50,piecdesmit _,60,sešdesmit _,70,septiņdesmit _,80,astoņdesmit _,90,deviņdesmit _} by (x0,x1) -> 100*x0+1*x1
tūkstotis is 1000
Function tūkstotis _ maps {2,6,100,_ simti,_ simti _} by x -> 1*x+1000
Function _ tūkstoši maps {7,10,17,20,divdesmit _} by x -> 1000*x+0
Function _ tūkstoši _ maps {7,17,divdesmit _}x{2,6,100,_ simti,_ simti _} by (x0,x1) -> 1000*x0+1*x1

MG:
[trīs :: c1, -A, -D], 3
[ :: =c4, cFin], λx.x
[desmit :: c2, -C, -G, -S2], 10
[vienpadsmit :: c2, -C, -S2], 11
[divpadsmit :: c2, -C, -S2], 12
[padsmit :: =c1, +A, c2, -C, -S2], λx.'0X+13'(x)
[četrpadsmit :: c2, -C, -S2], 14
[piecpadsmit :: c2, -C, -S2], 15
[sešpadsmit :: c2, -C, -S2], 16
[septiņpadsmit :: c2, -C, -H, -G, -S2], 17
[astoņpadsmit :: c2, -C, -S2], 18
[deviņpadsmit :: c2, -C, -S2], 19
[divdesmit :: c2, -C, -G, -S2], 20
[divdesmit  :: =c1, c2, -C, -H, -G, -S2], λx.'1X+20'(x)
[desmit :: =c1, +A, c2, -C, -S2], λx.'0X+30'(x)
[desmit  :: =c1, =c2A, c2, -C, -S2], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +A, c2A], λx.x
[četrdesmit :: c2, -C, -S2], 40
[četrdesmit  :: =c1, c2, -C, -S2], λx.'1X+40'(x)
[piecdesmit :: c2, -C, -S2], 50
[piecdesmit  :: =c1, c2, -C, -S2], λx.'1X+50'(x)
[sešdesmit :: c2, -C, -S2], 60
[sešdesmit  :: =c1, c2, -C, -S2], λx.'1X+60'(x)
[septiņdesmit :: c2, -C, -S2], 70
[septiņdesmit  :: =c1, c2, -C, -S2], λx.'1X+70'(x)
[astoņdesmit :: c2, -C, -S2], 80
[astoņdesmit  :: =c1, c2, -C, -S2], λx.'1X+80'(x)
[deviņdesmit :: c2, -C, -S2], 90
[deviņdesmit  :: =c1, c2, -C, -S2], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[viens :: c1], 1
[divi :: c1, -D, -F0], 2
[četri :: c1, -D], 4
[pieci :: c1, -D], 5
[seši :: c1, -D, -F0], 6
[septiņi :: c1, -H0, -G0, -D], 7
[astoņi :: c1, -D], 8
[deviņi :: c1, -D], 9
[ :: =c1, +H0, c2, -H], λx.x
[ :: =c1, +G0, c2, -G], λx.x
[tūkstotis :: c4], 1000
[tūkstotis  :: =c4F, c4], λx.'1X+1000'(x)
[ :: =c3, +F, c4F], λx.x
[ tūkstoši :: =c2, +G, c4], λx.'1000X'(x)
[ tūkstoši  :: =c4F, =c4H, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +H, c4H], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[simts :: c3, -S1, -F], 100
[simtu  :: =c1, c3, -S1], λx.'1X+100'(x)
[simts  :: =c3C, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +C, c3C], λx.x
[ simti :: =c1, +D, c3, -S1, -F], λx.'100X'(x)
[ simti  :: =c2, =c3D, c3, -S1, -F], λxλy.'1X+100Y'(x,y)
[ :: =c1, +D, c3D], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c3, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +H, +G, +S2, c2, -H], λx.x
[ :: =c2, +C, +H, +G, +S2, c2, -C], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c1, +H0, +G0, +D, c1, -H0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +C, +G, +S2, c2, -C], λx.x
[ :: =c1, +G0, +D, c1, -G0], λx.x
[ :: =c3, +S1, +F, c3, -S1], λx.x
[ :: =c1, +D, +F0, c1, -D], λx.x
[ :: =c2, +C, +S2, c2, -C], λx.x


Learning no

Learned 1019 words in no and structured them in 34 functions.
It took 59 samples to learn those.
Those are:
en is 1
to is 2
tre is 3
fire is 4
fem is 5
seks is 6
syv is 7
åtte is 8
ni is 9
ti is 10
elleve is 11
Function _lv maps {2} by x -> 0*x+12
Function fjort_ maps {1} by x -> 0*x+14
Function _t_ maps {5,6}x{1} by (x0,x1) -> 1*x0+5*x1+5
Function sytt_ maps {1} by x -> 0*x+17
Function att_ maps {1} by x -> 0*x+18
Function _tt_ maps {3,9}x{1} by (x0,x1) -> 1*x0+5*x1+5
tjue is 20
Function tjue-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
førti is 40
Function førti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _ti maps {5,6} by x -> 10*x+0
Function _ti-_ maps {5,6}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sytti is 70
Function sytti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
åtti is 80
Function åtti-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _tti maps {3,9} by x -> 10*x+0
Function _tti-_ maps {3,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hundre maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundre og _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_lv,fjort_,_t_,sytt_,att_,_tt_,20,tjue-_,40,førti-_,_ti,_ti-_,70,sytti-_,80,åtti-_,_tti,_tti-_} by (x0,x1) -> 100*x0+1*x1
Function _ tus_ maps {1,7,10,sytt_,20,tjue-_}x{1} by (x0,x1) -> 1000*x0+0*x1
Function _ tus_ og _ maps {1,7,tjue-_}x{1}x{2,6} by (x0,x1,x2) -> 1000*x0+0*x1+1*x2
Function _ tus_, _ maps {1,7,sytt_,tjue-_}x{1}x{_ hundre,_ hundre og _} by (x0,x1,x2) -> 1000*x0+0*x1+1*x2

MG:
[en :: c1, -B, -J0, -H0, -G0], 1
[to :: c1, -A, -I], 2
[ :: =c4, cFin], λx.x
[tre :: c1, -D], 3
[fire :: c1], 4
[fem :: c1, -C], 5
[seks :: c1, -C, -I], 6
[syv :: c1, -J0, -H0, -G0], 7
[åtte :: c1], 8
[ni :: c1, -D], 9
[sytt :: =c2B, c2, -J, -G, -S2, -F], λx.'0X+17'(x)
[ :: =c1, +B, c2B], λx.x
[tjue- :: =c1, c2, -J, -H, -G, -S2, -F], λx.'1X+20'(x)
[ :: =c1, +J0, c2, -J], λx.x
[ :: =c1, +H0, c2, -H], λx.x
[ti :: c2, -G, -S2, -F], 10
[tjue :: c2, -G, -S2, -F], 20
[ :: =c1, +G0, c2, -G], λx.x
[ hundre :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hundre og  :: =c3F, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c2, +F, c3F], λx.x
[ tus :: =c2B, =c4G, c4], λxλy.'0X+1000Y'(x,y)
[ :: =c2, +G, c4G], λx.x
[ tus :: =c4*, =c4H, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +H, c4H], λx.x
[ og  :: =c4*I, =c2B, c4*], λxλy.'1X+0Y'(x,y)
[ :: =c1, +I, c4*I], λx.x
[ tus :: =c4**, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[,  :: =c3, =c2B, c4**], λxλy.'1X+0Y'(x,y)
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[elleve :: c2, -S2, -F], 11
[lv :: =c1, +A, c2, -S2, -F], λx.'0X+12'(x)
[fjort :: =c2B, c2, -S2, -F], λx.'0X+14'(x)
[t :: =c2B, =c2C, c2, -S2, -F], λxλy.'5X+1Y+5'(x,y)
[ :: =c1, +C, c2C], λx.x
[att :: =c2B, c2, -S2, -F], λx.'0X+18'(x)
[tt :: =c2B, =c2D, c2, -S2, -F], λxλy.'5X+1Y+5'(x,y)
[ :: =c1, +D, c2D], λx.x
[førti :: c2, -S2, -F], 40
[førti- :: =c1, c2, -S2, -F], λx.'1X+40'(x)
[ti :: =c1, +C, c2, -S2, -F], λx.'10X'(x)
[ti- :: =c1, =c2C, c2, -S2, -F], λxλy.'1X+10Y'(x,y)
[sytti :: c2, -S2, -F], 70
[sytti- :: =c1, c2, -S2, -F], λx.'1X+70'(x)
[åtti :: c2, -S2, -F], 80
[åtti- :: =c1, c2, -S2, -F], λx.'1X+80'(x)
[tti :: =c1, +D, c2, -S2, -F], λx.'10X'(x)
[tti- :: =c1, =c2D, c2, -S2, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +J0, +H0, +G0, c1, -J0], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +B, +J0, +H0, +G0, c1, -B], λx.x
[ :: =c2, +J, +G, +S2, +F, c2, -J], λx.x
[ :: =c2, +J, +H, +G, +S2, +F, c2, -J], λx.x
[ :: =c1, +H0, +G0, c1, -H0], λx.x
[ :: =c1, +C, +I, c1, -C], λx.x
[ :: =c2, +G, +S2, +F, c2, -G], λx.x
[ :: =c1, +A, +I, c1, -A], λx.x
[ :: =c2, +H, +G, +S2, +F, c2, -H], λx.x


Learning pl
Learned 1019 words in pl and structured them in 38 functions.
It took 63 samples to learn those.
Those are:
jeden is 1
dwa is 2
trzy is 3
cztery is 4
pięć is 5
sześć is 6
siedem is 7
osiem is 8
dziewięć is 9
dziesięć is 10
Function _aście maps {1} by x -> 0*x+11
Function _naście maps {2,3,7,8} by x -> 1*x+10
czternaście is 14
piętnaście is 15
szesnaście is 16
dziewiętnaście is 19
Function _dzieścia maps {2} by x -> 0*x+20
Function _dzieścia _ maps {2}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 8*x0+1*x1+4
Function _dzieści maps {3} by x -> 0*x+30
Function _dzieści _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
czterdzieści is 40
Function czterdzieści _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _dziesiąt maps {5,6,7,8} by x -> 10*x+0
Function _dziesiąt _ maps {5,6,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _dzisiąt maps {9} by x -> 0*x+90
Function _dzisiąt _ maps {9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _,_dzisiąt,_dzisiąt _} by x -> 1*x+100
dwieście is 200
Function dwieście _ maps {1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _,_dzisiąt,_dzisiąt _} by x -> 1*x+200
Function _sta maps {3,4} by x -> 100*x+0
Function _sta _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _,_dzisiąt,_dzisiąt _} by (x0,x1) -> 100*x0+1*x1
Function _set maps {5,6,7,8,9} by x -> 100*x+0
Function _set _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_aście,_naście,14,15,16,19,_dzieścia,_dzieścia _,_dzieści,_dzieści _,40,czterdzieści _,_dziesiąt,_dziesiąt _,_dzisiąt,_dzisiąt _} by (x0,x1) -> 100*x0+1*x1
tysiąc is 1000
Function tysiąc _ maps {2,6,100,200,dwieście _} by x -> 1*x+1000
Function _ tysięcy maps {7,10,_dzieścia,_naście,_dzieścia _} by x -> 1000*x+0
Function _ tysięcy _ maps {7,_naście,_dzieścia _}x{2,6,100,200,dwieście _} by (x0,x1) -> 1000*x0+1*x1

MG:
[jeden :: c1, -A], 1
[dwa :: c1, -C, -B, -K0], 2
[trzy :: c1, -E, -B, -I], 3
[dziewięć :: c1, -G, -J], 9
[ :: =c4, cFin], λx.x
[pięć :: c1, -J, -F], 5
[sześć :: c1, -J, -K0, -F], 6
[siedem :: c1, -J, -B, -M0, -F, -L0], 7
[osiem :: c1, -J, -B, -F], 8
[dziesięć :: c2, -L, -S2], 10
[aście :: =c1, +A, c2, -S2], λx.'0X+11'(x)
[naście :: =c1, +B, c2, -M, -L, -S2], λx.'1X+10'(x)
[czternaście :: c2, -S2], 14
[piętnaście :: c2, -S2], 15
[szesnaście :: c2, -S2], 16
[dziewiętnaście :: c2, -S2], 19
[dzieścia :: =c1, +C, c2, -L, -S2], λx.'0X+20'(x)
[dzieścia  :: =c1, =c2C, c2, -M, -L, -S2], λxλy.'1X+8Y+4'(x,y)
[ :: =c1, +C, c2C], λx.x
[dzieści :: =c1, +E, c2, -S2], λx.'0X+30'(x)
[dzieści  :: =c1, =c2E, c2, -S2], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +E, c2E], λx.x
[czterdzieści :: c2, -S2], 40
[czterdzieści  :: =c1, c2, -S2], λx.'1X+40'(x)
[dziesiąt :: =c1, +F, c2, -S2], λx.'10X'(x)
[dziesiąt  :: =c1, =c2F, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +F, c2F], λx.x
[dzisiąt :: =c1, +G, c2, -S2], λx.'0X+90'(x)
[dzisiąt  :: =c1, =c2G, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +G, c2G], λx.x
[ :: =c1, c2], λx.x
[cztery :: c1, -I], 4
[sto :: c3, -K, -S1], 100
[dwieście :: c3, -K, -S1], 200
[dwieście  :: =c2, c3, -K, -S1], λx.'1X+200'(x)
[ :: =c1, +K0, c3, -K], λx.x
[ :: =c1, +M0, c2, -M], λx.x
[ :: =c1, +L0, c2, -L], λx.x
[sta :: =c1, +I, c4], λx.'100X'(x)
[sta  :: =c2, =c4I, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +I, c4I], λx.x
[set :: =c1, +J, c4], λx.'100X'(x)
[set  :: =c2, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[tysiąc :: c4], 1000
[tysiąc  :: =c4K, c4], λx.'1X+1000'(x)
[ :: =c3, +K, c4K], λx.x
[ tysięcy :: =c2, +L, c4], λx.'1000X'(x)
[ tysięcy  :: =c4K, =c4M, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +M, c4M], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sto  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +L0, c1], λx.x
[ :: =c2, +L, c2], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +I, c1], λx.x
[ :: =c1, +M0, c1], λx.x
[ :: =c2, +M, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +F, +L0, c1, -F], λx.x
[ :: =c2, +M, +L, +S2, c2, -M], λx.x
[ :: =c1, +E, +B, +I, c1, -E], λx.x
[ :: =c2, +L, +S2, c2, -L], λx.x
[ :: =c1, +C, +B, +K0, c1, -C], λx.x
[ :: =c1, +J, +K0, +F, c1, -J], λx.x
[ :: =c3, +K, +S1, c3, -K], λx.x
[ :: =c1, +J, +B, +F, c1, -J], λx.x
[ :: =c1, +J, +B, +M0, +F, +L0, c1, -J], λx.x
[ :: =c1, +M0, +F, +L0, c1, -M0], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +I, c1, -B], λx.x
[ :: =c1, +G, +J, c1, -G], λx.x
[ :: =c1, +K0, +F, c1, -K0], λx.x
[ :: =c1, +B, +M0, +F, +L0, c1, -B], λx.x
[ :: =c1, +B, +K0, c1, -B], λx.x
[ :: =c1, +J, +F, c1, -J], λx.x


Learning pt

Learned 1019 words in pt and structured them in 53 functions.
It took 218 samples to learn those.
Those are:
um is 1
dois is 2
três is 3
quatro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
onze is 11
doze is 12
treze is 13
catorze is 14
quinze is 15
Function dezas_ maps {6,7} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
Function deza_ maps {9} by x -> 0*x+19
vinte is 20
Function vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
quarenta is 40
Function quarenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquenta is 50
Function cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sessenta is 60
Function sessenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta e _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cem is 100
cento e vinte is 120
Function cento e vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
cento e cinquenta is 150
Function cento e cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function cento e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,80,dezas_,dez_,deza_,trinta e _,quarenta e _,sessenta e _,_nta,_nta e _,oitenta e _} by x -> 1*x+100
duzentos is 200
Function duzentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+200
Function _ntos maps {13} by x -> 0*x+300
Function _ntos e vinte e cinco maps {13} by x -> 0*x+325
Function _ntos e _ maps {13}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,_nta,_nta e _,80,oitenta e _} by (x0,x1) -> 23*x0+1*x1+1
quinhentos is 500
Function quinhentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+500
Function _centos maps {4,6,7,8,9} by x -> 100*x+0
Function _centos e _ maps {4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezas_,dez_,deza_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by (x0,x1) -> 100*x0+1*x1
mil is 1000
Function mil e _ maps {2,6,100,200} by x -> 1*x+1000
Function mil _ maps {duzentos e _} by x -> 0*x+1206
Function _ mil maps {7,10,20,dezas_,vinte e _} by x -> 1000*x+0
Function _ mil e _ maps {7,vinte e _}x{2,6,100,200} by (x0,x1) -> 1000*x0+1*x1
Function _ mil _ maps {7,dezas_,vinte e _}x{duzentos e _} by (x0,x1) -> 1000*x0+1*x1

MG:
[oito :: c1, -B, -J], 8
[nove :: c1, -C, -E, -J], 9
[treze :: c2, -H, -G, -I, -S2, -F], 13
[duzentos e  :: =c3G, c3, -L, -S1], λx.'1X+200'(x)
[ :: =c2, +G, c3G], λx.x
[ :: =c4, cFin], λx.x
[sete :: c1, -E, -N0, -J, -M0, -A, -P0], 7
[vinte e  :: =c1, c2, -N, -G, -I, -M, -S2, -P], λx.'1X+20'(x)
[ :: =c1, +N0, c2, -N], λx.x
[quatro :: c1, -J], 4
[seis :: c1, -J, -K0, -A], 6
[dez :: c2, -G, -I, -M, -S2, -F], 10
[onze :: c2, -G, -I, -S2, -F], 11
[doze :: c2, -G, -I, -S2, -F], 12
[catorze :: c2, -G, -I, -S2, -F], 14
[quinze :: c2, -G, -I, -S2, -F], 15
[dezas :: =c2A, c2, -G, -I, -M, -S2, -P, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -G, -I, -S2, -F], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[deza :: =c2C, c2, -G, -I, -S2, -F], λx.'0X+19'(x)
[ :: =c1, +C, c2C], λx.x
[vinte :: c2, -G, -I, -M, -S2], 20
[trinta :: c2, -G, -I, -S2, -F], 30
[trinta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+30'(x)
[quarenta :: c2, -G, -I, -S2, -F], 40
[quarenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+40'(x)
[cinquenta :: c2, -G, -I, -S2], 50
[cinquenta e  :: =c1, c2, -G, -I, -S2], λx.'1X+50'(x)
[sessenta :: c2, -G, -I, -S2, -F], 60
[sessenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+60'(x)
[oitenta :: c2, -G, -I, -S2, -F], 80
[oitenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+80'(x)
[nta :: =c1, +E, c2, -G, -I, -S2, -F], λx.'10X'(x)
[nta e  :: =c1, =c2E, c2, -G, -I, -S2, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2, -G], λx.x
[um :: c1], 1
[dois :: c1, -K0], 2
[três :: c1], 3
[cinco :: c1], 5
[ :: =c1, c2, -I], λx.x
[cem :: c3, -K, -S1], 100
[duzentos :: c3, -K, -S1], 200
[ :: =c1, +K0, c3, -K], λx.x
[ :: =c1, +M0, c2, -M], λx.x
[ntos :: =c2, +H, c4], λx.'0X+300'(x)
[ntos e vinte e cinco :: =c2, +H, c4], λx.'0X+325'(x)
[ntos e  :: =c4I, =c4H, c4], λxλy.'1X+23Y+1'(x,y)
[ :: =c2, +H, c4H], λx.x
[ :: =c2, +I, c4I], λx.x
[quinhentos :: c4], 500
[quinhentos e  :: =c3G, c4], λx.'1X+500'(x)
[centos :: =c1, +J, c4], λx.'100X'(x)
[centos e  :: =c3G, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[mil :: c4], 1000
[mil e  :: =c4K, c4], λx.'1X+1000'(x)
[ :: =c3, +K, c4K], λx.x
[mil  :: =c4L, c4], λx.'0X+1206'(x)
[ :: =c3, +L, c4L], λx.x
[ mil :: =c2, +M, c4], λx.'1000X'(x)
[ mil e  :: =c4K, =c4N, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +N, c4N], λx.x
[ mil  :: =c4L, =c4P, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +P, c4P], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[cento e vinte :: c3, -S1], 120
[cento e vinte e  :: =c1, c3, -S1], λx.'1X+120'(x)
[cento e cinquenta :: c3, -S1], 150
[cento e cinquenta e  :: =c1, c3, -S1], λx.'1X+150'(x)
[cento e  :: =c3F, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +P0, c2, -P], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c3, +L, c3], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +M, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c2, +N, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c2, +P, c2], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c1, +P0, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +M0, c1], λx.x
[ :: =c2, +G, +I, +M, +S2, +F, c2, -G], λx.x
[ :: =c2, +G, +I, +M, +S2, c2, -G], λx.x
[ :: =c1, +K0, +A, c1, -K0], λx.x
[ :: =c2, +M, +S2, +F, c2, -M], λx.x
[ :: =c2, +I, +M, +S2, +P, +F, c2, -I], λx.x
[ :: =c2, +S2, +P, c2, -S2], λx.x
[ :: =c2, +I, +M, +S2, +F, c2, -I], λx.x
[ :: =c2, +S2, +P, +F, c2, -S2], λx.x
[ :: =c1, +C, +E, +J, c1, -C], λx.x
[ :: =c1, +J, +M0, +A, +P0, c1, -J], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +G, +I, +M, +S2, +P, c2, -G], λx.x
[ :: =c1, +A, +P0, c1, -A], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c2, +G, +I, +S2, c2, -G], λx.x
[ :: =c2, +G, +I, +M, +S2, +P, +F, c2, -G], λx.x
[ :: =c3, +K, +S1, c3, -K], λx.x
[ :: =c2, +I, +M, +S2, +P, c2, -I], λx.x
[ :: =c2, +P, +F, c2, -P], λx.x
[ :: =c2, +M, +S2, +P, +F, c2, -M], λx.x
[ :: =c1, +J, +K0, +A, c1, -J], λx.x
[ :: =c2, +N, +G, +I, +M, +S2, +P, c2, -N], λx.x
[ :: =c2, +G, +I, +S2, +F, c2, -G], λx.x
[ :: =c1, +M0, +A, +P0, c1, -M0], λx.x
[ :: =c2, +H, +G, +I, +S2, +F, c2, -H], λx.x
[ :: =c2, +M, +S2, c2, -M], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c3, +L, +S1, c3, -L], λx.x
[ :: =c2, +I, +M, +S2, c2, -I], λx.x
[ :: =c1, +E, +N0, +J, +M0, +A, +P0, c1, -E], λx.x
[ :: =c1, +N0, +J, +M0, +A, +P0, c1, -N0], λx.x
[ :: =c1, +E, +J, c1, -E], λx.x
[ :: =c2, +M, +S2, +P, c2, -M], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning pt_BR
Learned 1019 words in pt_BR and structured them in 53 functions.
It took 220 samples to learn those.
Those are:
um is 1
dois is 2
três is 3
quatro is 4
cinco is 5
seis is 6
sete is 7
oito is 8
nove is 9
dez is 10
onze is 11
doze is 12
treze is 13
catorze is 14
quinze is 15
Function dezes_ maps {6,7} by x -> 1*x+10
Function dez_ maps {8} by x -> 0*x+18
Function deze_ maps {9} by x -> 0*x+19
vinte is 20
Function vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
trinta is 30
Function trinta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
quarenta is 40
Function quarenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cinquenta is 50
Function cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sessenta is 60
Function sessenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
oitenta is 80
Function oitenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
Function _nta maps {7,9} by x -> 10*x+0
Function _nta e _ maps {7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
cem is 100
cento e vinte is 120
Function cento e vinte e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+120
cento e cinquenta is 150
Function cento e cinquenta e _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+150
Function cento e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,60,80,dezes_,dez_,deze_,trinta e _,quarenta e _,sessenta e _,_nta,_nta e _,oitenta e _} by x -> 1*x+100
duzentos is 200
Function duzentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+200
Function _ntos maps {13} by x -> 0*x+300
Function _ntos e vinte e cinco maps {13} by x -> 0*x+325
Function _ntos e _ maps {13}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,_nta,_nta e _,80,oitenta e _} by (x0,x1) -> 23*x0+1*x1+1
quinhentos is 500
Function quinhentos e _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by x -> 1*x+500
Function _centos maps {4,6,7,8,9} by x -> 100*x+0
Function _centos e _ maps {4,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dezes_,dez_,deze_,20,vinte e _,30,trinta e _,40,quarenta e _,50,cinquenta e _,60,sessenta e _,80,oitenta e _,_nta,_nta e _} by (x0,x1) -> 100*x0+1*x1
mil is 1000
Function mil e _ maps {2,6,100} by x -> 1*x+1000
Function mil, _ maps {200,duzentos e _} by x -> 1*x+1000
Function _ mil maps {7,10,20,dezes_,vinte e _} by x -> 1000*x+0
Function _ mil e _ maps {7,vinte e _}x{2,6,100} by (x0,x1) -> 1000*x0+1*x1
Function _ mil, _ maps {7,dezes_,vinte e _}x{200,duzentos e _} by (x0,x1) -> 1000*x0+1*x1

MG:
[oito :: c1, -B, -J], 8
[nove :: c1, -C, -E, -J], 9
[treze :: c2, -H, -G, -I, -S2, -F], 13
[ :: =c4, cFin], λx.x
[sete :: c1, -E, -N0, -J, -M0, -A, -P0], 7
[vinte e  :: =c1, c2, -N, -G, -I, -M, -S2, -P], λx.'1X+20'(x)
[ :: =c1, +N0, c2, -N], λx.x
[quatro :: c1, -J], 4
[seis :: c1, -J, -K0, -A], 6
[dez :: c2, -G, -I, -M, -S2, -F], 10
[onze :: c2, -G, -I, -S2, -F], 11
[doze :: c2, -G, -I, -S2, -F], 12
[catorze :: c2, -G, -I, -S2, -F], 14
[quinze :: c2, -G, -I, -S2, -F], 15
[dezes :: =c2A, c2, -G, -I, -M, -S2, -P, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[dez :: =c2B, c2, -G, -I, -S2, -F], λx.'0X+18'(x)
[ :: =c1, +B, c2B], λx.x
[deze :: =c2C, c2, -G, -I, -S2, -F], λx.'0X+19'(x)
[ :: =c1, +C, c2C], λx.x
[vinte :: c2, -G, -I, -M, -S2], 20
[trinta :: c2, -G, -I, -S2, -F], 30
[trinta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+30'(x)
[quarenta :: c2, -G, -I, -S2, -F], 40
[quarenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+40'(x)
[cinquenta :: c2, -G, -I, -S2], 50
[cinquenta e  :: =c1, c2, -G, -I, -S2], λx.'1X+50'(x)
[sessenta :: c2, -G, -I, -S2, -F], 60
[sessenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+60'(x)
[oitenta :: c2, -G, -I, -S2, -F], 80
[oitenta e  :: =c1, c2, -G, -I, -S2, -F], λx.'1X+80'(x)
[nta :: =c1, +E, c2, -G, -I, -S2, -F], λx.'10X'(x)
[nta e  :: =c1, =c2E, c2, -G, -I, -S2, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +E, c2E], λx.x
[ :: =c1, c2, -G], λx.x
[um :: c1], 1
[dois :: c1, -K0], 2
[três :: c1], 3
[cinco :: c1], 5
[ :: =c1, c2, -I], λx.x
[cem :: c3, -K, -S1], 100
[ :: =c1, +K0, c3, -K], λx.x
[ :: =c1, +M0, c2, -M], λx.x
[duzentos :: c3, -L, -S1], 200
[duzentos e  :: =c3G, c3, -L, -S1], λx.'1X+200'(x)
[ :: =c2, +G, c3G], λx.x
[ntos :: =c2, +H, c4], λx.'0X+300'(x)
[ntos e vinte e cinco :: =c2, +H, c4], λx.'0X+325'(x)
[ntos e  :: =c4I, =c4H, c4], λxλy.'1X+23Y+1'(x,y)
[ :: =c2, +H, c4H], λx.x
[ :: =c2, +I, c4I], λx.x
[quinhentos :: c4], 500
[quinhentos e  :: =c3G, c4], λx.'1X+500'(x)
[centos :: =c1, +J, c4], λx.'100X'(x)
[centos e  :: =c3G, =c4J, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +J, c4J], λx.x
[mil :: c4], 1000
[mil e  :: =c4K, c4], λx.'1X+1000'(x)
[ :: =c3, +K, c4K], λx.x
[mil,  :: =c4L, c4], λx.'1X+1000'(x)
[ :: =c3, +L, c4L], λx.x
[ mil :: =c2, +M, c4], λx.'1000X'(x)
[ mil e  :: =c4K, =c4N, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +N, c4N], λx.x
[ mil,  :: =c4L, =c4P, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +P, c4P], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[cento e vinte :: c3, -S1], 120
[cento e vinte e  :: =c1, c3, -S1], λx.'1X+120'(x)
[cento e cinquenta :: c3, -S1], 150
[cento e cinquenta e  :: =c1, c3, -S1], λx.'1X+150'(x)
[cento e  :: =c3F, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +F, c3F], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +P0, c2, -P], λx.x
[ :: =c1, c2, -F], λx.x
[ :: =c3, +L, c3], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +M, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c2, +N, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c2, +P, c2], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +J, c1], λx.x
[ :: =c1, +N0, c1], λx.x
[ :: =c1, +P0, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +M0, c1], λx.x
[ :: =c2, +G, +I, +M, +S2, +F, c2, -G], λx.x
[ :: =c2, +G, +I, +M, +S2, c2, -G], λx.x
[ :: =c1, +K0, +A, c1, -K0], λx.x
[ :: =c2, +M, +S2, +F, c2, -M], λx.x
[ :: =c2, +I, +M, +S2, +P, +F, c2, -I], λx.x
[ :: =c2, +S2, +P, c2, -S2], λx.x
[ :: =c2, +I, +M, +S2, +F, c2, -I], λx.x
[ :: =c2, +S2, +P, +F, c2, -S2], λx.x
[ :: =c1, +C, +E, +J, c1, -C], λx.x
[ :: =c1, +J, +M0, +A, +P0, c1, -J], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c2, +G, +I, +M, +S2, +P, c2, -G], λx.x
[ :: =c1, +A, +P0, c1, -A], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c2, +G, +I, +S2, c2, -G], λx.x
[ :: =c2, +G, +I, +M, +S2, +P, +F, c2, -G], λx.x
[ :: =c3, +K, +S1, c3, -K], λx.x
[ :: =c2, +I, +M, +S2, +P, c2, -I], λx.x
[ :: =c2, +P, +F, c2, -P], λx.x
[ :: =c2, +M, +S2, +P, +F, c2, -M], λx.x
[ :: =c1, +J, +K0, +A, c1, -J], λx.x
[ :: =c2, +N, +G, +I, +M, +S2, +P, c2, -N], λx.x
[ :: =c2, +G, +I, +S2, +F, c2, -G], λx.x
[ :: =c1, +M0, +A, +P0, c1, -M0], λx.x
[ :: =c2, +H, +G, +I, +S2, +F, c2, -H], λx.x
[ :: =c2, +M, +S2, c2, -M], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c3, +L, +S1, c3, -L], λx.x
[ :: =c2, +I, +M, +S2, c2, -I], λx.x
[ :: =c1, +E, +N0, +J, +M0, +A, +P0, c1, -E], λx.x
[ :: =c1, +N0, +J, +M0, +A, +P0, c1, -N0], λx.x
[ :: =c1, +E, +J, c1, -E], λx.x
[ :: =c2, +M, +S2, +P, c2, -M], λx.x
[ :: =c1, +B, +J, c1, -B], λx.x


Learning sl

Learned 1019 words in sl and structured them in 27 functions.
It took 46 samples to learn those.
Those are:
ena is 1
dve is 2
tri is 3
štiri is 4
pet is 5
šest is 6
sedem is 7
osem is 8
devet is 9
deset is 10
Function _jst maps {1} by x -> 0*x+11
dvanajst is 12
Function _najst maps {3,4,5,6,7,8,9} by x -> 1*x+10
dvajset is 20
dvaindvajset is 22
Function _indvajset maps {1,3,4,5,6,7,8,9} by x -> 1*x+20
Function _deset maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _in_deset maps {1,3,4,5,6,7,8,9}x{3,4,5,6,7,8,9} by (x0,x1) -> 1*x0+10*x1
Function dvain__ maps {3,4,5,6,7,8,9}x{10} by (x0,x1) -> 10*x0+0*x1+2
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,_jst,12,_najst,20,22,_indvajset,_deset,_in_deset,dvain__} by x -> 1*x+100
Function _sto maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _sto _ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_jst,12,_najst,20,22,_indvajset,_deset,_in_deset,dvain__} by (x0,x1) -> 100*x0+1*x1
tisoč is 1000
Function tisoč _ maps {2,6,100,_sto,_sto _} by x -> 1*x+1000
Function _ tisoč maps {7,10,20,_najst,_indvajset} by x -> 1000*x+0
Function _ tisoč _ maps {7,_najst,_indvajset}x{2,6,100,_sto,_sto _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ena :: c1, -A, -C], 1
[deset :: c1, -D, -H0], 10
[ :: =c4, cFin], λx.x
[jst :: =c1, +A, c2, -S2], λx.'0X+11'(x)
[dvanajst :: c2, -S2], 12
[najst :: =c1, +B, c2, -H, -I, -S2], λx.'1X+10'(x)
[dvajset :: c2, -H, -S2], 20
[dvaindvajset :: c2, -S2], 22
[indvajset :: =c1, +C, c2, -H, -I, -S2], λx.'1X+20'(x)
[deset :: =c1, +B, c2, -S2], λx.'10X'(x)
[in :: =c2*, =c2C, c2, -S2], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[deset :: =c1, +B, c2*], λx.'10X'(x)
[dvain :: =c2**, c2, -S2], λx.'1X+2'(x)
[ :: =c2****D, =c2****B, c2**], λxλy.'0X+10Y'(x,y)
[ :: =c1, c2], λx.x
[dve :: c1, -G0, -F], 2
[tri :: c1, -C, -B, -F], 3
[štiri :: c1, -C, -B, -F], 4
[pet :: c1, -C, -B, -F], 5
[šest :: c1, -C, -G0, -B, -F], 6
[sedem :: c1, -C, -H0, -B, -I0, -F], 7
[osem :: c1, -C, -B, -F], 8
[devet :: c1, -C, -B, -F], 9
[ :: =c1, +H0, c2, -H], λx.x
[sto :: c3, -G, -S1], 100
[sto :: =c1, +F, c3, -G, -S1], λx.'100X'(x)
[sto  :: =c2, =c3F, c3, -G, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, +G0, c3, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[tisoč :: c4], 1000
[tisoč  :: =c4G, c4], λx.'1X+1000'(x)
[ :: =c3, +G, c4G], λx.x
[ tisoč :: =c2, +H, c4], λx.'1000X'(x)
[ tisoč  :: =c4G, =c4I, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sto  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[deset :: =c1, +B, c2***], λx.'10X'(x)
[ :: =c2****D, =c2****B, c2****], λxλy.'0X+10Y'(x,y)
[ :: =c1, +B, c2****B], λx.x
[ :: =c1, +D, c2****D], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +G, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +C, +B, +F, c1, -C], λx.x
[ :: =c3, +G, +S1, c3, -G], λx.x
[ :: =c1, +C, +G0, +B, +F, c1, -C], λx.x
[ :: =c1, +C, +H0, +B, +I0, +F, c1, -C], λx.x
[ :: =c1, +D, +H0, c1, -D], λx.x
[ :: =c1, +G0, +B, +F, c1, -G0], λx.x
[ :: =c1, +I0, +F, c1, -I0], λx.x
[ :: =c1, +G0, +F, c1, -G0], λx.x
[ :: =c2, +H, +S2, c2, -H], λx.x
[ :: =c1, +A, +C, c1, -A], λx.x
[ :: =c2, +H, +I, +S2, c2, -H], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +B, +I0, +F, c1, -B], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c1, +H0, +B, +I0, +F, c1, -H0], λx.x


Learning sr
Learned 1019 words in sr and structured them in 40 functions.
It took 65 samples to learn those.
Those are:
jedan is 1
dva is 2
tri is 3
četiri is 4
pet is 5
šest is 6
sedam is 7
osam is 8
devet is 9
deset is 10
Function _aest maps {1} by x -> 0*x+11
Function _naest maps {2,3,5,7,8,9} by x -> 1*x+10
četrnaest is 14
šesnaest is 16
Function _deset maps {2,3,7,8} by x -> 10*x+0
Function _deset _ maps {2,3,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
četrdeset is 40
Function četrdeset _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
pedeset is 50
Function pedeset _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
šezdeset is 60
Function šezdeset _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
devedeset is 90
Function devedeset _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by x -> 1*x+100
dvesta is 200
Function dvesta _ maps {1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by x -> 1*x+200
Function _sta maps {3} by x -> 0*x+300
Function _sta _ maps {3}x{1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by (x0,x1) -> 90*x0+1*x1+30
Function če_sto maps {3} by x -> 0*x+400
Function če_sto _ maps {3}x{1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by (x0,x1) -> 120*x0+1*x1+40
Function _o maps {6} by x -> 0*x+600
Function _o _ maps {6}x{1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by (x0,x1) -> 97*x0+1*x1+18
Function _sto maps {5,7,8,9} by x -> 100*x+0
Function _sto _ maps {5,7,8,9}x{1,2,3,4,5,6,7,8,9,10,_aest,_naest,14,16,_deset,_deset _,40,četrdeset _,50,pedeset _,60,šezdeset _,90,devedeset _} by (x0,x1) -> 100*x0+1*x1
jedna hiljada is 1000
Function jedna hiljada _ maps {2,6,100,200,dvesta _} by x -> 1*x+1000
Function _ hiljada maps {7,10,_deset,_naest,_deset _} by x -> 1000*x+0
Function _ hiljada _ maps {7,_naest,_deset _}x{2,6,100,200,dvesta _} by (x0,x1) -> 1000*x0+1*x1

MG:
[jedan :: c1, -A], 1
[tri :: c1, -F, -C, -B], 3
[šest :: c1, -G, -I0], 6
[ :: =c4, cFin], λx.x
[deset :: c2, -J, -S2], 10
[aest :: =c1, +A, c2, -S2], λx.'0X+11'(x)
[naest :: =c1, +B, c2, -J, -K, -S2], λx.'1X+10'(x)
[četrnaest :: c2, -S2], 14
[šesnaest :: c2, -S2], 16
[deset :: =c1, +C, c2, -J, -S2], λx.'10X'(x)
[deset  :: =c1, =c2C, c2, -J, -K, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[četrdeset :: c2, -S2], 40
[četrdeset  :: =c1, c2, -S2], λx.'1X+40'(x)
[pedeset :: c2, -S2], 50
[pedeset  :: =c1, c2, -S2], λx.'1X+50'(x)
[šezdeset :: c2, -S2], 60
[šezdeset  :: =c1, c2, -S2], λx.'1X+60'(x)
[devedeset :: c2, -S2], 90
[devedeset  :: =c1, c2, -S2], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[dva :: c1, -C, -B, -I0], 2
[četiri :: c1], 4
[pet :: c1, -H, -B], 5
[sedam :: c1, -C, -J0, -H, -B, -K0], 7
[osam :: c1, -C, -H, -B], 8
[devet :: c1, -H, -B], 9
[ :: =c1, +J0, c2, -J], λx.x
[sto :: c3, -I, -S1], 100
[dvesta :: c3, -I, -S1], 200
[dvesta  :: =c2, c3, -I, -S1], λx.'1X+200'(x)
[ :: =c1, +I0, c3, -I], λx.x
[ :: =c1, +K0, c2, -K], λx.x
[sta :: =c1, +F, c4], λx.'0X+300'(x)
[sta  :: =c2, =c4**F, c4], λxλy.'1X+90Y+30'(x,y)
[če :: =c4*, c4], λx.'1X+400'(x)
[sto :: =c1, +F, c4*], λx.'0X'(x)
[sto  :: =c2, =c4**F, c4**], λxλy.'1X+120Y'(x,y)
[ :: =c1, +F, c4**F], λx.x
[o :: =c1, +G, c4], λx.'0X+600'(x)
[o  :: =c2, =c4G, c4], λxλy.'1X+97Y+18'(x,y)
[ :: =c1, +G, c4G], λx.x
[sto :: =c1, +H, c4], λx.'100X'(x)
[sto  :: =c2, =c4H, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +H, c4H], λx.x
[jedna hiljada :: c4], 1000
[jedna hiljada  :: =c4I, c4], λx.'1X+1000'(x)
[ :: =c3, +I, c4I], λx.x
[ hiljada :: =c2, +J, c4], λx.'1000X'(x)
[ hiljada  :: =c4I, =c4K, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +K, c4K], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sto  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +H, +B, c1, -H], λx.x
[ :: =c1, +B, +I0, c1, -B], λx.x
[ :: =c1, +C, +J0, +H, +B, +K0, c1, -C], λx.x
[ :: =c1, +C, +B, +I0, c1, -C], λx.x
[ :: =c2, +K, +S2, c2, -K], λx.x
[ :: =c1, +J0, +H, +B, +K0, c1, -J0], λx.x
[ :: =c1, +C, +H, +B, c1, -C], λx.x
[ :: =c2, +J, +S2, c2, -J], λx.x
[ :: =c1, +H, +B, +K0, c1, -H], λx.x
[ :: =c3, +I, +S1, c3, -I], λx.x
[ :: =c1, +G, +I0, c1, -G], λx.x
[ :: =c1, +B, +K0, c1, -B], λx.x
[ :: =c1, +C, +B, c1, -C], λx.x
[ :: =c1, +F, +C, +B, c1, -F], λx.x
[ :: =c2, +J, +K, +S2, c2, -J], λx.x


Learning ro

Learned 1019 words in ro and structured them in 33 functions.
It took 52 samples to learn those.
Those are:
unu is 1
doi is 2
trei is 3
patru is 4
cinci is 5
șase is 6
șapte is 7
opt is 8
nouă is 9
zece is 10
unsprezece is 11
Function _sprezece maps {2,3,5,7,8,9} by x -> 1*x+10
paisprezece is 14
șaisprezece is 16
douăzeci is 20
Function douăzeci și _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _zeci maps {3,4,5,7,8,9} by x -> 10*x+0
Function _zeci și _ maps {3,4,5,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
șaizeci is 60
Function șaizeci și _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
o sută is 100
Function o sută _ maps {1,2,3,4,5,6,7,8,9,10,11,_sprezece,14,16,20,douăzeci și _,_zeci,_zeci și _,60,șaizeci și _} by x -> 1*x+100
două sute is 200
Function două sute _ maps {1,2,3,4,5,6,7,8,9,10,11,_sprezece,14,16,20,douăzeci și _,_zeci,_zeci și _,60,șaizeci și _} by x -> 1*x+200
Function _ sute maps {3,4,5,6,7,8,9} by x -> 100*x+0
Function _ sute _ maps {3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_sprezece,14,16,20,douăzeci și _,_zeci,_zeci și _,60,șaizeci și _} by (x0,x1) -> 100*x0+1*x1
o mie is 1000
Function o mie _ maps {2,6,100,200,două sute _} by x -> 1*x+1000
Function _ mii _ maps {7}x{2,6,100,200,două sute _} by (x0,x1) -> 980*x0+1*x1+140
Function _ mii maps {7,10} by x -> 1000*x+0
Function _ și mie/i maps {20} by x -> 0*x+20000
Function _ mie maps {_sprezece,douăzeci și _} by x -> 1000*x+0
Function _ mie _ maps {_sprezece,douăzeci și _}x{două sute _,6,200} by (x0,x1) -> 1000*x0+1*x1

MG:
[șapte :: c1, -G, -E, -C, -H0, -A], 7
[douăzeci :: c2, -I, -D, -S2], 20
[ :: =c4, cFin], λx.x
[trei :: c1, -E, -C, -A], 3
[patru :: c1, -E, -C], 4
[cinci :: c1, -E, -C, -A], 5
[șase :: c1, -E, -K0, -F0], 6
[opt :: c1, -E, -C, -A], 8
[nouă :: c1, -E, -C, -A], 9
[sprezece :: =c1, +A, c2, -J, -D, -S2], λx.'1X+10'(x)
[douăzeci și  :: =c1, c2, -J, -D, -S2], λx.'1X+20'(x)
[zece :: c2, -H, -D, -S2], 10
[ :: =c1, +H0, c2, -H], λx.x
[unu :: c1], 1
[doi :: c1, -A, -F0], 2
[două sute :: c3, -K, -S1, -F], 200
[două sute  :: =c3D, c3, -K, -S1, -F], λx.'1X+200'(x)
[ :: =c2, +D, c3D], λx.x
[ :: =c1, +K0, c3, -K], λx.x
[unsprezece :: c2, -D, -S2], 11
[paisprezece :: c2, -D, -S2], 14
[șaisprezece :: c2, -D, -S2], 16
[zeci :: =c1, +C, c2, -D, -S2], λx.'10X'(x)
[zeci și  :: =c1, =c2C, c2, -D, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[șaizeci :: c2, -D, -S2], 60
[șaizeci și  :: =c1, c2, -D, -S2], λx.'1X+60'(x)
[ :: =c1, c2, -D], λx.x
[ sute :: =c1, +E, c4], λx.'100X'(x)
[ sute  :: =c3D, =c4E, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c4E], λx.x
[o mie :: c4], 1000
[o mie  :: =c4F, c4], λx.'1X+1000'(x)
[ :: =c3, +F, c4F], λx.x
[ mii  :: =c4F, =c4G, c4], λxλy.'1X+980Y+140'(x,y)
[ :: =c1, +G, c4G], λx.x
[ mii :: =c2, +H, c4], λx.'1000X'(x)
[ și mie/i :: =c2, +I, c4], λx.'0X+20000'(x)
[ mie :: =c2, +J, c4], λx.'1000X'(x)
[ mie  :: =c4K, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c3, +K, c4K], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[o sută :: c3, -S1, -F], 100
[o sută  :: =c3D, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c3, -F], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +K0, +F0, c1, -E], λx.x
[ :: =c2, +H, +D, +S2, c2, -H], λx.x
[ :: =c1, +E, +C, +H0, +A, c1, -E], λx.x
[ :: =c1, +C, +H0, +A, c1, -C], λx.x
[ :: =c3, +K, +S1, +F, c3, -K], λx.x
[ :: =c2, +I, +D, +S2, c2, -I], λx.x
[ :: =c1, +C, +A, c1, -C], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +K0, +F0, c1, -K0], λx.x
[ :: =c3, +S1, +F, c3, -S1], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c1, +A, +F0, c1, -A], λx.x
[ :: =c1, +E, +C, c1, -E], λx.x
[ :: =c1, +E, +C, +A, c1, -E], λx.x
[ :: =c1, +G, +E, +C, +H0, +A, c1, -G], λx.x
[ :: =c2, +J, +D, +S2, c2, -J], λx.x


Learning ru
Learned 1019 words in ru and structured them in 38 functions.
It took 63 samples to learn those.
Those are:
один is 1
два is 2
три is 3
четыре is 4
пять is 5
шесть is 6
семь is 7
восемь is 8
девять is 9
десять is 10
двенадцать is 12
Function _надцать maps {1,3} by x -> 1*x+10
четырнадцать is 14
пятнадцать is 15
шестнадцать is 16
семнадцать is 17
восемнадцать is 18
девятнадцать is 19
Function _дцать maps {2,3} by x -> 10*x+0
Function _дцать _ maps {2,3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
сорок is 40
Function сорок _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
Function _десят maps {5,6,7,8} by x -> 10*x+0
Function _десят _ maps {5,6,7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
девяносто is 90
Function девяносто _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,12,_надцать,14,15,16,17,18,19,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by x -> 1*x+100
двести is 200
Function двести _ maps {1,2,3,4,5,6,7,8,9,10,12,_надцать,14,15,16,17,18,19,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by x -> 1*x+200
Function _ста maps {3,4} by x -> 100*x+0
Function _ста _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,12,_надцать,14,15,16,17,18,19,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by (x0,x1) -> 100*x0+1*x1
Function _сот maps {5,6,7,8,9} by x -> 100*x+0
Function _сот _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,12,_надцать,14,15,16,17,18,19,_дцать,_дцать _,40,сорок _,_десят,_десят _,90,девяносто _} by (x0,x1) -> 100*x0+1*x1
одна тысяча is 1000
Function одна тысяча _ maps {2,6,100,200,двести _} by x -> 1*x+1000
Function _ тысяч maps {7,10,17,_дцать,_дцать _} by x -> 1000*x+0
Function _ тысяч _ maps {7,17,_дцать _}x{2,6,100,200,двести _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[десять :: c2, -I, -S2], 10
[двенадцать :: c2, -S2], 12
[надцать :: =c1, +A, c2, -S2], λx.'1X+10'(x)
[четырнадцать :: c2, -S2], 14
[пятнадцать :: c2, -S2], 15
[шестнадцать :: c2, -S2], 16
[семнадцать :: c2, -J, -I, -S2], 17
[восемнадцать :: c2, -S2], 18
[девятнадцать :: c2, -S2], 19
[дцать :: =c1, +B, c2, -I, -S2], λx.'10X'(x)
[дцать  :: =c1, =c2B, c2, -J, -I, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[сорок :: c2, -S2], 40
[сорок  :: =c1, c2, -S2], λx.'1X+40'(x)
[десят :: =c1, +D, c2, -S2], λx.'10X'(x)
[десят  :: =c1, =c2D, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[девяносто :: c2, -S2], 90
[девяносто  :: =c1, c2, -S2], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[один :: c1, -A], 1
[два :: c1, -H0, -B], 2
[три :: c1, -B, -F, -A], 3
[четыре :: c1, -F], 4
[пять :: c1, -G, -D], 5
[шесть :: c1, -H0, -G, -D], 6
[семь :: c1, -J0, -G, -I0, -D], 7
[восемь :: c1, -G, -D], 8
[девять :: c1, -G], 9
[ :: =c1, +J0, c2, -J], λx.x
[сто :: c3, -H, -S1], 100
[двести :: c3, -H, -S1], 200
[двести  :: =c2, c3, -H, -S1], λx.'1X+200'(x)
[ :: =c1, +H0, c3, -H], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ста :: =c1, +F, c4], λx.'100X'(x)
[ста  :: =c2, =c4F, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c4F], λx.x
[сот :: =c1, +G, c4], λx.'100X'(x)
[сот  :: =c2, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[одна тысяча :: c4], 1000
[одна тысяча  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ тысяч :: =c2, +I, c4], λx.'1000X'(x)
[ тысяч  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[сто  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +H0, +G, +D, c1, -H0], λx.x
[ :: =c2, +J, +I, +S2, c2, -J], λx.x
[ :: =c1, +G, +I0, +D, c1, -G], λx.x
[ :: =c1, +I0, +D, c1, -I0], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c1, +J0, +G, +I0, +D, c1, -J0], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c1, +G, +D, c1, -G], λx.x
[ :: =c1, +H0, +B, c1, -H0], λx.x


Learning tr

Learned 1019 words in tr and structured them in 35 functions.
It took 57 samples to learn those.
Those are:
bir is 1
iki is 2
üç is 3
dört is 4
beş is 5
altı is 6
yedi is 7
sekiz is 8
dokuz is 9
on is 10
Function on_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+10
yirmi is 20
Function yirmi_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
otuz is 30
Function otuz_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
kırk is 40
Function kırk_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
elli is 50
Function elli_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
altmış is 60
Function altmış_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
yetmiş is 70
Function yetmiş_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
seksen is 80
Function seksen_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
doksan is 90
Function doksan_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
yüz is 100
Function yüz_ maps {1,2,3,4,5,6,7,8,9,10,on_,20,yirmi_,30,otuz_,40,kırk_,50,elli_,60,altmış_,70,yetmiş_,80,seksen_,90,doksan_} by x -> 1*x+100
Function _yüz maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _yüz_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,on_,20,yirmi_,30,otuz_,40,kırk_,50,elli_,60,altmış_,70,yetmiş_,80,seksen_,90,doksan_} by (x0,x1) -> 100*x0+1*x1
bin is 1000
Function bin_ maps {2,6,100,_yüz,_yüz_} by x -> 1*x+1000
Function _bin maps {7,10,20,on_,yirmi_} by x -> 1000*x+0
Function _bin_ maps {7,on_,yirmi_}x{2,6,100,_yüz,_yüz_} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[on :: c2, -E, -B, -S2], 10
[on :: =c1, c2, -E, -B, -F, -S2], λx.'1X+10'(x)
[yirmi :: c2, -E, -B, -S2], 20
[yirmi :: =c1, c2, -E, -B, -F, -S2], λx.'1X+20'(x)
[ :: =c1, +E0, c2, -E], λx.x
[yedi :: c1, -E0, -C, -F0], 7
[iki :: c1, -C, -D0], 2
[üç :: c1, -C], 3
[dört :: c1, -C], 4
[beş :: c1, -C], 5
[altı :: c1, -C, -D0], 6
[sekiz :: c1, -C], 8
[dokuz :: c1, -C], 9
[otuz :: c2, -B, -S2], 30
[otuz :: =c1, c2, -B, -S2], λx.'1X+30'(x)
[kırk :: c2, -B, -S2], 40
[kırk :: =c1, c2, -B, -S2], λx.'1X+40'(x)
[elli :: c2, -B, -S2], 50
[elli :: =c1, c2, -B, -S2], λx.'1X+50'(x)
[altmış :: c2, -B, -S2], 60
[altmış :: =c1, c2, -B, -S2], λx.'1X+60'(x)
[yetmiş :: c2, -B, -S2], 70
[yetmiş :: =c1, c2, -B, -S2], λx.'1X+70'(x)
[seksen :: c2, -B, -S2], 80
[seksen :: =c1, c2, -B, -S2], λx.'1X+80'(x)
[doksan :: c2, -B, -S2], 90
[doksan :: =c1, c2, -B, -S2], λx.'1X+90'(x)
[ :: =c1, c2, -B], λx.x
[bir :: c1], 1
[ :: =c1, +F0, c2, -F], λx.x
[yüz :: c3, -D, -S1], 100
[yüz :: =c1, +C, c3, -D, -S1], λx.'100X'(x)
[yüz :: =c3B, =c3C, c3, -D, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +C, c3C], λx.x
[ :: =c2, +B, c3B], λx.x
[ :: =c1, +D0, c3, -D], λx.x
[bin :: c4], 1000
[bin :: =c4D, c4], λx.'1X+1000'(x)
[ :: =c3, +D, c4D], λx.x
[bin :: =c2, +E, c4], λx.'1000X'(x)
[bin :: =c4D, =c4F, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +F, c4F], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[yüz :: =c3B, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +E, c2], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +E0, c1], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c2, +B, c2], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c3, +D, c3], λx.x
[ :: =c2, +B, +S2, c2, -B], λx.x
[ :: =c3, +D, +S1, c3, -D], λx.x
[ :: =c2, +E, +B, +S2, c2, -E], λx.x
[ :: =c1, +C, +D0, c1, -C], λx.x
[ :: =c1, +E0, +C, +F0, c1, -E0], λx.x
[ :: =c2, +B, +F, +S2, c2, -B], λx.x
[ :: =c2, +F, +S2, c2, -F], λx.x
[ :: =c2, +E, +B, +F, +S2, c2, -E], λx.x
[ :: =c1, +C, +F0, c1, -C], λx.x


Learning th
Learned 1019 words in th and structured them in 25 functions.
It took 44 samples to learn those.
Those are:
หนึ่ง is 1
สอง is 2
สาม is 3
สี่ is 4
ห้า is 5
หก is 6
เจ็ด is 7
แปด is 8
เก้า is 9
สิบ is 10
สิบเอ็ด is 11
Function สิบ_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+10
ยี่สิบ is 20
ยี่สิบเอ็ด is 21
Function ยี่สิบ_ maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _สิบ maps {3,4,5,6,7,8,9} by x -> 10*x+0
Function _สิบเอ็ด maps {3,4,5,6,7,8,9} by x -> 10*x+1
Function _สิบ_ maps {3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ร้อย maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ร้อยเอ็ด maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+1
Function _ร้อย_ maps {1,2,3,4,5,6,7,8,9}x{2,3,4,5,6,7,8,9,10,11,สิบ_,20,21,ยี่สิบ_,_สิบ,_สิบเอ็ด,_สิบ_} by (x0,x1) -> 100*x0+1*x1
Function _พัน maps {1,7} by x -> 1000*x+0
Function _พัน_ maps {1,7}x{2,6,_ร้อย,_ร้อย_} by (x0,x1) -> 1000*x0+1*x1
Function _หมื่น maps {1,2} by x -> 10000*x+0
Function _หมื่น_ maps {1,2}x{_พัน,_พัน_} by (x0,x1) -> 10000*x0+1*x1

MG:
[ :: =c5, cFin], λx.x
[หนึ่ง :: c1, -E, -G], 1
[เจ็ด :: c1, -E, -B, -A, -D0], 7
[สอง :: c1, -G, -F0, -A, -D0], 2
[สาม :: c1, -B, -A, -D0], 3
[สี่ :: c1, -B, -A, -D0], 4
[ห้า :: c1, -B, -A, -D0], 5
[หก :: c1, -B, -F0, -A, -D0], 6
[แปด :: c1, -B, -A, -D0], 8
[เก้า :: c1, -B, -A, -D0], 9
[พัน :: =c1, +E, c4], λx.'1000X'(x)
[พัน :: =c4F, =c4E, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c1, +E, c4E], λx.x
[ :: =c3, +F, c4F], λx.x
[ร้อย :: =cnix, =c1, c3, -F, -S2], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ร้อย :: =c2, =c1, c3, -F, -S2], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F0, c3, -F], λx.x
[สิบ :: c2, -S3], 10
[สิบเอ็ด :: c2, -S3], 11
[สิบ :: =c2A, c2, -S3], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[ยี่สิบ :: c2, -S3], 20
[ยี่สิบเอ็ด :: c2, -S3], 21
[ยี่สิบ :: =c2A, c2, -S3], λx.'1X+20'(x)
[สิบ :: =c1, +B, c2, -S3], λx.'10X'(x)
[สิบเอ็ด :: =c1, +B, c2, -S3], λx.'10X+1'(x)
[สิบ :: =c2A, =c2B, c2, -S3], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +D0, c2], λx.x
[หมื่น :: =c1, +G, c5], λx.'10000X'(x)
[หมื่น :: =c4, =c5G, c5], λxλy.'1X+10000Y'(x,y)
[ :: =c1, +G, c5G], λx.x
[ :: =c4, c5], λx.x
[ :: =c1, c5], λx.x
[ :: =c3, +S2, c5], λx.x
[ร้อยเอ็ด :: =cnix, =c1, c3, -S2], λxλy.'1X+100Y+1'(x,y)
[ :: =c2, +S3, c5], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +S3, c2], λx.x
[ :: =c1, +D0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c3, +S2, c3], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +G, c1, -E], λx.x
[ :: =c1, +B, +A, +D0, c1, -B], λx.x
[ :: =c1, +A, +D0, c1, -A], λx.x
[ :: =c3, +F, +S2, c3, -F], λx.x
[ :: =c1, +E, +B, +A, +D0, c1, -E], λx.x
[ :: =c1, +F0, +A, +D0, c1, -F0], λx.x
[ :: =c1, +B, +F0, +A, +D0, c1, -B], λx.x
[ :: =c1, +G, +F0, +A, +D0, c1, -G], λx.x


Learning vi
Learned 1019 words in vi and structured them in 22 functions.
It took 44 samples to learn those.
Those are:
một is 1
hai is 2
ba is 3
bốn is 4
năm is 5
sáu is 6
bảy is 7
tám is 8
chín is 9
mười is 10
Function mười _ maps {1,2,3,4,6,7,8,9} by x -> 1*x+10
mười lăm is 15
Function _ mươi maps {2,3,4,5,6,7,8,9} by x -> 10*x+0
Function _ mươi mốt maps {2,3,4,5,6,7,8,9} by x -> 10*x+1
Function _ mươi _ maps {2,3,4,5,6,7,8,9}x{2,3,4,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ mươi lăm maps {2,3,4,5,6,7,8,9} by x -> 10*x+5
Function _ trăm maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ trăm lẻ _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 100*x0+1*x1
Function _ trăm _ maps {1,2,3,4,5,6,7,8,9}x{10,mười _,15,_ mươi,_ mươi mốt,_ mươi _,_ mươi lăm} by (x0,x1) -> 100*x0+1*x1
Function _ nghìn maps {1,7,10,_ mươi,mười _,_ mươi _} by x -> 1000*x+0
Function _ nghìn lẻ _ maps {1,7,_ mươi _}x{2,6} by (x0,x1) -> 1000*x0+1*x1
Function _ nghìn _ maps {1,7,mười _,_ mươi _}x{_ trăm,_ trăm lẻ _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[mười :: c2, -S2, -F], 10
[mười  :: =c2A, c2, -I, -S2, -F], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[mười lăm :: c2, -S2], 15
[ mươi :: =c1, +B, c2, -S2, -F], λx.'10X'(x)
[ mươi mốt :: =c1, +B, c2, -S2], λx.'10X+1'(x)
[ mươi  :: =c2C, =c2B, c2, -G, -I, -S2, -F], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +C, c2C], λx.x
[ mươi lăm :: =c1, +B, c2, -S2], λx.'10X+5'(x)
[hai :: c1, -C, -H, -B, -A], 2
[ba :: c1, -C, -B, -A], 3
[bốn :: c1, -C, -B, -A], 4
[sáu :: c1, -C, -H, -B, -A], 6
[bảy :: c1, -C, -G0, -B, -I0, -A, -F0], 7
[tám :: c1, -C, -B, -A], 8
[chín :: c1, -C, -B, -A], 9
[ trăm :: =cnix, =c1, c3, -J], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ trăm lẻ  :: =c1, =c1, c3, -J], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G0, c2, -G], λx.x
[một :: c1, -G0, -I0, -A, -F0], 1
[năm :: c1, -B], 5
[ :: =c1, +I0, c2, -I], λx.x
[ nghìn :: =c2, +F, c4], λx.'1000X'(x)
[ nghìn lẻ  :: =c4H, =c4G, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +G, c4G], λx.x
[ :: =c1, +H, c4H], λx.x
[ nghìn  :: =c4J, =c4I, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c3, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[ trăm  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +J, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +B, +I0, +A, +F0, c1, -B], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +C, +H, +B, +A, c1, -C], λx.x
[ :: =c1, +C, +G0, +B, +I0, +A, +F0, c1, -C], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c2, +G, +I, +S2, +F, c2, -G], λx.x
[ :: =c1, +G0, +I0, +A, +F0, c1, -G0], λx.x
[ :: =c1, +A, +F0, c1, -A], λx.x
[ :: =c1, +H, +B, +A, c1, -H], λx.x
[ :: =c1, +I0, +A, +F0, c1, -I0], λx.x
[ :: =c1, +G0, +B, +I0, +A, +F0, c1, -G0], λx.x


Learning nl

Learned 1019 words in nl and structured them in 43 functions.
It took 71 samples to learn those.
Those are:
één is 1
twee is 2
drie is 3
vier is 4
vijf is 5
zes is 6
zeven is 7
acht is 8
negen is 9
tien is 10
elf is 11
twaalf is 12
dertien is 13
veertien is 14
Function _tien maps {5,6,7,8,9} by x -> 1*x+10
twintig is 20
eenentwintig is 21
Function _ëntwintig maps {2,3} by x -> 1*x+20
Function _entwintig maps {4,5,6,7,8,9} by x -> 1*x+20
dertig is 30
eenendertig is 31
Function _ëndertig maps {2,3} by x -> 1*x+30
Function _endertig maps {4,5,6,7,8,9} by x -> 1*x+30
veertig is 40
eenenveertig is 41
Function _ënveertig maps {2,3} by x -> 1*x+40
Function _enveertig maps {4,5,6,7,8,9} by x -> 1*x+40
Function _tig maps {5,6,7,9} by x -> 10*x+0
Function eenen_tig maps {5,6,7,9} by x -> 10*x+1
Function _ën_tig maps {2,3}x{5,6,7,9} by (x0,x1) -> 1*x0+10*x1
Function _en_tig maps {4,5,6,7,8,9}x{5,6,7,9} by (x0,x1) -> 1*x0+10*x1
Function t_ig maps {8} by x -> 0*x+80
Function eenent_ig maps {8} by x -> 0*x+81
Function _ënt_ig maps {2,3}x{8} by (x0,x1) -> 1*x0+10*x1
Function _ent_ig maps {4,5,6,7,8,9}x{8} by (x0,x1) -> 1*x0+10*x1
honderd is 100
Function honderd_ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tien,20,21,_ëntwintig,_entwintig,30,31,_ëndertig,_endertig,40,41,_ënveertig,_enveertig,_tig,eenen_tig,_ën_tig,_en_tig,t_ig,eenent_ig,_ënt_ig,_ent_ig} by x -> 1*x+100
Function _honderd maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _honderd_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,_tien,20,21,_ëntwintig,_entwintig,30,31,_ëndertig,_endertig,40,41,_ënveertig,_enveertig,_tig,eenen_tig,_ën_tig,_en_tig,t_ig,eenent_ig,_ënt_ig,_ent_ig} by (x0,x1) -> 100*x0+1*x1
duizend is 1000
Function duizend_ maps {2,6,100,_honderd,_honderd_} by x -> 1*x+1000
Function _duizend maps {7,10,20,_tien,_entwintig} by x -> 1000*x+0
Function _duizend_ maps {7,_tien,_entwintig}x{2,6,100,_honderd,_honderd_} by (x0,x1) -> 1000*x0+1*x1

MG:
[acht :: c1, -E, -C, -G, -A], 8
[ :: =c4, cFin], λx.x
[vier :: c1, -C, -G], 4
[vijf :: c1, -C, -G, -A, -D], 5
[zes :: c1, -C, -H0, -G, -A, -D], 6
[zeven :: c1, -C, -J0, -G, -I0, -A, -D], 7
[negen :: c1, -C, -G, -A, -D], 9
[tien :: =c1, +A, c2, -J, -I, -S2, -F], λx.'1X+10'(x)
[entwintig :: =c1, +C, c2, -J, -I, -S2, -F], λx.'1X+20'(x)
[ :: =c1, +J0, c2, -J], λx.x
[honderd :: c3, -H, -S1], 100
[honderd :: =c1, +G, c3, -H, -S1], λx.'100X'(x)
[honderd :: =c3F, =c3G, c3, -H, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c3G], λx.x
[ :: =c2, +F, c3F], λx.x
[ :: =c1, +H0, c3, -H], λx.x
[twee :: c1, -H0, -G, -B], 2
[drie :: c1, -G, -B], 3
[tien :: c2, -I, -S2, -F], 10
[twintig :: c2, -I, -S2, -F], 20
[ :: =c1, +I0, c2, -I], λx.x
[duizend :: c4], 1000
[duizend :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[duizend :: =c2, +I, c4], λx.'1000X'(x)
[duizend :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[één :: c1], 1
[ :: =c3, +S1, c4], λx.x
[honderd :: =c3F, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[elf :: c2, -S2, -F], 11
[twaalf :: c2, -S2, -F], 12
[dertien :: c2, -S2, -F], 13
[veertien :: c2, -S2, -F], 14
[eenentwintig :: c2, -S2, -F], 21
[ëntwintig :: =c1, +B, c2, -S2, -F], λx.'1X+20'(x)
[dertig :: c2, -S2, -F], 30
[eenendertig :: c2, -S2, -F], 31
[ëndertig :: =c1, +B, c2, -S2, -F], λx.'1X+30'(x)
[endertig :: =c1, +C, c2, -S2, -F], λx.'1X+30'(x)
[veertig :: c2, -S2, -F], 40
[eenenveertig :: c2, -S2, -F], 41
[ënveertig :: =c1, +B, c2, -S2, -F], λx.'1X+40'(x)
[enveertig :: =c1, +C, c2, -S2, -F], λx.'1X+40'(x)
[tig :: =c1, +D, c2, -S2, -F], λx.'10X'(x)
[eenen :: =c2*, c2, -S2, -F], λx.'1X+1'(x)
[tig :: =c1, +D, c2*], λx.'10X'(x)
[ën :: =c2**, =c2B, c2, -S2, -F], λxλy.'1X+1Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[tig :: =c1, +D, c2**], λx.'10X'(x)
[en :: =c2***, =c2C, c2, -S2, -F], λxλy.'1X+1Y'(x,y)
[ :: =c1, +C, c2C], λx.x
[tig :: =c1, +D, c2***], λx.'10X'(x)
[t :: =c2****, c2, -S2, -F], λx.'1X+80'(x)
[ig :: =c1, +E, c2****], λx.'0X'(x)
[eenent :: =c2*****, c2, -S2, -F], λx.'1X+81'(x)
[ig :: =c1, +E, c2*****], λx.'0X'(x)
[ënt :: =c2******, =c2B, c2, -S2, -F], λxλy.'1X+1Y'(x,y)
[ig :: =c1, +E, c2******], λx.'10X'(x)
[ent :: =c2*******, =c2C, c2, -S2, -F], λxλy.'1X+1Y'(x,y)
[ig :: =c1, +E, c2*******], λx.'10X'(x)
[ :: =c1, c2, -F], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +J, +I, +S2, +F, c2, -J], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +H0, +G, +A, +D, c1, -H0], λx.x
[ :: =c1, +J0, +G, +I0, +A, +D, c1, -J0], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +C, +J0, +G, +I0, +A, +D, c1, -C], λx.x
[ :: =c1, +C, +G, c1, -C], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +C, +H0, +G, +A, +D, c1, -C], λx.x
[ :: =c1, +H0, +G, +B, c1, -H0], λx.x
[ :: =c1, +C, +G, +A, c1, -C], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x
[ :: =c1, +G, +I0, +A, +D, c1, -G], λx.x
[ :: =c1, +E, +C, +G, +A, c1, -E], λx.x
[ :: =c1, +C, +G, +A, +D, c1, -C], λx.x
[ :: =c1, +G, +B, c1, -G], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c1, +I0, +A, +D, c1, -I0], λx.x


Learning uk
Learned 1019 words in uk and structured them in 49 functions.
It took 79 samples to learn those.
Those are:
одна is 1
двi is 2
три is 3
чотири is 4
п'ять is 5
шiсть is 6
сiм is 7
вiсiм is 8
дев'ять is 9
десять is 10
одинадцять is 11
дванадцять is 12
чотирнадцять is 14
п'ятнадцять is 15
шiстнадцять is 16
Function _надцять maps {3,7,8} by x -> 1*x+10
дев'ятнадцять is 19
двадцять is 20
Function двадцять _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _дцять maps {3} by x -> 0*x+30
Function _дцять _ maps {3}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 9*x0+1*x1+3
сорок is 40
Function сорок _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
п'ятдесят is 50
Function п'ятдесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
шiстдесят is 60
Function шiстдесят _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _десят maps {7,8} by x -> 10*x+0
Function _десят _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
дев'яносто is 90
Function дев'яносто _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
сто is 100
Function сто _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by x -> 1*x+100
Function _стi maps {2} by x -> 0*x+200
Function _стi _ maps {2}x{1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by (x0,x1) -> 80*x0+1*x1+40
Function _ста maps {3,4} by x -> 100*x+0
Function _ста _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by (x0,x1) -> 100*x0+1*x1
п'ятсот is 500
Function п'ятсот _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by x -> 1*x+500
шiстсот is 600
Function шiстсот _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by x -> 1*x+600
Function _сот maps {7,8} by x -> 100*x+0
Function _сот _ maps {7,8}x{1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by (x0,x1) -> 100*x0+1*x1
дев'ятсот is 900
Function дев'ятсот _ maps {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,_надцять,19,20,двадцять _,_дцять,_дцять _,40,сорок _,50,п'ятдесят _,60,шiстдесят _,_десят,_десят _,90,дев'яносто _} by x -> 1*x+900
Function _ тисяча maps {1} by x -> 0*x+1000
Function _ тисяча _ maps {1}x{2,6,100,_стi,_стi _} by (x0,x1) -> 500*x0+1*x1+500
Function _ тисяч maps {7,10,20,_надцять,двадцять _} by x -> 1000*x+0
Function _ тисяч _ maps {7,_надцять,двадцять _}x{2,6,100,_стi,_стi _} by (x0,x1) -> 1000*x0+1*x1

MG:
[одна :: c1, -H], 1
[двi :: c1, -F, -I0], 2
[три :: c1, -C, -G, -A], 3
[ :: =c4, cFin], λx.x
[десять :: c2, -J, -S2], 10
[одинадцять :: c2, -S2], 11
[дванадцять :: c2, -S2], 12
[чотирнадцять :: c2, -S2], 14
[п'ятнадцять :: c2, -S2], 15
[шiстнадцять :: c2, -S2], 16
[надцять :: =c1, +A, c2, -J, -K, -S2], λx.'1X+10'(x)
[дев'ятнадцять :: c2, -S2], 19
[двадцять :: c2, -J, -S2], 20
[двадцять  :: =c1, c2, -J, -K, -S2], λx.'1X+20'(x)
[дцять :: =c1, +C, c2, -S2], λx.'0X+30'(x)
[дцять  :: =c1, =c2C, c2, -S2], λxλy.'1X+9Y+3'(x,y)
[ :: =c1, +C, c2C], λx.x
[сорок :: c2, -S2], 40
[сорок  :: =c1, c2, -S2], λx.'1X+40'(x)
[п'ятдесят :: c2, -S2], 50
[п'ятдесят  :: =c1, c2, -S2], λx.'1X+50'(x)
[шiстдесят :: c2, -S2], 60
[шiстдесят  :: =c1, c2, -S2], λx.'1X+60'(x)
[десят :: =c1, +D, c2, -S2], λx.'10X'(x)
[десят  :: =c1, =c2D, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[дев'яносто :: c2, -S2], 90
[дев'яносто  :: =c1, c2, -S2], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[чотири :: c1, -G], 4
[п'ять :: c1], 5
[шiсть :: c1, -I0], 6
[сiм :: c1, -J0, -K0, -A, -D], 7
[вiсiм :: c1, -A, -D], 8
[дев'ять :: c1], 9
[ :: =c1, +J0, c2, -J], λx.x
[сто :: c3, -I, -S1], 100
[стi :: =c1, +F, c3, -I, -S1], λx.'0X+200'(x)
[стi  :: =c2, =c3F, c3, -I, -S1], λxλy.'1X+80Y+40'(x,y)
[ :: =c1, +F, c3F], λx.x
[ :: =c1, +I0, c3, -I], λx.x
[ :: =c1, +K0, c2, -K], λx.x
[ста :: =c1, +G, c4], λx.'100X'(x)
[ста  :: =c2, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[п'ятсот :: c4], 500
[п'ятсот  :: =c2, c4], λx.'1X+500'(x)
[шiстсот :: c4], 600
[шiстсот  :: =c2, c4], λx.'1X+600'(x)
[сот :: =c1, +D, c4], λx.'100X'(x)
[сот  :: =c2, =c2D, c4], λxλy.'1X+100Y'(x,y)
[дев'ятсот :: c4], 900
[дев'ятсот  :: =c2, c4], λx.'1X+900'(x)
[ тисяча :: =c1, +H, c4], λx.'0X+1000'(x)
[ тисяча  :: =c4I, =c4H, c4], λxλy.'1X+500Y+500'(x,y)
[ :: =c1, +H, c4H], λx.x
[ :: =c3, +I, c4I], λx.x
[ тисяч :: =c2, +J, c4], λx.'1000X'(x)
[ тисяч  :: =c4I, =c4K, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +K, c4K], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[сто  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +I, c3], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c2, +K, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +F, +I0, c1, -F], λx.x
[ :: =c2, +K, +S2, c2, -K], λx.x
[ :: =c1, +K0, +A, +D, c1, -K0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +J, +S2, c2, -J], λx.x
[ :: =c3, +I, +S1, c3, -I], λx.x
[ :: =c1, +C, +G, +A, c1, -C], λx.x
[ :: =c1, +J0, +K0, +A, +D, c1, -J0], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x
[ :: =c2, +J, +K, +S2, c2, -J], λx.x


Learning es_CO

Learned 1019 words in es_CO and structured them in 49 functions.
It took 256 samples to learn those.
Those are:
uno is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
Function dieci_ maps {6,7,8,9} by x -> 1*x+10
veinte is 20
veintidós is 22
veintitrés is 23
Function veinti_ maps {1,4,5,7,8,9} by x -> 1*x+20
veintiséis is 26
treinta is 30
Function treinta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarenta is 40
Function cuarenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cien is 100
Function ciento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _cientos maps {2,3,4,6,8} by x -> 100*x+0
Function _cientos _ maps {2,3,4,6,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500
Function sete_tos maps {100} by x -> 0*x+700
Function sete_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 7*x0+1*x1
Function nove_tos maps {100} by x -> 0*x+900
Function nove_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 9*x0+1*x1
mil is 1000
Function mil _ maps {2,6,100,_cientos,_cientos _} by x -> 1*x+1000
Function _ mil maps {7,10,20,dieci_,veinti_} by x -> 1000*x+0
Function _ mil _ maps {7,dieci_,veinti_}x{2,6,100,_cientos,_cientos _} by (x0,x1) -> 1000*x0+1*x1

MG:
[cien :: c2, -F, -H1, -S2], 100
[ :: =c4, cFin], λx.x
[dos :: c1, -E, -H0], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E, -H0, -A], 6
[ocho :: c1, -E, -B, -A], 8
[uno :: c1, -B], 1
[cinco :: c1, -B], 5
[siete :: c1, -J0, -B, -I0, -A], 7
[nueve :: c1, -B, -A], 9
[dieci :: =c2A, c2, -J, -G, -I, -D, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[veinti :: =c2B, c2, -J, -G, -I, -D, -S2], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +J0, c2, -J], λx.x
[cientos :: =c1, +E, c3, -H, -S1], λx.'100X'(x)
[cientos  :: =c3D, =c3E, c3, -H, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c2, +D, c3D], λx.x
[ :: =c1, +H0, c3, -H], λx.x
[ :: =c2, +H1, c3, -H], λx.x
[diez :: c2, -G, -I, -D, -S2], 10
[once :: c2, -G, -D, -S2], 11
[doce :: c2, -G, -D, -S2], 12
[trece :: c2, -G, -D, -S2], 13
[catorce :: c2, -G, -D, -S2], 14
[quince :: c2, -G, -D, -S2], 15
[veinte :: c2, -G, -I, -D, -S2], 20
[veintidós :: c2, -G, -D, -S2], 22
[veintitrés :: c2, -G, -D, -S2], 23
[veintiséis :: c2, -G, -D, -S2], 26
[treinta :: c2, -G, -D, -S2], 30
[treinta y  :: =c1, c2, -G, -D, -S2], λx.'1X+30'(x)
[cuarenta :: c2, -G, -D, -S2], 40
[cuarenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+40'(x)
[cincuenta :: c2, -G, -D, -S2], 50
[cincuenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+50'(x)
[sesenta :: c2, -G, -D, -S2], 60
[sesenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+60'(x)
[setenta :: c2, -G, -D, -S2], 70
[setenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+70'(x)
[ochenta :: c2, -G, -D, -S2], 80
[ochenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+80'(x)
[noventa :: c2, -G, -D, -S2], 90
[noventa y  :: =c1, c2, -G, -D, -S2], λx.'1X+90'(x)
[ :: =c1, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ :: =c1, c2, -D], λx.x
[nove :: =c4*, c4], λx.'1X+900'(x)
[tos :: =c2, +F, c4*], λx.'0X'(x)
[mil :: c4], 1000
[mil  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ mil :: =c2, +I, c4], λx.'1000X'(x)
[ mil  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ciento  :: =c3D, c3, -S1], λx.'1X+100'(x)
[quinientos :: c3, -S1], 500
[quinientos  :: =c3D, c3, -S1], λx.'1X+500'(x)
[sete :: =c3*, c3, -S1, -S1], λx.'1X+700'(x)
[tos :: =c2, +F, c3*], λx.'0X'(x)
[tos  :: =c3**G, =c3**F, c3**], λxλy.'1X+7Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c2, +G, c3**G], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +H1, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +H0, c1, -E], λx.x
[ :: =c2, +G, +I, +D, +S2, c2, -G], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +E, +H0, +A, c1, -E], λx.x
[ :: =c1, +J0, +B, +I0, +A, c1, -J0], λx.x
[ :: =c2, +I, +D, +S2, c2, -I], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +I0, +A, c1, -I0], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c2, +J, +G, +I, +D, +S2, c2, -J], λx.x
[ :: =c2, +H1, +S2, c2, -H1], λx.x
[ :: =c1, +B, +I0, +A, c1, -B], λx.x
[ :: =c2, +F, +H1, +S2, c2, -F], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x


Learning es
Learned 1019 words in es and structured them in 49 functions.
It took 256 samples to learn those.
Those are:
uno is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
Function dieci_ maps {6,7,8,9} by x -> 1*x+10
veinte is 20
veintidós is 22
veintitrés is 23
Function veinti_ maps {1,4,5,7,8,9} by x -> 1*x+20
veintiséis is 26
treinta is 30
Function treinta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarenta is 40
Function cuarenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cien is 100
Function ciento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _cientos maps {2,3,4,6,8} by x -> 100*x+0
Function _cientos _ maps {2,3,4,6,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500
Function sete_tos maps {100} by x -> 0*x+700
Function sete_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 7*x0+1*x1
Function nove_tos maps {100} by x -> 0*x+900
Function nove_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 9*x0+1*x1
mil is 1000
Function mil _ maps {2,6,100,_cientos,_cientos _} by x -> 1*x+1000
Function _ mil maps {7,10,20,dieci_,veinti_} by x -> 1000*x+0
Function _ mil _ maps {7,dieci_,veinti_}x{2,6,100,_cientos,_cientos _} by (x0,x1) -> 1000*x0+1*x1

MG:
[cien :: c2, -F, -H1, -S2], 100
[ :: =c4, cFin], λx.x
[dos :: c1, -E, -H0], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E, -H0, -A], 6
[ocho :: c1, -E, -B, -A], 8
[uno :: c1, -B], 1
[cinco :: c1, -B], 5
[siete :: c1, -J0, -B, -I0, -A], 7
[nueve :: c1, -B, -A], 9
[dieci :: =c2A, c2, -J, -G, -I, -D, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[veinti :: =c2B, c2, -J, -G, -I, -D, -S2], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +J0, c2, -J], λx.x
[cientos :: =c1, +E, c3, -H, -S1], λx.'100X'(x)
[cientos  :: =c3D, =c3E, c3, -H, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c2, +D, c3D], λx.x
[ :: =c1, +H0, c3, -H], λx.x
[ :: =c2, +H1, c3, -H], λx.x
[diez :: c2, -G, -I, -D, -S2], 10
[once :: c2, -G, -D, -S2], 11
[doce :: c2, -G, -D, -S2], 12
[trece :: c2, -G, -D, -S2], 13
[catorce :: c2, -G, -D, -S2], 14
[quince :: c2, -G, -D, -S2], 15
[veinte :: c2, -G, -I, -D, -S2], 20
[veintidós :: c2, -G, -D, -S2], 22
[veintitrés :: c2, -G, -D, -S2], 23
[veintiséis :: c2, -G, -D, -S2], 26
[treinta :: c2, -G, -D, -S2], 30
[treinta y  :: =c1, c2, -G, -D, -S2], λx.'1X+30'(x)
[cuarenta :: c2, -G, -D, -S2], 40
[cuarenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+40'(x)
[cincuenta :: c2, -G, -D, -S2], 50
[cincuenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+50'(x)
[sesenta :: c2, -G, -D, -S2], 60
[sesenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+60'(x)
[setenta :: c2, -G, -D, -S2], 70
[setenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+70'(x)
[ochenta :: c2, -G, -D, -S2], 80
[ochenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+80'(x)
[noventa :: c2, -G, -D, -S2], 90
[noventa y  :: =c1, c2, -G, -D, -S2], λx.'1X+90'(x)
[ :: =c1, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ :: =c1, c2, -D], λx.x
[nove :: =c4*, c4], λx.'1X+900'(x)
[tos :: =c2, +F, c4*], λx.'0X'(x)
[mil :: c4], 1000
[mil  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ mil :: =c2, +I, c4], λx.'1000X'(x)
[ mil  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ciento  :: =c3D, c3, -S1], λx.'1X+100'(x)
[quinientos :: c3, -S1], 500
[quinientos  :: =c3D, c3, -S1], λx.'1X+500'(x)
[sete :: =c3*, c3, -S1, -S1], λx.'1X+700'(x)
[tos :: =c2, +F, c3*], λx.'0X'(x)
[tos  :: =c3**G, =c3**F, c3**], λxλy.'1X+7Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c2, +G, c3**G], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +H1, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +H0, c1, -E], λx.x
[ :: =c2, +G, +I, +D, +S2, c2, -G], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +E, +H0, +A, c1, -E], λx.x
[ :: =c1, +J0, +B, +I0, +A, c1, -J0], λx.x
[ :: =c2, +I, +D, +S2, c2, -I], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +I0, +A, c1, -I0], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c2, +J, +G, +I, +D, +S2, c2, -J], λx.x
[ :: =c2, +H1, +S2, c2, -H1], λx.x
[ :: =c1, +B, +I0, +A, c1, -B], λx.x
[ :: =c2, +F, +H1, +S2, c2, -F], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x


Learning es_VE

Learned 1019 words in es_VE and structured them in 49 functions.
It took 256 samples to learn those.
Those are:
uno is 1
dos is 2
tres is 3
cuatro is 4
cinco is 5
seis is 6
siete is 7
ocho is 8
nueve is 9
diez is 10
once is 11
doce is 12
trece is 13
catorce is 14
quince is 15
Function dieci_ maps {6,7,8,9} by x -> 1*x+10
veinte is 20
veintidós is 22
veintitrés is 23
Function veinti_ maps {1,4,5,7,8,9} by x -> 1*x+20
veintiséis is 26
treinta is 30
Function treinta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
cuarenta is 40
Function cuarenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
cincuenta is 50
Function cincuenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
sesenta is 60
Function sesenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
setenta is 70
Function setenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ochenta is 80
Function ochenta y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
noventa is 90
Function noventa y _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
cien is 100
Function ciento _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+100
Function _cientos maps {2,3,4,6,8} by x -> 100*x+0
Function _cientos _ maps {2,3,4,6,8}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 100*x0+1*x1
quinientos is 500
Function quinientos _ maps {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,22,23,veinti_,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by x -> 1*x+500
Function sete_tos maps {100} by x -> 0*x+700
Function sete_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 7*x0+1*x1
Function nove_tos maps {100} by x -> 0*x+900
Function nove_tos _ maps {100}x{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,dieci_,20,veinti_,22,23,26,30,treinta y _,40,cuarenta y _,50,cincuenta y _,60,sesenta y _,70,setenta y _,80,ochenta y _,90,noventa y _} by (x0,x1) -> 9*x0+1*x1
mil is 1000
Function mil _ maps {2,6,100,_cientos,_cientos _} by x -> 1*x+1000
Function _ mil maps {7,10,20,dieci_,veinti_} by x -> 1000*x+0
Function _ mil _ maps {7,dieci_,veinti_}x{2,6,100,_cientos,_cientos _} by (x0,x1) -> 1000*x0+1*x1

MG:
[cien :: c2, -F, -H1, -S2], 100
[ :: =c4, cFin], λx.x
[dos :: c1, -E, -H0], 2
[tres :: c1, -E], 3
[cuatro :: c1, -E, -B], 4
[seis :: c1, -E, -H0, -A], 6
[ocho :: c1, -E, -B, -A], 8
[uno :: c1, -B], 1
[cinco :: c1, -B], 5
[siete :: c1, -J0, -B, -I0, -A], 7
[nueve :: c1, -B, -A], 9
[dieci :: =c2A, c2, -J, -G, -I, -D, -S2], λx.'1X+10'(x)
[ :: =c1, +A, c2A], λx.x
[veinti :: =c2B, c2, -J, -G, -I, -D, -S2], λx.'1X+20'(x)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, +J0, c2, -J], λx.x
[cientos :: =c1, +E, c3, -H, -S1], λx.'100X'(x)
[cientos  :: =c3D, =c3E, c3, -H, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c1, +E, c3E], λx.x
[ :: =c2, +D, c3D], λx.x
[ :: =c1, +H0, c3, -H], λx.x
[ :: =c2, +H1, c3, -H], λx.x
[diez :: c2, -G, -I, -D, -S2], 10
[once :: c2, -G, -D, -S2], 11
[doce :: c2, -G, -D, -S2], 12
[trece :: c2, -G, -D, -S2], 13
[catorce :: c2, -G, -D, -S2], 14
[quince :: c2, -G, -D, -S2], 15
[veinte :: c2, -G, -I, -D, -S2], 20
[veintidós :: c2, -G, -D, -S2], 22
[veintitrés :: c2, -G, -D, -S2], 23
[veintiséis :: c2, -G, -D, -S2], 26
[treinta :: c2, -G, -D, -S2], 30
[treinta y  :: =c1, c2, -G, -D, -S2], λx.'1X+30'(x)
[cuarenta :: c2, -G, -D, -S2], 40
[cuarenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+40'(x)
[cincuenta :: c2, -G, -D, -S2], 50
[cincuenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+50'(x)
[sesenta :: c2, -G, -D, -S2], 60
[sesenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+60'(x)
[setenta :: c2, -G, -D, -S2], 70
[setenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+70'(x)
[ochenta :: c2, -G, -D, -S2], 80
[ochenta y  :: =c1, c2, -G, -D, -S2], λx.'1X+80'(x)
[noventa :: c2, -G, -D, -S2], 90
[noventa y  :: =c1, c2, -G, -D, -S2], λx.'1X+90'(x)
[ :: =c1, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ :: =c1, c2, -D], λx.x
[nove :: =c4*, c4], λx.'1X+900'(x)
[tos :: =c2, +F, c4*], λx.'0X'(x)
[mil :: c4], 1000
[mil  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ mil :: =c2, +I, c4], λx.'1000X'(x)
[ mil  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ciento  :: =c3D, c3, -S1], λx.'1X+100'(x)
[quinientos :: c3, -S1], 500
[quinientos  :: =c3D, c3, -S1], λx.'1X+500'(x)
[sete :: =c3*, c3, -S1, -S1], λx.'1X+700'(x)
[tos :: =c2, +F, c3*], λx.'0X'(x)
[tos  :: =c3**G, =c3**F, c3**], λxλy.'1X+7Y'(x,y)
[ :: =c2, +F, c3**F], λx.x
[ :: =c2, +G, c3**G], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c2, +H1, c2], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c1, +E, +H0, c1, -E], λx.x
[ :: =c2, +G, +I, +D, +S2, c2, -G], λx.x
[ :: =c3, +S1, +S1, c3, -S1], λx.x
[ :: =c1, +E, +B, c1, -E], λx.x
[ :: =c1, +E, +H0, +A, c1, -E], λx.x
[ :: =c1, +J0, +B, +I0, +A, c1, -J0], λx.x
[ :: =c2, +I, +D, +S2, c2, -I], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +I0, +A, c1, -I0], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +E, +B, +A, c1, -E], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c2, +J, +G, +I, +D, +S2, c2, -J], λx.x
[ :: =c2, +H1, +S2, c2, -H1], λx.x
[ :: =c1, +B, +I0, +A, c1, -B], λx.x
[ :: =c2, +F, +H1, +S2, c2, -F], λx.x
[ :: =c2, +G, +D, +S2, c2, -G], λx.x


Learning cz
Learned 1019 words in cz and structured them in 37 functions.
It took 64 samples to learn those.
Those are:
jedna is 1
dva is 2
tři is 3
čtyři is 4
pět is 5
šest is 6
sedm is 7
osm is 8
devět is 9
deset is 10
jedenáct is 11
Function _náct maps {2,3,6,7,8} by x -> 1*x+10
čtrnáct is 14
patnáct is 15
devatenáct is 19
Function _cet maps {2,3,4} by x -> 10*x+0
Function _cet _ maps {2,3,4}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
padesát is 50
Function padesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
šedesát is 60
Function šedesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
Function _desát maps {7,8} by x -> 10*x+0
Function _desát _ maps {7,8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
devadesát is 90
Function devadesát _ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
sto is 100
Function sto _ maps {1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by x -> 1*x+100
dvěstě is 200
Function dvěstě _ maps {1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by x -> 1*x+200
Function _sta maps {3,4} by x -> 100*x+0
Function _sta _ maps {3,4}x{1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by (x0,x1) -> 100*x0+1*x1
Function _set maps {5,6,7,8,9} by x -> 100*x+0
Function _set _ maps {5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_náct,14,15,19,_cet,_cet _,50,padesát _,60,šedesát _,_desát,_desát _,90,devadesát _} by (x0,x1) -> 100*x0+1*x1
tisíc is 1000
Function tisíc _ maps {2,6,100,200,dvěstě _} by x -> 1*x+1000
Function _ tisíc maps {7,10,_cet,_náct,_cet _} by x -> 1000*x+0
Function _ tisíc _ maps {7,_náct,_cet _}x{2,6,100,200,dvěstě _} by (x0,x1) -> 1000*x0+1*x1

MG:
[ :: =c4, cFin], λx.x
[deset :: c2, -I, -S2], 10
[jedenáct :: c2, -S2], 11
[náct :: =c1, +A, c2, -J, -I, -S2], λx.'1X+10'(x)
[čtrnáct :: c2, -S2], 14
[patnáct :: c2, -S2], 15
[devatenáct :: c2, -S2], 19
[cet :: =c1, +B, c2, -I, -S2], λx.'10X'(x)
[cet  :: =c1, =c2B, c2, -J, -I, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[padesát :: c2, -S2], 50
[padesát  :: =c1, c2, -S2], λx.'1X+50'(x)
[šedesát :: c2, -S2], 60
[šedesát  :: =c1, c2, -S2], λx.'1X+60'(x)
[desát :: =c1, +D, c2, -S2], λx.'10X'(x)
[desát  :: =c1, =c2D, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[devadesát :: c2, -S2], 90
[devadesát  :: =c1, c2, -S2], λx.'1X+90'(x)
[ :: =c1, c2], λx.x
[jedna :: c1], 1
[dva :: c1, -H0, -B, -A], 2
[tři :: c1, -B, -F, -A], 3
[čtyři :: c1, -B, -F], 4
[pět :: c1, -G], 5
[šest :: c1, -H0, -G, -A], 6
[sedm :: c1, -J0, -G, -I0, -A, -D], 7
[osm :: c1, -G, -A, -D], 8
[devět :: c1, -G], 9
[ :: =c1, +J0, c2, -J], λx.x
[sto :: c3, -H, -S1], 100
[dvěstě :: c3, -H, -S1], 200
[dvěstě  :: =c2, c3, -H, -S1], λx.'1X+200'(x)
[ :: =c1, +H0, c3, -H], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[sta :: =c1, +F, c4], λx.'100X'(x)
[sta  :: =c2, =c4F, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +F, c4F], λx.x
[set :: =c1, +G, c4], λx.'100X'(x)
[set  :: =c2, =c4G, c4], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G, c4G], λx.x
[tisíc :: c4], 1000
[tisíc  :: =c4H, c4], λx.'1X+1000'(x)
[ :: =c3, +H, c4H], λx.x
[ tisíc :: =c2, +I, c4], λx.'1000X'(x)
[ tisíc  :: =c4H, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[sto  :: =c2, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c3, +H, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +G, +A, +D, c1, -G], λx.x
[ :: =c2, +J, +I, +S2, c2, -J], λx.x
[ :: =c1, +F, +A, c1, -F], λx.x
[ :: =c3, +H, +S1, c3, -H], λx.x
[ :: =c1, +H0, +G, +A, c1, -H0], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +B, +F, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c1, +B, +F, +A, c1, -B], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c1, +I0, +A, +D, c1, -I0], λx.x
[ :: =c1, +J0, +G, +I0, +A, +D, c1, -J0], λx.x
[ :: =c1, +H0, +B, +A, c1, -H0], λx.x
[ :: =c1, +G, +A, c1, -G], λx.x
[ :: =c1, +G, +I0, +A, +D, c1, -G], λx.x


Learning de

Learned 1019 words in de and structured them in 38 functions.
It took 59 samples to learn those.
Those are:
eins is 1
zwei is 2
drei is 3
vier is 4
fünf is 5
sechs is 6
sieben is 7
acht is 8
neun is 9
zehn is 10
elf is 11
zwölf is 12
Function _zehn maps {3,4,5,8,9} by x -> 1*x+10
sechzehn is 16
siebzehn is 17
zwanzig is 20
einundzwanzig is 21
Function _undzwanzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _ßig maps {3} by x -> 0*x+30
Function einund_ßig maps {3} by x -> 0*x+31
Function _und_ßig maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
Function _zig maps {4,5,8,9} by x -> 10*x+0
Function einund_zig maps {4,5,8,9} by x -> 10*x+1
Function _und_zig maps {2,3,4,5,6,7,8,9}x{4,5,8,9} by (x0,x1) -> 1*x0+10*x1
sechzig is 60
einundsechzig is 61
Function _undsechzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+60
siebzig is 70
einundsiebzig is 71
Function _undsiebzig maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
einhundert is 100
Function einhundert_ maps {1,2,3,4,5,6,7,8,9,10,11,12,_zehn,16,17,20,21,_undzwanzig,_ßig,einund_ßig,_und_ßig,_zig,einund_zig,_und_zig,60,61,_undsechzig,70,71,_undsiebzig} by x -> 1*x+100
Function _hundert maps {2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hundert_ maps {2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,_zehn,16,17,20,21,_undzwanzig,_ßig,einund_ßig,_und_ßig,_zig,einund_zig,_und_zig,60,61,_undsechzig,70,71,_undsiebzig} by (x0,x1) -> 100*x0+1*x1
eintausend is 1000
Function eintausend_ maps {2,6,100,_hundert,_hundert_} by x -> 1*x+1000
Function _tausend maps {7,10,17,20,_undzwanzig} by x -> 1000*x+0
Function _tausend_ maps {7,17,_undzwanzig}x{2,6,100,_hundert,_hundert_} by (x0,x1) -> 1000*x0+1*x1

MG:
[drei :: c1, -C, -B, -A], 3
[ :: =c4, cFin], λx.x
[zehn :: c2, -G, -S2], 10
[elf :: c2, -S2], 11
[zwölf :: c2, -S2], 12
[zehn :: =c1, +A, c2, -S2], λx.'1X+10'(x)
[sechzehn :: c2, -S2], 16
[siebzehn :: c2, -H, -G, -S2], 17
[zwanzig :: c2, -G, -S2], 20
[einundzwanzig :: c2, -S2], 21
[undzwanzig :: =c1, +B, c2, -H, -G, -S2], λx.'1X+20'(x)
[ßig :: =c1, +C, c2, -S2], λx.'0X+30'(x)
[einund :: =c2*, c2, -S2], λx.'1X+31'(x)
[ßig :: =c1, +C, c2*], λx.'0X'(x)
[und :: =c2**, =c3B, c2, -S2], λxλy.'1X+1Y+3'(x,y)
[ßig :: =c1, +C, c2**], λx.'9X'(x)
[zig :: =c1, +D, c2, -S2], λx.'10X'(x)
[einund :: =c2***, c2, -S2], λx.'1X+1'(x)
[zig :: =c1, +D, c2***], λx.'10X'(x)
[und :: =c2****, =c3B, c2, -S2], λxλy.'1X+1Y'(x,y)
[zig :: =c1, +D, c2****], λx.'10X'(x)
[sechzig :: c2, -S2], 60
[einundsechzig :: c2, -S2], 61
[undsechzig :: =c1, +B, c2, -S2], λx.'1X+60'(x)
[siebzig :: c2, -S2], 70
[einundsiebzig :: c2, -S2], 71
[undsiebzig :: =c1, +B, c2, -S2], λx.'1X+70'(x)
[ :: =c1, c2], λx.x
[eins :: c1], 1
[zwei :: c1, -B, -F0], 2
[vier :: c1, -B, -A, -D], 4
[fünf :: c1, -B, -A, -D], 5
[sechs :: c1, -B, -F0], 6
[sieben :: c1, -H0, -B, -G0], 7
[acht :: c1, -B, -A, -D], 8
[neun :: c1, -B, -A, -D], 9
[ :: =c1, +H0, c2, -H], λx.x
[ :: =c1, +G0, c2, -G], λx.x
[eintausend :: c4], 1000
[eintausend :: =c4F, c4], λx.'1X+1000'(x)
[ :: =c3, +F, c4F], λx.x
[tausend :: =c2, +G, c4], λx.'1000X'(x)
[tausend :: =c4F, =c4H, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +H, c4H], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[einhundert :: c3, -S1, -F], 100
[einhundert :: =c2, c3, -S1], λx.'1X+100'(x)
[hundert :: =c1, +B, c3, -S1, -F], λx.'100X'(x)
[hundert :: =c2, =c3B, c3, -S1, -F], λxλy.'1X+100Y'(x,y)
[ :: =c1, +B, c3B], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c3, -F], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c2, +H, +G, +S2, c2, -H], λx.x
[ :: =c1, +H0, +B, +G0, c1, -H0], λx.x
[ :: =c1, +B, +A, +D, c1, -B], λx.x
[ :: =c2, +G, +S2, c2, -G], λx.x
[ :: =c1, +C, +B, +A, c1, -C], λx.x
[ :: =c1, +B, +A, c1, -B], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c3, +S1, +F, c3, -S1], λx.x
[ :: =c1, +B, +G0, c1, -B], λx.x
[ :: =c1, +B, +F0, c1, -B], λx.x


Learning ar
Learned 1019 words in ar and structured them in 61 functions.
It took 97 samples to learn those.
Those are:
واحد is 1
اثنان is 2
ثلاثة is 3
أربعة is 4
خمسة is 5
ستة is 6
سبعة is 7
ثمانية is 8
تسعة is 9
عشرة is 10
أحد عشر is 11
اثنا عشر is 12
Function _ عشر maps {3,4,5,6,7,8,9} by x -> 1*x+10
عشرون is 20
Function _ و عشرون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
ثلاثون is 30
Function _ و ثلاثون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
أربعون is 40
Function _ و أربعون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
خمسون is 50
Function _ و خمسون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
ستون is 60
Function _ و ستون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+60
سبعون is 70
Function _ و سبعون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+70
ثمانون is 80
Function _ و ثمانون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+80
تسعون is 90
Function _ و تسعون maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+90
مائة is 100
Function مائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+100
Function مائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+100
مئتا is 200
Function مئتان و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+200
Function مئتان_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+200
ثلاثمائة is 300
Function ثلاثمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+300
Function ثلاثمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+300
أربعمائة is 400
Function أربعمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+400
Function أربعمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+400
خمسمائة is 500
Function خمسمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+500
Function خمسمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+500
ستمائة is 600
Function ستمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+600
Function ستمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+600
سبعمائة is 700
Function سبعمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+700
Function سبعمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+700
ثمانمائة is 800
Function ثمانمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+800
Function ثمانمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+800
تسعمائة is 900
Function تسعمائة و _ maps {1,2,3,4,5,6,7,8,9,10,11,12,_ عشر,_ و عشرون,_ و ثلاثون,_ و أربعون,_ و خمسون} by x -> 1*x+900
Function تسعمائة_ maps {20,30,40,50,60,_ و ستون,70,_ و سبعون,80,_ و ثمانون,90,_ و تسعون} by x -> 1*x+900
Function _ ألف  و _ maps {1}x{2,6,100,200,مئتان و _} by (x0,x1) -> 500*x0+1*x1+500
Function _ آلاف  و _ maps {7}x{2,6,100,200,مئتان و _} by (x0,x1) -> 980*x0+1*x1+140
Function _ آلاف maps {7,10} by x -> 1000*x+0
Function _ ألف maps {1,_ عشر,20,_ و عشرون} by x -> 1000*x+0
Function _ ألفاً  و _ maps {_ عشر,_ و عشرون}x{مئتان و _,6,200} by (x0,x1) -> 1000*x0+1*x1

MG:
[واحد :: c1, -E, -I0], 1
[سبعة :: c1, -G, -H0, -A], 7
[ :: =c4, cFin], λx.x
[عشرة :: c2, -C, -H, -S2], 10
[أحد عشر :: c2, -C, -S2], 11
[اثنا عشر :: c2, -C, -S2], 12
[ عشر :: =c1, +A, c2, -C, -J, -I, -S2], λx.'1X+10'(x)
[ و عشرون :: =cnix, =c1, c2, -C, -J, -I, -S2], λxλy.'1X+1Y+20'(x,y)
[ :: cnix], 0
[ و ثلاثون :: =cnix, =c1, c2, -C, -S2], λxλy.'1X+1Y+30'(x,y)
[ و أربعون :: =cnix, =c1, c2, -C, -S2], λxλy.'1X+1Y+40'(x,y)
[ و خمسون :: =cnix, =c1, c2, -C, -S2], λxλy.'1X+1Y+50'(x,y)
[ :: =c1, c2, -C], λx.x
[اثنان :: c1, -F0], 2
[ثلاثة :: c1, -A], 3
[أربعة :: c1, -A], 4
[خمسة :: c1, -A], 5
[ستة :: c1, -K0, -F0, -A], 6
[ثمانية :: c1, -A], 8
[تسعة :: c1, -A], 9
[ :: =c1, +H0, c2, -H], λx.x
[عشرون :: c2, -I, -D, -S2], 20
[ :: =c1, +I0, c2, -I], λx.x
[مئتا :: c3, -K, -F, -S1], 200
[مئتان و  :: =c3C, c3, -K, -F, -S1], λx.'1X+200'(x)
[ :: =c2, +C, c3C], λx.x
[ :: =c1, +K0, c3, -K], λx.x
[مائة :: c3, -F, -S1], 100
[ :: =c1, +F0, c3, -F], λx.x
[ثلاثون :: c2, -D, -S2], 30
[أربعون :: c2, -D, -S2], 40
[خمسون :: c2, -D, -S2], 50
[ستون :: c2, -D, -S2], 60
[ و ستون :: =cnix, =c1, c2, -D, -S2], λxλy.'1X+1Y+60'(x,y)
[سبعون :: c2, -D, -S2], 70
[ و سبعون :: =cnix, =c1, c2, -D, -S2], λxλy.'1X+1Y+70'(x,y)
[ثمانون :: c2, -D, -S2], 80
[ و ثمانون :: =cnix, =c1, c2, -D, -S2], λxλy.'1X+1Y+80'(x,y)
[تسعون :: c2, -D, -S2], 90
[ و تسعون :: =cnix, =c1, c2, -D, -S2], λxλy.'1X+1Y+90'(x,y)
[ثلاثمائة :: c4], 300
[ثلاثمائة و  :: =c3C, c4], λx.'1X+300'(x)
[ثلاثمائة :: =c3D, c4], λx.'1X+300'(x)
[أربعمائة :: c4], 400
[أربعمائة و  :: =c3C, c4], λx.'1X+400'(x)
[أربعمائة :: =c3D, c4], λx.'1X+400'(x)
[خمسمائة :: c4], 500
[خمسمائة و  :: =c3C, c4], λx.'1X+500'(x)
[خمسمائة :: =c3D, c4], λx.'1X+500'(x)
[ستمائة :: c4], 600
[ستمائة و  :: =c3C, c4], λx.'1X+600'(x)
[ستمائة :: =c3D, c4], λx.'1X+600'(x)
[سبعمائة :: c4], 700
[سبعمائة و  :: =c3C, c4], λx.'1X+700'(x)
[سبعمائة :: =c3D, c4], λx.'1X+700'(x)
[ثمانمائة :: c4], 800
[ثمانمائة و  :: =c3C, c4], λx.'1X+800'(x)
[ثمانمائة :: =c3D, c4], λx.'1X+800'(x)
[تسعمائة :: c4], 900
[تسعمائة و  :: =c3C, c4], λx.'1X+900'(x)
[تسعمائة :: =c3D, c4], λx.'1X+900'(x)
[ ألف  و  :: =c4F, =c4E, c4], λxλy.'1X+500Y+500'(x,y)
[ :: =c1, +E, c4E], λx.x
[ :: =c3, +F, c4F], λx.x
[ آلاف  و  :: =c4F, =c4G, c4], λxλy.'1X+980Y+140'(x,y)
[ :: =c1, +G, c4G], λx.x
[ آلاف :: =c2, +H, c4], λx.'1000X'(x)
[ ألف :: =c2, +I, c4], λx.'1000X'(x)
[ ألفاً  و  :: =c4K, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c3, +K, c4K], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[مائة و  :: =c3C, c3, -S1], λx.'1X+100'(x)
[مائة :: =c3D, c3, -S1], λx.'1X+100'(x)
[ :: =c2, +D, c3D], λx.x
[مئتان :: =c3D, c3, -S1], λx.'1X+200'(x)
[ :: =c2, +S2, c4], λx.x
[ :: =c3, +F, c3], λx.x
[ :: =c3, +K, c3], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c2, +D, c2], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c2, +C, c2], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +H0, c1], λx.x
[ :: =c1, +G, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +C, +J, +I, +S2, c2, -C], λx.x
[ :: =c1, +F0, +A, c1, -F0], λx.x
[ :: =c1, +E, +I0, c1, -E], λx.x
[ :: =c1, +G, +H0, +A, c1, -G], λx.x
[ :: =c2, +J, +I, +S2, c2, -J], λx.x
[ :: =c2, +I, +D, +S2, c2, -I], λx.x
[ :: =c3, +F, +S1, c3, -F], λx.x
[ :: =c2, +C, +H, +S2, c2, -C], λx.x
[ :: =c2, +H, +S2, c2, -H], λx.x
[ :: =c2, +D, +S2, c2, -D], λx.x
[ :: =c1, +K0, +F0, +A, c1, -K0], λx.x
[ :: =c1, +H0, +A, c1, -H0], λx.x
[ :: =c3, +K, +F, +S1, c3, -K], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c2, +C, +S2, c2, -C], λx.x


Learning dk

Learned 1019 words in dk and structured them in 45 functions.
It took 65 samples to learn those.
Those are:
et is 1
to is 2
tre is 3
fire is 4
fem is 5
seks is 6
syv is 7
otte is 8
ni is 9
ti is 10
elleve is 11
Function _lv maps {2} by x -> 0*x+12
fjorten is 14
Function _ten maps {5,6} by x -> 1*x+10
sytten is 17
atten is 18
Function _tten maps {3,9} by x -> 1*x+10
tyve is 20
enogtyve is 21
Function _ogtyve maps {2,3,4,5,6,7,8,9} by x -> 1*x+20
Function _dive maps {3} by x -> 0*x+30
Function enog_dive maps {3} by x -> 0*x+31
Function _og_dive maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+9*x1+3
fyrre is 40
enogfyrre is 41
Function _ogfyrre maps {2,3,4,5,6,7,8,9} by x -> 1*x+40
Function halv_ds maps {3} by x -> 0*x+50
Function enoghalv_ds maps {3} by x -> 0*x+51
Function _oghalv_ds maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+15*x1+5
Function _ds maps {3} by x -> 0*x+60
Function enog_ds maps {3} by x -> 0*x+61
Function _og_ds maps {2,3,4,5,6,7,8,9}x{3} by (x0,x1) -> 1*x0+18*x1+6
halvfjerds is 70
enoghalvfjerds is 71
Function _oghalvfjerds maps {2,3,4,5,6,7,8,9} by x -> 1*x+70
firs is 80
enogfirs is 81
Function _ogfirs maps {2,3,4,5,6,7,8,9} by x -> 1*x+80
Function halv_s maps {5} by x -> 0*x+90
Function enoghalv_s maps {5} by x -> 0*x+91
Function _oghalv_s maps {2,3,4,5,6,7,8,9}x{5} by (x0,x1) -> 1*x0+17*x1+5
Function _hundrede maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _hundrede og _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,_lv,14,_ten,17,18,_tten,20,21,_ogtyve,_dive,enog_dive,_og_dive,40,41,_ogfyrre,halv_ds,enoghalv_ds,_oghalv_ds,_ds,enog_ds,_og_ds,70,71,_oghalvfjerds,80,81,_ogfirs,halv_s,enoghalv_s,_oghalv_s} by (x0,x1) -> 100*x0+1*x1
Function _tusind maps {1,7,10,17,20,_ogtyve} by x -> 1000*x+0
Function _tusinde og _ maps {1,7,17,_ogtyve}x{2,6,_hundrede,_hundrede og _} by (x0,x1) -> 1000*x0+1*x1

MG:
[to :: c1, -A, -K0, -D], 2
[tre :: c1, -E, -C, -D], 3
[fem :: c1, -F, -B, -D], 5
[ :: =c4, cFin], λx.x
[ni :: c1, -C, -D], 9
[sytten :: c2, -J, -H, -I, -S2], 17
[ogtyve :: =c1, +D, c2, -J, -H, -I, -S2], λx.'1X+20'(x)
[ :: =c1, +J0, c2, -J], λx.x
[et :: c1, -J0, -I0], 1
[syv :: c1, -J0, -I0, -D], 7
[ti :: c2, -H, -I, -S2], 10
[elleve :: c2, -H, -S2], 11
[lv :: =c1, +A, c2, -H, -S2], λx.'0X+12'(x)
[fjorten :: c2, -H, -S2], 14
[ten :: =c1, +B, c2, -H, -S2], λx.'1X+10'(x)
[atten :: c2, -H, -S2], 18
[tten :: =c1, +C, c2, -H, -S2], λx.'1X+10'(x)
[tyve :: c2, -H, -I, -S2], 20
[enogtyve :: c2, -H, -S2], 21
[dive :: =c1, +E, c2, -H, -S2], λx.'0X+30'(x)
[enog :: =c2*, c2, -H, -H, -S2, -S2], λx.'1X+31'(x)
[dive :: =c1, +E, c2*], λx.'0X'(x)
[og :: =c2**, =c2D, c2, -H, -H, -S2, -S2], λxλy.'1X+1Y+3'(x,y)
[ :: =c1, +D, c2D], λx.x
[dive :: =c1, +E, c2**], λx.'9X'(x)
[fyrre :: c2, -H, -S2], 40
[enogfyrre :: c2, -H, -S2], 41
[ogfyrre :: =c1, +D, c2, -H, -S2], λx.'1X+40'(x)
[halv :: =c2***, c2, -H, -S2], λx.'1X+50'(x)
[ds :: =c1, +E, c2***], λx.'0X'(x)
[enoghalv :: =c2****, c2, -H, -S2], λx.'1X+51'(x)
[ds :: =c1, +E, c2****], λx.'0X'(x)
[oghalv :: =c2*****, =c2D, c2, -H, -S2], λxλy.'1X+1Y+5'(x,y)
[ds :: =c1, +E, c2*****], λx.'15X'(x)
[ds :: =c1, +E, c2, -H, -S2], λx.'0X+60'(x)
[ds :: =c1, +E, c2******], λx.'0X'(x)
[ds :: =c1, +E, c2*******], λx.'18X'(x)
[halvfjerds :: c2, -H, -S2], 70
[enoghalvfjerds :: c2, -H, -S2], 71
[oghalvfjerds :: =c1, +D, c2, -H, -S2], λx.'1X+70'(x)
[firs :: c2, -H, -S2], 80
[enogfirs :: c2, -H, -S2], 81
[ogfirs :: =c1, +D, c2, -H, -S2], λx.'1X+80'(x)
[halv :: =c2********, c2, -H, -S2], λx.'1X+90'(x)
[s :: =c1, +F, c2********], λx.'0X'(x)
[enoghalv :: =c2*********, c2, -H, -S2], λx.'1X+91'(x)
[s :: =c1, +F, c2*********], λx.'0X'(x)
[oghalv :: =c2**********, =c2D, c2, -H, -S2], λxλy.'1X+1Y+5'(x,y)
[s :: =c1, +F, c2**********], λx.'17X'(x)
[ :: =c1, c2, -H], λx.x
[fire :: c1, -D], 4
[seks :: c1, -B, -K0, -D], 6
[otte :: c1, -D], 8
[ :: =c1, +I0, c2, -I], λx.x
[hundrede :: =cnix, =c1, c3, -S1], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[hundrede og  :: =c3H, =c1, c3, -S1], λxλy.'1X+100Y'(x,y)
[ :: =c2, +H, c3H], λx.x
[ :: =c1, +K0, c3], λx.x
[tusind :: =c2, +I, c4], λx.'1000X'(x)
[tusinde og  :: =c3, =c4J, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +J, c4J], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, +S1, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c2, +J, c2], λx.x
[ :: =c1, +C, c1], λx.x
[ :: =c1, +F, c1], λx.x
[ :: =c3, +S1, c3], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +J0, c1], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c2, +H, c2], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c1, +K0, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +E, c1], λx.x
[ :: =c2, +H, +H, +S2, +S2, c2, -H], λx.x
[ :: =c1, +B, +K0, +D, c1, -B], λx.x
[ :: =c1, +F, +B, +D, c1, -F], λx.x
[ :: =c1, +J0, +I0, c1, -J0], λx.x
[ :: =c1, +I0, +D, c1, -I0], λx.x
[ :: =c1, +C, +D, c1, -C], λx.x
[ :: =c2, +H, +I, +S2, c2, -H], λx.x
[ :: =c2, +H, +S2, c2, -H], λx.x
[ :: =c2, +I, +S2, c2, -I], λx.x
[ :: =c1, +B, +D, c1, -B], λx.x
[ :: =c1, +K0, +D, c1, -K0], λx.x
[ :: =c2, +J, +H, +I, +S2, c2, -J], λx.x
[ :: =c2, +H, +S2, +S2, c2, -H], λx.x
[ :: =c1, +A, +K0, +D, c1, -A], λx.x
[ :: =c1, +J0, +I0, +D, c1, -J0], λx.x
[ :: =c1, +E, +C, +D, c1, -E], λx.x
[ :: =c2, +S2, +S2, c2, -S2], λx.x


Learning en_GB
Learned 1019 words in en_GB and structured them in 33 functions.
It took 56 samples to learn those.
Those are:
one is 1
two is 2
three is 3
four is 4
five is 5
six is 6
seven is 7
eight is 8
nine is 9
ten is 10
eleven is 11
twelve is 12
thirteen is 13
fifteen is 15
Function _teen maps {4,6,7,9} by x -> 1*x+10
Function _een maps {8} by x -> 0*x+18
twenty is 20
Function twenty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
thirty is 30
Function thirty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
forty is 40
Function forty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
fifty is 50
Function fifty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ty maps {6,7,9} by x -> 10*x+0
Function _ty-_ maps {6,7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _y maps {8} by x -> 0*x+80
Function _y-_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hundred maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundred and _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,_teen,_een,20,twenty-_,30,thirty-_,40,forty-_,50,fifty-_,_ty,_ty-_,_y,_y-_} by (x0,x1) -> 100*x0+1*x1
Function _ thousand maps {1,7,10,20,_teen,twenty-_} by x -> 1000*x+0
Function _ thousand and _ maps {1,7,twenty-_}x{2,6} by (x0,x1) -> 1000*x0+1*x1
Function _ thousand, _ maps {1,7,_teen,twenty-_}x{_ hundred,_ hundred and _} by (x0,x1) -> 1000*x0+1*x1

MG:
[eight :: c1, -B], 8
[ :: =c4, cFin], λx.x
[ten :: c2, -S2, -F], 10
[eleven :: c2, -S2], 11
[twelve :: c2, -S2], 12
[thirteen :: c2, -S2], 13
[fifteen :: c2, -S2], 15
[teen :: =c1, +A, c2, -I, -S2, -F], λx.'1X+10'(x)
[een :: =c1, +B, c2, -S2], λx.'0X+18'(x)
[twenty :: c2, -S2, -F], 20
[twenty- :: =c1, c2, -G, -I, -S2, -F], λx.'1X+20'(x)
[thirty :: c2, -S2], 30
[thirty- :: =c1, c2, -S2], λx.'1X+30'(x)
[forty :: c2, -S2], 40
[forty- :: =c1, c2, -S2], λx.'1X+40'(x)
[fifty :: c2, -S2], 50
[fifty- :: =c1, c2, -S2], λx.'1X+50'(x)
[ty :: =c1, +D, c2, -S2], λx.'10X'(x)
[ty- :: =c1, =c2D, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[y :: =c1, +B, c2, -S2], λx.'0X+80'(x)
[y- :: =c1, =c2B, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[one :: c1, -G0, -I0, -F0], 1
[two :: c1, -H], 2
[three :: c1], 3
[four :: c1, -A], 4
[five :: c1], 5
[six :: c1, -H, -A, -D], 6
[seven :: c1, -G0, -I0, -A, -D, -F0], 7
[nine :: c1, -A, -D], 9
[ hundred :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hundred and  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G0, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ thousand :: =c2, +F, c4], λx.'1000X'(x)
[ thousand and  :: =c4H, =c4G, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +G, c4G], λx.x
[ :: =c1, +H, c4H], λx.x
[ thousand,  :: =c3, =c4I, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +I0, +F0, c1, -I0], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +G0, +I0, +A, +D, +F0, c1, -G0], λx.x
[ :: =c1, +A, +D, +F0, c1, -A], λx.x
[ :: =c1, +I0, +A, +D, +F0, c1, -I0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +G, +I, +S2, +F, c2, -G], λx.x
[ :: =c1, +H, +A, +D, c1, -H], λx.x
[ :: =c1, +G0, +I0, +F0, c1, -G0], λx.x
[ :: =c1, +D, +F0, c1, -D], λx.x


Learning en_IN

Learned 1019 words in en_IN and structured them in 33 functions.
It took 56 samples to learn those.
Those are:
one is 1
two is 2
three is 3
four is 4
five is 5
six is 6
seven is 7
eight is 8
nine is 9
ten is 10
eleven is 11
twelve is 12
thirteen is 13
fifteen is 15
Function _teen maps {4,6,7,9} by x -> 1*x+10
Function _een maps {8} by x -> 0*x+18
twenty is 20
Function twenty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+20
thirty is 30
Function thirty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+30
forty is 40
Function forty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+40
fifty is 50
Function fifty-_ maps {1,2,3,4,5,6,7,8,9} by x -> 1*x+50
Function _ty maps {6,7,9} by x -> 10*x+0
Function _ty-_ maps {6,7,9}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _y maps {8} by x -> 0*x+80
Function _y-_ maps {8}x{1,2,3,4,5,6,7,8,9} by (x0,x1) -> 10*x0+1*x1
Function _ hundred maps {1,2,3,4,5,6,7,8,9} by x -> 100*x+0
Function _ hundred and _ maps {1,2,3,4,5,6,7,8,9}x{1,2,3,4,5,6,7,8,9,10,11,12,13,15,_teen,_een,20,twenty-_,30,thirty-_,40,forty-_,50,fifty-_,_ty,_ty-_,_y,_y-_} by (x0,x1) -> 100*x0+1*x1
Function _ thousand maps {1,7,10,20,_teen,twenty-_} by x -> 1000*x+0
Function _ thousand and _ maps {1,7,twenty-_}x{2,6} by (x0,x1) -> 1000*x0+1*x1
Function _ thousand, _ maps {1,7,_teen,twenty-_}x{_ hundred,_ hundred and _} by (x0,x1) -> 1000*x0+1*x1

MG:
[eight :: c1, -B], 8
[ :: =c4, cFin], λx.x
[ten :: c2, -S2, -F], 10
[eleven :: c2, -S2], 11
[twelve :: c2, -S2], 12
[thirteen :: c2, -S2], 13
[fifteen :: c2, -S2], 15
[teen :: =c1, +A, c2, -I, -S2, -F], λx.'1X+10'(x)
[een :: =c1, +B, c2, -S2], λx.'0X+18'(x)
[twenty :: c2, -S2, -F], 20
[twenty- :: =c1, c2, -G, -I, -S2, -F], λx.'1X+20'(x)
[thirty :: c2, -S2], 30
[thirty- :: =c1, c2, -S2], λx.'1X+30'(x)
[forty :: c2, -S2], 40
[forty- :: =c1, c2, -S2], λx.'1X+40'(x)
[fifty :: c2, -S2], 50
[fifty- :: =c1, c2, -S2], λx.'1X+50'(x)
[ty :: =c1, +D, c2, -S2], λx.'10X'(x)
[ty- :: =c1, =c2D, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +D, c2D], λx.x
[y :: =c1, +B, c2, -S2], λx.'0X+80'(x)
[y- :: =c1, =c2B, c2, -S2], λxλy.'1X+10Y'(x,y)
[ :: =c1, +B, c2B], λx.x
[ :: =c1, c2], λx.x
[one :: c1, -G0, -I0, -F0], 1
[two :: c1, -H], 2
[three :: c1], 3
[four :: c1, -A], 4
[five :: c1], 5
[six :: c1, -H, -A, -D], 6
[seven :: c1, -G0, -I0, -A, -D, -F0], 7
[nine :: c1, -A, -D], 9
[ hundred :: =cnix, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: cnix], 0
[ hundred and  :: =c2, =c1, c3], λxλy.'1X+100Y'(x,y)
[ :: =c1, +G0, c2, -G], λx.x
[ :: =c1, +I0, c2, -I], λx.x
[ thousand :: =c2, +F, c4], λx.'1000X'(x)
[ thousand and  :: =c4H, =c4G, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +G, c4G], λx.x
[ :: =c1, +H, c4H], λx.x
[ thousand,  :: =c3, =c4I, c4], λxλy.'1X+1000Y'(x,y)
[ :: =c2, +I, c4I], λx.x
[ :: =c1, c4], λx.x
[ :: =c3, c4], λx.x
[ :: =c2, +S2, c4], λx.x
[ :: =c1, +F0, c2, -F], λx.x
[ :: =c1, +F0, c1], λx.x
[ :: =c2, +F, c2], λx.x
[ :: =c1, +D, c1], λx.x
[ :: =c1, +G0, c1], λx.x
[ :: =c1, +I0, c1], λx.x
[ :: =c1, +H, c1], λx.x
[ :: =c2, +G, c2], λx.x
[ :: =c2, +I, c2], λx.x
[ :: =c1, +A, c1], λx.x
[ :: =c1, +B, c1], λx.x
[ :: =c2, +S2, c2], λx.x
[ :: =c1, +I0, +F0, c1, -I0], λx.x
[ :: =c2, +I, +S2, +F, c2, -I], λx.x
[ :: =c2, +S2, +F, c2, -S2], λx.x
[ :: =c1, +G0, +I0, +A, +D, +F0, c1, -G0], λx.x
[ :: =c1, +A, +D, +F0, c1, -A], λx.x
[ :: =c1, +I0, +A, +D, +F0, c1, -I0], λx.x
[ :: =c1, +A, +D, c1, -A], λx.x
[ :: =c2, +G, +I, +S2, +F, c2, -G], λx.x
[ :: =c1, +H, +A, +D, c1, -H], λx.x
[ :: =c1, +G0, +I0, +F0, c1, -G0], λx.x
[ :: =c1, +D, +F0, c1, -D], λx.x


